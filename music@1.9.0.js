/**
 * Skipped minification because the original files appears to be already minified.
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!(function(t) {
  
  var e = {};
  function n(r) {
    if (e[r]) return e[r].exports;
    var i = (e[r] = { i: r, l: !1, exports: {} });
    return t[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
  }
  (n.m = t),
    (n.c = e),
    (n.d = function(t, e, r) {
      n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: r });
    }),
    (n.r = function(t) {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(t, "__esModule", { value: !0 });
    }),
    (n.t = function(t, e) {
      if ((1 & e && (t = n(t)), 8 & e)) return t;
      if (4 & e && "object" == typeof t && t && t.__esModule) return t;
      var r = Object.create(null);
      if (
        (n.r(r),
        Object.defineProperty(r, "default", { enumerable: !0, value: t }),
        2 & e && "string" != typeof t)
      )
        for (var i in t)
          n.d(
            r,
            i,
            function(e) {
              return t[e];
            }.bind(null, i)
          );
      return r;
    }),
    (n.n = function(t) {
      var e =
        t && t.__esModule
          ? function() {
              return t.default;
            }
          : function() {
              return t;
            };
      return n.d(e, "a", e), e;
    }),
    (n.o = function(t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }),
    (n.p = ""),
    n((n.s = 106));
})([
  function(t, e, n) {
    "use strict";
    n.r(e),
      function(t, r, i, o) {
        n.d(e, "AdadeltaOptimizer", function() {
          return Eh;
        }),
          n.d(e, "AdagradOptimizer", function() {
            return Nh;
          }),
          n.d(e, "AdamOptimizer", function() {
            return Oh;
          }),
          n.d(e, "AdamaxOptimizer", function() {
            return Ch;
          }),
          n.d(e, "DataStorage", function() {
            return er;
          }),
          n.d(e, "ENV", function() {
            return h;
          }),
          n.d(e, "Environment", function() {
            return f;
          }),
          n.d(e, "KernelBackend", function() {
            return nr;
          }),
          n.d(e, "MomentumOptimizer", function() {
            return Mh;
          }),
          n.d(e, "Optimizer", function() {
            return kh;
          }),
          n.d(e, "RMSPropOptimizer", function() {
            return Ph;
          }),
          n.d(e, "Rank", function() {
            return vt;
          }),
          n.d(e, "Reduction", function() {
            return Lc;
          }),
          n.d(e, "SGDOptimizer", function() {
            return Ih;
          }),
          n.d(e, "Tensor", function() {
            return yt;
          }),
          n.d(e, "TensorBuffer", function() {
            return ft;
          }),
          n.d(e, "Variable", function() {
            return gt;
          }),
          n.d(e, "abs", function() {
            return Ga;
          }),
          n.d(e, "acos", function() {
            return Ha;
          }),
          n.d(e, "acosh", function() {
            return Ka;
          }),
          n.d(e, "add", function() {
            return Lu;
          }),
          n.d(e, "addN", function() {
            return ju;
          }),
          n.d(e, "addStrict", function() {
            return Bu;
          }),
          n.d(e, "all", function() {
            return mu;
          }),
          n.d(e, "any", function() {
            return yu;
          }),
          n.d(e, "argMax", function() {
            return gu;
          }),
          n.d(e, "argMin", function() {
            return vu;
          }),
          n.d(e, "asin", function() {
            return Qa;
          }),
          n.d(e, "asinh", function() {
            return Xa;
          }),
          n.d(e, "atan", function() {
            return $a;
          }),
          n.d(e, "atan2", function() {
            return qu;
          }),
          n.d(e, "atanh", function() {
            return Ya;
          }),
          n.d(e, "avgPool", function() {
            return su;
          }),
          n.d(e, "backend", function() {
            return Xe;
          }),
          n.d(e, "backend_util", function() {
            return br;
          }),
          n.d(e, "basicLSTMCell", function() {
            return xc;
          }),
          n.d(e, "batchNorm", function() {
            return Fs;
          }),
          n.d(e, "batchNorm2d", function() {
            return zs;
          }),
          n.d(e, "batchNorm3d", function() {
            return Ls;
          }),
          n.d(e, "batchNorm4d", function() {
            return js;
          }),
          n.d(e, "batchNormalization", function() {
            return Ds;
          }),
          n.d(e, "batchNormalization2d", function() {
            return Ms;
          }),
          n.d(e, "batchNormalization3d", function() {
            return Ps;
          }),
          n.d(e, "batchNormalization4d", function() {
            return Rs;
          }),
          n.d(e, "batchToSpaceND", function() {
            return Kr;
          }),
          n.d(e, "browser", function() {
            return ph;
          }),
          n.d(e, "buffer", function() {
            return Gr;
          }),
          n.d(e, "cast", function() {
            return Qr;
          }),
          n.d(e, "ceil", function() {
            return Ja;
          }),
          n.d(e, "clipByValue", function() {
            return Za;
          }),
          n.d(e, "clone", function() {
            return Xr;
          }),
          n.d(e, "complex", function() {
            return zn;
          }),
          n.d(e, "concat", function() {
            return Nr;
          }),
          n.d(e, "concat1d", function() {
            return Or;
          }),
          n.d(e, "concat2d", function() {
            return Cr;
          }),
          n.d(e, "concat3d", function() {
            return Ir;
          }),
          n.d(e, "concat4d", function() {
            return Mr;
          }),
          n.d(e, "conv1d", function() {
            return Vs;
          }),
          n.d(e, "conv2d", function() {
            return Ws;
          }),
          n.d(e, "conv2dDerFilter", function() {
            return Hs;
          }),
          n.d(e, "conv2dTranspose", function() {
            return Xs;
          }),
          n.d(e, "conv3d", function() {
            return Gs;
          }),
          n.d(e, "cos", function() {
            return ts;
          }),
          n.d(e, "cosh", function() {
            return es;
          }),
          n.d(e, "cumsum", function() {
            return $r;
          }),
          n.d(e, "customGrad", function() {
            return Mn;
          }),
          n.d(e, "deprecationWarn", function() {
            return Re;
          }),
          n.d(e, "depthToSpace", function() {
            return Yr;
          }),
          n.d(e, "depthwiseConv2d", function() {
            return Ks;
          }),
          n.d(e, "disableDeprecationWarnings", function() {
            return Pe;
          }),
          n.d(e, "dispose", function() {
            return je;
          }),
          n.d(e, "disposeVariables", function() {
            return De;
          }),
          n.d(e, "div", function() {
            return Uu;
          }),
          n.d(e, "divStrict", function() {
            return Vu;
          }),
          n.d(e, "dot", function() {
            return Ys;
          }),
          n.d(e, "dropout", function() {
            return Fc;
          }),
          n.d(e, "elu", function() {
            return hc;
          }),
          n.d(e, "enableDebugMode", function() {
            return Me;
          }),
          n.d(e, "enableProdMode", function() {
            return Ie;
          }),
          n.d(e, "environment", function() {
            return m;
          }),
          n.d(e, "equal", function() {
            return ku;
          }),
          n.d(e, "equalStrict", function() {
            return Eu;
          }),
          n.d(e, "erf", function() {
            return ns;
          }),
          n.d(e, "exp", function() {
            return rs;
          }),
          n.d(e, "expandDims", function() {
            return Jr;
          }),
          n.d(e, "expm1", function() {
            return is;
          }),
          n.d(e, "eye", function() {
            return Zr;
          }),
          n.d(e, "fft", function() {
            return Oc;
          }),
          n.d(e, "fill", function() {
            return $n;
          }),
          n.d(e, "findBackend", function() {
            return He;
          }),
          n.d(e, "findBackendFactory", function() {
            return Ke;
          }),
          n.d(e, "floor", function() {
            return os;
          }),
          n.d(e, "floorDiv", function() {
            return Wu;
          }),
          n.d(e, "frame", function() {
            return qc;
          }),
          n.d(e, "fused", function() {
            return ll;
          }),
          n.d(e, "gather", function() {
            return _c;
          }),
          n.d(e, "gatherND", function() {
            return Dc;
          }),
          n.d(e, "getBackend", function() {
            return We;
          }),
          n.d(e, "grad", function() {
            return En;
          }),
          n.d(e, "grads", function() {
            return Nn;
          }),
          n.d(e, "greater", function() {
            return Nu;
          }),
          n.d(e, "greaterEqual", function() {
            return Ou;
          }),
          n.d(e, "greaterEqualStrict", function() {
            return Cu;
          }),
          n.d(e, "greaterStrict", function() {
            return Iu;
          }),
          n.d(e, "hammingWindow", function() {
            return Bc;
          }),
          n.d(e, "hannWindow", function() {
            return jc;
          }),
          n.d(e, "ifft", function() {
            return Cc;
          }),
          n.d(e, "imag", function() {
            return jn;
          }),
          n.d(e, "image", function() {
            return ul;
          }),
          n.d(e, "io", function() {
            return ch;
          }),
          n.d(e, "irfft", function() {
            return Mc;
          }),
          n.d(e, "isFinite", function() {
            return gs;
          }),
          n.d(e, "isInf", function() {
            return ys;
          }),
          n.d(e, "isNaN", function() {
            return ms;
          }),
          n.d(e, "keep", function() {
            return Be;
          }),
          n.d(e, "leakyRelu", function() {
            return fc;
          }),
          n.d(e, "less", function() {
            return Mu;
          }),
          n.d(e, "lessEqual", function() {
            return Pu;
          }),
          n.d(e, "lessEqualStrict", function() {
            return Ru;
          }),
          n.d(e, "lessStrict", function() {
            return Du;
          }),
          n.d(e, "linalg", function() {
            return nl;
          }),
          n.d(e, "linspace", function() {
            return Yn;
          }),
          n.d(e, "localResponseNormalization", function() {
            return gc;
          }),
          n.d(e, "log", function() {
            return as;
          }),
          n.d(e, "log1p", function() {
            return ss;
          }),
          n.d(e, "logSigmoid", function() {
            return us;
          }),
          n.d(e, "logSoftmax", function() {
            return Fn;
          }),
          n.d(e, "logSumExp", function() {
            return bu;
          }),
          n.d(e, "logicalAnd", function() {
            return oc;
          }),
          n.d(e, "logicalNot", function() {
            return ac;
          }),
          n.d(e, "logicalOr", function() {
            return sc;
          }),
          n.d(e, "logicalXor", function() {
            return uc;
          }),
          n.d(e, "losses", function() {
            return Jc;
          }),
          n.d(e, "matMul", function() {
            return $s;
          }),
          n.d(e, "math", function() {
            return hh;
          }),
          n.d(e, "max", function() {
            return wu;
          }),
          n.d(e, "maxPool", function() {
            return au;
          }),
          n.d(e, "maximum", function() {
            return Gu;
          }),
          n.d(e, "maximumStrict", function() {
            return Hu;
          }),
          n.d(e, "mean", function() {
            return _u;
          }),
          n.d(e, "memory", function() {
            return Fe;
          }),
          n.d(e, "min", function() {
            return Su;
          }),
          n.d(e, "minimum", function() {
            return Ku;
          }),
          n.d(e, "minimumStrict", function() {
            return Qu;
          }),
          n.d(e, "mod", function() {
            return Xu;
          }),
          n.d(e, "modStrict", function() {
            return $u;
          }),
          n.d(e, "moments", function() {
            return xu;
          }),
          n.d(e, "movingAverage", function() {
            return Ac;
          }),
          n.d(e, "mul", function() {
            return Yu;
          }),
          n.d(e, "mulStrict", function() {
            return Ju;
          }),
          n.d(e, "multiRNNCell", function() {
            return Tc;
          }),
          n.d(e, "multinomial", function() {
            return ti;
          }),
          n.d(e, "neg", function() {
            return cs;
          }),
          n.d(e, "nextFrame", function() {
            return zh;
          }),
          n.d(e, "norm", function() {
            return vc;
          }),
          n.d(e, "notEqual", function() {
            return Fu;
          }),
          n.d(e, "notEqualStrict", function() {
            return zu;
          }),
          n.d(e, "oneHot", function() {
            return ei;
          }),
          n.d(e, "ones", function() {
            return Qn;
          }),
          n.d(e, "onesLike", function() {
            return Zn;
          }),
          n.d(e, "op", function() {
            return Rn;
          }),
          n.d(e, "outerProduct", function() {
            return Js;
          }),
          n.d(e, "pad", function() {
            return ni;
          }),
          n.d(e, "pad1d", function() {
            return ri;
          }),
          n.d(e, "pad2d", function() {
            return ii;
          }),
          n.d(e, "pad3d", function() {
            return oi;
          }),
          n.d(e, "pad4d", function() {
            return ai;
          }),
          n.d(e, "pool", function() {
            return uu;
          }),
          n.d(e, "pow", function() {
            return Zu;
          }),
          n.d(e, "powStrict", function() {
            return tc;
          }),
          n.d(e, "prelu", function() {
            return pc;
          }),
          n.d(e, "print", function() {
            return Hr;
          }),
          n.d(e, "prod", function() {
            return Au;
          }),
          n.d(e, "profile", function() {
            return ze;
          }),
          n.d(e, "rand", function() {
            return si;
          }),
          n.d(e, "randomNormal", function() {
            return ui;
          }),
          n.d(e, "randomUniform", function() {
            return ci;
          }),
          n.d(e, "range", function() {
            return Jn;
          }),
          n.d(e, "ready", function() {
            return Ve;
          }),
          n.d(e, "real", function() {
            return Ln;
          }),
          n.d(e, "reciprocal", function() {
            return ls;
          }),
          n.d(e, "registerBackend", function() {
            return Qe;
          }),
          n.d(e, "relu", function() {
            return dc;
          }),
          n.d(e, "removeBackend", function() {
            return Ge;
          }),
          n.d(e, "reshape", function() {
            return li;
          }),
          n.d(e, "reverse", function() {
            return Zs;
          }),
          n.d(e, "reverse1d", function() {
            return tu;
          }),
          n.d(e, "reverse2d", function() {
            return eu;
          }),
          n.d(e, "reverse3d", function() {
            return nu;
          }),
          n.d(e, "reverse4d", function() {
            return ru;
          }),
          n.d(e, "rfft", function() {
            return Ic;
          }),
          n.d(e, "round", function() {
            return hs;
          }),
          n.d(e, "rsqrt", function() {
            return fs;
          }),
          n.d(e, "scalar", function() {
            return qn;
          }),
          n.d(e, "scatterND", function() {
            return Nc;
          }),
          n.d(e, "selu", function() {
            return mc;
          }),
          n.d(e, "separableConv2d", function() {
            return Qs;
          }),
          n.d(e, "serialization", function() {
            return gh;
          }),
          n.d(e, "setBackend", function() {
            return Ue;
          }),
          n.d(e, "setPlatform", function() {
            return $e;
          }),
          n.d(e, "setdiff1dAsync", function() {
            return gi;
          }),
          n.d(e, "sigmoid", function() {
            return ps;
          }),
          n.d(e, "sign", function() {
            return ds;
          }),
          n.d(e, "signal", function() {
            return Uc;
          }),
          n.d(e, "sin", function() {
            return vs;
          }),
          n.d(e, "sinh", function() {
            return bs;
          }),
          n.d(e, "slice", function() {
            return cu;
          }),
          n.d(e, "slice1d", function() {
            return lu;
          }),
          n.d(e, "slice2d", function() {
            return hu;
          }),
          n.d(e, "slice3d", function() {
            return fu;
          }),
          n.d(e, "slice4d", function() {
            return pu;
          }),
          n.d(e, "softmax", function() {
            return Dn;
          }),
          n.d(e, "softplus", function() {
            return ws;
          }),
          n.d(e, "spaceToBatchND", function() {
            return hi;
          }),
          n.d(e, "sparseToDense", function() {
            return Rc;
          }),
          n.d(e, "spectral", function() {
            return Pc;
          }),
          n.d(e, "split", function() {
            return Pr;
          }),
          n.d(e, "sqrt", function() {
            return _s;
          }),
          n.d(e, "square", function() {
            return Ss;
          }),
          n.d(e, "squaredDifference", function() {
            return ec;
          }),
          n.d(e, "squaredDifferenceStrict", function() {
            return nc;
          }),
          n.d(e, "squeeze", function() {
            return fi;
          }),
          n.d(e, "stack", function() {
            return pi;
          }),
          n.d(e, "step", function() {
            return xs;
          }),
          n.d(e, "stridedSlice", function() {
            return kc;
          }),
          n.d(e, "sub", function() {
            return rc;
          }),
          n.d(e, "subStrict", function() {
            return ic;
          }),
          n.d(e, "sum", function() {
            return Tu;
          }),
          n.d(e, "tan", function() {
            return Ts;
          }),
          n.d(e, "tanh", function() {
            return As;
          }),
          n.d(e, "tensor", function() {
            return Bn;
          }),
          n.d(e, "tensor1d", function() {
            return Un;
          }),
          n.d(e, "tensor2d", function() {
            return Vn;
          }),
          n.d(e, "tensor3d", function() {
            return Wn;
          }),
          n.d(e, "tensor4d", function() {
            return Gn;
          }),
          n.d(e, "tensor5d", function() {
            return Hn;
          }),
          n.d(e, "tensor6d", function() {
            return Kn;
          }),
          n.d(e, "tensor_util", function() {
            return It;
          }),
          n.d(e, "test_util", function() {
            return xh;
          }),
          n.d(e, "tidy", function() {
            return Le;
          }),
          n.d(e, "tile", function() {
            return di;
          }),
          n.d(e, "time", function() {
            return qe;
          }),
          n.d(e, "topk", function() {
            return Ec;
          }),
          n.d(e, "train", function() {
            return Dh;
          }),
          n.d(e, "transpose", function() {
            return yc;
          }),
          n.d(e, "truncatedNormal", function() {
            return mi;
          }),
          n.d(e, "unsortedSegmentSum", function() {
            return Sc;
          }),
          n.d(e, "unstack", function() {
            return yi;
          }),
          n.d(e, "util", function() {
            return rt;
          }),
          n.d(e, "valueAndGrad", function() {
            return On;
          }),
          n.d(e, "valueAndGrads", function() {
            return Cn;
          }),
          n.d(e, "variable", function() {
            return xt;
          }),
          n.d(e, "variableGrads", function() {
            return In;
          }),
          n.d(e, "version_core", function() {
            return Th;
          }),
          n.d(e, "webgl", function() {
            return Ah;
          }),
          n.d(e, "where", function() {
            return cc;
          }),
          n.d(e, "whereAsync", function() {
            return lc;
          }),
          n.d(e, "zeros", function() {
            return Xn;
          }),
          n.d(e, "zerosLike", function() {
            return tr;
          });
        /**
         * @license
         * Copyright 2019 Google LLC. All Rights Reserved.
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         * =============================================================================
         */
        var a = function(t, e) {
          return (a =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        };
        function s(t, e) {
          function n() {
            this.constructor = t;
          }
          a(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }
        var u = function() {
          return (u =
            Object.assign ||
            function(t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var i in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              return t;
            }).apply(this, arguments);
        };
        function c(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        }
        function l(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        }
        var h,
          f = (function() {
            function t(t) {
              (this.global = t),
                (this.flags = {}),
                (this.flagRegistry = {}),
                (this.urlFlags = {}),
                this.populateURLFlags();
            }
            return (
              (t.prototype.setPlatform = function(t, e) {
                null != this.platform &&
                  console.warn(
                    "Platform " +
                      this.platformName +
                      " has already been set. Overwriting the platform with " +
                      e +
                      "."
                  ),
                  (this.platformName = t),
                  (this.platform = e);
              }),
              (t.prototype.registerFlag = function(t, e, n) {
                if (
                  ((this.flagRegistry[t] = { evaluationFn: e, setHook: n }),
                  null != this.urlFlags[t])
                ) {
                  var r = this.urlFlags[t];
                  console.warn(
                    "Setting feature override from URL " + t + ": " + r + "."
                  ),
                    this.set(t, r);
                }
              }),
              (t.prototype.get = function(t) {
                return t in this.flags
                  ? this.flags[t]
                  : ((this.flags[t] = this.evaluateFlag(t)), this.flags[t]);
              }),
              (t.prototype.getNumber = function(t) {
                return this.get(t);
              }),
              (t.prototype.getBool = function(t) {
                return this.get(t);
              }),
              (t.prototype.getFlags = function() {
                return this.flags;
              }),
              Object.defineProperty(t.prototype, "features", {
                get: function() {
                  return this.flags;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.set = function(t, e) {
                if (null == this.flagRegistry[t])
                  throw new Error(
                    "Cannot set flag " + t + " as it has not been registered."
                  );
                (this.flags[t] = e),
                  null != this.flagRegistry[t].setHook &&
                    this.flagRegistry[t].setHook(e);
              }),
              (t.prototype.evaluateFlag = function(t) {
                if (null == this.flagRegistry[t])
                  throw new Error(
                    "Cannot evaluate flag '" +
                      t +
                      "': no evaluation function found."
                  );
                return this.flagRegistry[t].evaluationFn();
              }),
              (t.prototype.setFlags = function(t) {
                this.flags = Object.assign({}, t);
              }),
              (t.prototype.reset = function() {
                (this.flags = {}),
                  (this.urlFlags = {}),
                  this.populateURLFlags();
              }),
              (t.prototype.populateURLFlags = function() {
                var t = this;
                if (
                  void 0 !== this.global &&
                  void 0 !== this.global.location &&
                  void 0 !== this.global.location.search
                ) {
                  var e = p(this.global.location.search);
                  "tfjsflags" in e &&
                    e.tfjsflags.split(",").forEach(function(e) {
                      var n = e.split(":"),
                        r = n[0],
                        i = n[1];
                      t.urlFlags[r] = (function(t, e) {
                        if ("true" === (e = e.toLowerCase()) || "false" === e)
                          return "true" === e;
                        if ("" + +e === e) return +e;
                        throw new Error(
                          "Could not parse value flag value " +
                            e +
                            " for flag " +
                            t +
                            "."
                        );
                      })(r, i);
                    });
                }
              }),
              t
            );
          })();
        function p(t) {
          var e = {};
          return (
            t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function(t) {
              for (var n = [], r = 1; r < arguments.length; r++)
                n[r - 1] = arguments[r];
              return (
                (function(t, e, n) {
                  t[decodeURIComponent(e)] = decodeURIComponent(n || "");
                })(e, n[0], n[1]),
                n.join("=")
              );
            }),
            e
          );
        }
        function d(t) {
          h = t;
        }
        var m = Object.freeze({
          Environment: f,
          getQueryParams: p,
          get ENV() {
            return h;
          },
          setEnvironmentGlobal: d
        });
        function y(t) {
          for (var e = t.length, n = 0, r = 0; e > 0; )
            (r = (Math.random() * e) | 0),
              (n = t[--e]),
              (t[e] = t[r]),
              (t[r] = n);
        }
        function g(t, e, n) {
          return Math.max(t, Math.min(e, n));
        }
        function v(t) {
          return t % 2 == 0 ? t : t + 1;
        }
        function b(t) {
          for (var e = 0, n = 0; n < t.length; n++) e += t[n];
          return e;
        }
        function w(t, e) {
          if (!t) throw new Error("string" == typeof e ? e : e());
        }
        function _(t, e, n) {
          void 0 === n && (n = ""),
            w(A(t, e), function() {
              return n + " Shapes " + t + " and " + e + " must match";
            });
        }
        function S(t) {
          w(null != t, function() {
            return "The input to the tensor constructor must be a non-null value.";
          });
        }
        function x(t, e) {
          if (
            (void 0 === e && (e = []),
            null == e && (e = []),
            Array.isArray(t) || B(t))
          )
            for (var n = 0; n < t.length; ++n) x(t[n], e);
          else e.push(t);
          return e;
        }
        function T(t) {
          if (0 === t.length) return 1;
          for (var e = t[0], n = 1; n < t.length; n++) e *= t[n];
          return e;
        }
        function A(t, e) {
          if (t === e) return !0;
          if (null == t || null == e) return !1;
          if (t.length !== e.length) return !1;
          for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
          return !0;
        }
        function k(t) {
          return t % 1 == 0;
        }
        function E(t) {
          if (null != Math.tanh) return Math.tanh(t);
          if (t === 1 / 0) return 1;
          if (t === -1 / 0) return -1;
          var e = Math.exp(2 * t);
          return (e - 1) / (e + 1);
        }
        function N(t) {
          var e = Math.ceil(Math.sqrt(t));
          return [e, Math.ceil(t / e)];
        }
        function O(t, e) {
          return e <= t.length ? t : t + " ".repeat(e - t.length);
        }
        function C(t, e, n) {
          return (
            void 0 === e &&
              (e = function(t) {
                return 0;
              }),
            new Promise(function(r, i) {
              var o = 0,
                a = function() {
                  if (t()) r();
                  else {
                    var s = e(++o);
                    null != n && o >= n ? i() : setTimeout(a, s);
                  }
                };
              a();
            })
          );
        }
        function I(t, e) {
          for (var n = 1, r = -1, i = 0; i < t.length; ++i)
            if (t[i] >= 0) n *= t[i];
            else if (-1 === t[i]) {
              if (-1 !== r)
                throw Error(
                  "Shapes can only have 1 implicit size. Found -1 at dim " +
                    r +
                    " and dim " +
                    i
                );
              r = i;
            } else if (t[i] < 0)
              throw Error(
                "Shapes can not be < 0. Found " + t[i] + " at dim " + i
              );
          if (-1 === r) {
            if (e > 0 && e !== n)
              throw Error(
                "Size(" + e + ") must match the product of shape " + t
              );
            return t;
          }
          if (0 === n)
            throw Error(
              "Cannot infer the missing size in [" +
                t +
                "] when there are 0 elements"
            );
          if (e % n != 0)
            throw Error(
              "The implicit shape can't be a fractional number. Got " +
                e +
                " / " +
                n
            );
          var o = t.slice();
          return (o[r] = e / n), o;
        }
        function M(t, e) {
          var n = e.length;
          return (
            w(
              (t =
                null == t
                  ? e.map(function(t, e) {
                      return e;
                    })
                  : [].concat(t)).every(function(t) {
                return t >= -n && t < n;
              }),
              function() {
                return (
                  "All values in axis param must be in range [-" +
                  n +
                  ", " +
                  n +
                  ") but got axis " +
                  t
                );
              }
            ),
            w(
              t.every(function(t) {
                return k(t);
              }),
              function() {
                return (
                  "All values in axis param must be integers but got axis " + t
                );
              }
            ),
            t.map(function(t) {
              return t < 0 ? n + t : t;
            })
          );
        }
        function P(t, e) {
          for (
            var n = [],
              r = [],
              i = null == e ? null : M(e, t).sort(),
              o = 0,
              a = 0;
            a < t.length;
            ++a
          ) {
            if (null != i) {
              if (i[o] === a && 1 !== t[a])
                throw new Error(
                  "Can't squeeze axis " +
                    a +
                    " since its dim '" +
                    t[a] +
                    "' is not 1"
                );
              (null == i[o] || i[o] > a) &&
                1 === t[a] &&
                (n.push(t[a]), r.push(a)),
                i[o] <= a && o++;
            }
            1 !== t[a] && (n.push(t[a]), r.push(a));
          }
          return { newShape: n, keptDims: r };
        }
        function R(t, e) {
          var n = null;
          if (null == t || "float32" === t) n = new Float32Array(e);
          else if ("int32" === t) n = new Int32Array(e);
          else {
            if ("bool" !== t) throw new Error("Unknown data type " + t);
            n = new Uint8Array(e);
          }
          return n;
        }
        function D(t, e) {
          var n = null;
          if (null == t || "float32" === t) n = new Float32Array(e);
          else if ("int32" === t) n = new Int32Array(e);
          else if ("bool" === t) n = new Uint8Array(e);
          else {
            if ("string" !== t) throw new Error("Unknown data type " + t);
            n = new Array(e);
          }
          return n;
        }
        function F(t, e, n) {
          if ("float32" === e)
            for (var r = 0; r < t.length; r++) {
              var i = t[r];
              if (isNaN(i) || !isFinite(i))
                throw Error("The result of the '" + n + "' is " + i + ".");
            }
        }
        function z(t, e) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            if (isNaN(r) || !isFinite(r))
              throw Error(
                "A tensor of type " + e + " being uploaded contains " + r + "."
              );
          }
        }
        function L(t) {
          return (
            "bool" === t ||
            "complex64" === t ||
            "float32" === t ||
            "int32" === t ||
            "string" === t
          );
        }
        function j(t, e) {
          return !(
            "complex64" === e ||
            ("float32" === e && "complex64" !== t) ||
            ("int32" === e && "float32" !== t && "complex64" !== t) ||
            ("bool" === e && "bool" === t)
          );
        }
        function B(t) {
          return (
            t instanceof Float32Array ||
            t instanceof Int32Array ||
            t instanceof Uint8Array
          );
        }
        function q(t) {
          if ("float32" === t || "int32" === t) return 4;
          if ("complex64" === t) return 8;
          if ("bool" === t) return 1;
          throw new Error("Unknown dtype " + t);
        }
        function U(t) {
          if (null == t) return 0;
          var e = 0;
          return (
            t.forEach(function(t) {
              return (e += 2 * t.length);
            }),
            e
          );
        }
        function V(t) {
          return "string" == typeof t || t instanceof String;
        }
        function W(t) {
          return "boolean" == typeof t;
        }
        function G(t) {
          return "number" == typeof t;
        }
        function H(t) {
          return Array.isArray(t)
            ? H(t[0])
            : t instanceof Float32Array
            ? "float32"
            : t instanceof Int32Array || t instanceof Uint8Array
            ? "int32"
            : G(t)
            ? "float32"
            : V(t)
            ? "string"
            : W(t)
            ? "bool"
            : "float32";
        }
        function K(t) {
          return !!(t && t.constructor && t.call && t.apply);
        }
        function Q(t, e) {
          for (var n = e; n < t; ++n) if (t % n == 0) return n;
          return t;
        }
        function X(t) {
          var e = t.length;
          if (e < 2) return [];
          var n = new Array(e - 1);
          n[e - 2] = t[e - 1];
          for (var r = e - 3; r >= 0; --r) n[r] = n[r + 1] * t[r + 1];
          return n;
        }
        function $(t, e, n) {
          if ("string" === e)
            throw new Error("Cannot convert a string[] to a TypedArray");
          if (
            (Array.isArray(t) && (t = x(t)),
            n && z(t, e),
            (function(t, e) {
              return (
                (t instanceof Float32Array && "float32" === e) ||
                (t instanceof Int32Array && "int32" === e) ||
                (t instanceof Uint8Array && "bool" === e)
              );
            })(t, e))
          )
            return t;
          if (null == e || "float32" === e || "complex64" === e)
            return new Float32Array(t);
          if ("int32" === e) return new Int32Array(t);
          if ("bool" === e) {
            for (var r = new Uint8Array(t.length), i = 0; i < r.length; ++i)
              0 !== Math.round(t[i]) && (r[i] = 1);
            return r;
          }
          throw new Error("Unknown data type " + e);
        }
        function Y(t, e) {
          if (0 === t.length) return e[0];
          var n = t.reduce(function(t, e) {
            return t * e;
          });
          if (0 === n) return [];
          if (n !== e.length)
            throw new Error("[" + t + "] does not match the input size.");
          return (function t(e, n, r) {
            var i = new Array();
            if (1 === n.length)
              for (var o = n[0], a = 0; a < o; a++) i[a] = r[e + a];
            else {
              o = n[0];
              var s = n.slice(1),
                u = s.reduce(function(t, e) {
                  return t * e;
                });
              for (a = 0; a < o; a++) i[a] = t(e + a * u, s, r);
            }
            return i;
          })(0, t, e);
        }
        function J(t, e) {
          for (var n = Z(t, e), r = 0; r < n.length; r++) n[r] = 1;
          return n;
        }
        function Z(t, e) {
          if (null == e || "float32" === e || "complex64" === e)
            return new Float32Array(t);
          if ("int32" === e) return new Int32Array(t);
          if ("bool" === e) return new Uint8Array(t);
          throw new Error("Unknown data type " + e);
        }
        function tt() {
          if ("undefined" != typeof performance) return performance.now();
          if (void 0 !== t) {
            var e = t.hrtime();
            return 1e3 * e[0] + e[1] / 1e6;
          }
          throw new Error(
            "Cannot measure time in this environment. You should run tf.js in the browser or in Node.js"
          );
        }
        function et(t) {
          t.forEach(function(e) {
            w(Number.isInteger(e) && e >= 0, function() {
              return (
                "Tensor must have a shape comprised of positive integers but got shape [" +
                t +
                "]."
              );
            });
          });
        }
        function nt(t, e) {
          return h.platform.fetch(t, e);
        }
        var rt = Object.freeze({
            shuffle: y,
            clamp: g,
            nearestLargerEven: v,
            sum: b,
            randUniform: function(t, e) {
              var n = Math.random();
              return e * n + (1 - n) * t;
            },
            distSquared: function(t, e) {
              for (var n = 0, r = 0; r < t.length; r++) {
                var i = Number(t[r]) - Number(e[r]);
                n += i * i;
              }
              return n;
            },
            assert: w,
            assertShapesMatch: _,
            assertNonNull: S,
            flatten: x,
            sizeFromShape: T,
            isScalarShape: function(t) {
              return 0 === t.length;
            },
            arraysEqual: A,
            isInt: k,
            tanh: E,
            sizeToSquarishShape: N,
            createShuffledIndices: function(t) {
              for (var e = new Uint32Array(t), n = 0; n < t; ++n) e[n] = n;
              return y(e), e;
            },
            rightPad: O,
            repeatedTry: C,
            inferFromImplicitShape: I,
            parseAxisParam: M,
            squeezeShape: P,
            getTypedArrayFromDType: R,
            getArrayFromDType: D,
            checkComputationForErrors: F,
            checkConversionForErrors: z,
            isValidDtype: L,
            hasEncodingLoss: j,
            isTypedArray: B,
            bytesPerElement: q,
            bytesFromStringArray: U,
            isString: V,
            isBoolean: W,
            isNumber: G,
            inferDtype: H,
            isFunction: K,
            nearestDivisor: Q,
            computeStrides: X,
            toTypedArray: $,
            toNestedArray: Y,
            makeOnesTypedArray: J,
            makeZerosTypedArray: Z,
            now: tt,
            assertNonNegativeIntegerDimensions: et,
            fetch: nt
          }),
          it = (function() {
            function t(t, e) {
              (this.backendTimer = t),
                (this.logger = e),
                null == e && (this.logger = new ot());
            }
            return (
              (t.prototype.profileKernel = function(t, e) {
                var n,
                  r = this,
                  i = this.backendTimer.time(function() {
                    n = e();
                  });
                return (
                  (Array.isArray(n) ? n : [n]).forEach(function(e) {
                    var n = e.dataSync();
                    F(n, e.dtype, t),
                      i.then(function(i) {
                        var o = "";
                        null != i.getExtraProfileInfo &&
                          (o = i.getExtraProfileInfo()),
                          r.logger.logKernelProfile(t, e, n, i.kernelMs, o);
                      });
                  }),
                  n
                );
              }),
              t
            );
          })(),
          ot = (function() {
            function t() {}
            return (
              (t.prototype.logKernelProfile = function(t, e, n, r, i) {
                var o = O(r + "ms", 9),
                  a = O(t, 25),
                  s = e.rank,
                  u = e.size,
                  c = O(e.shape.toString(), 14);
                console.log(
                  "%c" +
                    a +
                    "\t%c" +
                    o +
                    "\t%c" +
                    s +
                    "D " +
                    c +
                    "\t%c" +
                    u +
                    "\t%c" +
                    i,
                  "font-weight:bold",
                  "color:red",
                  "color:blue",
                  "color: orange",
                  "color: green"
                );
              }),
              t
            );
          })(),
          at = 20,
          st = 3,
          ut = 7;
        function ct(t, e, n) {
          return O(
            Array.isArray(t)
              ? parseFloat(t[0].toFixed(ut)) +
                  " + " +
                  parseFloat(t[1].toFixed(ut)) +
                  "j"
              : V(t)
              ? "'" + t + "'"
              : "bool" === n
              ? lt(t)
              : parseFloat(t.toFixed(ut)).toString(),
            e
          );
        }
        function lt(t) {
          return 0 === t ? "false" : "true";
        }
        function ht(t) {
          for (var e = [], n = 0; n < t.length; n += 2)
            e.push([t[n], t[n + 1]]);
          return e;
        }
        var ft = (function() {
            function t(t, e, n) {
              var r = this;
              if (
                ((this.dtype = e),
                (this.shape = t.slice()),
                (this.size = T(t)),
                null != n)
              ) {
                var i = n.length;
                w(i === this.size, function() {
                  return (
                    "Length of values '" +
                    i +
                    "' does not match the size inferred by the shape '" +
                    r.size +
                    "'."
                  );
                });
              }
              if ("complex64" === e)
                throw new Error(
                  "complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag)."
                );
              (this.values = n || D(e, this.size)), (this.strides = X(t));
            }
            return (
              (t.prototype.set = function(t) {
                for (var e = this, n = [], r = 1; r < arguments.length; r++)
                  n[r - 1] = arguments[r];
                0 === n.length && (n = [0]),
                  w(n.length === this.rank, function() {
                    return (
                      "The number of provided coordinates (" +
                      n.length +
                      ") must match the rank (" +
                      e.rank +
                      ")"
                    );
                  });
                var i = this.locToIndex(n);
                this.values[i] = t;
              }),
              (t.prototype.get = function() {
                for (var t = [], e = 0; e < arguments.length; e++)
                  t[e] = arguments[e];
                0 === t.length && (t = [0]);
                for (var n = 0, r = 0, i = t; r < i.length; r++) {
                  var o = i[r];
                  if (o < 0 || o >= this.shape[n]) {
                    var a =
                      "Requested out of range element at " +
                      t +
                      ".   Buffer shape=" +
                      this.shape;
                    throw new Error(a);
                  }
                  n++;
                }
                for (var s = t[t.length - 1], u = 0; u < t.length - 1; ++u)
                  s += this.strides[u] * t[u];
                return this.values[s];
              }),
              (t.prototype.locToIndex = function(t) {
                if (0 === this.rank) return 0;
                if (1 === this.rank) return t[0];
                for (var e = t[t.length - 1], n = 0; n < t.length - 1; ++n)
                  e += this.strides[n] * t[n];
                return e;
              }),
              (t.prototype.indexToLoc = function(t) {
                if (0 === this.rank) return [];
                if (1 === this.rank) return [t];
                for (
                  var e = new Array(this.shape.length), n = 0;
                  n < e.length - 1;
                  ++n
                )
                  (e[n] = Math.floor(t / this.strides[n])),
                    (t -= e[n] * this.strides[n]);
                return (e[e.length - 1] = t), e;
              }),
              Object.defineProperty(t.prototype, "rank", {
                get: function() {
                  return this.shape.length;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.toTensor = function() {
                return yt.make(this.shape, { values: this.values }, this.dtype);
              }),
              t
            );
          })(),
          pt = null,
          dt = null,
          mt = null,
          yt = (function() {
            function t(t, e, n, r, i) {
              (this.kept = !1),
                (this.isDisposedInternal = !1),
                (this.shape = t.slice()),
                (this.dtype = e || "float32"),
                (this.size = T(t)),
                (this.strides = X(t)),
                (this.dataId = null != r ? r : {}),
                (this.id = pt().nextTensorId()),
                (this.rankType =
                  this.rank < 5 ? this.rank.toString() : "higher"),
                pt().registerTensor(this, i),
                null != n && pt().write(i, this.dataId, n);
            }
            return (
              (t.make = function(e, n, r, i) {
                return new t(e, r, n.values, n.dataId, i);
              }),
              (t.prototype.flatten = function() {
                return this.throwIfDisposed(), this.as1D();
              }),
              (t.prototype.asScalar = function() {
                return (
                  this.throwIfDisposed(),
                  w(1 === this.size, function() {
                    return "The array must have only 1 element.";
                  }),
                  this.reshape([])
                );
              }),
              (t.prototype.as1D = function() {
                return this.throwIfDisposed(), this.reshape([this.size]);
              }),
              (t.prototype.as2D = function(t, e) {
                return this.throwIfDisposed(), this.reshape([t, e]);
              }),
              (t.prototype.as3D = function(t, e, n) {
                return this.throwIfDisposed(), this.reshape([t, e, n]);
              }),
              (t.prototype.as4D = function(t, e, n, r) {
                return this.throwIfDisposed(), this.reshape([t, e, n, r]);
              }),
              (t.prototype.as5D = function(t, e, n, r, i) {
                return this.throwIfDisposed(), this.reshape([t, e, n, r, i]);
              }),
              (t.prototype.asType = function(t) {
                return this.throwIfDisposed(), dt.cast(this, t);
              }),
              Object.defineProperty(t.prototype, "rank", {
                get: function() {
                  return this.shape.length;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.buffer = function() {
                return c(this, void 0, void 0, function() {
                  var t;
                  return l(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.data()];
                      case 1:
                        return (
                          (t = e.sent()),
                          [2, dt.buffer(this.shape, this.dtype, t)]
                        );
                    }
                  });
                });
              }),
              (t.prototype.bufferSync = function() {
                return dt.buffer(this.shape, this.dtype, this.dataSync());
              }),
              (t.prototype.array = function() {
                return c(this, void 0, void 0, function() {
                  var t;
                  return l(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.data()];
                      case 1:
                        return (t = e.sent()), [2, Y(this.shape, t)];
                    }
                  });
                });
              }),
              (t.prototype.arraySync = function() {
                return Y(this.shape, this.dataSync());
              }),
              (t.prototype.data = function() {
                return c(this, void 0, void 0, function() {
                  return l(this, function(t) {
                    return this.throwIfDisposed(), [2, pt().read(this.dataId)];
                  });
                });
              }),
              (t.prototype.dataSync = function() {
                return this.throwIfDisposed(), pt().readSync(this.dataId);
              }),
              (t.prototype.dispose = function() {
                this.isDisposed ||
                  (pt().disposeTensor(this), (this.isDisposedInternal = !0));
              }),
              Object.defineProperty(t.prototype, "isDisposed", {
                get: function() {
                  return this.isDisposedInternal;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.throwIfDisposed = function() {
                if (this.isDisposed) throw new Error("Tensor is disposed.");
              }),
              (t.prototype.toFloat = function() {
                return this.asType("float32");
              }),
              (t.prototype.toInt = function() {
                return this.asType("int32");
              }),
              (t.prototype.toBool = function() {
                return this.asType("bool");
              }),
              (t.prototype.print = function(t) {
                return void 0 === t && (t = !1), dt.print(this, t);
              }),
              (t.prototype.reshape = function(t) {
                return this.throwIfDisposed(), dt.reshape(this, t);
              }),
              (t.prototype.reshapeAs = function(t) {
                return this.throwIfDisposed(), this.reshape(t.shape);
              }),
              (t.prototype.expandDims = function(t) {
                return void 0 === t && (t = 0), dt.expandDims(this, t);
              }),
              (t.prototype.cumsum = function(t, e, n) {
                return (
                  void 0 === t && (t = 0),
                  void 0 === e && (e = !1),
                  void 0 === n && (n = !1),
                  dt.cumsum(this, t, e, n)
                );
              }),
              (t.prototype.squeeze = function(t) {
                return this.throwIfDisposed(), dt.squeeze(this, t);
              }),
              (t.prototype.clone = function() {
                return this.throwIfDisposed(), dt.clone(this);
              }),
              (t.prototype.oneHot = function(t, e, n) {
                return this.throwIfDisposed(), dt.oneHot(this, t, e, n);
              }),
              (t.prototype.toString = function(t) {
                return (
                  void 0 === t && (t = !1),
                  (function(t, e, n, r) {
                    var i = X(e),
                      o = (function(t, e, n, r) {
                        var i = T(e),
                          o = r[r.length - 1],
                          a = new Array(o).fill(0),
                          s = e.length,
                          u = "complex64" === n ? ht(t) : t;
                        if (s > 1)
                          for (var c = 0; c < i / o; c++)
                            for (var l = c * o, h = 0; h < o; h++)
                              a[h] = Math.max(a[h], ct(u[l + h], 0, n).length);
                        return a;
                      })(t, e, n, i),
                      a = e.length,
                      s = (function t(e, n, r, i, o, a) {
                        void 0 === a && (a = !0);
                        var s = "complex64" === r ? 2 : 1,
                          u = n[0],
                          c = n.length;
                        if (0 === c)
                          return "complex64" === r
                            ? [ct(ht(e)[0], 0, r)]
                            : "bool" === r
                            ? [lt(e[0])]
                            : [e[0].toString()];
                        if (1 === c) {
                          if (u > at) {
                            var l = st * s,
                              h = Array.from(e.slice(0, l)),
                              f = Array.from(e.slice(u - st * s, u));
                            return (
                              "complex64" === r && ((h = ht(h)), (f = ht(f))),
                              [
                                "[" +
                                  h
                                    .map(function(t, e) {
                                      return ct(t, o[e], r);
                                    })
                                    .join(", ") +
                                  ", ..., " +
                                  f
                                    .map(function(t, e) {
                                      return ct(t, o[u - st + e], r);
                                    })
                                    .join(", ") +
                                  "]"
                              ]
                            );
                          }
                          return [
                            "[" +
                              ("complex64" === r ? ht(e) : Array.from(e))
                                .map(function(t, e) {
                                  return ct(t, o[e], r);
                                })
                                .join(", ") +
                              "]"
                          ];
                        }
                        var p = n.slice(1),
                          d = i.slice(1),
                          m = i[0] * s,
                          y = [];
                        if (u > at) {
                          for (var g = 0; g < st; g++) {
                            var v = (b = g * m) + m;
                            y.push.apply(y, t(e.slice(b, v), p, r, d, o, !1));
                          }
                          for (y.push("..."), g = u - st; g < u; g++)
                            (v = (b = g * m) + m),
                              y.push.apply(
                                y,
                                t(e.slice(b, v), p, r, d, o, g === u - 1)
                              );
                        } else
                          for (g = 0; g < u; g++) {
                            var b;
                            (v = (b = g * m) + m),
                              y.push.apply(
                                y,
                                t(e.slice(b, v), p, r, d, o, g === u - 1)
                              );
                          }
                        var w = 2 === c ? "," : "";
                        for (
                          y[0] = "[" + y[0] + w, g = 1;
                          g < y.length - 1;
                          g++
                        )
                          y[g] = " " + y[g] + w;
                        var _ = ",\n";
                        for (g = 2; g < c; g++) _ += "\n";
                        return (
                          (y[y.length - 1] =
                            " " + y[y.length - 1] + "]" + (a ? "" : _)),
                          y
                        );
                      })(t, e, n, i, o),
                      u = ["Tensor"];
                    return (
                      r &&
                        (u.push("  dtype: " + n),
                        u.push("  rank: " + a),
                        u.push("  shape: [" + e + "]"),
                        u.push("  values:")),
                      u.push(
                        s
                          .map(function(t) {
                            return "    " + t;
                          })
                          .join("\n")
                      ),
                      u.join("\n")
                    );
                  })(this.dataSync(), this.shape, this.dtype, t)
                );
              }),
              (t.prototype.tile = function(t) {
                return this.throwIfDisposed(), dt.tile(this, t);
              }),
              (t.prototype.gather = function(t, e) {
                return (
                  void 0 === e && (e = 0),
                  this.throwIfDisposed(),
                  dt.gather(this, t, e)
                );
              }),
              (t.prototype.matMul = function(t, e, n) {
                return (
                  void 0 === e && (e = !1),
                  void 0 === n && (n = !1),
                  this.throwIfDisposed(),
                  dt.matMul(this, t, e, n)
                );
              }),
              (t.prototype.dot = function(t) {
                return this.throwIfDisposed(), dt.dot(this, t);
              }),
              (t.prototype.norm = function(t, e, n) {
                return (
                  void 0 === t && (t = "euclidean"),
                  void 0 === e && (e = null),
                  void 0 === n && (n = !1),
                  this.throwIfDisposed(),
                  dt.norm(this, t, e, n)
                );
              }),
              (t.prototype.slice = function(t, e) {
                return this.throwIfDisposed(), dt.slice(this, t, e);
              }),
              (t.prototype.reverse = function(t) {
                return this.throwIfDisposed(), dt.reverse(this, t);
              }),
              (t.prototype.concat = function(e, n) {
                return (
                  void 0 === n && (n = 0),
                  this.throwIfDisposed(),
                  e instanceof t && (e = [e]),
                  dt.concat([this].concat(e), n)
                );
              }),
              (t.prototype.split = function(t, e) {
                return (
                  void 0 === e && (e = 0),
                  this.throwIfDisposed(),
                  dt.split(this, t, e)
                );
              }),
              (t.prototype.stack = function(t, e) {
                return void 0 === e && (e = 0), dt.stack([this, t], e);
              }),
              (t.prototype.unstack = function(t) {
                return void 0 === t && (t = 0), dt.unstack(this, t);
              }),
              (t.prototype.pad = function(t, e) {
                return void 0 === e && (e = 0), dt.pad(this, t, e);
              }),
              (t.prototype.batchNormalization = function(t, e, n, r, i) {
                return (
                  void 0 === n && (n = 0.001),
                  mt(
                    "tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"
                  ),
                  this.batchNorm(t, e, i, r, n)
                );
              }),
              (t.prototype.batchNorm = function(t, e, n, r, i) {
                return (
                  void 0 === i && (i = 0.001),
                  this.throwIfDisposed(),
                  dt.batchNorm(this, t, e, n, r, i)
                );
              }),
              (t.prototype.all = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.all(this, t, e)
                );
              }),
              (t.prototype.any = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.any(this, t, e)
                );
              }),
              (t.prototype.logSumExp = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.logSumExp(this, t, e)
                );
              }),
              (t.prototype.sum = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.sum(this, t, e)
                );
              }),
              (t.prototype.prod = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.prod(this, t, e)
                );
              }),
              (t.prototype.mean = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.mean(this, t, e)
                );
              }),
              (t.prototype.min = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.min(this, t, e)
                );
              }),
              (t.prototype.max = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.max(this, t, e)
                );
              }),
              (t.prototype.argMin = function(t) {
                return (
                  void 0 === t && (t = null),
                  this.throwIfDisposed(),
                  dt.argMin(this, t)
                );
              }),
              (t.prototype.argMax = function(t) {
                return (
                  void 0 === t && (t = null),
                  this.throwIfDisposed(),
                  dt.argMax(this, t)
                );
              }),
              (t.prototype.cast = function(t) {
                return this.throwIfDisposed(), dt.cast(this, t);
              }),
              (t.prototype.add = function(t) {
                return this.throwIfDisposed(), dt.add(this, t);
              }),
              (t.prototype.addStrict = function(t) {
                return this.throwIfDisposed(), dt.addStrict(this, t);
              }),
              (t.prototype.atan2 = function(t) {
                return this.throwIfDisposed(), dt.atan2(this, t);
              }),
              (t.prototype.sub = function(t) {
                return this.throwIfDisposed(), dt.sub(this, t);
              }),
              (t.prototype.subStrict = function(t) {
                return this.throwIfDisposed(), dt.subStrict(this, t);
              }),
              (t.prototype.pow = function(t) {
                return this.throwIfDisposed(), dt.pow(this, t);
              }),
              (t.prototype.powStrict = function(t) {
                return this.throwIfDisposed(), dt.powStrict(this, t);
              }),
              (t.prototype.mul = function(t) {
                return this.throwIfDisposed(), dt.mul(this, t);
              }),
              (t.prototype.mulStrict = function(t) {
                return this.throwIfDisposed(), dt.mulStrict(this, t);
              }),
              (t.prototype.div = function(t) {
                return this.throwIfDisposed(), dt.div(this, t);
              }),
              (t.prototype.floorDiv = function(t) {
                return this.throwIfDisposed(), dt.floorDiv(this, t);
              }),
              (t.prototype.divStrict = function(t) {
                return this.throwIfDisposed(), dt.divStrict(this, t);
              }),
              (t.prototype.minimum = function(t) {
                return this.throwIfDisposed(), dt.minimum(this, t);
              }),
              (t.prototype.minimumStrict = function(t) {
                return this.throwIfDisposed(), dt.minimumStrict(this, t);
              }),
              (t.prototype.maximum = function(t) {
                return this.throwIfDisposed(), dt.maximum(this, t);
              }),
              (t.prototype.maximumStrict = function(t) {
                return this.throwIfDisposed(), dt.maximumStrict(this, t);
              }),
              (t.prototype.mod = function(t) {
                return this.throwIfDisposed(), dt.mod(this, t);
              }),
              (t.prototype.modStrict = function(t) {
                return this.throwIfDisposed(), dt.modStrict(this, t);
              }),
              (t.prototype.squaredDifference = function(t) {
                return this.throwIfDisposed(), dt.squaredDifference(this, t);
              }),
              (t.prototype.squaredDifferenceStrict = function(t) {
                return (
                  this.throwIfDisposed(), dt.squaredDifferenceStrict(this, t)
                );
              }),
              (t.prototype.transpose = function(t) {
                return this.throwIfDisposed(), dt.transpose(this, t);
              }),
              (t.prototype.notEqual = function(t) {
                return this.throwIfDisposed(), dt.notEqual(this, t);
              }),
              (t.prototype.notEqualStrict = function(t) {
                return this.throwIfDisposed(), dt.notEqualStrict(this, t);
              }),
              (t.prototype.less = function(t) {
                return this.throwIfDisposed(), dt.less(this, t);
              }),
              (t.prototype.lessStrict = function(t) {
                return this.throwIfDisposed(), dt.lessStrict(this, t);
              }),
              (t.prototype.equal = function(t) {
                return this.throwIfDisposed(), dt.equal(this, t);
              }),
              (t.prototype.equalStrict = function(t) {
                return this.throwIfDisposed(), dt.equalStrict(this, t);
              }),
              (t.prototype.lessEqual = function(t) {
                return this.throwIfDisposed(), dt.lessEqual(this, t);
              }),
              (t.prototype.lessEqualStrict = function(t) {
                return this.throwIfDisposed(), dt.lessEqualStrict(this, t);
              }),
              (t.prototype.greater = function(t) {
                return this.throwIfDisposed(), dt.greater(this, t);
              }),
              (t.prototype.greaterStrict = function(t) {
                return this.throwIfDisposed(), dt.greaterStrict(this, t);
              }),
              (t.prototype.greaterEqual = function(t) {
                return this.throwIfDisposed(), dt.greaterEqual(this, t);
              }),
              (t.prototype.greaterEqualStrict = function(t) {
                return this.throwIfDisposed(), dt.greaterEqualStrict(this, t);
              }),
              (t.prototype.logicalAnd = function(t) {
                return this.throwIfDisposed(), dt.logicalAnd(this, t);
              }),
              (t.prototype.logicalOr = function(t) {
                return this.throwIfDisposed(), dt.logicalOr(this, t);
              }),
              (t.prototype.logicalNot = function() {
                return this.throwIfDisposed(), dt.logicalNot(this);
              }),
              (t.prototype.logicalXor = function(t) {
                return this.throwIfDisposed(), dt.logicalXor(this, t);
              }),
              (t.prototype.where = function(t, e) {
                return this.throwIfDisposed(), dt.where(t, this, e);
              }),
              (t.prototype.neg = function() {
                return this.throwIfDisposed(), dt.neg(this);
              }),
              (t.prototype.ceil = function() {
                return this.throwIfDisposed(), dt.ceil(this);
              }),
              (t.prototype.floor = function() {
                return this.throwIfDisposed(), dt.floor(this);
              }),
              (t.prototype.sign = function() {
                return this.throwIfDisposed(), dt.sign(this);
              }),
              (t.prototype.isNaN = function() {
                return this.throwIfDisposed(), dt.isNaN(this);
              }),
              (t.prototype.isInf = function() {
                return this.throwIfDisposed(), dt.isInf(this);
              }),
              (t.prototype.isFinite = function() {
                return this.throwIfDisposed(), dt.isFinite(this);
              }),
              (t.prototype.exp = function() {
                return this.throwIfDisposed(), dt.exp(this);
              }),
              (t.prototype.expm1 = function() {
                return this.throwIfDisposed(), dt.expm1(this);
              }),
              (t.prototype.log = function() {
                return this.throwIfDisposed(), dt.log(this);
              }),
              (t.prototype.log1p = function() {
                return this.throwIfDisposed(), dt.log1p(this);
              }),
              (t.prototype.sqrt = function() {
                return this.throwIfDisposed(), dt.sqrt(this);
              }),
              (t.prototype.rsqrt = function() {
                return this.throwIfDisposed(), dt.rsqrt(this);
              }),
              (t.prototype.square = function() {
                return this.throwIfDisposed(), dt.square(this);
              }),
              (t.prototype.reciprocal = function() {
                return this.throwIfDisposed(), dt.reciprocal(this);
              }),
              (t.prototype.abs = function() {
                return this.throwIfDisposed(), dt.abs(this);
              }),
              (t.prototype.clipByValue = function(t, e) {
                return this.throwIfDisposed(), dt.clipByValue(this, t, e);
              }),
              (t.prototype.relu = function() {
                return this.throwIfDisposed(), dt.relu(this);
              }),
              (t.prototype.elu = function() {
                return this.throwIfDisposed(), dt.elu(this);
              }),
              (t.prototype.selu = function() {
                return this.throwIfDisposed(), dt.selu(this);
              }),
              (t.prototype.leakyRelu = function(t) {
                return (
                  void 0 === t && (t = 0.2),
                  this.throwIfDisposed(),
                  dt.leakyRelu(this, t)
                );
              }),
              (t.prototype.prelu = function(t) {
                return this.throwIfDisposed(), dt.prelu(this, t);
              }),
              (t.prototype.sigmoid = function() {
                return this.throwIfDisposed(), dt.sigmoid(this);
              }),
              (t.prototype.logSigmoid = function() {
                return this.throwIfDisposed(), dt.logSigmoid(this);
              }),
              (t.prototype.softplus = function() {
                return this.throwIfDisposed(), dt.softplus(this);
              }),
              (t.prototype.zerosLike = function() {
                return this.throwIfDisposed(), dt.zerosLike(this);
              }),
              (t.prototype.onesLike = function() {
                return this.throwIfDisposed(), dt.onesLike(this);
              }),
              (t.prototype.sin = function() {
                return this.throwIfDisposed(), dt.sin(this);
              }),
              (t.prototype.cos = function() {
                return this.throwIfDisposed(), dt.cos(this);
              }),
              (t.prototype.tan = function() {
                return this.throwIfDisposed(), dt.tan(this);
              }),
              (t.prototype.asin = function() {
                return this.throwIfDisposed(), dt.asin(this);
              }),
              (t.prototype.acos = function() {
                return this.throwIfDisposed(), dt.acos(this);
              }),
              (t.prototype.atan = function() {
                return this.throwIfDisposed(), dt.atan(this);
              }),
              (t.prototype.sinh = function() {
                return this.throwIfDisposed(), dt.sinh(this);
              }),
              (t.prototype.cosh = function() {
                return this.throwIfDisposed(), dt.cosh(this);
              }),
              (t.prototype.tanh = function() {
                return this.throwIfDisposed(), dt.tanh(this);
              }),
              (t.prototype.asinh = function() {
                return this.throwIfDisposed(), dt.asinh(this);
              }),
              (t.prototype.acosh = function() {
                return this.throwIfDisposed(), dt.acosh(this);
              }),
              (t.prototype.atanh = function() {
                return this.throwIfDisposed(), dt.atanh(this);
              }),
              (t.prototype.erf = function() {
                return this.throwIfDisposed(), dt.erf(this);
              }),
              (t.prototype.round = function() {
                return this.throwIfDisposed(), dt.round(this);
              }),
              (t.prototype.step = function(t) {
                return (
                  void 0 === t && (t = 0),
                  this.throwIfDisposed(),
                  dt.step(this, t)
                );
              }),
              (t.prototype.softmax = function(t) {
                return (
                  void 0 === t && (t = -1),
                  this.throwIfDisposed(),
                  dt.softmax(this, t)
                );
              }),
              (t.prototype.logSoftmax = function(t) {
                return (
                  void 0 === t && (t = -1),
                  this.throwIfDisposed(),
                  dt.logSoftmax(this, t)
                );
              }),
              (t.prototype.resizeBilinear = function(t, e) {
                return (
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.image.resizeBilinear(this, t, e)
                );
              }),
              (t.prototype.resizeNearestNeighbor = function(t, e) {
                return (
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  dt.image.resizeNearestNeighbor(this, t, e)
                );
              }),
              (t.prototype.conv1d = function(t, e, n, r, i, o) {
                return (
                  void 0 === r && (r = "NWC"),
                  void 0 === i && (i = 1),
                  this.throwIfDisposed(),
                  dt.conv1d(this, t, e, n, r, i, o)
                );
              }),
              (t.prototype.conv2d = function(t, e, n, r, i, o) {
                return (
                  void 0 === r && (r = "NHWC"),
                  void 0 === i && (i = [1, 1]),
                  this.throwIfDisposed(),
                  dt.conv2d(this, t, e, n, r, i, o)
                );
              }),
              (t.prototype.conv2dTranspose = function(t, e, n, r, i) {
                return (
                  this.throwIfDisposed(),
                  dt.conv2dTranspose(this, t, e, n, r, i)
                );
              }),
              (t.prototype.depthwiseConv2D = function(t, e, n, r, i, o) {
                return (
                  void 0 === r && (r = "NHWC"),
                  void 0 === i && (i = [1, 1]),
                  this.throwIfDisposed(),
                  dt.depthwiseConv2d(this, t, e, n, r, i, o)
                );
              }),
              (t.prototype.separableConv2d = function(t, e, n, r, i, o) {
                return (
                  void 0 === i && (i = [1, 1]),
                  void 0 === o && (o = "NHWC"),
                  this.throwIfDisposed(),
                  dt.separableConv2d(this, t, e, n, r, i, o)
                );
              }),
              (t.prototype.avgPool = function(t, e, n, r) {
                return this.throwIfDisposed(), dt.avgPool(this, t, e, n, r);
              }),
              (t.prototype.maxPool = function(t, e, n, r) {
                return this.throwIfDisposed(), dt.maxPool(this, t, e, n, r);
              }),
              (t.prototype.localResponseNormalization = function(t, e, n, r) {
                return (
                  void 0 === t && (t = 5),
                  void 0 === e && (e = 1),
                  void 0 === n && (n = 1),
                  void 0 === r && (r = 0.5),
                  dt.localResponseNormalization(this, t, e, n, r)
                );
              }),
              (t.prototype.pool = function(t, e, n, r, i) {
                return this.throwIfDisposed(), dt.pool(this, t, e, n, r, i);
              }),
              (t.prototype.variable = function(t, e, n) {
                return (
                  void 0 === t && (t = !0),
                  this.throwIfDisposed(),
                  gt.variable(this, t, e, n)
                );
              }),
              (t.prototype.unsortedSegmentSum = function(t, e) {
                return (
                  this.throwIfDisposed(), dt.unsortedSegmentSum(this, t, e)
                );
              }),
              (t.prototype.batchToSpaceND = function(t, e) {
                return this.throwIfDisposed(), dt.batchToSpaceND(this, t, e);
              }),
              (t.prototype.spaceToBatchND = function(t, e) {
                return this.throwIfDisposed(), dt.spaceToBatchND(this, t, e);
              }),
              (t.prototype.topk = function(t, e) {
                return (
                  void 0 === t && (t = 1),
                  void 0 === e && (e = !0),
                  this.throwIfDisposed(),
                  dt.topk(this, t, e)
                );
              }),
              (t.prototype.stridedSlice = function(t, e, n, r, i, o, a, s) {
                return (
                  void 0 === r && (r = 0),
                  void 0 === i && (i = 0),
                  void 0 === o && (o = 0),
                  void 0 === a && (a = 0),
                  void 0 === s && (s = 0),
                  this.throwIfDisposed(),
                  dt.stridedSlice(this, t, e, n, r, i, o, a, s)
                );
              }),
              (t.prototype.depthToSpace = function(t, e) {
                return this.throwIfDisposed(), dt.depthToSpace(this, t, e);
              }),
              (t.prototype.fft = function() {
                return this.throwIfDisposed(), dt.spectral.fft(this);
              }),
              (t.prototype.ifft = function() {
                return this.throwIfDisposed(), dt.spectral.ifft(this);
              }),
              (t.prototype.rfft = function() {
                return this.throwIfDisposed(), dt.spectral.rfft(this);
              }),
              (t.prototype.irfft = function() {
                return this.throwIfDisposed(), dt.spectral.irfft(this);
              }),
              t
            );
          })();
        Object.defineProperty(yt, Symbol.hasInstance, {
          value: function(t) {
            return (
              !!t && null != t.dataId && null != t.shape && null != t.dtype
            );
          }
        });
        var gt = (function(t) {
          function e(e, n, r) {
            void 0 === n && (n = !0);
            var i = t.call(this, e.shape, e.dtype, null, e.dataId) || this;
            (i.trainable = n),
              (i.name = r),
              null == i.name &&
                (i.name = pt()
                  .nextVariableId()
                  .toString());
            try {
              pt().registerVariable(i);
            } catch (t) {
              throw (pt().disposeTensor(i), t);
            }
            return i;
          }
          return (
            s(e, t),
            (e.variable = function(t, n, r, i) {
              return (
                void 0 === n && (n = !0),
                null != i && i !== t.dtype && (t = t.asType(i)),
                new e(t, n, r)
              );
            }),
            (e.prototype.assign = function(t) {
              if (t.dtype !== this.dtype)
                throw new Error(
                  "dtype of the new value (" +
                    t.dtype +
                    ") and previous value (" +
                    this.dtype +
                    ") must match"
                );
              if (!A(t.shape, this.shape))
                throw new Error(
                  "shape of the new value (" +
                    t.shape +
                    ") and previous value (" +
                    this.shape +
                    ") must match"
                );
              pt().disposeTensor(this),
                (this.dataId = t.dataId),
                pt().registerTensor(this);
            }),
            (e.prototype.dispose = function() {
              pt().disposeVariable(this), (this.isDisposedInternal = !0);
            }),
            e
          );
        })(yt);
        Object.defineProperty(gt, Symbol.hasInstance, {
          value: function(t) {
            return (
              t instanceof yt &&
              null != t.assign &&
              t.assign instanceof Function
            );
          }
        });
        var vt,
          bt,
          wt,
          _t,
          St,
          xt = gt.variable;
        !(function(t) {
          (t.R0 = "R0"),
            (t.R1 = "R1"),
            (t.R2 = "R2"),
            (t.R3 = "R3"),
            (t.R4 = "R4"),
            (t.R5 = "R5"),
            (t.R6 = "R6");
        })(vt || (vt = {})),
          (function(t) {
            (t.float32 = "float32"),
              (t.int32 = "int32"),
              (t.bool = "int32"),
              (t.complex64 = "complex64");
          })(bt || (bt = {})),
          (function(t) {
            (t.float32 = "float32"),
              (t.int32 = "int32"),
              (t.bool = "bool"),
              (t.complex64 = "complex64");
          })(wt || (wt = {})),
          (function(t) {
            (t.float32 = "float32"),
              (t.int32 = "float32"),
              (t.bool = "float32"),
              (t.complex64 = "complex64");
          })(_t || (_t = {})),
          (function(t) {
            (t.float32 = "complex64"),
              (t.int32 = "complex64"),
              (t.bool = "complex64"),
              (t.complex64 = "complex64");
          })(St || (St = {}));
        var Tt = { float32: _t, int32: bt, bool: wt, complex64: St };
        function At(t, e) {
          if ("string" === t || "string" === e) {
            if ("string" === t && "string" === e) return "string";
            throw new Error("Can not upcast " + t + " with " + e);
          }
          return Tt[t][e];
        }
        function kt(t) {
          return At(t, "int32");
        }
        function Et(t, e) {
          if (t.dtype === e.dtype) return [t, e];
          var n = At(t.dtype, e.dtype);
          return [t.cast(n), e.cast(n)];
        }
        function Nt(t, e) {
          w(t.dtype === e.dtype, function() {
            return (
              "The dtypes of the first(" +
              t.dtype +
              ") and second(" +
              e.dtype +
              ") input must match"
            );
          });
        }
        function Ot(t) {
          var e = [];
          return (
            (function t(e, n, r) {
              if (null != e)
                if (e instanceof yt) n.push(e);
                else if (((i = e), Array.isArray(i) || "object" == typeof i)) {
                  var i,
                    o = e;
                  for (var a in o) {
                    var s = o[a];
                    r.has(s) || (r.add(s), t(s, n, r));
                  }
                }
            })(t, e, new Set()),
            e
          );
        }
        var Ct,
          It = Object.freeze({
            makeTypesMatch: Et,
            assertTypesMatch: Nt,
            isTensorInList: function(t, e) {
              for (var n = 0; n < e.length; n++)
                if (e[n].id === t.id) return !0;
              return !1;
            },
            getTensorsInContainer: Ot
          }),
          Mt = (function() {
            function t() {
              (this.registeredVariables = {}),
                (this.nextTapeNodeId = 0),
                (this.numBytes = 0),
                (this.numTensors = 0),
                (this.numStringTensors = 0),
                (this.numDataBuffers = 0),
                (this.gradientDepth = 0),
                (this.kernelDepth = 0),
                (this.scopeStack = []),
                (this.nextScopeId = 0),
                (this.tensorInfo = new WeakMap()),
                (this.profiling = !1),
                (this.activeProfile = {
                  newBytes: 0,
                  newTensors: 0,
                  peakBytes: 0,
                  kernels: [],
                  result: null
                });
            }
            return (
              (t.prototype.dispose = function() {
                for (var t in this.registeredVariables)
                  this.registeredVariables[t].dispose();
              }),
              t
            );
          })(),
          Pt = (function() {
            function t(t) {
              (this.ENV = t),
                (this.registry = {}),
                (this.registryFactory = {}),
                (this.pendingBackendInitId = 0),
                (this.state = new Mt());
            }
            return (
              (t.prototype.ready = function() {
                return c(this, void 0, void 0, function() {
                  var t, e, n;
                  return l(this, function(r) {
                    switch (r.label) {
                      case 0:
                        if (null != this.pendingBackendInit)
                          return [
                            2,
                            this.pendingBackendInit.then(function() {})
                          ];
                        if (null != this.backendInstance) return [2];
                        (t = this.getSortedBackends()), (e = 0), (r.label = 1);
                      case 1:
                        return e < t.length
                          ? ((n = t[e]), [4, this.initializeBackend(n).success])
                          : [3, 4];
                      case 2:
                        if (r.sent()) return this.setBackend(n), [2];
                        r.label = 3;
                      case 3:
                        return e++, [3, 1];
                      case 4:
                        throw new Error(
                          "Could not initialize any backends, all backend initializations failed."
                        );
                    }
                  });
                });
              }),
              Object.defineProperty(t.prototype, "backend", {
                get: function() {
                  if (null != this.pendingBackendInit)
                    throw new Error(
                      "Backend '" +
                        this.backendName +
                        "' has not yet been initialized. Make sure to await tf.ready() before calling other methods"
                    );
                  if (null == this.backendInstance) {
                    var t = this.initializeBackendsAndReturnBest(),
                      e = t.name;
                    if (t.asyncInit)
                      throw new Error(
                        "The highest priority backend '" +
                          e +
                          "' has not yet been initialized. Make sure to await tf.ready() before calling other methods"
                      );
                    this.setBackend(e);
                  }
                  return this.backendInstance;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.backendNames = function() {
                return Object.keys(this.registryFactory);
              }),
              (t.prototype.findBackend = function(t) {
                if (!(t in this.registry)) {
                  if (!(t in this.registryFactory)) return null;
                  if (this.initializeBackend(t).asyncInit) return null;
                }
                return this.registry[t];
              }),
              (t.prototype.findBackendFactory = function(t) {
                return t in this.registryFactory
                  ? this.registryFactory[t].factory
                  : null;
              }),
              (t.prototype.registerBackend = function(t, e, n) {
                return (
                  void 0 === n && (n = 1),
                  t in this.registryFactory
                    ? (console.warn(
                        t +
                          " backend was already registered. Reusing existing backend factory."
                      ),
                      !1)
                    : ((this.registryFactory[t] = { factory: e, priority: n }),
                      !0)
                );
              }),
              (t.prototype.setBackend = function(t) {
                return c(this, void 0, void 0, function() {
                  var e, n, r;
                  return l(this, function(i) {
                    switch (i.label) {
                      case 0:
                        if (null == this.registryFactory[t])
                          throw new Error(
                            "Backend name '" + t + "' not found in registry"
                          );
                        return (
                          (this.backendName = t),
                          null != this.registry[t]
                            ? [3, 4]
                            : ((this.backendInstance = null),
                              (e = this.initializeBackend(t)),
                              (n = e.success),
                              e.asyncInit ? [4, n] : [3, 2])
                        );
                      case 1:
                        return (r = i.sent()), [3, 3];
                      case 2:
                        (r = n), (i.label = 3);
                      case 3:
                        if (!r) return [2, !1];
                        i.label = 4;
                      case 4:
                        return (
                          (this.backendInstance = this.registry[t]),
                          (this.profiler = new it(this.backendInstance)),
                          [2, !0]
                        );
                    }
                  });
                });
              }),
              (t.prototype.initializeBackend = function(t) {
                var e = this,
                  n = Rt.registryFactory[t];
                if (null == n)
                  throw new Error(
                    "Cannot initialize backend " +
                      t +
                      ", no registration found."
                  );
                try {
                  var r = n.factory();
                  if (Promise.resolve(r) === r) {
                    var i = ++this.pendingBackendInitId,
                      o = r
                        .then(function(n) {
                          return !(
                            i < e.pendingBackendInitId ||
                            ((e.registry[t] = n),
                            (e.pendingBackendInit = null),
                            0)
                          );
                        })
                        .catch(function(n) {
                          return !(
                            i < e.pendingBackendInitId ||
                            ((e.pendingBackendInit = null),
                            console.warn(
                              "Initialization of backend " + t + " failed"
                            ),
                            console.warn(n.stack || n.message),
                            1)
                          );
                        });
                    return (
                      (this.pendingBackendInit = o),
                      { success: o, asyncInit: !0 }
                    );
                  }
                  return (this.registry[t] = r), { success: !0, asyncInit: !1 };
                } catch (e) {
                  return (
                    console.warn("Initialization of backend " + t + " failed"),
                    console.warn(e.stack || e.message),
                    { success: !1, asyncInit: !1 }
                  );
                }
              }),
              (t.prototype.removeBackend = function(t) {
                if (!(t in this.registryFactory))
                  throw new Error(t + " backend not found in registry");
                this.backendName === t &&
                  null != this.pendingBackendInit &&
                  this.pendingBackendInitId++,
                  t in this.registry &&
                    (this.registry[t].dispose(), delete this.registry[t]),
                  delete this.registryFactory[t],
                  this.backendName === t &&
                    ((this.pendingBackendInit = null),
                    (this.backendName = null),
                    (this.backendInstance = null));
              }),
              (t.prototype.getSortedBackends = function() {
                var t = this;
                if (0 === Object.keys(this.registryFactory).length)
                  throw new Error("No backend found in registry.");
                return Object.keys(this.registryFactory).sort(function(e, n) {
                  return (
                    t.registryFactory[n].priority -
                    t.registryFactory[e].priority
                  );
                });
              }),
              (t.prototype.initializeBackendsAndReturnBest = function() {
                for (
                  var t = this.getSortedBackends(), e = 0;
                  e < t.length;
                  e++
                ) {
                  var n = t[e],
                    r = this.initializeBackend(n),
                    i = r.success,
                    o = r.asyncInit;
                  if (o || i) return { name: n, asyncInit: o };
                }
                throw new Error(
                  "Could not initialize any backends, all backend initializations failed."
                );
              }),
              (t.prototype.moveData = function(t, e) {
                this.write(t, e, this.readSync(e));
              }),
              (t.prototype.tidy = function(t, e) {
                var n,
                  r = this,
                  i = null;
                if (null == e) {
                  if ("function" != typeof t)
                    throw new Error("Please provide a function to tidy()");
                  e = t;
                } else {
                  if ("string" != typeof t && !(t instanceof String))
                    throw new Error(
                      "When calling with two arguments, the first argument to tidy() must be a string"
                    );
                  if ("function" != typeof e)
                    throw new Error(
                      "When calling with two arguments, the 2nd argument to tidy() must be a function"
                    );
                  i = t;
                }
                return this.scopedRun(
                  function() {
                    return r.startScope(i);
                  },
                  function() {
                    return r.endScope(n);
                  },
                  function() {
                    return (
                      (n = e()) instanceof Promise &&
                        console.error(
                          "Cannot return a Promise inside of tidy."
                        ),
                      n
                    );
                  }
                );
              }),
              (t.prototype.scopedRun = function(t, e, n) {
                t();
                try {
                  var r = n();
                  return e(), r;
                } catch (t) {
                  throw (e(), t);
                }
              }),
              (t.prototype.nextTensorId = function() {
                return t.nextTensorId++;
              }),
              (t.prototype.nextVariableId = function() {
                return t.nextVariableId++;
              }),
              (t.prototype.clone = function(t) {
                var e = yt.make(t.shape, { dataId: t.dataId }, t.dtype);
                return (
                  this.addTapeNode([t], e, function(t) {
                    return [t.toFloat()];
                  }),
                  e
                );
              }),
              (t.prototype.runKernel = function(t, e, n) {
                var r,
                  i = this,
                  o = [],
                  a = this.isTapeOn(),
                  s =
                    null != this.state.activeScope
                      ? this.state.activeScope.name
                      : "",
                  u = function(t) {
                    a &&
                      (o = t.map(function(t) {
                        return i.keep(i.clone(t));
                      }));
                  },
                  c = this.state.numBytes,
                  l = this.state.numTensors;
                if (
                  (this.scopedRun(
                    function() {
                      return i.state.kernelDepth++;
                    },
                    function() {
                      return i.state.kernelDepth--;
                    },
                    function() {
                      r = i.ENV.getBool("DEBUG")
                        ? i.profiler.profileKernel(s, function() {
                            return t(i.backend, u);
                          })
                        : t(i.backend, u);
                    }
                  ),
                  a)
                ) {
                  var h = {
                    id: this.state.nextTapeNodeId++,
                    name: s,
                    inputs: e,
                    outputs: Array.isArray(r) ? r : [r],
                    saved: o
                  };
                  null != n &&
                    (h.gradient = function(t) {
                      return n(t, o);
                    }),
                    this.state.activeTape.push(h);
                }
                return (
                  this.state.profiling &&
                    this.state.activeProfile.kernels.push({
                      name: s,
                      bytesAdded: this.state.numBytes - c,
                      totalBytesSnapshot: this.state.numBytes,
                      tensorsAdded: this.state.numTensors - l,
                      totalTensorsSnapshot: this.state.numTensors,
                      inputShapes: Object.keys(e).map(function(t) {
                        return e[t].shape;
                      }),
                      outputShape: Array.isArray(r)
                        ? r.map(function(t) {
                            return t.shape;
                          })
                        : r.shape
                    }),
                  r
                );
              }),
              (t.prototype.registerTensor = function(t, e) {
                var n = this.state.tensorInfo.has(t.dataId)
                  ? this.state.tensorInfo.get(t.dataId).refCount
                  : 0;
                if (
                  (this.state.numTensors++,
                  "string" === t.dtype && this.state.numStringTensors++,
                  0 === n)
                ) {
                  this.state.numDataBuffers++;
                  var r = 0;
                  "complex64" !== t.dtype &&
                    "string" !== t.dtype &&
                    (r = t.size * q(t.dtype)),
                    this.state.tensorInfo.set(t.dataId, {
                      backend: null != e ? e : this.backend,
                      dtype: t.dtype,
                      shape: t.shape,
                      bytes: r,
                      refCount: 0
                    }),
                    (this.state.numBytes += r),
                    null != e
                      ? e.register(t.dataId, t.shape, t.dtype)
                      : this.backend.register(t.dataId, t.shape, t.dtype);
                }
                this.state.tensorInfo.get(t.dataId).refCount++,
                  t instanceof gt || this.track(t);
              }),
              (t.prototype.registerVariable = function(t) {
                if (null != this.state.registeredVariables[t.name])
                  throw new Error(
                    "Variable with name " + t.name + " was already registered"
                  );
                this.state.registeredVariables[t.name] = t;
              }),
              (t.prototype.disposeTensor = function(t) {
                if (this.state.tensorInfo.has(t.dataId)) {
                  this.state.numTensors--,
                    "string" === t.dtype && this.state.numStringTensors--;
                  var e = this.state.tensorInfo.get(t.dataId);
                  e.refCount <= 1
                    ? ("complex64" !== t.dtype &&
                        (this.state.numBytes -= e.bytes),
                      this.state.numDataBuffers--,
                      e.backend.disposeData(t.dataId),
                      this.state.tensorInfo.delete(t.dataId))
                    : this.state.tensorInfo.get(t.dataId).refCount--;
                }
              }),
              (t.prototype.disposeVariables = function() {
                for (var t in this.state.registeredVariables) {
                  var e = this.state.registeredVariables[t];
                  this.disposeVariable(e);
                }
              }),
              (t.prototype.disposeVariable = function(t) {
                this.disposeTensor(t),
                  null != this.state.registeredVariables[t.name] &&
                    delete this.state.registeredVariables[t.name];
              }),
              (t.prototype.memory = function() {
                var t = this.backend.memory();
                return (
                  (t.numTensors = this.state.numTensors),
                  (t.numDataBuffers = this.state.numDataBuffers),
                  (t.numBytes = this.state.numBytes),
                  this.state.numStringTensors > 0 &&
                    ((t.unreliable = !0),
                    null == t.reasons && (t.reasons = []),
                    t.reasons.push(
                      "Memory usage by string tensors is approximate (2 bytes per character)"
                    )),
                  t
                );
              }),
              (t.prototype.profile = function(t) {
                return c(this, void 0, void 0, function() {
                  var e, n;
                  return l(this, function(r) {
                    return (
                      (this.state.profiling = !0),
                      (e = this.state.numBytes),
                      (n = this.state.numTensors),
                      (this.state.activeProfile.kernels = []),
                      (this.state.activeProfile.result = t()),
                      (this.state.profiling = !1),
                      (this.state.activeProfile.peakBytes = Math.max.apply(
                        Math,
                        this.state.activeProfile.kernels.map(function(t) {
                          return t.totalBytesSnapshot;
                        })
                      )),
                      (this.state.activeProfile.newBytes =
                        this.state.numBytes - e),
                      (this.state.activeProfile.newTensors =
                        this.state.numTensors - n),
                      [2, this.state.activeProfile]
                    );
                  });
                });
              }),
              (t.prototype.isTapeOn = function() {
                return (
                  this.state.gradientDepth > 0 && 0 === this.state.kernelDepth
                );
              }),
              (t.prototype.addTapeNode = function(t, e, n) {
                var r = {};
                t.forEach(function(t, e) {
                  r[e] = t;
                });
                var i = {
                  id: this.state.nextTapeNodeId++,
                  name: this.state.activeScope.name,
                  inputs: r,
                  outputs: [e],
                  gradient: function(t) {
                    var e = n(t),
                      r = {};
                    return (
                      e.forEach(function(t, e) {
                        r[e] = function() {
                          return t;
                        };
                      }),
                      r
                    );
                  }
                };
                this.state.activeTape.push(i);
              }),
              (t.prototype.keep = function(t) {
                return (t.kept = !0), t;
              }),
              (t.prototype.startTape = function() {
                0 === this.state.gradientDepth && (this.state.activeTape = []),
                  this.state.gradientDepth++;
              }),
              (t.prototype.endTape = function() {
                this.state.gradientDepth--;
              }),
              (t.prototype.startScope = function(t) {
                var e = {
                  track: [],
                  name: "unnamed scope",
                  id: this.state.nextScopeId++
                };
                t && (e.name = t),
                  this.state.scopeStack.push(e),
                  (this.state.activeScope = e);
              }),
              (t.prototype.endScope = function(t) {
                for (
                  var e = this,
                    n = Ot(t),
                    r = new Set(
                      n.map(function(t) {
                        return t.id;
                      })
                    ),
                    i = 0;
                  i < this.state.activeScope.track.length;
                  i++
                ) {
                  var o = this.state.activeScope.track[i];
                  o.kept || r.has(o.id) || o.dispose();
                }
                var a = this.state.scopeStack.pop();
                (this.state.activeScope =
                  0 === this.state.scopeStack.length
                    ? null
                    : this.state.scopeStack[this.state.scopeStack.length - 1]),
                  n.forEach(function(t) {
                    t.kept || t.scopeId !== a.id || e.track(t);
                  });
              }),
              (t.prototype.gradients = function(t, e, n, r) {
                var i = this;
                if (
                  (void 0 === r && (r = !1),
                  w(e.length > 0, function() {
                    return "gradients() received an empty list of xs.";
                  }),
                  null != n && "float32" !== n.dtype)
                )
                  throw new Error(
                    "dy must have 'float32' dtype, but has '" + n.dtype + "'"
                  );
                var o = this.scopedRun(
                  function() {
                    return i.startTape();
                  },
                  function() {
                    return i.endTape();
                  },
                  function() {
                    return i.tidy("forward", t);
                  }
                );
                w(o instanceof yt, function() {
                  return "The result y returned by f() must be a tensor.";
                });
                var a = (function(t, e, n) {
                  for (var r = {}, i = {}, o = 0; o < e.length; o++)
                    r[e[o].id] = !0;
                  for (o = 0; o < t.length; o++) {
                    var a = (d = t[o]).inputs;
                    for (var s in a) {
                      for (var u = a[s], c = !1, l = 0; l < e.length; l++)
                        if (r[u.id]) {
                          d.outputs.forEach(function(t) {
                            return (r[t.id] = !0);
                          }),
                            (c = !0),
                            (i[d.id] = !0);
                          break;
                        }
                      if (c) break;
                    }
                  }
                  var h = {};
                  h[n.id] = !0;
                  var f = {};
                  for (o = t.length - 1; o >= 0; o--)
                    for (
                      a = (d = t[o]).inputs, l = 0;
                      l < d.outputs.length;
                      l++
                    )
                      if (h[d.outputs[l].id]) {
                        for (var s in a) (h[a[s].id] = !0), (f[d.id] = !0);
                        break;
                      }
                  var p = [];
                  for (o = 0; o < t.length; o++) {
                    var d;
                    if (i[(d = t[o]).id] && f[d.id]) {
                      var m = {};
                      for (var s in d.inputs) {
                        var y = d.inputs[s];
                        r[y.id] && (m[s] = y);
                      }
                      var g = Object.assign({}, d);
                      (g.inputs = m), (g.outputs = d.outputs), p.push(g);
                    }
                  }
                  return p;
                })(this.state.activeTape, e, o);
                if (!r && 0 === a.length && e.length > 0)
                  throw new Error(
                    "Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y."
                  );
                return this.tidy("backward", function() {
                  var t,
                    r,
                    s = {};
                  (s[o.id] =
                    null == n
                      ? ((r = J(T((t = o.shape)), "float32")),
                        yt.make(t, { values: r }))
                      : n),
                    (function(t, e, n) {
                      for (
                        var r = function(r) {
                            var i = e[r],
                              o = [];
                            if (
                              (i.outputs.forEach(function(e) {
                                var n = t[e.id];
                                if (null != n) o.push(n);
                                else {
                                  var r = yt.make(
                                    e.shape,
                                    { values: Z(e.size, e.dtype) },
                                    e.dtype
                                  );
                                  o.push(r);
                                }
                              }),
                              null == i.gradient)
                            )
                              throw new Error(
                                "Cannot compute gradient: gradient function not found for " +
                                  i.name +
                                  "."
                              );
                            var a = i.gradient(
                                1 === i.outputs.length ? o[0] : o
                              ),
                              s = function(e) {
                                if (!(e in a))
                                  throw new Error(
                                    "Cannot backprop through input " +
                                      e +
                                      ". Available gradients found: " +
                                      Object.keys(a) +
                                      "."
                                  );
                                var r = n(function() {
                                  return a[e]();
                                });
                                if ("float32" !== r.dtype)
                                  throw new Error(
                                    "Error in gradient for op " +
                                      i.name +
                                      ". The gradient of input " +
                                      e +
                                      " must have 'float32' dtype, but has '" +
                                      r.dtype +
                                      "'"
                                  );
                                var o = i.inputs[e];
                                if (!A(r.shape, o.shape))
                                  throw new Error(
                                    "Error in gradient for op " +
                                      i.name +
                                      ". The gradient of input '" +
                                      e +
                                      "' has shape '" +
                                      r.shape +
                                      "', which does not match the shape of the input '" +
                                      o.shape +
                                      "'"
                                  );
                                if (null == t[o.id]) t[o.id] = r;
                                else {
                                  var s = t[o.id];
                                  (t[o.id] = s.add(r)), s.dispose();
                                }
                              };
                            for (var u in i.inputs) s(u);
                          },
                          i = e.length - 1;
                        i >= 0;
                        i--
                      )
                        r(i);
                    })(s, a, function(t) {
                      return i.tidy(t);
                    });
                  var u = e.map(function(t) {
                    return s[t.id];
                  });
                  return (
                    0 === i.state.gradientDepth &&
                      (i.state.activeTape.forEach(function(t) {
                        for (var e in t.saved) t.saved[e].dispose();
                      }),
                      (i.state.activeTape = null)),
                    { value: o, grads: u }
                  );
                });
              }),
              (t.prototype.customGrad = function(t) {
                var e = this;
                return (
                  w(K(t), function() {
                    return "The f passed in customGrad(f) must be a function.";
                  }),
                  function() {
                    for (var n, r = [], i = 0; i < arguments.length; i++)
                      r[i] = arguments[i];
                    w(
                      r.every(function(t) {
                        return t instanceof yt;
                      }),
                      function() {
                        return "The args passed in customGrad(f)(x1, x2,...) must all be tensors";
                      }
                    );
                    var o = {};
                    return (
                      r.forEach(function(t, e) {
                        o[e] = t;
                      }),
                      e.runKernel(
                        function(e, i) {
                          return (
                            w(
                              (n = t.apply(void 0, r.concat([i])))
                                .value instanceof yt,
                              function() {
                                return "The function f passed in customGrad(f) must return an object where `obj.value` is a tensor";
                              }
                            ),
                            w(K(n.gradFunc), function() {
                              return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.";
                            }),
                            n.value
                          );
                        },
                        o,
                        function(t, e) {
                          var i = n.gradFunc(t, e),
                            o = Array.isArray(i) ? i : [i];
                          w(o.length === r.length, function() {
                            return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).";
                          }),
                            w(
                              o.every(function(t) {
                                return t instanceof yt;
                              }),
                              function() {
                                return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.";
                              }
                            );
                          var a = {};
                          return (
                            o.forEach(function(t, e) {
                              a[e] = function() {
                                return t;
                              };
                            }),
                            a
                          );
                        }
                      )
                    );
                  }
                );
              }),
              (t.prototype.write = function(t, e, n) {
                var r = this.state.tensorInfo.get(e),
                  i = r.backend;
                if (((t = t || this.backend), "string" === r.dtype)) {
                  var o = U(n);
                  (this.state.numBytes += o - r.bytes), (r.bytes = o);
                }
                t !== i &&
                  (i.disposeData(e),
                  (r.backend = t),
                  t.register(e, r.shape, r.dtype)),
                  t.write(e, n);
              }),
              (t.prototype.readSync = function(t) {
                return this.state.tensorInfo.get(t).backend.readSync(t);
              }),
              (t.prototype.read = function(t) {
                return this.state.tensorInfo.get(t).backend.read(t);
              }),
              (t.prototype.fromPixels = function(t, e) {
                return this.backend.fromPixels(t, e);
              }),
              (t.prototype.time = function(t) {
                return c(this, void 0, void 0, function() {
                  var e, n;
                  return l(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return (e = tt()), [4, this.backend.time(t)];
                      case 1:
                        return ((n = r.sent()).wallMs = tt() - e), [2, n];
                    }
                  });
                });
              }),
              (t.prototype.track = function(t) {
                return (
                  null != this.state.activeScope &&
                    ((t.scopeId = this.state.activeScope.id),
                    this.state.activeScope.track.push(t)),
                  t
                );
              }),
              Object.defineProperty(t.prototype, "registeredVariables", {
                get: function() {
                  return this.state.registeredVariables;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.reset = function() {
                for (var t in (this.pendingBackendInitId++,
                this.state.dispose(),
                this.ENV.reset(),
                (this.state = new Mt()),
                this.registry))
                  this.registry[t].dispose(), delete this.registry[t];
                (this.backendName = null),
                  (this.backendInstance = null),
                  (this.pendingBackendInit = null);
              }),
              (t.nextTensorId = 0),
              (t.nextVariableId = 0),
              t
            );
          })(),
          Rt = (function() {
            var e = (function() {
              if (null == Ct) {
                var e = void 0;
                if ("undefined" != typeof window) e = window;
                else if (void 0 !== r) e = r;
                else {
                  if (void 0 === t)
                    throw new Error("Could not find a global object");
                  e = t;
                }
                Ct = e;
              }
              return Ct;
            })();
            if (null == e._tfengine) {
              var n = new f(e);
              e._tfengine = new Pt(n);
            }
            return (
              d(e._tfengine.ENV),
              (pt = function() {
                return e._tfengine;
              }),
              e._tfengine
            );
          })();
        function Dt() {
          return "undefined" != typeof window;
        }
        h.registerFlag(
          "DEBUG",
          function() {
            return !1;
          },
          function(t) {
            t &&
              console.warn(
                "Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance."
              );
          }
        ),
          h.registerFlag("IS_BROWSER", function() {
            return Dt();
          }),
          h.registerFlag("IS_NODE", function() {
            return (
              void 0 !== t &&
              void 0 !== t.versions &&
              void 0 !== t.versions.node
            );
          }),
          h.registerFlag("IS_CHROME", function() {
            return (
              "undefined" != typeof navigator &&
              null != navigator &&
              null != navigator.userAgent &&
              /Chrome/.test(navigator.userAgent) &&
              /Google Inc/.test(navigator.vendor)
            );
          }),
          h.registerFlag("PROD", function() {
            return !1;
          }),
          h.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY", function() {
            return !h.getBool("PROD");
          }),
          h.registerFlag("DEPRECATION_WARNINGS_ENABLED", function() {
            return !0;
          }),
          h.registerFlag("IS_TEST", function() {
            return !1;
          });
        var Ft = {},
          zt = {
            alpha: !1,
            antialias: !1,
            premultipliedAlpha: !1,
            preserveDrawingBuffer: !1,
            depth: !1,
            stencil: !1,
            failIfMajorPerformanceCaveat: !0
          };
        function Lt(t, e) {
          Ft[t] = e;
        }
        function jt(t) {
          t in Ft ||
            (Ft[t] = (function(t) {
              if (1 !== t && 2 !== t)
                throw new Error(
                  "Cannot get WebGL rendering context, WebGL is disabled."
                );
              var e = document.createElement("canvas");
              return (
                e.addEventListener(
                  "webglcontextlost",
                  function(e) {
                    e.preventDefault(), delete Ft[t];
                  },
                  !1
                ),
                1 === t
                  ? e.getContext("webgl", zt) ||
                    e.getContext("experimental-webgl", zt)
                  : e.getContext("webgl2", zt)
              );
            })(t));
          var e = Ft[t];
          return e.isContextLost()
            ? (delete Ft[t], jt(t))
            : (e.disable(e.DEPTH_TEST),
              e.disable(e.STENCIL_TEST),
              e.disable(e.BLEND),
              e.disable(e.DITHER),
              e.disable(e.POLYGON_OFFSET_FILL),
              e.disable(e.SAMPLE_COVERAGE),
              e.enable(e.SCISSOR_TEST),
              e.enable(e.CULL_FACE),
              e.cullFace(e.BACK),
              Ft[t]);
        }
        function Bt(t, e, n) {
          var r = n();
          return (
            e &&
              (function(t) {
                var e = t.getError();
                if (e !== t.NO_ERROR)
                  throw new Error("WebGL Error: " + Wt(t, e));
              })(t),
            r
          );
        }
        var qt = 5.96e-8,
          Ut = 65504;
        function Vt(t) {
          return !!(
            h.getBool("WEBGL_RENDER_FLOAT32_ENABLED") ||
            0 === t ||
            (qt < Math.abs(t) && Math.abs(t) < Ut)
          );
        }
        function Wt(t, e) {
          switch (e) {
            case t.NO_ERROR:
              return "NO_ERROR";
            case t.INVALID_ENUM:
              return "INVALID_ENUM";
            case t.INVALID_VALUE:
              return "INVALID_VALUE";
            case t.INVALID_OPERATION:
              return "INVALID_OPERATION";
            case t.INVALID_FRAMEBUFFER_OPERATION:
              return "INVALID_FRAMEBUFFER_OPERATION";
            case t.OUT_OF_MEMORY:
              return "OUT_OF_MEMORY";
            case t.CONTEXT_LOST_WEBGL:
              return "CONTEXT_LOST_WEBGL";
            default:
              return "Unknown error code " + e;
          }
        }
        function Gt(t, e, n) {
          return de(
            t,
            e,
            function() {
              return t.getExtension(n);
            },
            'Extension "' + n + '" not supported on this browser.'
          );
        }
        function Ht(t, e, n) {
          var r = de(
            t,
            e,
            function() {
              return t.createShader(t.VERTEX_SHADER);
            },
            "Unable to create vertex WebGLShader."
          );
          if (
            (Bt(t, e, function() {
              return t.shaderSource(r, n);
            }),
            Bt(t, e, function() {
              return t.compileShader(r);
            }),
            !1 === t.getShaderParameter(r, t.COMPILE_STATUS))
          )
            throw (console.log(t.getShaderInfoLog(r)),
            new Error("Failed to compile vertex shader."));
          return r;
        }
        function Kt(t, e, n) {
          var r = de(
            t,
            e,
            function() {
              return t.createShader(t.FRAGMENT_SHADER);
            },
            "Unable to create fragment WebGLShader."
          );
          if (
            (Bt(t, e, function() {
              return t.shaderSource(r, n);
            }),
            Bt(t, e, function() {
              return t.compileShader(r);
            }),
            !1 === t.getShaderParameter(r, t.COMPILE_STATUS))
          )
            throw ((function(t, e) {
              var n = $t.exec(e);
              if (null == n)
                return (
                  console.log("Couldn't parse line number in error: " + e),
                  void console.log(t)
                );
              for (
                var r = +n[1],
                  i = t.split("\n"),
                  o = i.length.toString().length + 2,
                  a = i.map(function(t, e) {
                    return O((e + 1).toString(), o) + t;
                  }),
                  s = 0,
                  u = 0;
                u < a.length;
                u++
              )
                s = Math.max(a[u].length, s);
              var c = a.slice(0, r - 1),
                l = a.slice(r - 1, r),
                h = a.slice(r);
              console.log(c.join("\n")),
                console.log(e.split("\n")[0]),
                console.log(
                  "%c " + O(l[0], s),
                  "border:1px solid red; background-color:#e3d2d2; color:#a61717"
                ),
                console.log(h.join("\n"));
            })(n, t.getShaderInfoLog(r)),
            new Error("Failed to compile fragment shader."));
          return r;
        }
        var Qt,
          Xt,
          $t = /ERROR: [0-9]+:([0-9]+):/g;
        function Yt(t, e) {
          return de(
            t,
            e,
            function() {
              return t.createProgram();
            },
            "Unable to create WebGLProgram."
          );
        }
        function Jt(t, e, n) {
          if (
            (Bt(t, e, function() {
              return t.linkProgram(n);
            }),
            !1 === t.getProgramParameter(n, t.LINK_STATUS))
          )
            throw (console.log(t.getProgramInfoLog(n)),
            new Error("Failed to link vertex and fragment shaders."));
        }
        function Zt(t, e, n) {
          if (
            (Bt(t, e, function() {
              return t.validateProgram(n);
            }),
            !1 === t.getProgramParameter(n, t.VALIDATE_STATUS))
          )
            throw (console.log(t.getProgramInfoLog(n)),
            new Error("Shader program validation failed."));
        }
        function te(t, e, n) {
          var r = de(
            t,
            e,
            function() {
              return t.createBuffer();
            },
            "Unable to create WebGLBuffer"
          );
          return (
            Bt(t, e, function() {
              return t.bindBuffer(t.ARRAY_BUFFER, r);
            }),
            Bt(t, e, function() {
              return t.bufferData(t.ARRAY_BUFFER, n, t.STATIC_DRAW);
            }),
            r
          );
        }
        function ee(t, e, n) {
          var r = de(
            t,
            e,
            function() {
              return t.createBuffer();
            },
            "Unable to create WebGLBuffer"
          );
          return (
            Bt(t, e, function() {
              return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, r);
            }),
            Bt(t, e, function() {
              return t.bufferData(t.ELEMENT_ARRAY_BUFFER, n, t.STATIC_DRAW);
            }),
            r
          );
        }
        function ne(t, e) {
          return de(
            t,
            e,
            function() {
              return t.createTexture();
            },
            "Unable to create WebGLTexture."
          );
        }
        function re(t, e) {
          var n = h.getNumber("WEBGL_MAX_TEXTURE_SIZE");
          if (t <= 0 || e <= 0) {
            var r = "[" + t + "x" + e + "]";
            throw new Error("Requested texture size " + r + " is invalid.");
          }
          if (t > n || e > n)
            throw ((r = "[" + t + "x" + e + "]"),
            new Error(
              "Requested texture size " +
                r +
                " greater than WebGL maximum on this browser / GPU [" +
                n +
                "x" +
                n +
                "]."
            ));
        }
        function ie(t, e) {
          return de(
            t,
            e,
            function() {
              return t.createFramebuffer();
            },
            "Unable to create WebGLFramebuffer."
          );
        }
        function oe(t, e, n, r, i, o, a, s) {
          var u = t.getAttribLocation(n, r);
          return (
            -1 !== u &&
            (Bt(t, e, function() {
              return t.bindBuffer(t.ARRAY_BUFFER, i);
            }),
            Bt(t, e, function() {
              return t.vertexAttribPointer(u, o, t.FLOAT, !1, a, s);
            }),
            Bt(t, e, function() {
              return t.enableVertexAttribArray(u);
            }),
            !0)
          );
        }
        function ae(t, e, n, r) {
          me(t, r),
            Bt(t, e, function() {
              return t.activeTexture(t.TEXTURE0 + r);
            }),
            Bt(t, e, function() {
              return t.bindTexture(t.TEXTURE_2D, n);
            });
        }
        function se(t, e, n, r) {
          return de(
            t,
            e,
            function() {
              return t.getUniformLocation(n, r);
            },
            'uniform "' + r + '" not present in program.'
          );
        }
        function ue(t, e, n) {
          return t.getUniformLocation(e, n);
        }
        function ce(t, e, n, r, i, o) {
          Bt(t, e, function() {
            return ae(t, e, r, o);
          }),
            Bt(t, e, function() {
              return t.uniform1i(i, o);
            });
        }
        function le(t, e, n, r) {
          Bt(t, e, function() {
            return t.bindFramebuffer(t.FRAMEBUFFER, r);
          }),
            Bt(t, e, function() {
              return t.framebufferTexture2D(
                t.FRAMEBUFFER,
                t.COLOR_ATTACHMENT0,
                t.TEXTURE_2D,
                n,
                0
              );
            });
        }
        function he(t, e, n) {
          Bt(t, e, function() {
            return t.bindFramebuffer(t.FRAMEBUFFER, n);
          }),
            Bt(t, e, function() {
              return t.framebufferTexture2D(
                t.FRAMEBUFFER,
                t.COLOR_ATTACHMENT0,
                t.TEXTURE_2D,
                null,
                0
              );
            });
        }
        function fe(t) {
          var e = t.checkFramebufferStatus(t.FRAMEBUFFER);
          if (e !== t.FRAMEBUFFER_COMPLETE)
            throw new Error("Error binding framebuffer: " + pe(t, e));
        }
        function pe(t, e) {
          switch (e) {
            case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
              return "FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
            case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
              return "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
            case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
              return "FRAMEBUFFER_INCOMPLETE_DIMENSIONS";
            case t.FRAMEBUFFER_UNSUPPORTED:
              return "FRAMEBUFFER_UNSUPPORTED";
            default:
              return "unknown error " + e;
          }
        }
        function de(t, e, n, r) {
          var i = Bt(t, e, function() {
            return n();
          });
          if (null == i) throw new Error(r);
          return i;
        }
        function me(t, e) {
          var n = t.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1,
            r = e + t.TEXTURE0;
          if (r < t.TEXTURE0 || r > n)
            throw new Error(
              "textureUnit must be in [gl.TEXTURE0, gl.TEXTURE" + n + "]."
            );
        }
        function ye(t, e) {
          return void 0 === e && (e = 2), T(t.slice(0, t.length - e));
        }
        function ge(t) {
          if (0 === t.length)
            throw Error("Cannot get rows and columns of an empty shape array.");
          return [t.length > 1 ? t[t.length - 2] : 1, t[t.length - 1]];
        }
        function ve(t, e) {
          var n;
          void 0 === e && (e = !1);
          var r = h.getNumber("WEBGL_MAX_TEXTURE_SIZE");
          if (
            (e &&
              ((r *= 2),
              1 ===
                (t = t.map(function(e, n) {
                  return n >= t.length - 2 ? v(t[n]) : t[n];
                })).length && (t = [2, t[0]])),
            2 !== t.length)
          ) {
            var i = P(t);
            t = i.newShape;
          }
          var o = T(t);
          if (t.length <= 1 && o <= r) return [1, o];
          if (2 === t.length && t[0] <= r && t[1] <= r) return t;
          if (3 === t.length && t[0] * t[1] <= r && t[2] <= r)
            return [t[0] * t[1], t[2]];
          if (3 === t.length && t[0] <= r && t[1] * t[2] <= r)
            return [t[0], t[1] * t[2]];
          if (4 === t.length && t[0] * t[1] * t[2] <= r && t[3] <= r)
            return [t[0] * t[1] * t[2], t[3]];
          if (4 === t.length && t[0] <= r && t[1] * t[2] * t[3] <= r)
            return [t[0], t[1] * t[2] * t[3]];
          if (e) {
            var a = ye(t),
              s = 2,
              u = 2;
            return (
              t.length && ((s = (n = ge(t))[0]), (u = n[1])),
              N((o = a * (s / 2) * (u / 2))).map(function(t) {
                return 2 * t;
              })
            );
          }
          return N(o);
        }
        function be(t) {
          return t % 2 == 0;
        }
        function we(t, e) {
          if (A((t = t.slice(-2)), (e = e.slice(-2)))) return !0;
          if (!t.length || !e.length) return !0;
          if (0 === t[0] || 0 === t[1] || 0 === e[0] || 0 === e[1]) return !0;
          if (t.length !== e.length) {
            var n = t.slice(-1)[0],
              r = e.slice(-1)[0];
            if (n === r) return !0;
            if (be(n) && be(r) && (1 === t[0] || 1 === e[0])) return !0;
          }
          return t[1] === e[1] && be(t[0]) && be(e[0]);
        }
        function _e(t) {
          if (null == Qt) {
            var e = jt(t);
            Qt = e.getParameter(e.MAX_TEXTURE_SIZE);
          }
          return Qt;
        }
        function Se(t) {
          if (null == Xt) {
            var e = jt(t);
            Xt = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);
          }
          return Math.min(16, Xt);
        }
        function xe(t) {
          if (0 === t) return 0;
          var e = jt(t);
          return Te(e, "EXT_disjoint_timer_query_webgl2") && 2 === t
            ? 2
            : Te(e, "EXT_disjoint_timer_query")
            ? 1
            : 0;
        }
        function Te(t, e) {
          return null != t.getExtension(e);
        }
        function Ae(t) {
          try {
            if (null != jt(t)) return !0;
          } catch (t) {
            return !1;
          }
          return !1;
        }
        function ke(t) {
          if (0 === t) return !1;
          var e = jt(t);
          if (1 === t) {
            if (!Te(e, "OES_texture_float")) return !1;
          } else if (!Te(e, "EXT_color_buffer_float")) return !1;
          return Ne(e, t);
        }
        function Ee(t) {
          if (0 === t) return !1;
          var e = jt(t);
          if (1 === t) {
            if (!Te(e, "OES_texture_float")) return !1;
            if (!Te(e, "WEBGL_color_buffer_float")) return !1;
          } else if (!Te(e, "EXT_color_buffer_float")) return !1;
          return Ne(e, t);
        }
        function Ne(t, e) {
          var n = t.createFramebuffer(),
            r = t.createTexture();
          t.bindTexture(t.TEXTURE_2D, r);
          var i = 2 === e ? t.RGBA32F : t.RGBA;
          t.texImage2D(t.TEXTURE_2D, 0, i, 1, 1, 0, t.RGBA, t.FLOAT, null),
            t.bindFramebuffer(t.FRAMEBUFFER, n),
            t.framebufferTexture2D(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0,
              t.TEXTURE_2D,
              r,
              0
            );
          var o =
            t.checkFramebufferStatus(t.FRAMEBUFFER) === t.FRAMEBUFFER_COMPLETE;
          return (
            t.bindTexture(t.TEXTURE_2D, null),
            t.bindFramebuffer(t.FRAMEBUFFER, null),
            t.deleteTexture(r),
            t.deleteFramebuffer(n),
            o
          );
        }
        function Oe(t) {
          return 2 === t && null != jt(t).fenceSync;
        }
        var Ce = Object.freeze({
          callAndCheck: Bt,
          canBeRepresented: Vt,
          getWebGLErrorMessage: Wt,
          getExtensionOrThrow: Gt,
          createVertexShader: Ht,
          createFragmentShader: Kt,
          createProgram: Yt,
          linkProgram: Jt,
          validateProgram: Zt,
          createStaticVertexBuffer: te,
          createStaticIndexBuffer: ee,
          getNumChannels: function() {
            return 2 === h.getNumber("WEBGL_VERSION") ? 1 : 4;
          },
          createTexture: ne,
          validateTextureSize: re,
          createFramebuffer: ie,
          bindVertexBufferToProgramAttribute: oe,
          bindTextureUnit: ae,
          unbindTextureUnit: function(t, e, n) {
            me(t, n),
              Bt(t, e, function() {
                return t.activeTexture(t.TEXTURE0 + n);
              }),
              Bt(t, e, function() {
                return t.bindTexture(t.TEXTURE_2D, null);
              });
          },
          getProgramUniformLocationOrThrow: se,
          getProgramUniformLocation: ue,
          bindTextureToProgramUniformSampler: ce,
          bindCanvasToFramebuffer: function(t, e) {
            Bt(t, e, function() {
              return t.bindFramebuffer(t.FRAMEBUFFER, null);
            }),
              Bt(t, e, function() {
                return t.viewport(0, 0, t.canvas.width, t.canvas.height);
              }),
              Bt(t, e, function() {
                return t.scissor(0, 0, t.canvas.width, t.canvas.height);
              });
          },
          bindColorTextureToFramebuffer: le,
          unbindColorTextureFromFramebuffer: he,
          validateFramebuffer: fe,
          getFramebufferErrorMessage: pe,
          getBatchDim: ye,
          getRowsCols: ge,
          getTextureShapeFromLogicalShape: ve,
          isReshapeFree: we,
          get MAX_TEXTURE_SIZE() {
            return Qt;
          },
          get MAX_TEXTURES_IN_SHADER() {
            return Xt;
          },
          getWebGLMaxTextureSize: _e,
          getMaxTexturesInShader: Se,
          getWebGLDisjointQueryTimerVersion: xe,
          isWebGLVersionEnabled: Ae,
          isRenderToFloatTextureEnabled: ke,
          isDownloadFloatTextureEnabled: Ee,
          isWebGLFenceEnabled: Oe
        });
        function Ie() {
          h.set("PROD", !0);
        }
        function Me() {
          h.set("DEBUG", !0);
        }
        function Pe() {
          h.set("DEPRECATION_WARNINGS_ENABLED", !1),
            console.warn(
              "TensorFlow.js deprecation warnings have been disabled."
            );
        }
        function Re(t) {
          h.getBool("DEPRECATION_WARNINGS_ENABLED") &&
            console.warn(
              t +
                " You can disable deprecation warnings with tf.disableDeprecationWarnings()."
            );
        }
        function De() {
          Rt.disposeVariables();
        }
        function Fe() {
          return Rt.memory();
        }
        function ze(t) {
          return Rt.profile(t);
        }
        function Le(t, e) {
          return Rt.tidy(t, e);
        }
        function je(t) {
          Ot(t).forEach(function(t) {
            return t.dispose();
          });
        }
        function Be(t) {
          return Rt.keep(t);
        }
        function qe(t) {
          return Rt.time(t);
        }
        function Ue(t) {
          return Rt.setBackend(t);
        }
        function Ve() {
          return Rt.ready();
        }
        function We() {
          return Rt.backendName;
        }
        function Ge(t) {
          Rt.removeBackend(t);
        }
        function He(t) {
          return Rt.findBackend(t);
        }
        function Ke(t) {
          return Rt.findBackendFactory(t);
        }
        function Qe(t, e, n) {
          return void 0 === n && (n = 1), Rt.registerBackend(t, e, n);
        }
        function Xe() {
          return Rt.backend;
        }
        function $e(t, e) {
          h.setPlatform(t, e);
        }
        function Ye() {
          for (var t = [], e = 0; e < arguments.length; e++)
            t[e] = arguments[e];
          h.getBool("IS_TEST") || console.warn.apply(console, t);
        }
        function Je(t, e, n, r) {
          void 0 === r && (r = !0);
          var i = [];
          if (r)
            (i = i.concat(e.slice(0))).push(t[0] / n),
              (i = i.concat(t.slice(1)));
          else {
            i = i.concat(t[0]);
            for (var o = e.length, a = 0; a < o; ++a)
              i = i.concat([t[a + 1] / e[a], e[a]]);
            i = i.concat(t.slice(o + 1));
          }
          return i;
        }
        function Ze(t, e, n) {
          void 0 === n && (n = !0);
          var r = [];
          if (n) {
            r.push(e);
            for (var i = e + 1; i < t; ++i)
              i <= 2 * e ? (r.push(i), r.push(i - (e + 1))) : r.push(i);
          } else {
            var o = [],
              a = [];
            for (i = 1; i < t; ++i)
              i >= 2 * e + 1 || i % 2 == 1 ? a.push(i) : o.push(i);
            r.push.apply(r, o), r.push(0), r.push.apply(r, a);
          }
          return r;
        }
        function tn(t, e, n, r) {
          void 0 === r && (r = !0);
          var i = [];
          r ? i.push(t[0] / n) : i.push(t[0] * n);
          for (var o = 1; o < t.length; ++o)
            o <= e.length
              ? r
                ? i.push(e[o - 1] * t[o])
                : i.push(t[o] / e[o - 1])
              : i.push(t[o]);
          return i;
        }
        function en(t, e) {
          for (var n = [0], r = 0; r < e; ++r) n.push(t[r][0]);
          return n;
        }
        function nn(t, e, n) {
          for (var r = t.slice(0, 1), i = 0; i < n; ++i)
            r.push(t[i + 1] - e[i][0] - e[i][1]);
          return r;
        }
        function rn(t, e) {
          for (var n = 0; n < t.length; ++n)
            if (t[t.length - n - 1] !== e - 1 - n) return !1;
          return !0;
        }
        function on(t, e, n) {
          for (
            var r = t.length + e.length, i = [], o = 0, a = 0, s = 0;
            s < r;
            s++
          )
            -1 === n.indexOf(s) ? i.push(t[o++]) : i.push(e[a++]);
          return i;
        }
        function an(t, e) {
          for (var n = [], r = t.length, i = 0; i < r; i++)
            -1 === e.indexOf(i) && n.push(t[i]);
          return [
            n,
            e.map(function(e) {
              return t[e];
            })
          ];
        }
        function sn(t, e) {
          return on(
            t,
            e.map(function(t) {
              return 1;
            }),
            e
          );
        }
        function un(t, e, n) {
          w(rn(e, n), function() {
            return (
              t +
              " supports only inner-most axes for now. Got axes " +
              e +
              " and rank-" +
              n +
              " input."
            );
          });
        }
        function cn(t, e) {
          if (rn(t, e)) return null;
          for (var n = [], r = 0; r < e; ++r) -1 === t.indexOf(r) && n.push(r);
          return (
            t.forEach(function(t) {
              return n.push(t);
            }),
            n
          );
        }
        function ln(t) {
          return t
            .map(function(t, e) {
              return [e, t];
            })
            .sort(function(t, e) {
              return t[1] - e[1];
            })
            .map(function(t) {
              return t[0];
            });
        }
        function hn(t, e) {
          for (var n = [], r = e - t; r < e; ++r) n.push(r);
          return n;
        }
        function fn(t, e) {
          var n = t[0].length;
          t.forEach(function(t, e) {
            w(t.length === n, function() {
              return (
                "Error in concat" +
                n +
                "D: rank of tensors[" +
                e +
                "] must be the same as the rank of the rest (" +
                n +
                ")"
              );
            });
          }),
            w(e >= 0 && e < n, function() {
              return (
                "Error in concat" +
                n +
                "D: axis must be between 0 and " +
                (n - 1) +
                "."
              );
            });
          var r = t[0];
          t.forEach(function(t, i) {
            for (var o = 0; o < n; o++)
              w(o === e || t[o] === r[o], function() {
                return (
                  "Error in concat" +
                  n +
                  "D: Shape of tensors[" +
                  i +
                  "] (" +
                  t +
                  ") does not match the shape of the rest (" +
                  r +
                  ") along the non-concatenated axis " +
                  i +
                  "."
                );
              });
          });
        }
        function pn(t, e) {
          for (var n = t[0].slice(), r = 1; r < t.length; r++) n[e] += t[r][e];
          return n;
        }
        function dn(t, e) {
          if (t.rank < 1)
            throw new Error(
              "tf.gatherND() expects the input to be rank 1 or higher, but the rank was " +
                t.rank +
                "."
            );
          if (e.rank < 1)
            throw new Error(
              "tf.gatherND() expects the indices to be rank 1 or higher, but the rank was " +
                e.rank +
                "."
            );
          if ("int32" !== e.dtype)
            throw new Error(
              "tf.gatherND() expects the indices to be int32 type, but the dtype was " +
                e.dtype +
                "."
            );
          if (e.shape[e.rank - 1] > t.rank)
            throw new Error(
              "index innermost dimension length must be <= tensor rank; saw: " +
                e.shape[e.rank - 1] +
                " vs. " +
                t.rank
            );
          if (0 === t.size)
            throw new Error(
              "Requested more than 0 entries, but input is empty. Input shape: " +
                t.shape +
                "."
            );
          for (
            var n = e.shape, r = n[n.length - 1], i = 1, o = 0;
            o < n.length - 1;
            ++o
          )
            i *= n[o];
          var a = t.shape,
            s = n.slice();
          s.pop();
          var u = 1;
          for (o = r; o < t.rank; ++o) (u *= a[o]), s.push(a[o]);
          var c = X(t.shape)
            .map(function(t) {
              return t / u;
            })
            .concat([1])
            .slice(0, r);
          return [s, i, u, c];
        }
        h.registerFlag("HAS_WEBGL", function() {
          return h.getNumber("WEBGL_VERSION") > 0;
        }),
          h.registerFlag("WEBGL_VERSION", function() {
            return Ae(2) ? 2 : Ae(1) ? 1 : 0;
          }),
          h.registerFlag("WEBGL_BUFFER_SUPPORTED", function() {
            return 2 === h.get("WEBGL_VERSION");
          }),
          h.registerFlag("WEBGL_CPU_FORWARD", function() {
            return !0;
          }),
          h.registerFlag("WEBGL_PACK", function() {
            return h.getBool("HAS_WEBGL");
          }),
          h.registerFlag("WEBGL_PACK_NORMALIZATION", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_PACK_CLIP", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_PACK_DEPTHWISECONV", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_PACK_BINARY_OPERATIONS", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_PACK_REDUCE", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_LAZILY_UNPACK", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_CONV_IM2COL", function() {
            return h.getBool("WEBGL_PACK");
          }),
          h.registerFlag("WEBGL_MAX_TEXTURE_SIZE", function() {
            return _e(h.getNumber("WEBGL_VERSION"));
          }),
          h.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER", function() {
            return Se(h.getNumber("WEBGL_VERSION"));
          }),
          h.registerFlag(
            "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",
            function() {
              var t = h.getNumber("WEBGL_VERSION");
              return 0 === t ? 0 : xe(t);
            }
          ),
          h.registerFlag(
            "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",
            function() {
              return (
                h.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") >
                  0 &&
                ((t = navigator.userAgent || navigator.vendor || window.opera),
                !(
                  /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
                    t
                  ) ||
                  /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
                    t.substr(0, 4)
                  )
                ))
              );
              var t;
            }
          ),
          h.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED", function() {
            return ke(h.getNumber("WEBGL_VERSION"));
          }),
          h.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED", function() {
            return Ee(h.getNumber("WEBGL_VERSION"));
          }),
          h.registerFlag("WEBGL_FENCE_API_ENABLED", function() {
            return Oe(h.getNumber("WEBGL_VERSION"));
          }),
          h.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM", function() {
            return h.getBool("WEBGL_RENDER_FLOAT32_ENABLED") ? 4 : 0;
          }),
          (mt = Re);
        var mn = 30;
        function yn(t) {
          return t <= mn ? t : Q(t, Math.floor(Math.sqrt(t)));
        }
        function gn(t, e, n) {
          for (
            var r = e.rank > 1 ? e.shape[e.rank - 1] : 1,
              i = n.length,
              o = 1,
              a = r;
            a < i;
            ++a
          )
            o *= n[a];
          var s = r < 1 ? 1 : r;
          return {
            sliceRank: r,
            numUpdates: e.size / s,
            sliceSize: o,
            strides: X(n.slice(0, r)).concat([1]),
            outputSize: T(n)
          };
        }
        function vn(t, e, n, r, i, o, a, s, u) {
          if (
            (void 0 === i && (i = 0),
            void 0 === o && (o = 0),
            void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            void 0 === u && (u = 0),
            0 !== a)
          )
            throw new Error("ellipsis mask is not yet supported");
          if (0 !== s) throw new Error("new axis mask is not yet supported");
          for (var c = [], l = [], h = [], f = 0; f < t.length; f++)
            (c[f] = bn(i, e, r, t, f)),
              (l[f] = wn(o, n, r, t, f)),
              u & (1 << f) && ((l[f] = c[f] + 1), h.push(f));
          var p = new Array(t.length).fill(0);
          return (
            (p = p.map(function(t, e) {
              for (
                var n = 0, i = r[e] || 1, o = c[e];
                !(i > 0 ? o >= l[e] : o <= l[e]);
                o += i
              )
                n += 1;
              return n;
            })),
            [c, p, h]
          );
        }
        function bn(t, e, n, r, i) {
          var o = e[i],
            a = n[i] || 1;
          (t & (1 << i) || null == o) &&
            (o = a > 0 ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER);
          var s = r[i];
          return o < 0 && (o += s), g(0, o, s - 1);
        }
        function wn(t, e, n, r, i) {
          var o = e[i],
            a = n[i] || 1;
          (t & (1 << i) || null == o) &&
            (o = a > 0 ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER);
          var s = r[i];
          return o < 0 && (o += s), a > 0 ? g(0, o, s) : g(-1, o, s - 1);
        }
        function _n(t, e, n) {
          for (var r = n.length, i = 0; i < n.length; i++)
            if (n[i] > 1) {
              r = i;
              break;
            }
          for (i = r + 1; i < n.length; i++)
            if (e[i] > 0 || n[i] !== t[i]) return !1;
          return !0;
        }
        function Sn(t, e) {
          for (
            var n = t.length > 0 ? t[t.length - 1] : 1, r = 0;
            r < t.length - 1;
            r++
          )
            n += t[r] * e[r];
          return n;
        }
        function xn(t) {
          var e = t;
          if (B(t)) return [t.length];
          if (!Array.isArray(t)) return [];
          for (var n = []; Array.isArray(e) || B(e); )
            n.push(e.length), (e = e[0]);
          return (
            Array.isArray(t) &&
              h.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY") &&
              (function t(e, n, r) {
                if (((r = r || []), Array.isArray(e) || B(e))) {
                  w(n.length > 0, function() {
                    return (
                      "Element arr[" +
                      r.join("][") +
                      "] should be a primitive, but is an array of " +
                      e.length +
                      " elements"
                    );
                  }),
                    w(e.length === n[0], function() {
                      return (
                        "Element arr[" +
                        r.join("][") +
                        "] should have " +
                        n[0] +
                        " elements, but has " +
                        e.length +
                        " elements"
                      );
                    });
                  for (var i = n.slice(1), o = 0; o < e.length; ++o)
                    t(e[o], i, r.concat(o));
                } else
                  w(0 === n.length, function() {
                    return (
                      "Element arr[" +
                      r.join("][") +
                      "] is a primitive, but should be an array/TypedArray of " +
                      n[0] +
                      " elements"
                    );
                  });
              })(t, n, []),
            n
          );
        }
        function Tn(t, e, n, r) {
          if (
            null != t &&
            (("numeric" !== t && t !== e) ||
              ("numeric" === t && "string" === e))
          )
            throw new Error(
              "Argument '" +
                n +
                "' passed to '" +
                r +
                "' must be " +
                t +
                " tensor, but got " +
                e +
                " tensor"
            );
        }
        function An(t, e, n, r) {
          if ((void 0 === r && (r = "numeric"), t instanceof yt))
            return Tn(r, t.dtype, e, n), t;
          var i = H(t);
          if (
            ("string" !== i &&
              ["bool", "int32", "float32"].indexOf(r) >= 0 &&
              (i = r),
            Tn(r, i, e, n),
            null == t ||
              (!B(t) &&
                !Array.isArray(t) &&
                "number" != typeof t &&
                "boolean" != typeof t &&
                "string" != typeof t))
          ) {
            var o = null == t ? "null" : t.constructor.name;
            throw new Error(
              "Argument '" +
                e +
                "' passed to '" +
                n +
                "' must be a Tensor or TensorLike, but got '" +
                o +
                "'"
            );
          }
          var a = xn(t);
          B(t) || Array.isArray(t) || (t = [t]);
          var s = "string" !== i ? $(t, i, h.getBool("DEBUG")) : x(t);
          return yt.make(a, { values: s }, i);
        }
        function kn(t, e, n, r) {
          if ((void 0 === r && (r = "numeric"), !Array.isArray(t)))
            throw new Error(
              "Argument " +
                e +
                " passed to " +
                n +
                " must be a `Tensor[]` or `TensorLike[]`"
            );
          return t.map(function(t, r) {
            return An(t, e + "[" + r + "]", n);
          }, r);
        }
        function En(t) {
          return (
            w(K(t), function() {
              return "The f passed in grad(f) must be a function";
            }),
            function(e, n) {
              var r = An(e, "x", "tf.grad", null),
                i = null != n ? An(n, "dy", "tf.grad") : null;
              return Rt.tidy(function() {
                var e = Rt.gradients(
                    function() {
                      return t(r);
                    },
                    [r],
                    i
                  ),
                  n = e.value,
                  o = e.grads;
                return (
                  null != i &&
                    _(
                      n.shape,
                      i.shape,
                      "The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"
                    ),
                  Pn(o),
                  o[0]
                );
              });
            }
          );
        }
        function Nn(t) {
          return (
            w(K(t), function() {
              return "The f passed in grads(f) must be a function";
            }),
            function(e, n) {
              w(Array.isArray(e), function() {
                return "The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s";
              });
              var r = kn(e, "args", "tf.grads", null),
                i = null != n ? An(n, "dy", "tf.grads") : null;
              return Rt.tidy(function() {
                var e = Rt.gradients(
                    function() {
                      return t.apply(void 0, r);
                    },
                    r,
                    i
                  ),
                  n = e.value,
                  o = e.grads;
                return (
                  null != i &&
                    _(
                      n.shape,
                      i.shape,
                      "The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"
                    ),
                  Pn(o),
                  o
                );
              });
            }
          );
        }
        function On(t) {
          return (
            w(K(t), function() {
              return "The f passed in valueAndGrad(f) must be a function";
            }),
            function(e, n) {
              w(e instanceof yt, function() {
                return "The x passed in valueAndGrad(f)(x) must be a tensor";
              }),
                w(null == n || n instanceof yt, function() {
                  return "The dy passed in valueAndGrad(f)(x, dy) must be a tensor";
                });
              var r = Rt.gradients(
                  function() {
                    return t(e);
                  },
                  [e],
                  n
                ),
                i = r.grads,
                o = r.value;
              return Pn(i), { grad: i[0], value: o };
            }
          );
        }
        function Cn(t) {
          return (
            w(K(t), function() {
              return "The f passed in valueAndGrads(f) must be a function";
            }),
            function(e, n) {
              w(
                Array.isArray(e) &&
                  e.every(function(t) {
                    return t instanceof yt;
                  }),
                function() {
                  return "The args passed in valueAndGrads(f)(args) must be array of tensors";
                }
              ),
                w(null == n || n instanceof yt, function() {
                  return "The dy passed in valueAndGrads(f)(args, dy) must be a tensor";
                });
              var r = Rt.gradients(
                function() {
                  return t.apply(void 0, e);
                },
                e,
                n
              );
              return (
                null != n &&
                  _(
                    r.value.shape,
                    n.shape,
                    "The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"
                  ),
                Pn(r.grads),
                r
              );
            }
          );
        }
        function In(t, e) {
          w(K(t), function() {
            return "The f passed in variableGrads(f) must be a function";
          }),
            w(
              null == e ||
                (Array.isArray(e) &&
                  e.every(function(t) {
                    return t instanceof gt;
                  })),
              function() {
                return "The varList passed in variableGrads(f, varList) must be an array of variables";
              }
            );
          var n = null != e;
          if (!n)
            for (var r in ((e = []), Rt.registeredVariables))
              e.push(Rt.registeredVariables[r]);
          var i = n
              ? e.filter(function(t) {
                  return !t.trainable;
                })
              : null,
            o = e.length;
          w(
            (e = e.filter(function(t) {
              return t.trainable;
            })).length > 0,
            function() {
              return (
                "variableGrads() expects at least one of the input variables to be trainable, but none of the " +
                o +
                " variables is trainable."
              );
            }
          );
          var a = Rt.gradients(t, e, null, !0),
            s = a.value,
            u = a.grads;
          w(
            u.some(function(t) {
              return null != t;
            }),
            function() {
              return "Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().";
            }
          ),
            w(0 === s.rank, function() {
              return (
                "The f passed in variableGrads(f) must return a scalar, but it returned a rank-" +
                s.rank +
                " tensor"
              );
            });
          var c = {};
          return (
            e.forEach(function(t, e) {
              null != u[e] && (c[t.name] = u[e]);
            }),
            null != i &&
              i.forEach(function(t) {
                return (c[t.name] = null);
              }),
            { value: s, grads: c }
          );
        }
        function Mn(t) {
          return Rt.customGrad(t);
        }
        function Pn(t) {
          if (
            t.filter(function(t) {
              return null == t;
            }).length > 0
          )
            throw new Error(
              "Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y."
            );
        }
        function Rn(t) {
          var e = Object.keys(t);
          if (1 !== e.length)
            throw new Error(
              "Please provide an object with a single key (operation name) mapping to a function. Got an object with " +
                e.length +
                " keys."
            );
          var n = e[0],
            r = t[n];
          n.endsWith("_") && (n = n.substring(0, n.length - 1));
          var i = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
              t[e] = arguments[e];
            Rt.startScope(n);
            try {
              var i = r.apply(void 0, t);
              return (
                i instanceof Promise &&
                  console.error("Cannot return a Promise inside of tidy."),
                Rt.endScope(i),
                i
              );
            } catch (t) {
              throw (Rt.endScope(null), t);
            }
          };
          return (
            Object.defineProperty(i, "name", { value: n, configurable: !0 }), i
          );
        }
        var Dn = Rn({
            softmax_: function(t, e) {
              void 0 === e && (e = -1);
              var n = An(t, "logits", "softmax");
              if ((-1 === e && (e = n.rank - 1), e !== n.rank - 1))
                throw Error(
                  "Softmax along a non-last dimension is not yet supported. Logits was rank " +
                    n.rank +
                    " and dim was " +
                    e
                );
              return Mn(function(t, n) {
                var r = t.logSumExp([e], !0),
                  i = t
                    .toFloat()
                    .sub(r)
                    .exp();
                return (
                  n([i]),
                  {
                    value: i,
                    gradFunc: function(t, n) {
                      var r = n[0],
                        i = t.mul(r);
                      return i.sub(i.sum([e], !0).mul(r));
                    }
                  }
                );
              })(n);
            }
          }),
          Fn = Rn({
            logSoftmax_: function(t, e) {
              void 0 === e && (e = -1);
              var n = An(t, "logits", "logSoftmax");
              if ((-1 === e && (e = n.rank - 1), e !== n.rank - 1))
                throw Error(
                  "Log Softmax along a non-last dimension is not yet supported. Logits was rank " +
                    n.rank +
                    " and axis was " +
                    e
                );
              return Mn(function(t, n) {
                var r = t.max(e, !0),
                  i = t.sub(r),
                  o = i.toFloat().sub(
                    i
                      .exp()
                      .sum(e, !0)
                      .log()
                  );
                return (
                  n([o]),
                  {
                    value: o,
                    gradFunc: function(t, n) {
                      var r = n[0].exp();
                      return t.sub(t.sum(e, !0).mul(r));
                    }
                  }
                );
              })(n);
            }
          }),
          zn = Rn({
            complex_: function(t, e) {
              var n = An(t, "real", "complex"),
                r = An(e, "imag", "complex");
              return (
                _(
                  n.shape,
                  r.shape,
                  "real and imag shapes, " +
                    n.shape +
                    " and " +
                    r.shape +
                    ", must match in call to tf.complex()."
                ),
                Rt.runKernel(
                  function(t) {
                    return t.complex(n, r);
                  },
                  { $real: n, $imag: r }
                )
              );
            }
          }),
          Ln = Rn({
            real_: function(t) {
              var e = An(t, "input", "real");
              return Rt.runKernel(
                function(t) {
                  return t.real(e);
                },
                { $input: e }
              );
            }
          }),
          jn = Rn({
            imag_: function(t) {
              var e = An(t, "input", "imag");
              return Rt.runKernel(
                function(t) {
                  return t.imag(e);
                },
                { $input: e }
              );
            }
          });
        function Bn(t, e, n) {
          if ((null == n && (n = H(t)), "complex64" === n))
            throw new Error(
              "Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag)."
            );
          if (
            !B(t) &&
            !Array.isArray(t) &&
            "number" != typeof t &&
            "boolean" != typeof t &&
            "string" != typeof t
          )
            throw new Error(
              "values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray"
            );
          var r = xn(t);
          if (null != e) {
            et(e);
            var i = T(e),
              o = T(r);
            w(i === o, function() {
              return (
                "Based on the provided shape, [" +
                e +
                "], the tensor should have " +
                i +
                " values but has " +
                o
              );
            });
            for (var a = 0; a < r.length; ++a) {
              var s = r[a],
                u = a !== r.length - 1 || s !== T(e.slice(a));
              w(r[a] === e[a] || !u, function() {
                return (
                  "Error creating a new Tensor. Inferred shape (" +
                  r +
                  ") does not match the provided shape (" +
                  e +
                  "). "
                );
              });
            }
          }
          return (
            B(t) || Array.isArray(t) || (t = [t]),
            (e = e || r),
            (t = "string" !== n ? $(t, n, h.getBool("DEBUG")) : x(t)),
            yt.make(e, { values: t }, n)
          );
        }
        function qn(t, e) {
          if ((B(t) || Array.isArray(t)) && "complex64" !== e)
            throw new Error(
              "Error creating a new Scalar: value must be a primitive (number|boolean|string)"
            );
          return Bn(t, [], e);
        }
        function Un(t, e) {
          S(t);
          var n = xn(t);
          if (1 !== n.length)
            throw new Error(
              "tensor1d() requires values to be a flat/TypedArray"
            );
          return Bn(t, n, e);
        }
        function Vn(t, e, n) {
          if ((S(t), null != e && 2 !== e.length))
            throw new Error("tensor2d() requires shape to have two numbers");
          var r = xn(t);
          if (2 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor2d() requires values to be number[][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor2d() requires shape to be provided when `values` are a flat/TypedArray"
            );
          return Bn(t, (e = e || r), n);
        }
        function Wn(t, e, n) {
          if ((S(t), null != e && 3 !== e.length))
            throw new Error("tensor3d() requires shape to have three numbers");
          var r = xn(t);
          if (3 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor3d() requires values to be number[][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor3d() requires shape to be provided when `values` are a flat array"
            );
          return Bn(t, (e = e || r), n);
        }
        function Gn(t, e, n) {
          if ((S(t), null != e && 4 !== e.length))
            throw new Error("tensor4d() requires shape to have four numbers");
          var r = xn(t);
          if (4 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor4d() requires values to be number[][][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor4d() requires shape to be provided when `values` are a flat array"
            );
          return Bn(t, (e = e || r), n);
        }
        function Hn(t, e, n) {
          if ((S(t), null != e && 5 !== e.length))
            throw new Error("tensor5d() requires shape to have five numbers");
          var r = xn(t);
          if (5 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor5d() requires values to be number[][][][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor5d() requires shape to be provided when `values` are a flat array"
            );
          return Bn(t, (e = e || r), n);
        }
        function Kn(t, e, n) {
          if ((S(t), null != e && 6 !== e.length))
            throw new Error("tensor6d() requires shape to have six numbers");
          var r = xn(t);
          if (6 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor6d() requires values to be number[][][][][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor6d() requires shape to be provided when `values` are a flat array"
            );
          return Bn(t, (e = e || r), n);
        }
        function Qn(t, e) {
          if ((void 0 === e && (e = "float32"), "complex64" === e)) {
            var n = Qn(t, "float32"),
              r = Xn(t, "float32");
            return zn(n, r);
          }
          var i = J(T(t), e);
          return yt.make(t, { values: i }, e);
        }
        function Xn(t, e) {
          if ((void 0 === e && (e = "float32"), "complex64" === e)) {
            var n = Xn(t, "float32"),
              r = Xn(t, "float32");
            return zn(n, r);
          }
          var i = Z(T(t), e);
          return yt.make(t, { values: i }, e);
        }
        function $n(t, e, n) {
          return Rt.runKernel(function(r) {
            return r.fill(t, e, n);
          }, {});
        }
        function Yn(t, e, n) {
          if (n <= 0)
            throw new Error("The number of values should be positive.");
          return Rt.runKernel(function(r) {
            return r.linspace(t, e, n);
          }, {});
        }
        function Jn(t, e, n, r) {
          if (
            (void 0 === n && (n = 1), void 0 === r && (r = "float32"), 0 === n)
          )
            throw new Error("Cannot have a step of zero");
          if (t === e || (t < e && n < 0) || (e < t && n > 1))
            return Xn([0], r);
          var i = Z(Math.abs(Math.ceil((e - t) / n)), r);
          e < t && 1 === n && (n = -1), (i[0] = t);
          for (var o = 1; o < i.length; o++) i[o] = i[o - 1] + n;
          return Un(i, r);
        }
        var Zn = Rn({
            onesLike_: function(t) {
              var e = An(t, "x", "onesLike");
              if ("complex64" === e.dtype) {
                var n = Zn(Ln(e)),
                  r = tr(jn(e));
                return zn(n, r);
              }
              return Rt.runKernel(
                function(t) {
                  return t.onesLike(e);
                },
                { $x: e },
                function(t, e) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          tr = Rn({
            zerosLike_: function(t) {
              var e = An(t, "x", "zerosLike");
              return Rt.runKernel(
                function(t) {
                  return t.zerosLike(e);
                },
                { $x: e },
                function(t, e) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          er = (function() {
            function t(t, e) {
              (this.backend = t),
                (this.dataMover = e),
                (this.data = new WeakMap());
            }
            return (
              (t.prototype.get = function(t) {
                return (
                  this.data.has(t) || this.dataMover.moveData(this.backend, t),
                  this.data.get(t)
                );
              }),
              (t.prototype.set = function(t, e) {
                this.data.set(t, e);
              }),
              (t.prototype.has = function(t) {
                return this.data.has(t);
              }),
              (t.prototype.delete = function(t) {
                return this.data.delete(t);
              }),
              t
            );
          })(),
          nr = (function() {
            function t() {}
            return (
              (t.prototype.time = function(t) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.read = function(t) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.readSync = function(t) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.disposeData = function(t) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.write = function(t, e) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.fromPixels = function(t, e) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.register = function(t, e, n) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.memory = function() {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.floatPrecision = function() {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.epsilon = function() {
                return 32 === this.floatPrecision() ? 1e-7 : 1e-4;
              }),
              (t.prototype.batchMatMul = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.fusedBatchMatMul = function(t, e, n, r, i, o) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.slice = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.stridedSlice = function(t, e, n, r, i, o, a, s, u) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.unstack = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.reverse = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.concat = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.neg = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.add = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.addN = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.subtract = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.multiply = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.realDivide = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.floorDiv = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sum = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.prod = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.unsortedSegmentSum = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.argMin = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.argMax = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.equal = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.notEqual = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.less = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.lessEqual = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.greater = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.greaterEqual = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.logicalNot = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.logicalAnd = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.logicalOr = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.where = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.select = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.topk = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.min = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.minimum = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.mod = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.max = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.maximum = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.all = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.any = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.squaredDifference = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.ceil = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.floor = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.round = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sign = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.isNaN = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.isInf = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.isFinite = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.pow = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.exp = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.expm1 = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.log = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.log1p = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sqrt = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.rsqrt = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.square = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.reciprocal = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.relu = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.prelu = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.elu = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.eluDer = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.selu = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.int = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.clip = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.abs = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.complexAbs = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sigmoid = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.softplus = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sin = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.cos = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.tan = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.asin = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.acos = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.atan = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.atan2 = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sinh = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.cosh = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.tanh = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.asinh = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.acosh = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.atanh = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.erf = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.step = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.conv2d = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.conv2dDerInput = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.conv2dDerFilter = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.depthwiseConv2D = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.depthwiseConv2DDerInput = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.depthwiseConv2DDerFilter = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.conv3d = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.conv3dDerInput = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.conv3dDerFilter = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.maxPool = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.maxPoolBackprop = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.avgPool = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.avgPoolBackprop = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.reshape = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.cast = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.tile = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.pad = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.transpose = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.gather = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.gatherND = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.scatterND = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.batchToSpaceND = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.spaceToBatchND = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.resizeBilinear = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.resizeBilinearBackprop = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.resizeNearestNeighbor = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.resizeNearestNeighborBackprop = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.batchNormalization = function(t, e, n, r, i, o) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.localResponseNormalization4D = function(
                t,
                e,
                n,
                r,
                i
              ) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.LRNGrad = function(t, e, n, r, i, o, a) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.multinomial = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.oneHot = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.cumsum = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.nonMaxSuppression = function(t, e, n, r, i) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.fft = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.ifft = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.complex = function(t, e) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.real = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.imag = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.cropAndResize = function(t, e, n, r, i, o) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.depthToSpace = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.split = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.sparseToDense = function(t, e, n, r) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.fill = function(t, e, n) {
                throw new Error("Not yet implemented.");
              }),
              (t.prototype.onesLike = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.zerosLike = function(t) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.linspace = function(t, e, n) {
                throw new Error("Not yet implemented");
              }),
              (t.prototype.dispose = function() {
                throw new Error("Not yet implemented");
              }),
              t
            );
          })();
        function rr(t, e) {
          for (var n = t.length, r = [], i = 0; i < n; i++) {
            var o = n - 1 - i,
              a = t[o] || 1;
            (e[e.length - 1 - i] || 1) > 1 && 1 === a && r.unshift(o);
          }
          return r;
        }
        function ir(t, e) {
          for (var n = [], r = 0; r < e.length; r++) {
            var i = t[t.length - r - 1],
              o = e.length - r - 1,
              a = e[o];
            (null == i || (1 === i && a > 1)) && n.unshift(o);
          }
          return n;
        }
        function or(t, e) {
          for (
            var n = [], r = Math.max(t.length, e.length), i = 0;
            i < r;
            i++
          ) {
            var o = t[t.length - i - 1];
            null == o && (o = 1);
            var a = e[e.length - i - 1];
            if ((null == a && (a = 1), 1 === o)) n.unshift(a);
            else if (1 === a) n.unshift(o);
            else {
              if (o !== a)
                throw Error(
                  "Operands could not be broadcast together with shapes " +
                    t +
                    " and " +
                    e +
                    "."
                );
              n.unshift(o);
            }
          }
          return n;
        }
        function ar(t, e, n, r, i, o, a) {
          void 0 === a && (a = "channelsLast");
          var s,
            u = lr(e),
            c = u[0],
            l = u[1];
          if ("channelsLast" === a) s = [c, l, t[3], t[3]];
          else {
            if ("channelsFirst" !== a)
              throw new Error("Unknown dataFormat " + a);
            s = [c, l, t[1], t[1]];
          }
          return sr(t, s, n, r, i, o, !1, a);
        }
        function sr(t, e, n, r, i, o, a, s) {
          void 0 === a && (a = !1), void 0 === s && (s = "channelsLast");
          var u = [-1, -1, -1, -1],
            c = u[0],
            l = u[1],
            h = u[2],
            f = u[3];
          if ("channelsLast" === s)
            (c = t[0]), (l = t[1]), (h = t[2]), (f = t[3]);
          else {
            if ("channelsFirst" !== s)
              throw new Error("Unknown dataFormat " + s);
            (c = t[0]), (f = t[1]), (l = t[2]), (h = t[3]);
          }
          var p,
            d = e[0],
            m = e[1],
            y = e[3],
            g = lr(n),
            v = g[0],
            b = g[1],
            _ = lr(r),
            S = _[0],
            x = _[1],
            T = fr(d, S),
            A = fr(m, x),
            E = (function(t, e, n, r, i, o, a, s) {
              var u, c, l;
              if ("number" == typeof t) {
                u = {
                  top: t,
                  bottom: t,
                  left: t,
                  right: t,
                  type: 0 === t ? "VALID" : "NUMBER"
                };
                var h = (function(t, e, n, r, i, o) {
                  null == i && (i = cr(t, e, r));
                  var a = t[1],
                    s = pr((t[0] - e + 2 * i) / r + 1, o);
                  w(k(s), function() {
                    return (
                      "The output # of rows (" +
                      s +
                      ") must be an integer. Change the stride and/or zero pad parameters"
                    );
                  });
                  var u = pr((a - e + 2 * i) / r + 1, o);
                  return (
                    w(k(u), function() {
                      return (
                        "The output # of columns (" +
                        u +
                        ") must be an integer. Change the stride and/or zero pad parameters"
                      );
                    }),
                    [s, u, 1]
                  );
                })([e, n, 1], o, 0, r, t, s);
                (c = h[0]), (l = h[1]);
              } else if ("same" === t) {
                (c = Math.ceil(e / r)), (l = Math.ceil(n / i));
                var f = Math.max(0, (c - 1) * r + o - e),
                  p = Math.max(0, (l - 1) * i + a - n),
                  d = Math.floor(f / 2),
                  m = f - d,
                  y = Math.floor(p / 2);
                u = { top: d, bottom: m, left: y, right: p - y, type: "SAME" };
              } else {
                if ("valid" !== t)
                  throw Error("Unknown padding parameter: " + t);
                (u = { top: 0, bottom: 0, left: 0, right: 0, type: "VALID" }),
                  (c = Math.ceil((e - o + 1) / r)),
                  (l = Math.ceil((n - a + 1) / i));
              }
              return { padInfo: u, outHeight: c, outWidth: l };
            })(i, l, h, v, b, T, A, o),
            N = E.padInfo,
            O = E.outHeight,
            C = E.outWidth,
            I = a ? y * f : y;
          return (
            "channelsFirst" === s
              ? (p = [c, I, O, C])
              : "channelsLast" === s && (p = [c, O, C, I]),
            {
              batchSize: c,
              dataFormat: s,
              inHeight: l,
              inWidth: h,
              inChannels: f,
              outHeight: O,
              outWidth: C,
              outChannels: I,
              padInfo: N,
              strideHeight: v,
              strideWidth: b,
              filterHeight: d,
              filterWidth: m,
              effectiveFilterHeight: T,
              effectiveFilterWidth: A,
              dilationHeight: S,
              dilationWidth: x,
              inShape: t,
              outShape: p,
              filterShape: e
            }
          );
        }
        function ur(t, e, n, r, i, o, a) {
          void 0 === o && (o = !1), void 0 === a && (a = "channelsLast");
          var s = [-1, -1, -1, -1, -1],
            u = s[0],
            c = s[1],
            l = s[2],
            h = s[3],
            f = s[4];
          if ("channelsLast" === a)
            (u = t[0]), (c = t[1]), (l = t[2]), (h = t[3]), (f = t[4]);
          else {
            if ("channelsFirst" !== a)
              throw new Error("Unknown dataFormat " + a);
            (u = t[0]), (f = t[1]), (c = t[2]), (l = t[3]), (h = t[4]);
          }
          var p,
            d = e[0],
            m = e[1],
            y = e[2],
            g = e[4],
            v = hr(n),
            b = v[0],
            w = v[1],
            _ = v[2],
            S = hr(r),
            x = S[0],
            T = S[1],
            A = S[2],
            k = (function(t, e, n, r, i, o, a, s, u, c) {
              var l, h, f, p;
              if ("same" === t) {
                var d = ((h = Math.ceil(e / i)) - 1) * i + s - e,
                  m = ((f = Math.ceil(n / o)) - 1) * o + u - n,
                  y = ((p = Math.ceil(r / a)) - 1) * a + c - r,
                  g = Math.floor(d / 2),
                  v = d - g,
                  b = Math.floor(m / 2),
                  w = m - b,
                  _ = Math.floor(y / 2);
                l = {
                  top: b,
                  bottom: w,
                  left: _,
                  right: y - _,
                  front: g,
                  back: v,
                  type: "SAME"
                };
              } else {
                if ("valid" !== t)
                  throw Error("Unknown padding parameter: " + t);
                (l = {
                  top: 0,
                  bottom: 0,
                  left: 0,
                  right: 0,
                  front: 0,
                  back: 0,
                  type: "VALID"
                }),
                  (h = Math.ceil((e - s + 1) / i)),
                  (f = Math.ceil((n - u + 1) / o)),
                  (p = Math.ceil((r - c + 1) / a));
              }
              return { padInfo: l, outDepth: h, outHeight: f, outWidth: p };
            })(i, c, l, h, b, w, _, fr(d, x), fr(m, T), fr(y, A)),
            E = k.padInfo,
            N = k.outDepth,
            O = k.outHeight,
            C = k.outWidth,
            I = o ? g * f : g;
          return (
            "channelsFirst" === a
              ? (p = [u, I, N, O, C])
              : "channelsLast" === a && (p = [u, N, O, C, I]),
            {
              batchSize: u,
              dataFormat: a,
              inDepth: c,
              inHeight: l,
              inWidth: h,
              inChannels: f,
              outDepth: N,
              outHeight: O,
              outWidth: C,
              outChannels: I,
              padInfo: E,
              strideDepth: b,
              strideHeight: w,
              strideWidth: _,
              filterDepth: d,
              filterHeight: m,
              filterWidth: y,
              dilationDepth: x,
              dilationHeight: T,
              dilationWidth: A,
              inShape: t,
              outShape: p,
              filterShape: e
            }
          );
        }
        function cr(t, e, n, r) {
          void 0 === r && (r = 1);
          var i = fr(e, r);
          return Math.floor((t[0] * (n - 1) - n + i) / 2);
        }
        function lr(t) {
          return "number" == typeof t ? [t, t] : t;
        }
        function hr(t) {
          return "number" == typeof t ? [t, t, t] : t;
        }
        function fr(t, e) {
          return e <= 1 ? t : t + (t - 1) * (e - 1);
        }
        function pr(t, e) {
          if (!e) return t;
          switch (e) {
            case "round":
              return Math.round(t);
            case "ceil":
              return Math.ceil(t);
            case "floor":
              return Math.floor(t);
            default:
              throw new Error("Unknown roundingMode " + e);
          }
        }
        function dr(t) {
          var e = lr(t),
            n = e[0],
            r = e[1];
          return 1 === n && 1 === r;
        }
        function mr(t, e) {
          return dr(t) || dr(e);
        }
        function yr(t, e, n) {
          if ("complex64" === e) {
            if ("complex64" === t.dtype) return t.clone();
            var r = Xn(t.shape),
              i = t.toFloat(),
              o = n.complex(i, r);
            return r.dispose(), i.dispose(), o;
          }
          if (!j(t.dtype, e)) return yt.make(t.shape, { dataId: t.dataId }, e);
          if ("complex64" === t.dtype) {
            var a = n.real(t);
            return (o = a.cast(e)), a.dispose(), o;
          }
          if ("int32" === e) return n.int(t);
          if ("bool" === e) {
            var s = qn(0, t.dtype);
            return (o = n.notEqual(t, s)), s.dispose(), o;
          }
          throw new Error(
            "Error in Cast: failed to cast " + t.dtype + " to " + e
          );
        }
        function gr(t, e) {
          return yt.make(e, { dataId: t.dataId }, t.dtype);
        }
        function vr(t, e, n) {
          var r = (e - t) / (n - 1),
            i = Z(n, "float32");
          i[0] = t;
          for (var o = 1; o < i.length; o++) i[o] = i[o - 1] + r;
          return Un(i, "float32");
        }
        var br = Object.freeze({
          castTensor: yr,
          reshapeTensor: gr,
          linspaceImpl: vr,
          upcastType: At,
          axesAreInnerMostDims: rn,
          combineLocations: on,
          computeOutAndReduceShapes: an,
          expandShapeToKeepDim: sn,
          assertAxesAreInnerMostDims: un,
          getAxesPermutation: cn,
          getUndoAxesPermutation: ln,
          getInnerMostAxes: hn,
          getBroadcastDims: rr,
          getReductionAxes: ir,
          assertAndGetBroadcastShape: or,
          assertParamsConsistent: fn,
          computeOutShape: pn,
          computePool2DInfo: ar,
          computeConv2DInfo: sr,
          computeConv3DInfo: ur,
          computeDefaultPad: cr,
          tupleValuesAreOne: dr,
          eitherStridesOrDilationsAreOne: mr
        });
        function wr(t, e) {
          if (t.length !== e.length)
            throw new Error(
              "Cannot merge real and imag arrays of different lengths. real:" +
                t.length +
                ", imag: " +
                e.length +
                "."
            );
          for (
            var n = new Float32Array(2 * t.length), r = 0;
            r < n.length;
            r += 2
          )
            (n[r] = t[r / 2]), (n[r + 1] = e[r / 2]);
          return n;
        }
        function _r(t, e) {
          return { real: t[2 * e], imag: t[2 * e + 1] };
        }
        function Sr(t, e, n, r) {
          (t[2 * r] = e), (t[2 * r + 1] = n);
        }
        function xr(t, e, n) {
          var r = (n ? 2 : -2) * Math.PI * (t / e);
          return { real: Math.cos(r), imag: Math.sin(r) };
        }
        function Tr(t, e, n, r, i) {
          for (
            var o = Array.from(e)
                .map(function(t, e) {
                  return { score: t, boxIndex: e };
                })
                .filter(function(t) {
                  return t.score > i;
                })
                .sort(function(t, e) {
                  return e.score - t.score;
                }),
              a = [],
              s = 0;
            s < o.length;
            s++
          ) {
            var u = o[s],
              c = u.score,
              l = u.boxIndex;
            if (c < i) break;
            for (var h = !1, f = a.length - 1; f >= 0; --f)
              if (Ar(t, l, a[f]) >= r) {
                h = !0;
                break;
              }
            if (!h && (a.push(l), a.length >= n)) break;
          }
          return Un(a, "int32");
        }
        function Ar(t, e, n) {
          var r = t.subarray(4 * e, 4 * e + 4),
            i = t.subarray(4 * n, 4 * n + 4),
            o = Math.min(r[0], r[2]),
            a = Math.min(r[1], r[3]),
            s = Math.max(r[0], r[2]),
            u = Math.max(r[1], r[3]),
            c = Math.min(i[0], i[2]),
            l = Math.min(i[1], i[3]),
            h = Math.max(i[0], i[2]),
            f = Math.max(i[1], i[3]),
            p = (s - o) * (u - a),
            d = (h - c) * (f - l);
          if (p <= 0 || d <= 0) return 0;
          var m = Math.max(o, c),
            y = Math.max(a, l),
            g = Math.min(s, h),
            v = Math.min(u, f),
            b = Math.max(g - m, 0) * Math.max(v - y, 0);
          return b / (p + d - b);
        }
        function kr(t, e, n) {
          var r = new Array(t.rank).fill(0),
            i = t.shape.slice();
          return e.map(function(e) {
            i[n] = e;
            var o = t.slice(r, i);
            return (r[n] += e), o;
          });
        }
        function Er(t, e, n, r, i) {
          for (
            var o = e[e.length - 1],
              a = [t.length / o, o],
              s = a[0],
              u = a[1],
              c = R(n, s * r),
              l = R("int32", s * r),
              h = 0;
            h < s;
            h++
          ) {
            for (
              var f = h * u, p = t.subarray(f, f + u), d = [], m = 0;
              m < p.length;
              m++
            )
              d.push({ value: p[m], index: m });
            d.sort(function(t, e) {
              return e.value - t.value;
            });
            var y = h * r,
              g = c.subarray(y, y + r),
              v = l.subarray(y, y + r);
            for (m = 0; m < r; m++) (g[m] = d[m].value), (v[m] = d[m].index);
          }
          var b = e.slice();
          return (b[b.length - 1] = r), [Bn(c, b, n), Bn(l, b, "int32")];
        }
        var Nr = Rn({
            concat_: function(t, e) {
              void 0 === e && (e = 0),
                w(t.length >= 1, function() {
                  return "Pass at least one tensor to concat";
                });
              var n = kn(t, "tensors", "concat");
              e = M(e, n[0].shape)[0];
              var r = pn(
                n.map(function(t) {
                  return t.shape;
                }),
                e
              );
              if (0 === T(r)) return Bn([], r);
              if (
                1 ===
                (n = n.filter(function(t) {
                  return t.size > 0;
                })).length
              )
                return n[0];
              var i = n.map(function(t) {
                return t.shape;
              });
              fn(i, e);
              var o = n;
              return Rt.runKernel(
                function(t) {
                  return t.concat(n, e);
                },
                o,
                function(t) {
                  var n = i.map(function(t) {
                    return t[e];
                  });
                  return Pr(t, n, e).map(function(t) {
                    return function() {
                      return t;
                    };
                  });
                }
              );
            }
          }),
          Or = Rn({
            concat1d_: function(t) {
              return Nr(t, 0);
            }
          }),
          Cr = Rn({
            concat2d_: function(t, e) {
              return Nr(t, e);
            }
          }),
          Ir = Rn({
            concat3d_: function(t, e) {
              return Nr(t, e);
            }
          }),
          Mr = Rn({
            concat4d_: function(t, e) {
              return Nr(t, e);
            }
          }),
          Pr = Rn({
            split_: function(t, e, n) {
              void 0 === n && (n = 0);
              var r,
                i = An(t, "x", "split");
              return (
                (n = M(n, i.shape)[0]),
                "number" == typeof e
                  ? (w(i.shape[n] % e == 0, function() {
                      return "Number of splits must evenly divide the axis.";
                    }),
                    (r = new Array(e).fill(i.shape[n] / e)))
                  : (w(
                      i.shape[n] ===
                        e.reduce(function(t, e) {
                          return t + e;
                        }),
                      function() {
                        return "The sum of sizes must match the size of the axis dimension.";
                      }
                    ),
                    (r = e)),
                Rt.runKernel(
                  function(t) {
                    return t.split(i, r, n);
                  },
                  { $x: i },
                  function(t) {
                    return {
                      $x: function() {
                        return Nr(t, n);
                      }
                    };
                  }
                )
              );
            }
          });
        function Rr(t, e) {
          return t((e = { exports: {} }), e.exports), e.exports;
        }
        "undefined" != typeof globalThis
          ? globalThis
          : "undefined" != typeof window
          ? window
          : void 0 !== r || ("undefined" != typeof self && self);
        var Dr = Rr(function(t) {
            !(function(t, e, n) {
              function r(t) {
                var e,
                  n = this,
                  r =
                    ((e = 4022871197),
                    function(t) {
                      t = t.toString();
                      for (var n = 0; n < t.length; n++) {
                        var r = 0.02519603282416938 * (e += t.charCodeAt(n));
                        (r -= e = r >>> 0),
                          (e = (r *= e) >>> 0),
                          (e += 4294967296 * (r -= e));
                      }
                      return 2.3283064365386963e-10 * (e >>> 0);
                    });
                (n.next = function() {
                  var t = 2091639 * n.s0 + 2.3283064365386963e-10 * n.c;
                  return (
                    (n.s0 = n.s1), (n.s1 = n.s2), (n.s2 = t - (n.c = 0 | t))
                  );
                }),
                  (n.c = 1),
                  (n.s0 = r(" ")),
                  (n.s1 = r(" ")),
                  (n.s2 = r(" ")),
                  (n.s0 -= r(t)),
                  n.s0 < 0 && (n.s0 += 1),
                  (n.s1 -= r(t)),
                  n.s1 < 0 && (n.s1 += 1),
                  (n.s2 -= r(t)),
                  n.s2 < 0 && (n.s2 += 1),
                  (r = null);
              }
              function i(t, e) {
                return (
                  (e.c = t.c), (e.s0 = t.s0), (e.s1 = t.s1), (e.s2 = t.s2), e
                );
              }
              function o(t, e) {
                var n = new r(t),
                  o = e && e.state,
                  a = n.next;
                return (
                  (a.int32 = function() {
                    return (4294967296 * n.next()) | 0;
                  }),
                  (a.double = function() {
                    return a() + 1.1102230246251565e-16 * ((2097152 * a()) | 0);
                  }),
                  (a.quick = a),
                  o &&
                    ("object" == typeof o && i(o, n),
                    (a.state = function() {
                      return i(n, {});
                    })),
                  a
                );
              }
              e && e.exports ? (e.exports = o) : (this.alea = o);
            })(0, t);
          }),
          Fr = Rr(function(t) {
            !(function(t, e, n) {
              function r(t) {
                var e = this,
                  n = "";
                (e.x = 0),
                  (e.y = 0),
                  (e.z = 0),
                  (e.w = 0),
                  (e.next = function() {
                    var t = e.x ^ (e.x << 11);
                    return (
                      (e.x = e.y),
                      (e.y = e.z),
                      (e.z = e.w),
                      (e.w ^= (e.w >>> 19) ^ t ^ (t >>> 8))
                    );
                  }),
                  t === (0 | t) ? (e.x = t) : (n += t);
                for (var r = 0; r < n.length + 64; r++)
                  (e.x ^= 0 | n.charCodeAt(r)), e.next();
              }
              function i(t, e) {
                return (e.x = t.x), (e.y = t.y), (e.z = t.z), (e.w = t.w), e;
              }
              function o(t, e) {
                var n = new r(t),
                  o = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  o &&
                    ("object" == typeof o && i(o, n),
                    (a.state = function() {
                      return i(n, {});
                    })),
                  a
                );
              }
              e && e.exports ? (e.exports = o) : (this.xor128 = o);
            })(0, t);
          }),
          zr = Rr(function(t) {
            !(function(t, e, n) {
              function r(t) {
                var e = this,
                  n = "";
                (e.next = function() {
                  var t = e.x ^ (e.x >>> 2);
                  return (
                    (e.x = e.y),
                    (e.y = e.z),
                    (e.z = e.w),
                    (e.w = e.v),
                    ((e.d = (e.d + 362437) | 0) +
                      (e.v = e.v ^ (e.v << 4) ^ t ^ (t << 1))) |
                      0
                  );
                }),
                  (e.x = 0),
                  (e.y = 0),
                  (e.z = 0),
                  (e.w = 0),
                  (e.v = 0),
                  t === (0 | t) ? (e.x = t) : (n += t);
                for (var r = 0; r < n.length + 64; r++)
                  (e.x ^= 0 | n.charCodeAt(r)),
                    r == n.length && (e.d = (e.x << 10) ^ (e.x >>> 4)),
                    e.next();
              }
              function i(t, e) {
                return (
                  (e.x = t.x),
                  (e.y = t.y),
                  (e.z = t.z),
                  (e.w = t.w),
                  (e.v = t.v),
                  (e.d = t.d),
                  e
                );
              }
              function o(t, e) {
                var n = new r(t),
                  o = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  o &&
                    ("object" == typeof o && i(o, n),
                    (a.state = function() {
                      return i(n, {});
                    })),
                  a
                );
              }
              e && e.exports ? (e.exports = o) : (this.xorwow = o);
            })(0, t);
          }),
          Lr = Rr(function(t) {
            !(function(t, e, n) {
              function r(t) {
                var e = this;
                (e.next = function() {
                  var t,
                    n,
                    r = e.x,
                    i = e.i;
                  return (
                    (t = r[i]),
                    (n = (t ^= t >>> 7) ^ (t << 24)),
                    (n ^= (t = r[(i + 1) & 7]) ^ (t >>> 10)),
                    (n ^= (t = r[(i + 3) & 7]) ^ (t >>> 3)),
                    (n ^= (t = r[(i + 4) & 7]) ^ (t << 7)),
                    (t = r[(i + 7) & 7]),
                    (n ^= (t ^= t << 13) ^ (t << 9)),
                    (r[i] = n),
                    (e.i = (i + 1) & 7),
                    n
                  );
                }),
                  (function(t, e) {
                    var n,
                      r = [];
                    if (e === (0 | e)) r[0] = e;
                    else
                      for (e = "" + e, n = 0; n < e.length; ++n)
                        r[7 & n] =
                          (r[7 & n] << 15) ^
                          ((e.charCodeAt(n) + r[(n + 1) & 7]) << 13);
                    for (; r.length < 8; ) r.push(0);
                    for (n = 0; n < 8 && 0 === r[n]; ++n);
                    for (
                      8 == n ? (r[7] = -1) : r[n], t.x = r, t.i = 0, n = 256;
                      n > 0;
                      --n
                    )
                      t.next();
                  })(e, t);
              }
              function i(t, e) {
                return (e.x = t.x.slice()), (e.i = t.i), e;
              }
              function o(t, e) {
                null == t && (t = +new Date());
                var n = new r(t),
                  o = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  o &&
                    (o.x && i(o, n),
                    (a.state = function() {
                      return i(n, {});
                    })),
                  a
                );
              }
              e && e.exports ? (e.exports = o) : (this.xorshift7 = o);
            })(0, t);
          }),
          jr = Rr(function(t) {
            !(function(t, e, n) {
              function r(t) {
                var e = this;
                (e.next = function() {
                  var t,
                    n,
                    r = e.w,
                    i = e.X,
                    o = e.i;
                  return (
                    (e.w = r = (r + 1640531527) | 0),
                    (n = i[(o + 34) & 127]),
                    (t = i[(o = (o + 1) & 127)]),
                    (n ^= n << 13),
                    (t ^= t << 17),
                    (n ^= n >>> 15),
                    (t ^= t >>> 12),
                    (n = i[o] = n ^ t),
                    (e.i = o),
                    (n + (r ^ (r >>> 16))) | 0
                  );
                }),
                  (function(t, e) {
                    var n,
                      r,
                      i,
                      o,
                      a,
                      s = [],
                      u = 128;
                    for (
                      e === (0 | e)
                        ? ((r = e), (e = null))
                        : ((e += "\0"), (r = 0), (u = Math.max(u, e.length))),
                        i = 0,
                        o = -32;
                      o < u;
                      ++o
                    )
                      e && (r ^= e.charCodeAt((o + 32) % e.length)),
                        0 === o && (a = r),
                        (r ^= r << 10),
                        (r ^= r >>> 15),
                        (r ^= r << 4),
                        (r ^= r >>> 13),
                        o >= 0 &&
                          ((a = (a + 1640531527) | 0),
                          (i = 0 == (n = s[127 & o] ^= r + a) ? i + 1 : 0));
                    for (
                      i >= 128 && (s[127 & ((e && e.length) || 0)] = -1),
                        i = 127,
                        o = 512;
                      o > 0;
                      --o
                    )
                      (r = s[(i + 34) & 127]),
                        (n = s[(i = (i + 1) & 127)]),
                        (r ^= r << 13),
                        (n ^= n << 17),
                        (r ^= r >>> 15),
                        (n ^= n >>> 12),
                        (s[i] = r ^ n);
                    (t.w = a), (t.X = s), (t.i = i);
                  })(e, t);
              }
              function i(t, e) {
                return (e.i = t.i), (e.w = t.w), (e.X = t.X.slice()), e;
              }
              function o(t, e) {
                null == t && (t = +new Date());
                var n = new r(t),
                  o = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  o &&
                    (o.X && i(o, n),
                    (a.state = function() {
                      return i(n, {});
                    })),
                  a
                );
              }
              e && e.exports ? (e.exports = o) : (this.xor4096 = o);
            })(0, t);
          }),
          Br = Rr(function(t) {
            !(function(t, e, n) {
              function r(t) {
                var e = this,
                  n = "";
                (e.next = function() {
                  var t = e.b,
                    n = e.c,
                    r = e.d,
                    i = e.a;
                  return (
                    (t = (t << 25) ^ (t >>> 7) ^ n),
                    (n = (n - r) | 0),
                    (r = (r << 24) ^ (r >>> 8) ^ i),
                    (i = (i - t) | 0),
                    (e.b = t = (t << 20) ^ (t >>> 12) ^ n),
                    (e.c = n = (n - r) | 0),
                    (e.d = (r << 16) ^ (n >>> 16) ^ i),
                    (e.a = (i - t) | 0)
                  );
                }),
                  (e.a = 0),
                  (e.b = 0),
                  (e.c = -1640531527),
                  (e.d = 1367130551),
                  t === Math.floor(t)
                    ? ((e.a = (t / 4294967296) | 0), (e.b = 0 | t))
                    : (n += t);
                for (var r = 0; r < n.length + 20; r++)
                  (e.b ^= 0 | n.charCodeAt(r)), e.next();
              }
              function i(t, e) {
                return (e.a = t.a), (e.b = t.b), (e.c = t.c), (e.d = t.d), e;
              }
              function o(t, e) {
                var n = new r(t),
                  o = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  o &&
                    ("object" == typeof o && i(o, n),
                    (a.state = function() {
                      return i(n, {});
                    })),
                  a
                );
              }
              e && e.exports ? (e.exports = o) : (this.tychei = o);
            })(0, t);
          }),
          qr = Rr(function(t) {
            !(function(e, r) {
              var i,
                o = this,
                a = 256,
                s = 6,
                u = "random",
                c = r.pow(a, s),
                l = r.pow(2, 52),
                h = 2 * l,
                f = a - 1;
              function p(t, n, f) {
                var p = [],
                  v = y(
                    (function t(e, n) {
                      var r,
                        i = [],
                        o = typeof e;
                      if (n && "object" == o)
                        for (r in e)
                          try {
                            i.push(t(e[r], n - 1));
                          } catch (t) {}
                      return i.length ? i : "string" == o ? e : e + "\0";
                    })(
                      (n = 1 == n ? { entropy: !0 } : n || {}).entropy
                        ? [t, g(e)]
                        : null == t
                        ? (function() {
                            try {
                              var t;
                              return (
                                i && (t = i.randomBytes)
                                  ? (t = t(a))
                                  : ((t = new Uint8Array(a)),
                                    (o.crypto || o.msCrypto).getRandomValues(
                                      t
                                    )),
                                g(t)
                              );
                            } catch (t) {
                              var n = o.navigator,
                                r = n && n.plugins;
                              return [+new Date(), o, r, o.screen, g(e)];
                            }
                          })()
                        : t,
                      3
                    ),
                    p
                  ),
                  b = new d(p),
                  w = function() {
                    for (var t = b.g(s), e = c, n = 0; t < l; )
                      (t = (t + n) * a), (e *= a), (n = b.g(1));
                    for (; t >= h; ) (t /= 2), (e /= 2), (n >>>= 1);
                    return (t + n) / e;
                  };
                return (
                  (w.int32 = function() {
                    return 0 | b.g(4);
                  }),
                  (w.quick = function() {
                    return b.g(4) / 4294967296;
                  }),
                  (w.double = w),
                  y(g(b.S), e),
                  (n.pass ||
                    f ||
                    function(t, e, n, i) {
                      return (
                        i &&
                          (i.S && m(i, b),
                          (t.state = function() {
                            return m(b, {});
                          })),
                        n ? ((r[u] = t), e) : t
                      );
                    })(w, v, "global" in n ? n.global : this == r, n.state)
                );
              }
              function d(t) {
                var e,
                  n = t.length,
                  r = this,
                  i = 0,
                  o = (r.i = r.j = 0),
                  s = (r.S = []);
                for (n || (t = [n++]); i < a; ) s[i] = i++;
                for (i = 0; i < a; i++)
                  (s[i] = s[(o = f & (o + t[i % n] + (e = s[i])))]), (s[o] = e);
                (r.g = function(t) {
                  for (var e, n = 0, i = r.i, o = r.j, s = r.S; t--; )
                    (e = s[(i = f & (i + 1))]),
                      (n =
                        n * a +
                        s[f & ((s[i] = s[(o = f & (o + e))]) + (s[o] = e))]);
                  return (r.i = i), (r.j = o), n;
                })(a);
              }
              function m(t, e) {
                return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
              }
              function y(t, e) {
                for (var n, r = t + "", i = 0; i < r.length; )
                  e[f & i] = f & ((n ^= 19 * e[f & i]) + r.charCodeAt(i++));
                return g(e);
              }
              function g(t) {
                return String.fromCharCode.apply(0, t);
              }
              if (((r["seed" + u] = p), y(r.random(), e), t.exports)) {
                t.exports = p;
                try {
                  i = n(58);
                } catch (t) {}
              }
            })([], Math);
          });
        (qr.alea = Dr),
          (qr.xor128 = Fr),
          (qr.xorwow = zr),
          (qr.xorshift7 = Lr),
          (qr.xor4096 = jr),
          (qr.tychei = Br);
        var Ur = qr.alea,
          Vr = (function() {
            function t(t, e, n, r, i) {
              (this.mean = t),
                (this.stdDev = e),
                (this.dtype = n),
                (this.nextVal = NaN),
                (this.truncated = r),
                this.truncated &&
                  ((this.upper = this.mean + 2 * this.stdDev),
                  (this.lower = this.mean - 2 * this.stdDev));
              var o = i || Math.random();
              this.random = Ur(o.toString());
            }
            return (
              (t.prototype.nextValue = function() {
                if (!isNaN(this.nextVal)) {
                  var t = this.nextVal;
                  return (this.nextVal = NaN), t;
                }
                for (var e, n, r = !1; !r; ) {
                  var i = void 0,
                    o = void 0,
                    a = void 0;
                  do {
                    a =
                      (i = 2 * this.random() - 1) * i +
                      (o = 2 * this.random() - 1) * o;
                  } while (a >= 1 || 0 === a);
                  var s = Math.sqrt((-2 * Math.log(a)) / a);
                  (e = this.mean + this.stdDev * i * s),
                    (n = this.mean + this.stdDev * o * s),
                    (this.truncated && !this.isValidTruncated(e)) || (r = !0);
                }
                return (
                  (this.truncated && !this.isValidTruncated(n)) ||
                    (this.nextVal = this.convertValue(n)),
                  this.convertValue(e)
                );
              }),
              (t.prototype.convertValue = function(t) {
                return null == this.dtype || "float32" === this.dtype
                  ? t
                  : Math.round(t);
              }),
              (t.prototype.isValidTruncated = function(t) {
                return t <= this.upper && t >= this.lower;
              }),
              t
            );
          })(),
          Wr = (function() {
            function t(t, e, n, r) {
              void 0 === t && (t = 0),
                void 0 === e && (e = 1),
                void 0 === r && (r = Math.random());
              var i = this;
              if (
                ((this.canReturnFloat = function() {
                  return null == i.dtype || "float32" === i.dtype;
                }),
                (this.min = t),
                (this.range = e - t),
                (this.dtype = n),
                !this.canReturnFloat() && this.range <= 1)
              )
                throw new Error(
                  "The difference between " +
                    t +
                    " - " +
                    e +
                    " <= 1 and dtype is not float"
                );
              this.random = Ur(r.toString());
            }
            return (
              (t.prototype.convertValue = function(t) {
                return this.canReturnFloat() ? t : Math.round(t);
              }),
              (t.prototype.nextValue = function() {
                return this.convertValue(this.min + this.range * this.random());
              }),
              t
            );
          })();
        function Gr(t, e, n) {
          return (
            void 0 === e && (e = "float32"),
            (e = e || "float32"),
            et(t),
            new ft(t, e, n)
          );
        }
        function Hr(t, e) {
          void 0 === e && (e = !1), console.log(t.toString(e));
        }
        var Kr = Rn({
            batchToSpaceND_: function(t, e, n) {
              var r = An(t, "x", "batchToSpaceND"),
                i = e.reduce(function(t, e) {
                  return t * e;
                });
              return (
                w(r.rank >= 1 + e.length, function() {
                  return (
                    "input rank is " +
                    r.rank +
                    " but should be > than blockShape.length " +
                    e.length
                  );
                }),
                w(n.length === e.length, function() {
                  return (
                    "crops.length is " +
                    n.length +
                    " but should be equal to blockShape.length  " +
                    e.length
                  );
                }),
                w(r.shape[0] % i == 0, function() {
                  return (
                    "input tensor batch is " +
                    r.shape[0] +
                    " but is not divisible by the product of the elements of blockShape " +
                    e.join(" * ") +
                    " === " +
                    i
                  );
                }),
                Rt.runKernel(
                  function(t) {
                    return t.batchToSpaceND(r, e, n);
                  },
                  { $x: r },
                  function(t) {
                    return {
                      $x: function() {
                        return t.spaceToBatchND(e, n);
                      }
                    };
                  }
                )
              );
            }
          }),
          Qr = Rn({
            cast_: function(t, e) {
              var n = An(t, "x", "cast");
              if (!L(e))
                throw new Error("Failed to cast to unknown dtype " + e);
              if (
                ("string" === e && "string" !== n.dtype) ||
                ("string" !== e && "string" === n.dtype)
              )
                throw new Error("Only strings can be casted to strings");
              return Rt.runKernel(
                function(t) {
                  return t.cast(n, e);
                },
                { $x: n },
                function(t) {
                  return {
                    $x: function() {
                      return t.clone();
                    }
                  };
                }
              );
            }
          }),
          Xr = Rn({
            clone_: function(t) {
              var e = An(t, "x", "clone", null);
              return Rt.runKernel(
                function(t) {
                  return yt.make(e.shape, { dataId: e.dataId }, e.dtype);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return t.toFloat();
                    }
                  };
                }
              );
            }
          }),
          $r = Rn({
            cumsum_: function(t, e, n, r) {
              void 0 === e && (e = 0),
                void 0 === n && (n = !1),
                void 0 === r && (r = !1);
              var i = An(t, "x", "cumsum"),
                o = cn([(e |= 0)], i.rank),
                a = i;
              null != o && (a = i.transpose(o));
              var s = hn(1, i.rank)[0],
                u = Rt.runKernel(
                  function(t) {
                    return t.cumsum(a, s, n, r);
                  },
                  { permutedX: a },
                  function(t) {
                    return {
                      permutedX: function() {
                        return t.cumsum(e, n, !r);
                      }
                    };
                  }
                );
              return null != o && (u = u.transpose(o)), u;
            }
          }),
          Yr = Rn({
            depthToSpace_: function(t, e, n) {
              void 0 === n && (n = "NHWC");
              var r = An(t, "x", "depthToSpace"),
                i = "NHWC" === n ? r.shape[1] : r.shape[2],
                o = "NHWC" === n ? r.shape[2] : r.shape[3],
                a = "NHWC" === n ? r.shape[3] : r.shape[1];
              return (
                w(i * e >= 0, function() {
                  return (
                    "Negative dimension size caused by overflow when multiplying\n      " +
                    i +
                    " and " +
                    e +
                    "  for depthToSpace with input shape\n      " +
                    r.shape
                  );
                }),
                w(o * e >= 0, function() {
                  return (
                    "Negative dimension size caused by overflow when multiplying\n      " +
                    o +
                    " and " +
                    e +
                    " for depthToSpace with input shape\n          " +
                    r.shape
                  );
                }),
                w(a % (e * e) == 0, function() {
                  return (
                    "Dimension size must be evenly divisible by " +
                    e * e +
                    " but is " +
                    a +
                    " for depthToSpace with input shape " +
                    r.shape
                  );
                }),
                Rt.runKernel(
                  function(t) {
                    return t.depthToSpace(r, e, n);
                  },
                  { $x: r }
                )
              );
            }
          }),
          Jr = Rn({
            expandDims_: function(t, e) {
              void 0 === e && (e = 0);
              var n = An(t, "x", "expandDims");
              w(e <= n.rank, function() {
                return "Axis must be <= rank of the tensor";
              });
              var r = n.shape.slice();
              return (
                e < 0 &&
                  (w(-(n.rank + 1) <= e, function() {
                    return (
                      "Axis must be in the interval [" +
                      -(n.rank + 1) +
                      ", " +
                      n.rank +
                      "]"
                    );
                  }),
                  (e = n.rank + e + 1)),
                r.splice(e, 0, 1),
                li(n, r)
              );
            }
          }),
          Zr = Rn({
            eye_: function(t, e, n, r) {
              void 0 === r && (r = "float32"), null == e && (e = t);
              for (var i = Gr([t, e], r), o = t <= e ? t : e, a = 0; a < o; ++a)
                i.set(1, a, a);
              var s = i.toTensor().as2D(t, e);
              if (null == n) return s;
              if (1 === n.length) return di(Jr(s, 0), [n[0], 1, 1]);
              if (2 === n.length)
                return di(Jr(Jr(s, 0), 0), [n[0], n[1], 1, 1]);
              if (3 === n.length)
                return di(Jr(Jr(Jr(s, 0), 0), 0), [n[0], n[1], n[2], 1, 1]);
              throw new Error(
                "eye() currently supports only 1D and 2D batchShapes, but received " +
                  n.length +
                  "D."
              );
            }
          }),
          ti = Rn({
            multinomial_: function(t, e, n, r) {
              void 0 === r && (r = !1);
              var i = An(t, "logits", "multinomial"),
                o = i.size,
                a = i.rank;
              if (o < 2)
                throw new Error(
                  "Error in multinomial: you need at least 2 outcomes, but got " +
                    o +
                    "."
                );
              if (a > 2)
                throw new Error(
                  "Rank of probabilities must be 1 or 2, but is " + a
                );
              n = n || Math.random();
              var s = 1 === a ? i.as2D(1, -1) : i,
                u = Rt.runKernel(
                  function(t) {
                    return t.multinomial(s, r, e, n);
                  },
                  { logits2D: s }
                );
              return 1 === a ? u.as1D() : u;
            }
          }),
          ei = Rn({
            oneHot_: function(t, e, n, r) {
              if ((void 0 === n && (n = 1), void 0 === r && (r = 0), e < 2))
                throw new Error(
                  "Error in oneHot: depth must be >=2, but it is " + e
                );
              var i = An(t, "indices", "oneHot", "int32"),
                o = i.shape.concat([e]);
              return (
                (i = i.flatten()),
                Rt.runKernel(
                  function(t) {
                    return t.oneHot(i, e, n, r);
                  },
                  { $indices: i },
                  function(t) {
                    return {
                      $indices: function() {
                        return Xn(i.shape, "float32");
                      }
                    };
                  }
                ).reshape(o)
              );
            }
          }),
          ni = Rn({
            pad_: function(t, e, n) {
              void 0 === n && (n = 0);
              var r = An(t, "x", "pad");
              if (0 === r.rank)
                throw new Error(
                  "pad(scalar) is not defined. Pass non-scalar to pad"
                );
              var i = e.map(function(t) {
                return t[0];
              });
              return Rt.runKernel(
                function(t) {
                  return t.pad(r, e, n);
                },
                { $x: r },
                function(t) {
                  return {
                    $x: function() {
                      return t.slice(i, r.shape);
                    }
                  };
                }
              );
            }
          }),
          ri = Rn({
            pad1d_: function(t, e, n) {
              return (
                void 0 === n && (n = 0),
                w(2 === e.length, function() {
                  return "Invalid number of paddings. Must be length of 2.";
                }),
                ni(t, [e], n)
              );
            }
          }),
          ii = Rn({
            pad2d_: function(t, e, n) {
              return (
                void 0 === n && (n = 0),
                w(
                  2 === e.length && 2 === e[0].length && 2 === e[1].length,
                  function() {
                    return "Invalid number of paddings. Must be length of 2 each.";
                  }
                ),
                ni(t, e, n)
              );
            }
          }),
          oi = Rn({
            pad3d_: function(t, e, n) {
              return (
                void 0 === n && (n = 0),
                w(
                  3 === e.length &&
                    2 === e[0].length &&
                    2 === e[1].length &&
                    2 === e[2].length,
                  function() {
                    return "Invalid number of paddings. Must be length of 2 each.";
                  }
                ),
                ni(t, e, n)
              );
            }
          }),
          ai = Rn({
            pad4d_: function(t, e, n) {
              return (
                void 0 === n && (n = 0),
                w(
                  4 === e.length &&
                    2 === e[0].length &&
                    2 === e[1].length &&
                    2 === e[2].length &&
                    2 === e[3].length,
                  function() {
                    return "Invalid number of paddings. Must be length of 2 each.";
                  }
                ),
                ni(t, e, n)
              );
            }
          }),
          si = Rn({
            rand_: function(t, e, n) {
              var r = T(t),
                i = null;
              if (null == n || "float32" === n) i = new Float32Array(r);
              else if ("int32" === n) i = new Int32Array(r);
              else {
                if ("bool" !== n) throw new Error("Unknown data type " + n);
                i = new Uint8Array(r);
              }
              for (var o = 0; o < r; o++) i[o] = e();
              return yt.make(t, { values: i }, n);
            }
          }),
          ui = Rn({
            randomNormal_: function(t, e, n, r, i) {
              if (
                (void 0 === e && (e = 0),
                void 0 === n && (n = 1),
                null != r && "bool" === r)
              )
                throw new Error("Unsupported data type " + r);
              for (
                var o = new Vr(e, n, r, !1, i), a = Gr(t, r), s = 0;
                s < a.values.length;
                s++
              )
                a.values[s] = o.nextValue();
              return a.toTensor();
            }
          }),
          ci = Rn({
            randomUniform_: function(t, e, n, r, i) {
              void 0 === e && (e = 0),
                void 0 === n && (n = 1),
                void 0 === r && (r = "float32");
              for (
                var o = Gr(t, r), a = new Wr(e, n, null, i), s = 0;
                s < o.values.length;
                s++
              )
                o.values[s] = a.nextValue();
              return o.toTensor();
            }
          }),
          li = Rn({
            reshape_: function(t, e) {
              var n = An(t, "x", "reshape", null);
              return (
                (e = I(e, n.size)),
                w(n.size === T(e), function() {
                  return "new shape and old shape must have the same number of elements.";
                }),
                Rt.runKernel(
                  function(t) {
                    return t.reshape(n, e);
                  },
                  { $x: n },
                  function(t) {
                    return {
                      $x: function() {
                        return t.reshape(n.shape);
                      }
                    };
                  }
                )
              );
            }
          }),
          hi = Rn({
            spaceToBatchND_: function(t, e, n) {
              var r = An(t, "x", "spaceToBatchND");
              return (
                w(r.rank >= 1 + e.length, function() {
                  return (
                    "input rank " +
                    r.rank +
                    " should be > than [blockShape] " +
                    e.length
                  );
                }),
                w(n.length === e.length, function() {
                  return (
                    "paddings.shape[0] " +
                    n.length +
                    " must be equal to [blockShape] " +
                    e.length
                  );
                }),
                w(
                  r.shape.reduce(function(t, r, i) {
                    return i > 0 && i <= e.length
                      ? t && (r + n[i - 1][0] + n[i - 1][1]) % e[i - 1] == 0
                      : t;
                  }, !0),
                  function() {
                    return (
                      "input spatial dimensions " +
                      r.shape.slice(1) +
                      " with paddings " +
                      n.toString() +
                      " must be divisible by blockShapes " +
                      e.toString()
                    );
                  }
                ),
                Rt.runKernel(
                  function(t) {
                    return t.spaceToBatchND(r, e, n);
                  },
                  { $x: r },
                  function(t) {
                    return {
                      $x: function() {
                        return t.batchToSpaceND(e, n);
                      }
                    };
                  }
                )
              );
            }
          }),
          fi = Rn({
            squeeze_: function(t, e) {
              var n = An(t, "x", "squeeze");
              return li(n, P(n.shape, e).newShape);
            }
          }),
          pi = Rn({
            stack_: function(t, e) {
              void 0 === e && (e = 0);
              var n = kn(t, "tensors", "stack");
              if (
                (w(n.length >= 1, function() {
                  return "Pass at least one tensor to tf.stack";
                }),
                1 === n.length)
              )
                return n[0].expandDims(e);
              var r = n[0].rank,
                i = n[0].shape,
                o = n[0].dtype;
              w(e <= r, function() {
                return "Axis must be <= rank of the tensor";
              }),
                n.forEach(function(t) {
                  _(
                    i,
                    t.shape,
                    "All tensors passed to stack must have matching shapes"
                  );
                }),
                n.forEach(function(t) {
                  w(o === t.dtype, function() {
                    return "All tensors passed to stack must have matching dtypes";
                  });
                });
              var a = n.map(function(t) {
                return t.expandDims(e);
              });
              return Nr(a, e);
            }
          }),
          di = Rn({
            tile_: function(t, e) {
              var n = An(t, "x", "tile");
              return (
                w(n.rank === e.length, function() {
                  return (
                    "Error in transpose: rank of input " +
                    n.rank +
                    " must match length of reps " +
                    e +
                    "."
                  );
                }),
                Rt.runKernel(
                  function(t, r) {
                    var i = t.tile(n, e);
                    return r([n]), i;
                  },
                  { $x: n },
                  function(t, n) {
                    var r = n[0];
                    return {
                      $x: function() {
                        var n = tr(r);
                        if (1 === r.rank)
                          for (var i = 0; i < e[0]; ++i)
                            n = n.add(t.slice([i * r.shape[0]], [r.shape[0]]));
                        else if (2 === r.rank)
                          for (i = 0; i < e[0]; ++i)
                            for (var o = 0; o < e[1]; ++o)
                              n = n.add(
                                t.slice(
                                  [i * r.shape[0], o * r.shape[1]],
                                  [r.shape[0], r.shape[1]]
                                )
                              );
                        else if (3 === r.rank)
                          for (i = 0; i < e[0]; ++i)
                            for (o = 0; o < e[1]; ++o)
                              for (var a = 0; a < e[2]; ++a)
                                n = n.add(
                                  t.slice(
                                    [
                                      i * r.shape[0],
                                      o * r.shape[1],
                                      a * r.shape[2]
                                    ],
                                    [r.shape[0], r.shape[1], r.shape[2]]
                                  )
                                );
                        else {
                          if (4 !== r.rank)
                            throw new Error(
                              "Gradient for tile operation is not implemented for rank-" +
                                r.rank +
                                " tensors yet."
                            );
                          for (i = 0; i < e[0]; ++i)
                            for (o = 0; o < e[1]; ++o)
                              for (a = 0; a < e[2]; ++a)
                                for (var s = 0; s < e[3]; ++s)
                                  n = n.add(
                                    t.slice(
                                      [
                                        i * r.shape[0],
                                        o * r.shape[1],
                                        a * r.shape[2],
                                        s * r.shape[3]
                                      ],
                                      [
                                        r.shape[0],
                                        r.shape[1],
                                        r.shape[2],
                                        r.shape[3]
                                      ]
                                    )
                                  );
                        }
                        return n;
                      }
                    };
                  }
                )
              );
            }
          }),
          mi = Rn({
            truncatedNormal_: function(t, e, n, r, i) {
              if (
                (void 0 === e && (e = 0),
                void 0 === n && (n = 1),
                null != r && "bool" === r)
              )
                throw new Error("Unsupported data type " + r);
              for (
                var o = new Vr(e, n, r, !0, i), a = Gr(t, r), s = 0;
                s < a.values.length;
                s++
              )
                a.values[s] = o.nextValue();
              return a.toTensor();
            }
          }),
          yi = Rn({
            unstack_: function(t, e) {
              void 0 === e && (e = 0), (e = e || 0);
              var n = An(t, "x", "unstack");
              return (
                w(e >= -n.shape.length && e < n.shape.length, function() {
                  return (
                    "Axis = " +
                    e +
                    " is not in [-" +
                    n.shape.length +
                    ", " +
                    n.shape.length +
                    ")"
                  );
                }),
                e < 0 && (e += n.shape.length),
                Rt.runKernel(
                  function(t) {
                    return t.unstack(n, e);
                  },
                  { $x: n },
                  function(t) {
                    return {
                      $x: function() {
                        return pi(t, e);
                      }
                    };
                  }
                )
              );
            }
          }),
          gi = function(t, e) {
            return c(this, void 0, void 0, function() {
              var n, r, i, o, a, s, u, c, h, f;
              return l(this, function(l) {
                switch (l.label) {
                  case 0:
                    return (
                      (n = An(t, "x", "setdiff1d")),
                      (r = An(e, "y", "setdiff1d")),
                      w(n.dtype === r.dtype, function() {
                        return (
                          "x and y should have the same dtype, but got x (" +
                          n.dtype +
                          ") and y (" +
                          r.dtype +
                          ")."
                        );
                      }),
                      w(1 === n.rank, function() {
                        return (
                          "x should be 1D tensor, but got x (" + n.shape + ")."
                        );
                      }),
                      w(1 === r.rank, function() {
                        return (
                          "y should be 1D tensor, but got y (" + r.shape + ")."
                        );
                      }),
                      [4, n.data()]
                    );
                  case 1:
                    return (i = l.sent()), [4, r.data()];
                  case 2:
                    for (
                      o = l.sent(), a = new Set(o), s = 0, h = 0;
                      h < i.length;
                      h++
                    )
                      a.has(i[h]) || s++;
                    for (
                      u = new ft([s], n.dtype),
                        c = new ft([s], "int32"),
                        h = 0,
                        f = 0;
                      h < i.length;
                      h++
                    )
                      a.has(i[h]) ||
                        ((u.values[f] = i[h]), (c.values[f] = h), f++);
                    return [2, [u.toTensor(), c.toTensor()]];
                }
              });
            });
          };
        function vi(t, e) {
          for (var n = [], r = 0; r < e.length; r++) e[r] && n.push(r);
          var i = Gr(t, "int32"),
            o = Gr([n.length, t.length], "int32");
          for (r = 0; r < n.length; r++) {
            var a = i.indexToLoc(n[r]),
              s = r * t.length;
            o.values.set(a, s);
          }
          return o.toTensor();
        }
        var bi = function(t, e) {
            (this.outputShape = []),
              (this.outputShape = t),
              (this.variableNames = e.map(function(t, e) {
                return "T" + e;
              }));
            var n = [];
            this.variableNames.forEach(function(t) {
              n.push("float v" + t + " = get" + t + "AtOutCoords();");
            });
            var r = this.variableNames
              .map(function(t) {
                return "v" + t;
              })
              .join(" + ");
            this.userCode =
              "\n      void main() {\n        " +
              n.join("\n        ") +
              "\n\n        float result = " +
              r +
              ";\n        setOutput(result);\n      }\n    ";
          },
          wi = function(t, e) {
            (this.outputShape = []),
              (this.usesPackedTextures = !0),
              (this.outputShape = t),
              (this.variableNames = e.map(function(t, e) {
                return "T" + e;
              }));
            var n = [];
            this.variableNames.forEach(function(t) {
              n.push("vec4 v" + t + " = get" + t + "AtOutCoords();");
            });
            var r = this.variableNames
              .map(function(t) {
                return "v" + t;
              })
              .join(" + ");
            this.userCode =
              "\n      void main() {\n        " +
              n.join("\n        ") +
              "\n\n        vec4 result = " +
              r +
              ";\n        setOutput(result);\n      }\n    ";
          },
          _i = function(t, e, n) {
            this.variableNames = ["A"];
            var r = t.windowSize,
              i = t.batchSize,
              o = t.inSize,
              a = Math.ceil(o / r);
            n || this.variableNames.push("bestIndicesA"),
              (this.outputShape = [i, a]);
            var s = "max" === e ? ">" : "<",
              u = n
                ? "inOffset + i;"
                : "round(getBestIndicesA(batch, inOffset + i));";
            this.userCode =
              "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * " +
              r +
              ";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < " +
              r +
              "; i++) {\n          int inIdx = " +
              u +
              ";\n          float candidate = getA(batch, inIdx);\n          if (candidate " +
              s +
              " bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ";
          };
        function Si(t, e) {
          return ["x", "y", "z", "w", "u", "v"].slice(0, e).map(function(e) {
            return t + "." + e;
          });
        }
        function xi(t, e) {
          return 1 === e ? [t] : Si(t, e);
        }
        function Ti() {
          var t, e, n, r, i, o, a, s, u, c;
          return (
            2 === h.getNumber("WEBGL_VERSION")
              ? ((t = "#version 300 es"),
                (e = "in"),
                (n = "out"),
                (r = "in"),
                (i = "texture"),
                (o = "outputColor"),
                (a = "out vec4 outputColor;"),
                (s =
                  "\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 0. || val == 0.) ? false : true;\n      }\n    "),
                (u =
                  "\n      const float INFINITY = uintBitsToFloat(uint(0x7f800000));\n    "),
                (c =
                  "\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "))
              : ((t = ""),
                (e = "attribute"),
                (n = "varying"),
                (r = "varying"),
                (i = "texture2D"),
                (o = "gl_FragColor"),
                (a = ""),
                (s =
                  "\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n    "),
                (u =
                  "\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    "),
                (c =
                  "\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    ")),
            {
              version: t,
              attribute: e,
              varyingVs: n,
              varyingFs: r,
              texture2D: i,
              output: o,
              defineOutput: a,
              defineSpecialNaN: s,
              defineSpecialInf: u,
              defineRound: c
            }
          );
        }
        function Ai(t, e, n) {
          void 0 === n && (n = "index");
          var r = X(e);
          return r
            .map(function(e, i) {
              return (
                "int " +
                t[i] +
                " = " +
                n +
                " / " +
                e +
                "; " +
                (i === r.length - 1
                  ? "int " + t[i + 1] + " = " + n + " - " + t[i] + " * " + e
                  : "index -= " + t[i] + " * " + e) +
                ";"
              );
            })
            .join("");
        }
        function ki(t) {
          return 1 === t.length
            ? "" + t[0]
            : "vec" + t.length + "(" + t.join(",") + ")";
        }
        function Ei(t) {
          return (
            "\n  int getFlatIndex(ivec3 coords) {\n    return round(" +
            (function(t, e) {
              if (t.length !== e.length)
                throw new Error(
                  "Vectors to be dotted must be of the same length -got " +
                    t.length +
                    " and " +
                    e.length
                );
              for (
                var n = [],
                  r = Math.floor(t.length / 4),
                  i = t.length % 4,
                  o = 0;
                o < r;
                o++
              ) {
                var a = t.slice(4 * o, 4 * o + 4),
                  s = e.slice(4 * o, 4 * o + 4);
                n.push(ki(a) + ", " + ki(s));
              }
              return (
                0 !== i &&
                  ((a = t.slice(4 * r)),
                  (s = e.slice(4 * r)),
                  1 === a.length &&
                    ((a = a.map(function(t) {
                      return "float(" + t + ")";
                    })),
                    (s = s.map(function(t) {
                      return "float(" + t + ")";
                    }))),
                  n.push(ki(a) + ", " + ki(s))),
                n
                  .map(function(t, e) {
                    return "dot(" + t + ")";
                  })
                  .join("+")
              );
            })(
              ["coords.x", "coords.y", "coords.z"],
              X(t)
                .map(function(t) {
                  return t.toString();
                })
                .concat(["1."])
            ) +
            ");\n  }\n"
          );
        }
        function Ni(t, e, n, r) {
          var i = [];
          t.forEach(function(t) {
            var e = T(t.shapeInfo.logicalShape);
            t.shapeInfo.isUniform
              ? i.push(
                  "uniform float " + t.name + (e > 1 ? "[" + e + "]" : "") + ";"
                )
              : (i.push("uniform sampler2D " + t.name + ";"),
                i.push("uniform int offset" + t.name + ";"));
          });
          var o,
            a,
            s = i.join("\n"),
            u = t
              .map(function(t) {
                return (function(t, e, n) {
                  void 0 === n && (n = !1);
                  var r = "";
                  r += n
                    ? (function t(e) {
                        var n, r, i;
                        switch (e.shapeInfo.logicalShape.length) {
                          case 0:
                            return (
                              (n = e.name),
                              (r =
                                "get" + n.charAt(0).toUpperCase() + n.slice(1)),
                              (i = Ti()),
                              "\n    vec4 " +
                                r +
                                "() {\n      return " +
                                i.texture2D +
                                "(" +
                                n +
                                ", halfCR);\n    }\n  "
                            );
                          case 1:
                            return (function(t) {
                              var e = t.name,
                                n =
                                  "get" +
                                  e.charAt(0).toUpperCase() +
                                  e.slice(1),
                                r = t.shapeInfo.texShape,
                                i = [Math.ceil(r[0] / 2), Math.ceil(r[1] / 2)],
                                o = Ti();
                              return (
                                "\n    vec4 " +
                                n +
                                "(int index) {\n      vec2 uv = packedUVfrom1D(\n        " +
                                i[0] +
                                ", " +
                                i[1] +
                                ", index);\n      return " +
                                o.texture2D +
                                "(" +
                                e +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          case 2:
                            return (function(t) {
                              var e = t.shapeInfo.logicalShape,
                                n = t.name,
                                r =
                                  "get" +
                                  n.charAt(0).toUpperCase() +
                                  n.slice(1),
                                i = t.shapeInfo.texShape,
                                o = i[0],
                                a = i[1],
                                s = Ti();
                              if (null != i && A(e, i))
                                return (
                                  "\n      vec4 " +
                                  r +
                                  "(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(" +
                                  a +
                                  ".0, " +
                                  o +
                                  ".0);\n\n        return " +
                                  s.texture2D +
                                  "(" +
                                  n +
                                  ", uv);\n      }\n    "
                                );
                              var u = [
                                  Math.ceil(i[0] / 2),
                                  Math.ceil(i[1] / 2)
                                ],
                                c = Math.ceil(e[1] / 2);
                              return (
                                "\n    vec4 " +
                                r +
                                "(int row, int col) {\n      vec2 uv = packedUVfrom2D(" +
                                c +
                                ", " +
                                u[0] +
                                ", " +
                                u[1] +
                                ", row, col);\n      return " +
                                s.texture2D +
                                "(" +
                                n +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          case 3:
                            return (function(e) {
                              var n = e.shapeInfo.logicalShape,
                                r = e.name,
                                i =
                                  "get" +
                                  r.charAt(0).toUpperCase() +
                                  r.slice(1),
                                o = e.shapeInfo.texShape,
                                a = [Math.ceil(o[0] / 2), Math.ceil(o[1] / 2)];
                              if (1 === n[0]) {
                                var s = n.slice(1),
                                  u = Fi(e, s);
                                return (
                                  "\n        " +
                                  t(u) +
                                  "\n        vec4 " +
                                  i +
                                  "(int b, int row, int col) {\n          return " +
                                  i +
                                  "(" +
                                  zi(["b", "row", "col"], [1, 2]) +
                                  ");\n        }\n      "
                                );
                              }
                              var c = a[0],
                                l = a[1],
                                h = Math.ceil(n[2] / 2),
                                f = h * Math.ceil(n[1] / 2),
                                p = Ti();
                              return (
                                "\n    vec4 " +
                                i +
                                "(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        " +
                                c +
                                ", " +
                                l +
                                ", " +
                                f +
                                ", " +
                                h +
                                ", b, row, col);\n      return " +
                                p.texture2D +
                                "(" +
                                r +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          default:
                            return (function(t) {
                              for (
                                var e = t.shapeInfo.logicalShape,
                                  n = e.length,
                                  r = t.name,
                                  i =
                                    "get" +
                                    r.charAt(0).toUpperCase() +
                                    r.slice(1),
                                  o = t.shapeInfo.texShape,
                                  a = [
                                    Math.ceil(o[0] / 2),
                                    Math.ceil(o[1] / 2)
                                  ],
                                  s = a[0],
                                  u = a[1],
                                  c = Math.ceil(e[n - 1] / 2),
                                  l = c * Math.ceil(e[n - 2] / 2),
                                  h = "int b, int row, int col",
                                  f =
                                    "b * " +
                                    l +
                                    " + (row / 2) * " +
                                    c +
                                    " + (col / 2)",
                                  p = 2;
                                p < n - 1;
                                p++
                              )
                                (h = "int b" + p + ", " + h),
                                  (l *= e[n - p - 1]),
                                  (f = "b" + p + " * " + l + " + " + f);
                              var d = Ti();
                              return (
                                "\n    vec4 " +
                                i +
                                "(" +
                                h +
                                ") {\n      int index = " +
                                f +
                                ";\n      int texR = index / " +
                                u +
                                ";\n      int texC = index - texR * " +
                                u +
                                ";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
                                u +
                                ", " +
                                s +
                                ");\n      return " +
                                d.texture2D +
                                "(" +
                                r +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                        }
                      })(t)
                    : (function t(e) {
                        var n = e.shapeInfo.logicalShape;
                        switch (n.length) {
                          case 0:
                            return (function(t) {
                              var e = t.name,
                                n =
                                  "get" +
                                  e.charAt(0).toUpperCase() +
                                  e.slice(1);
                              if (t.shapeInfo.isUniform)
                                return "float " + n + "() {return " + e + ";}";
                              var r = t.shapeInfo.texShape,
                                i = r[0],
                                o = r[1];
                              if (1 === i && 1 === o)
                                return (
                                  "\n      float " +
                                  n +
                                  "() {\n        return sampleTexture(" +
                                  e +
                                  ", halfCR);\n      }\n    "
                                );
                              var a = t.shapeInfo.texShape,
                                s = a[0],
                                u = a[1],
                                c = Pi(e);
                              return (
                                "\n    float " +
                                n +
                                "() {\n      vec2 uv = uvFromFlat(" +
                                s +
                                ", " +
                                u +
                                ", " +
                                c +
                                ");\n      return sampleTexture(" +
                                e +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          case 1:
                            return (function(t) {
                              var e = t.name,
                                n =
                                  "get" +
                                  e.charAt(0).toUpperCase() +
                                  e.slice(1);
                              if (t.shapeInfo.isUniform)
                                return (
                                  "\n      float " +
                                  n +
                                  "(int index) {\n        " +
                                  Ri(t) +
                                  "\n      }\n    "
                                );
                              var r = t.shapeInfo.texShape,
                                i = r[0],
                                o = r[1];
                              if (1 === o && 1 === i)
                                return (
                                  "\n      float " +
                                  n +
                                  "(int index) {\n        return sampleTexture(" +
                                  e +
                                  ", halfCR);\n      }\n    "
                                );
                              var a = Pi(e);
                              return 1 === o
                                ? "\n      float " +
                                    n +
                                    "(int index) {\n        vec2 uv = vec2(0.5, (float(index + " +
                                    a +
                                    ") + 0.5) / " +
                                    i +
                                    ".0);\n        return sampleTexture(" +
                                    e +
                                    ", uv);\n      }\n    "
                                : 1 === i
                                ? "\n      float " +
                                  n +
                                  "(int index) {\n        vec2 uv = vec2((float(index + " +
                                  a +
                                  ") + 0.5) / " +
                                  o +
                                  ".0, 0.5);\n        return sampleTexture(" +
                                  e +
                                  ", uv);\n      }\n    "
                                : "\n    float " +
                                  n +
                                  "(int index) {\n      vec2 uv = uvFromFlat(" +
                                  i +
                                  ", " +
                                  o +
                                  ", index + " +
                                  a +
                                  ");\n      return sampleTexture(" +
                                  e +
                                  ", uv);\n    }\n  ";
                            })(e);
                          case 2:
                            return (function(e) {
                              var n = e.shapeInfo.logicalShape,
                                r = e.name,
                                i =
                                  "get" +
                                  r.charAt(0).toUpperCase() +
                                  r.slice(1),
                                o = e.shapeInfo.texShape;
                              if (null != o && A(n, o)) {
                                var a = o[0],
                                  s = o[1];
                                return (
                                  "\n    float " +
                                  i +
                                  "(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(" +
                                  s +
                                  ".0, " +
                                  a +
                                  ".0);\n      return sampleTexture(" +
                                  r +
                                  ", uv);\n    }\n  "
                                );
                              }
                              var u = P(n),
                                c = u.newShape,
                                l = u.keptDims,
                                h = c;
                              if (h.length < n.length) {
                                var f = Fi(e, h);
                                return (
                                  "\n      " +
                                  t(f) +
                                  "\n      float " +
                                  i +
                                  "(int row, int col) {\n        return " +
                                  i +
                                  "(" +
                                  zi(["row", "col"], l) +
                                  ");\n      }\n    "
                                );
                              }
                              if (e.shapeInfo.isUniform)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(" +
                                  n[1] +
                                  ", 1)));\n        " +
                                  Ri(e) +
                                  "\n      }\n    "
                                );
                              var p = o[0],
                                d = o[1],
                                m = Pi(r);
                              return 1 === d
                                ? "\n    float " +
                                    i +
                                    "(int row, int col) {\n      float index = dot(vec3(row, col, " +
                                    m +
                                    "), vec3(" +
                                    n[1] +
                                    ", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / " +
                                    p +
                                    ".0);\n      return sampleTexture(" +
                                    r +
                                    ", uv);\n    }\n  "
                                : 1 === p
                                ? "\n    float " +
                                  i +
                                  "(int row, int col) {\n      float index = dot(vec3(row, col, " +
                                  m +
                                  "), vec3(" +
                                  n[1] +
                                  ", 1, 1));\n      vec2 uv = vec2((index + 0.5) / " +
                                  d +
                                  ".0, 0.5);\n      return sampleTexture(" +
                                  r +
                                  ", uv);\n    }\n  "
                                : "\n  float " +
                                  i +
                                  "(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * " +
                                  n[1] +
                                  " + col + " +
                                  m +
                                  ";\n    vec2 uv = uvFromFlat(" +
                                  p +
                                  ", " +
                                  d +
                                  ", index);\n    return sampleTexture(" +
                                  r +
                                  ", uv);\n  }\n";
                            })(e);
                          case 3:
                            return (function(e) {
                              var n = e.shapeInfo.logicalShape,
                                r = e.name,
                                i =
                                  "get" +
                                  r.charAt(0).toUpperCase() +
                                  r.slice(1),
                                o = n[1] * n[2],
                                a = n[2],
                                s = P(n),
                                u = s.newShape,
                                c = s.keptDims,
                                l = u;
                              if (l.length < n.length) {
                                var h = Fi(e, l);
                                return (
                                  "\n        " +
                                  t(h) +
                                  "\n        float " +
                                  i +
                                  "(int row, int col, int depth) {\n          return " +
                                  i +
                                  "(" +
                                  zi(["row", "col", "depth"], c) +
                                  ");\n        }\n      "
                                );
                              }
                              if (e.shapeInfo.isUniform)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(" +
                                  o +
                                  ", " +
                                  a +
                                  ", 1)));\n        " +
                                  Ri(e) +
                                  "\n      }\n    "
                                );
                              var f = e.shapeInfo.texShape,
                                p = f[0],
                                d = f[1],
                                m = e.shapeInfo.flatOffset;
                              if (d === o && null == m)
                                return (
                                  "\n        float " +
                                  i +
                                  "(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(" +
                                  a +
                                  ", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(" +
                                  d +
                                  ".0, " +
                                  p +
                                  ".0);\n          return sampleTexture(" +
                                  r +
                                  ", uv);\n        }\n      "
                                );
                              if (d === a && null == m)
                                return (
                                  "\n    float " +
                                  i +
                                  "(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(" +
                                  n[1] +
                                  ", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
                                  d +
                                  ".0, " +
                                  p +
                                  ".0);\n      return sampleTexture(" +
                                  r +
                                  ", uv);\n    }\n  "
                                );
                              var y = Pi(r);
                              return (
                                "\n      float " +
                                i +
                                "(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * " +
                                o +
                                " + col * " +
                                a +
                                " + depth + " +
                                y +
                                ";\n        vec2 uv = uvFromFlat(" +
                                p +
                                ", " +
                                d +
                                ", index);\n        return sampleTexture(" +
                                r +
                                ", uv);\n      }\n  "
                              );
                            })(e);
                          case 4:
                            return (function(e) {
                              var n = e.shapeInfo.logicalShape,
                                r = e.name,
                                i =
                                  "get" +
                                  r.charAt(0).toUpperCase() +
                                  r.slice(1),
                                o = n[3],
                                a = n[2] * o,
                                s = n[1] * a,
                                u = P(n),
                                c = u.newShape,
                                l = u.keptDims;
                              if (c.length < n.length) {
                                var h = Fi(e, c);
                                return (
                                  "\n      " +
                                  t(h) +
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2) {\n        return " +
                                  i +
                                  "(" +
                                  zi(["row", "col", "depth", "depth2"], l) +
                                  ");\n      }\n    "
                                );
                              }
                              if (e.shapeInfo.isUniform)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(" +
                                  s +
                                  ", " +
                                  a +
                                  ", " +
                                  o +
                                  ", 1)));\n        " +
                                  Ri(e) +
                                  "\n      }\n    "
                                );
                              var f = e.shapeInfo.flatOffset,
                                p = e.shapeInfo.texShape,
                                d = p[0],
                                m = p[1];
                              if (m === s && null == f)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(" +
                                  a +
                                  ", " +
                                  o +
                                  ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" +
                                  m +
                                  ".0, " +
                                  d +
                                  ".0);\n        return sampleTexture(" +
                                  r +
                                  ", uv);\n      }\n    "
                                );
                              if (m === o && null == f)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(" +
                                  n[1] * n[2] +
                                  ", " +
                                  n[2] +
                                  ", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" +
                                  m +
                                  ".0, " +
                                  d +
                                  ".0);\n        return sampleTexture(" +
                                  r +
                                  ", uv);\n      }\n    "
                                );
                              var y = Pi(r);
                              return (
                                "\n    float " +
                                i +
                                "(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " +
                                s +
                                " + col * " +
                                a +
                                " +\n          depth * " +
                                o +
                                " + depth2;\n      vec2 uv = uvFromFlat(" +
                                d +
                                ", " +
                                m +
                                ", index + " +
                                y +
                                ");\n      return sampleTexture(" +
                                r +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          case 5:
                            return (function(e) {
                              var n = e.shapeInfo.logicalShape,
                                r = e.name,
                                i =
                                  "get" +
                                  r.charAt(0).toUpperCase() +
                                  r.slice(1),
                                o = n[4],
                                a = n[3] * o,
                                s = n[2] * a,
                                u = n[1] * s,
                                c = P(n),
                                l = c.newShape,
                                h = c.keptDims;
                              if (l.length < n.length) {
                                var f = Fi(e, l);
                                return (
                                  "\n      " +
                                  t(f) +
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2, int depth3) {\n        return " +
                                  i +
                                  "(" +
                                  zi(
                                    ["row", "col", "depth", "depth2", "depth3"],
                                    h
                                  ) +
                                  ");\n      }\n    "
                                );
                              }
                              if (e.shapeInfo.isUniform)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(" +
                                  u +
                                  ", " +
                                  s +
                                  ", " +
                                  a +
                                  ", " +
                                  o +
                                  ")) +\n          depth3;\n        " +
                                  Ri(e) +
                                  "\n      }\n    "
                                );
                              var p = e.shapeInfo.flatOffset,
                                d = e.shapeInfo.texShape,
                                m = d[0],
                                y = d[1];
                              if (y === u && null == p)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(" +
                                  s +
                                  ", " +
                                  a +
                                  ", " +
                                  o +
                                  ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" +
                                  y +
                                  ".0, " +
                                  m +
                                  ".0);\n        return sampleTexture(" +
                                  r +
                                  ", uv);\n      }\n    "
                                );
                              if (y === o && null == p)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(" +
                                  n[1] * n[2] * n[3] +
                                  ",\n               " +
                                  n[2] * n[3] +
                                  ", " +
                                  n[3] +
                                  ", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" +
                                  y +
                                  ".0, " +
                                  m +
                                  ".0);\n        return sampleTexture(" +
                                  r +
                                  ", uv);\n      }\n    "
                                );
                              var g = Pi(r);
                              return (
                                "\n    float " +
                                i +
                                "(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " +
                                u +
                                " + col * " +
                                s +
                                " + depth * " +
                                a +
                                " +\n          depth2 * " +
                                o +
                                " + depth3 + " +
                                g +
                                ";\n      vec2 uv = uvFromFlat(" +
                                m +
                                ", " +
                                y +
                                ", index);\n      return sampleTexture(" +
                                r +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          case 6:
                            return (function(e) {
                              var n = e.shapeInfo.logicalShape,
                                r = e.name,
                                i =
                                  "get" +
                                  r.charAt(0).toUpperCase() +
                                  r.slice(1),
                                o = P(n),
                                a = o.newShape,
                                s = o.keptDims;
                              if (a.length < n.length) {
                                var u = Fi(e, a);
                                return (
                                  "\n      " +
                                  t(u) +
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return " +
                                  i +
                                  "(" +
                                  zi(
                                    [
                                      "row",
                                      "col",
                                      "depth",
                                      "depth2",
                                      "depth3",
                                      "depth4"
                                    ],
                                    s
                                  ) +
                                  ");\n      }\n    "
                                );
                              }
                              var c = n[5],
                                l = n[4] * c,
                                h = n[3] * l,
                                f = n[2] * h,
                                p = n[1] * f;
                              if (e.shapeInfo.isUniform)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(" +
                                  p +
                                  ", " +
                                  f +
                                  ", " +
                                  h +
                                  ", " +
                                  l +
                                  ")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(" +
                                  c +
                                  ", 1)));\n        " +
                                  Ri(e) +
                                  "\n      }\n    "
                                );
                              var d = e.shapeInfo.flatOffset,
                                m = e.shapeInfo.texShape,
                                y = m[0],
                                g = m[1];
                              if (g === p && null == d)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(" +
                                  f +
                                  ", " +
                                  h +
                                  ", " +
                                  l +
                                  ", " +
                                  c +
                                  ")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" +
                                  g +
                                  ".0, " +
                                  y +
                                  ".0);\n        return sampleTexture(" +
                                  r +
                                  ", uv);\n      }\n    "
                                );
                              if (g === c && null == d)
                                return (
                                  "\n      float " +
                                  i +
                                  "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(" +
                                  n[1] * n[2] * n[3] * n[4] +
                                  ",\n               " +
                                  n[2] * n[3] * n[4] +
                                  ",\n               " +
                                  n[3] * n[4] +
                                  ",\n               " +
                                  n[4] +
                                  ")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" +
                                  g +
                                  ".0, " +
                                  y +
                                  ".0);\n        return sampleTexture(" +
                                  r +
                                  ", uv);\n      }\n    "
                                );
                              var v = Pi(r);
                              return (
                                "\n    float " +
                                i +
                                "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " +
                                p +
                                " + col * " +
                                f +
                                " + depth * " +
                                h +
                                " +\n          depth2 * " +
                                l +
                                " + depth3 * " +
                                c +
                                " + depth4 + " +
                                v +
                                ";\n      vec2 uv = uvFromFlat(" +
                                y +
                                ", " +
                                g +
                                ", index);\n      return sampleTexture(" +
                                r +
                                ", uv);\n    }\n  "
                              );
                            })(e);
                          default:
                            throw new Error(
                              n.length +
                                "-D input sampling is not yet supported"
                            );
                        }
                      })(t);
                  var i = t.shapeInfo.logicalShape,
                    o = e.logicalShape;
                  return (
                    i.length <= o.length &&
                      (r += n
                        ? (function(t, e) {
                            var n,
                              r = t.name,
                              i = r.charAt(0).toUpperCase() + r.slice(1),
                              o = "get" + i + "AtOutCoords",
                              a = t.shapeInfo.logicalShape.length,
                              s = e.logicalShape.length,
                              u = rr(t.shapeInfo.logicalShape, e.logicalShape),
                              c = Di(s),
                              l = s - a,
                              h = ["x", "y", "z", "w", "u", "v"];
                            n =
                              0 === a
                                ? ""
                                : s < 2 && u.length >= 1
                                ? "coords = 0;"
                                : u
                                    .map(function(t) {
                                      return "coords." + h[t + l] + " = 0;";
                                    })
                                    .join("\n");
                            var f;
                            f =
                              s < 2 && a > 0
                                ? "coords"
                                : t.shapeInfo.logicalShape
                                    .map(function(t, e) {
                                      return "coords." + h[e + l];
                                    })
                                    .join(", ");
                            var p = "return outputValue;",
                              d = 1 === T(t.shapeInfo.logicalShape),
                              m = 1 === T(e.logicalShape);
                            if (1 !== a || d || m) {
                              if (d && !m)
                                p =
                                  1 === s
                                    ? "\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      "
                                    : "\n        return vec4(outputValue.x);\n      ";
                              else if (u.length) {
                                var y = a - 2,
                                  g = a - 1;
                                u.indexOf(y) > -1 && u.indexOf(g) > -1
                                  ? (p = "return vec4(outputValue.x);")
                                  : u.indexOf(y) > -1
                                  ? (p =
                                      "return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);")
                                  : u.indexOf(g) > -1 &&
                                    (p =
                                      "return vec4(outputValue.xx, outputValue.zz);");
                              }
                            } else
                              p =
                                "\n      return vec4(outputValue.xy, outputValue.xy);\n    ";
                            return (
                              "\n    vec4 " +
                              o +
                              "() {\n      " +
                              c +
                              " coords = getOutputCoords();\n      " +
                              n +
                              "\n      vec4 outputValue = get" +
                              i +
                              "(" +
                              f +
                              ");\n      " +
                              p +
                              "\n    }\n  "
                            );
                          })(t, e)
                        : (function(t, e) {
                            var n = t.name,
                              r = n.charAt(0).toUpperCase() + n.slice(1),
                              i = "get" + r + "AtOutCoords",
                              o = e.texShape,
                              a = t.shapeInfo.texShape,
                              s = t.shapeInfo.logicalShape.length,
                              u = e.logicalShape.length;
                            if (
                              !t.shapeInfo.isUniform &&
                              s === u &&
                              null == t.shapeInfo.flatOffset &&
                              A(a, o)
                            )
                              return (
                                "\n      float " +
                                i +
                                "() {\n        return sampleTexture(" +
                                n +
                                ", resultUV);\n      }\n    "
                              );
                            var c = Di(u),
                              l = rr(t.shapeInfo.logicalShape, e.logicalShape),
                              h = u - s,
                              f = ["x", "y", "z", "w", "u", "v"];
                            return (
                              "\n    float " +
                              i +
                              "() {\n      " +
                              c +
                              " coords = getOutputCoords();\n      " +
                              (0 === s
                                ? ""
                                : u < 2 && l.length >= 1
                                ? "coords = 0;"
                                : l
                                    .map(function(t) {
                                      return "coords." + f[t + h] + " = 0;";
                                    })
                                    .join("\n")) +
                              "\n      return get" +
                              r +
                              "(" +
                              (u < 2 && s > 0
                                ? "coords"
                                : t.shapeInfo.logicalShape
                                    .map(function(t, e) {
                                      return "coords." + f[e + h];
                                    })
                                    .join(", ")) +
                              ");\n    }\n  "
                            );
                          })(t, e)),
                    r
                  );
                })(t, e, r);
              })
              .join("\n"),
            c = e.texShape,
            l = Ti(),
            h =
              "\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return " +
              l.texture2D +
              "(textureSampler, uv).r;\n    }\n  ",
            f = (function(t) {
              return (
                t.version +
                "\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    " +
                t.varyingFs +
                " vec2 resultUV;\n    " +
                t.defineOutput +
                "\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    #define isnan(value) isnan_custom(value)\n    " +
                t.defineSpecialNaN +
                "\n    bvec4 isnan_custom(vec4 val) {\n      return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n    }\n\n    " +
                t.defineSpecialInf +
                "\n    " +
                t.defineRound +
                "\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    " +
                Oi +
                "\n    " +
                Ci +
                "\n    " +
                Ii +
                "\n  "
              );
            })(l);
          return (
            e.isPacked
              ? ((o = (function(t, e) {
                  switch (t.length) {
                    case 0:
                      return "\n    int getOutputCoords() {\n      return 0;\n    }\n  ";
                    case 1:
                      return (function(t, e) {
                        var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)];
                        return 1 === n[0]
                          ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * " +
                              n[1] +
                              ".0);\n      }\n    "
                          : 1 === n[1]
                          ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * " +
                            n[0] +
                            ".0);\n      }\n    "
                          : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                            n[0] +
                            ", " +
                            n[1] +
                            "));\n      return resTexRC.x * " +
                            n[1] +
                            " + resTexRC.y;\n    }\n  ";
                      })(0, e);
                    case 2:
                      return (function(t, e) {
                        var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)];
                        if (A(t, e))
                          return (
                            "\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(" +
                            n[0] +
                            ", " +
                            n[1] +
                            "));\n      }\n    "
                          );
                        var r = Math.ceil(t[1] / 2);
                        return (
                          "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                          n[0] +
                          ", " +
                          n[1] +
                          "));\n\n      int index = resTexRC.x * " +
                          n[1] +
                          " + resTexRC.y;\n      int r = 2 * (index / " +
                          r +
                          ");\n      int c = imod(index, " +
                          r +
                          ") * 2;\n\n      return ivec2(r, c);\n    }\n  "
                        );
                      })(t, e);
                    case 3:
                      return (
                        (n = t),
                        (r = e),
                        (i = [Math.ceil(r[0] / 2), Math.ceil(r[1] / 2)]),
                        (a = (o = Math.ceil(n[2] / 2)) * Math.ceil(n[1] / 2)),
                        "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                          i[0] +
                          ", " +
                          i[1] +
                          "));\n      int index = resTexRC.x * " +
                          i[1] +
                          " + resTexRC.y;\n\n      int b = index / " +
                          a +
                          ";\n      index -= b * " +
                          a +
                          ";\n\n      int r = 2 * (index / " +
                          o +
                          ");\n      int c = imod(index, " +
                          o +
                          ") * 2;\n\n      return ivec3(b, r, c);\n    }\n  "
                      );
                    default:
                      return (function(t, e) {
                        for (
                          var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)],
                            r = Math.ceil(t[t.length - 1] / 2),
                            i = r * Math.ceil(t[t.length - 2] / 2),
                            o = i,
                            a = "",
                            s = "b, r, c",
                            u = 2;
                          u < t.length - 1;
                          u++
                        )
                          (a =
                            "\n      int b" +
                            u +
                            " = index / " +
                            (o *= t[t.length - u - 1]) +
                            ";\n      index -= b" +
                            u +
                            " * " +
                            o +
                            ";\n    " +
                            a),
                            (s = "b" + u + ", " + s);
                        return (
                          "\n    ivec" +
                          t.length +
                          " getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                          n[0] +
                          ", " +
                          n[1] +
                          "));\n      int index = resTexRC.x * " +
                          n[1] +
                          " + resTexRC.y;\n\n      " +
                          a +
                          "\n\n      int b = index / " +
                          i +
                          ";\n      index -= b * " +
                          i +
                          ";\n\n      int r = 2 * (index / " +
                          r +
                          ");\n      int c = imod(index, " +
                          r +
                          ") * 2;\n\n      return ivec" +
                          t.length +
                          "(" +
                          s +
                          ");\n    }\n  "
                        );
                      })(t, e);
                  }
                  var n, r, i, o, a;
                })(e.logicalShape, c)),
                (a =
                  "\n    void setOutput(vec4 val) {\n      " +
                  l.output +
                  " = val;\n    }\n  "))
              : ((o = (function(t, e) {
                  switch (t.length) {
                    case 0:
                      return "\n    int getOutputCoords() {\n      return 0;\n    }\n  ";
                    case 1:
                      return (function(t, e) {
                        return 1 === e[0]
                          ? "\n      int getOutputCoords() {\n        return int(resultUV.x * " +
                              e[1] +
                              ".0);\n      }\n    "
                          : 1 === e[1]
                          ? "\n      int getOutputCoords() {\n        return int(resultUV.y * " +
                            e[0] +
                            ".0);\n      }\n    "
                          : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                            e[0] +
                            ", " +
                            e[1] +
                            "));\n      return resTexRC.x * " +
                            e[1] +
                            " + resTexRC.y;\n    }\n  ";
                      })(0, e);
                    case 2:
                      return (function(t, e) {
                        return A(t, e)
                          ? "\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(" +
                              e[0] +
                              ", " +
                              e[1] +
                              "));\n      }\n    "
                          : 1 === t[1]
                          ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(" +
                            e[0] +
                            ", " +
                            e[1] +
                            "));\n        int index = resTexRC.x * " +
                            e[1] +
                            " + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    "
                          : 1 === t[0]
                          ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(" +
                            e[0] +
                            ", " +
                            e[1] +
                            "));\n        int index = resTexRC.x * " +
                            e[1] +
                            " + resTexRC.y;\n        return ivec2(0, index);\n      }\n    "
                          : "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                            e[0] +
                            ", " +
                            e[1] +
                            "));\n      int index = resTexRC.x * " +
                            e[1] +
                            " + resTexRC.y;\n      int r = index / " +
                            t[1] +
                            ";\n      int c = index - r * " +
                            t[1] +
                            ";\n      return ivec2(r, c);\n    }\n  ";
                      })(t, e);
                    case 3:
                      return (
                        (n = e),
                        (r = Ai(["r", "c", "d"], t)),
                        "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
                          n[0] +
                          ", " +
                          n[1] +
                          "));\n      int index = resTexRC.x * " +
                          n[1] +
                          " + resTexRC.y;\n      " +
                          r +
                          "\n      return ivec3(r, c, d);\n    }\n  "
                      );
                    case 4:
                      return (function(t, e) {
                        var n = Ai(["r", "c", "d", "d2"], t);
                        return (
                          "\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(" +
                          e[0] +
                          ", " +
                          e[1] +
                          "));\n      int index = resTexRC.x * " +
                          e[1] +
                          " + resTexRC.y;\n      " +
                          n +
                          "\n      return ivec4(r, c, d, d2);\n    }\n  "
                        );
                      })(t, e);
                    case 5:
                      return (function(t, e) {
                        var n = Ai(["r", "c", "d", "d2", "d3"], t);
                        return (
                          "\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(" +
                          e[0] +
                          ",\n                             " +
                          e[1] +
                          "));\n\n      int index = resTexRC.x * " +
                          e[1] +
                          " + resTexRC.y;\n\n      " +
                          n +
                          "\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "
                        );
                      })(t, e);
                    case 6:
                      return (function(t, e) {
                        var n = Ai(["r", "c", "d", "d2", "d3", "d4"], t);
                        return (
                          "\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(" +
                          e[0] +
                          ", " +
                          e[1] +
                          "));\n      int index = resTexRC.x * " +
                          e[1] +
                          " + resTexRC.y;\n\n      " +
                          n +
                          "\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "
                        );
                      })(t, e);
                    default:
                      throw new Error(
                        t.length + "-D output sampling is not yet supported"
                      );
                  }
                  var n, r;
                })(e.logicalShape, c)),
                (a =
                  "\n    void setOutput(float val) {\n      " +
                  l.output +
                  " = vec4(val, 0, 0, 0);\n    }\n  ")),
            r && (f += Mi),
            [f, h, a, s, o, u, n].join("\n")
          );
        }
        var Oi =
            "\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          Ci =
            "\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          Ii =
            "\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          Mi =
            "\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";
        function Pi(t) {
          return "offset" + t;
        }
        function Ri(t) {
          var e = t.name,
            n = T(t.shapeInfo.logicalShape);
          return n < 2
            ? "return " + e + ";"
            : "\n    for (int i = 0; i < " +
                n +
                "; i++) {\n      if (i == index) {\n        return " +
                e +
                "[i];\n      }\n    }\n  ";
        }
        function Di(t) {
          if (t <= 1) return "int";
          if (2 === t) return "ivec2";
          if (3 === t) return "ivec3";
          if (4 === t) return "ivec4";
          if (5 === t) return "ivec5";
          if (6 === t) return "ivec6";
          throw Error("GPU for rank " + t + " is not yet supported");
        }
        function Fi(t, e) {
          var n = JSON.parse(JSON.stringify(t));
          return (n.shapeInfo.logicalShape = e), n;
        }
        function zi(t, e) {
          return e
            .map(function(e) {
              return t[e];
            })
            .join(", ");
        }
        var Li = function(t, e, n, r) {
            (this.variableNames = ["A"]),
              (this.usesPackedTextures = !0),
              w(t.length > 2, function() {
                return (
                  "Packed arg" +
                  (n.charAt(0).toUpperCase() + n.slice(1)) +
                  " supports only inputs with rank above 2."
                );
              });
            var i = t[t.length - 1],
              o = Math.ceil(i / e);
            (this.outputShape = t.slice(0, -1)),
              o > 1 && this.outputShape.push(o),
              r || this.variableNames.push("bestIndicesA");
            var a,
              s,
              u = this.outputShape,
              c = u.length,
              l = Di(c),
              h = xi("coords", c);
            if (1 === o) {
              var f = Di((s = c + 1));
              a =
                "\n        " +
                f +
                " sourceLocR = " +
                f +
                "(" +
                h.join() +
                ", 0);\n        ++" +
                h[c - 1] +
                ";\n        " +
                f +
                " sourceLocG = " +
                f +
                "(" +
                h.join() +
                ", 0);\n        ++" +
                h[c - 2] +
                ";\n        " +
                f +
                " sourceLocA = " +
                f +
                "(" +
                h.join() +
                ", 0);\n        --" +
                h[c - 1] +
                ";\n        " +
                f +
                " sourceLocB = " +
                f +
                "(" +
                h.join() +
                ", 0);\n        --" +
                h[c - 2] +
                ";";
            } else
              (s = c),
                (a =
                  "\n        " +
                  l +
                  " sourceLocR = coords;\n        ++" +
                  h[c - 1] +
                  ";\n        " +
                  l +
                  " sourceLocG = coords;\n        ++" +
                  h[c - 2] +
                  ";\n        " +
                  l +
                  " sourceLocA = coords;\n        --" +
                  h[c - 1] +
                  ";\n        " +
                  l +
                  " sourceLocB = coords;\n        --" +
                  h[c - 2] +
                  ";");
            var p = ["x", "y", "z", "w", "u", "v"].slice(0, s),
              d = "." + p[s - 1],
              m = p.map(function(t) {
                return "int " + t;
              }),
              y = xi("sourceLocR", s - 1).concat("inIdx.r"),
              g = xi("sourceLocG", s - 1).concat("inIdx.g"),
              v = xi("sourceLocB", s - 1).concat("inIdx.b"),
              b = xi("sourceLocA", s - 1).concat("inIdx.a"),
              _ = "max" === n ? "greaterThan" : "lessThan",
              S = r
                ? ""
                : "\n          inIdx = round(vec4(getBestIndicesAChannel(" +
                  y.join() +
                  "),\n                             getBestIndicesAChannel(" +
                  g.join() +
                  "),\n                             getBestIndicesAChannel(" +
                  v.join() +
                  "),\n                             getBestIndicesAChannel(" +
                  b.join() +
                  ")));",
              x =
                "vec4(\n            getAChannel(" +
                y.join() +
                "),\n            hasNextCol ? getAChannel(" +
                g.join() +
                ") : 0.,\n            hasNextRow ? getAChannel(" +
                v.join() +
                ") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(" +
                b.join() +
                ") : 0.)",
              T = r
                ? ""
                : "\n      float getBestIndicesAChannel(" +
                  m.join() +
                  ") {\n        return getChannel(getBestIndicesA(" +
                  p.join() +
                  "),\n                                          vec2(" +
                  p.slice(-2).join() +
                  "));\n      }";
            this.userCode =
              "\n      float getAChannel(" +
              m.join() +
              ") {\n        return getChannel(getA(" +
              p.join() +
              "),\n                               vec2(" +
              p.slice(-2).join() +
              "));\n      }\n      " +
              T +
              "\n      void main() {\n        " +
              l +
              " coords = getOutputCoords();\n        bool hasNextCol = " +
              h[c - 1] +
              " < " +
              (u[c - 1] - 1) +
              ";\n        bool hasNextRow = " +
              h[c - 2] +
              " < " +
              (u[c - 2] - 1) +
              ";\n        " +
              a +
              "\n        ivec4 srcIdx = ivec4(sourceLocR" +
              d +
              ", sourceLocG" +
              d +
              ",\n          sourceLocB" +
              d +
              ", sourceLocA" +
              d +
              ") * " +
              e +
              ";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = " +
              x +
              ";\n\n        for (int i = 0; i < " +
              e +
              "; i++) {\n          inIdx = srcIdx;\n          " +
              S +
              "\n          vec4 candidate = " +
              x +
              ";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(" +
              _ +
              "(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ";
          },
          ji = function(t) {
            (this.variableNames = ["dy"]), (this.outputShape = t.inShape);
            var e = t.filterHeight,
              n = t.filterWidth,
              r = t.strideHeight,
              i = t.strideWidth,
              o = t.dilationHeight,
              a = t.dilationWidth,
              s = t.effectiveFilterHeight,
              u = t.effectiveFilterWidth,
              c = s - 1 - t.padInfo.top,
              l = u - 1 - t.padInfo.left,
              h = 1 / (e * n);
            this.userCode =
              "\n      const ivec2 pads = ivec2(" +
              c +
              ", " +
              l +
              ");\n      const float avgMultiplier = float(" +
              h +
              ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
              s +
              ";\n            wR += " +
              o +
              ") {\n          float dyR = float(dyRCorner + wR) / " +
              r +
              ".0;\n\n          if (dyR < 0.0 || dyR >= " +
              t.outHeight +
              ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < " +
              u +
              ";\n            wC+= " +
              a +
              ") {\n            float dyC = float(dyCCorner + wC) / " +
              i +
              ".0;\n\n            if (dyC < 0.0 || dyC >= " +
              t.outWidth +
              ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          Bi = function(t, e, n, r, i, o) {
            (this.outputShape = []),
              (this.variableNames = ["x", "mean", "variance"]),
              or(t, e),
              or(t, n);
            var a = "0.0";
            null != r &&
              (or(t, r),
              this.variableNames.push("offset"),
              (a = "getOffsetAtOutCoords()"));
            var s = "1.0";
            null != i &&
              (or(t, i),
              this.variableNames.push("scale"),
              (s = "getScaleAtOutCoords()")),
              (this.outputShape = t),
              (this.userCode =
                "\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = " +
                a +
                ";\n        float scale = " +
                s +
                ";\n        float inv = scale * inversesqrt(variance + float(" +
                o +
                "));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ");
          },
          qi = function(t, e, n, r, i, o) {
            (this.usesPackedTextures = !0),
              (this.variableNames = ["x", "mean", "variance"]),
              or(t, e),
              or(t, n);
            var a = "vec4(0.0)";
            null != r &&
              (or(t, r),
              this.variableNames.push("offset"),
              (a = "getOffsetAtOutCoords()"));
            var s = "vec4(1.0)";
            null != i &&
              (or(t, i),
              this.variableNames.push("scale"),
              (s = "getScaleAtOutCoords()")),
              (this.outputShape = t),
              (this.userCode =
                "\n      void main() {\n        vec4 offset = " +
                a +
                ";\n        vec4 scale = " +
                s +
                ";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(" +
                o +
                "));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ");
          },
          Ui = function(t, e, n) {
            (this.variableNames = ["AReal", "AImag", "BReal", "BImag"]),
              (this.outputShape = or(e, n)),
              (this.userCode =
                "\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        " +
                t +
                "\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ");
          },
          Vi = "return a + b;",
          Wi = "return a - b;",
          Gi = "return a * b;",
          Hi = function(t, e, n) {
            (this.variableNames = ["A", "B"]),
              (this.outputShape = or(e, n)),
              (this.userCode =
                "\n      float binaryOperation(float a, float b) {\n        " +
                t +
                "\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ");
          },
          Ki = function(t, e, n, r) {
            void 0 === r && (r = !1),
              (this.variableNames = ["A", "B"]),
              (this.supportsBroadcasting = !0),
              (this.usesPackedTextures = !0),
              (this.outputShape = or(e, n));
            var i = this.outputShape.length,
              o = "";
            if (r)
              if (0 === i || 1 === T(this.outputShape))
                o =
                  "\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";
              else if (
                ((o =
                  "\n          " +
                  Di(i) +
                  " coords = getOutputCoords();\n        "),
                1 === i)
              )
                o +=
                  "\n            result.y = (coords + 1) >= " +
                  this.outputShape[0] +
                  " ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ";
              else {
                var a = xi("coords", i);
                o +=
                  "\n            bool nextRowOutOfBounds =\n              (" +
                  a[i - 2] +
                  " + 1) >= " +
                  this.outputShape[i - 2] +
                  ";\n            bool nextColOutOfBounds =\n              (" +
                  a[i - 1] +
                  " + 1) >= " +
                  this.outputShape[i - 1] +
                  ";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ";
              }
            this.userCode =
              "\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        " +
              t +
              "\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        " +
              o +
              "\n\n        setOutput(result);\n      }\n    ";
          },
          Qi = (function() {
            function t(t) {
              (this.variableNames = ["A"]),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, min, max));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t, e) {
                var n = this;
                return function(r, i) {
                  null == n.minLoc &&
                    ((n.minLoc = r.getUniformLocationNoThrow(i, "min")),
                    (n.maxLoc = r.getUniformLocationNoThrow(i, "max"))),
                    r.gl.uniform1f(n.minLoc, t),
                    r.gl.uniform1f(n.maxLoc, e);
                };
              }),
              t
            );
          })(),
          Xi = (function() {
            function t(t) {
              (this.variableNames = ["A"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(min), vec4(max)));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t, e) {
                var n = this;
                return function(r, i) {
                  null == n.minLoc &&
                    ((n.minLoc = r.getUniformLocationNoThrow(i, "min")),
                    (n.maxLoc = r.getUniformLocationNoThrow(i, "max"))),
                    r.gl.uniform1f(n.minLoc, t),
                    r.gl.uniform1f(n.maxLoc, e);
                };
              }),
              t
            );
          })(),
          $i = function(t) {
            (this.variableNames = ["real", "imag"]),
              (this.outputShape = t),
              (this.userCode =
                "\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    ");
          },
          Yi = function(t) {
            (this.outputShape = []),
              (this.outputShape = pn(t, 1)),
              (this.variableNames = t.map(function(t, e) {
                return "T" + e;
              }));
            var e = new Array(t.length - 1);
            e[0] = t[0][1];
            for (var n = 1; n < e.length; n++) e[n] = e[n - 1] + t[n][1];
            var r = ["if (yC < " + e[0] + ") setOutput(getT0(yR, yC));"];
            for (n = 1; n < e.length; n++) {
              var i = e[n - 1];
              r.push(
                "else if (yC < " +
                  e[n] +
                  ") setOutput(getT" +
                  n +
                  "(yR, yC-" +
                  i +
                  "));"
              );
            }
            var o = e.length,
              a = e[e.length - 1];
            r.push("else setOutput(getT" + o + "(yR, yC-" + a + "));"),
              (this.userCode =
                "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        " +
                r.join("\n        ") +
                "\n      }\n    ");
          },
          Ji = function(t, e) {
            (this.usesPackedTextures = !0),
              (this.outputShape = []),
              (this.outputShape = pn(t, e));
            var n = this.outputShape,
              r = n.length,
              i = Di(r),
              o = xi("coords", r),
              a = ["x", "y", "z", "w", "u", "v"].slice(0, r);
            this.variableNames = t.map(function(t, e) {
              return "T" + e;
            });
            var s = new Array(t.length - 1);
            s[0] = t[0][e];
            for (var u = 1; u < s.length; u++) s[u] = s[u - 1] + t[u][e];
            var c = a[e],
              l = "vec2(" + a.slice(-2).join() + ")",
              h = a.join(),
              f =
                "if (" +
                c +
                " < " +
                s[0] +
                ")\n          return getChannel(getT0(" +
                h +
                "), " +
                l +
                ");";
            for (u = 1; u < s.length; u++) {
              var p = s[u - 1];
              f +=
                "\n        else if (" +
                c +
                " < " +
                s[u] +
                ") {\n          " +
                c +
                " -= " +
                p +
                ";\n          return getChannel(getT" +
                u +
                "(" +
                h +
                "), " +
                l +
                ");\n        }";
            }
            var d = s.length;
            (f +=
              "\n        else {\n          " +
              c +
              " -= " +
              s[s.length - 1] +
              ";\n          return getChannel(getT" +
              d +
              "(" +
              h +
              "), " +
              l +
              ");\n        }"),
              (this.userCode =
                "\n      float getValue(" +
                a.map(function(t) {
                  return "int " + t;
                }) +
                ") {\n        " +
                f +
                "\n      }\n\n      void main() {\n        " +
                i +
                " coords = getOutputCoords();\n        vec4 result = vec4(getValue(" +
                o +
                "), 0., 0., 0.);\n        if (++" +
                o[r - 1] +
                " < " +
                n[r - 1] +
                ") {\n          result.g = getValue(" +
                o +
                ");\n        }\n        if (++" +
                o[r - 2] +
                " < " +
                n[r - 2] +
                ") {\n          result.a = getValue(" +
                o +
                ");\n        }\n        if (" +
                o[r - 2] +
                " < " +
                n[r - 2] +
                " &&\n            --" +
                o[r - 1] +
                " < " +
                n[r - 1] +
                ") {\n          result.b = getValue(" +
                o +
                ");\n        }\n        setOutput(result);\n      }\n    ");
          },
          Zi = function(t) {
            (this.variableNames = ["x", "dy"]),
              (this.outputShape = t.filterShape);
            var e = t.strideHeight,
              n = t.strideWidth,
              r = t.padInfo.top,
              i = t.padInfo.left;
            this.userCode =
              "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < " +
              t.batchSize +
              "; b++) {\n          for (int yR = 0; yR < " +
              t.outHeight +
              "; yR++) {\n            int xR = wR + yR * " +
              e +
              " - " +
              r +
              ";\n\n            if (xR < 0 || xR >= " +
              t.inHeight +
              ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < " +
              t.outWidth +
              "; yC++) {\n              int xC = wC + yC * " +
              n +
              " - " +
              i +
              ";\n\n              if (xC < 0 || xC >= " +
              t.inWidth +
              ") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          to = function(t) {
            (this.variableNames = ["dy", "W"]), (this.outputShape = t.inShape);
            var e = t.filterHeight,
              n = t.filterWidth,
              r = t.strideHeight,
              i = t.strideWidth,
              o = e - 1 - t.padInfo.top,
              a = n - 1 - t.padInfo.left;
            this.userCode =
              "\n      const ivec2 pads = ivec2(" +
              o +
              ", " +
              a +
              ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
              e +
              "; wR++) {\n          float dyR = float(dyRCorner + wR) / " +
              r +
              ".0;\n\n          if (dyR < 0.0 || dyR >= " +
              t.outHeight +
              ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = " +
              e +
              " - 1 - wR;\n\n          for (int wC = 0; wC < " +
              n +
              "; wC++) {\n            float dyC = float(dyCCorner + wC) / " +
              i +
              ".0;\n\n            if (dyC < 0.0 || dyC >= " +
              t.outWidth +
              ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = " +
              n +
              " - 1 - wC;\n\n            for (int d2 = 0; d2 < " +
              t.outChannels +
              "; d2++) {\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          eo = function(t) {
            (this.variableNames = ["x", "dy"]),
              (this.outputShape = t.filterShape);
            var e = t.strideDepth,
              n = t.strideHeight,
              r = t.strideWidth,
              i = t.padInfo.front,
              o = t.padInfo.top,
              a = t.padInfo.left;
            this.userCode =
              "\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < " +
              t.batchSize +
              "; b++) {\n          for (int yF = 0; yF < " +
              t.outDepth +
              "; yF++) {\n            int xF = wF + yF * " +
              e +
              " - " +
              i +
              ";\n\n            if (xF < 0 || xF >= " +
              t.inDepth +
              ") {\n              continue;\n            }\n\n            for (int yR = 0; yR < " +
              t.outHeight +
              "; yR++) {\n              int xR = wR + yR * " +
              n +
              " - " +
              o +
              ";\n\n              if (xR < 0 || xR >= " +
              t.inHeight +
              ") {\n                continue;\n              }\n\n              for (int yC = 0; yC < " +
              t.outWidth +
              "; yC++) {\n                int xC = wC + yC * " +
              r +
              " - " +
              a +
              ";\n\n                if (xC < 0 || xC >= " +
              t.inWidth +
              ") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          no = function(t) {
            (this.variableNames = ["dy", "W"]), (this.outputShape = t.inShape);
            var e = t.filterDepth,
              n = t.filterHeight,
              r = t.filterWidth,
              i = t.strideDepth,
              o = t.strideHeight,
              a = t.strideWidth,
              s = e - 1 - t.padInfo.front,
              u = n - 1 - t.padInfo.top,
              c = r - 1 - t.padInfo.left;
            this.userCode =
              "\n      const ivec3 pads = ivec3(" +
              s +
              ", " +
              u +
              ", " +
              c +
              ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < " +
              e +
              "; wF++) {\n          float dyF = float(dyFCorner + wF) / " +
              i +
              ".0;\n\n          if (dyF < 0.0 || dyF >= " +
              t.outDepth +
              ".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = " +
              e +
              " - 1 - wF;\n\n          for (int wR = 0; wR < " +
              n +
              "; wR++) {\n            float dyR = float(dyRCorner + wR) / " +
              o +
              ".0;\n\n            if (dyR < 0.0 || dyR >= " +
              t.outHeight +
              ".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = " +
              n +
              " - 1 - wR;\n\n            for (int wC = 0; wC < " +
              r +
              "; wC++) {\n              float dyC = float(dyCCorner + wC) / " +
              a +
              ".0;\n\n              if (dyC < 0.0 || dyC >= " +
              t.outWidth +
              ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = " +
              r +
              " - 1 - wC;\n\n              for (int d2 = 0; d2 < " +
              t.outChannels +
              "; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          ro = function(t) {
            (this.variableNames = ["x", "dy"]),
              (this.outputShape = t.filterShape);
            var e = t.strideHeight,
              n = t.strideWidth,
              r = t.padInfo.top,
              i = t.padInfo.left,
              o = t.outChannels / t.inChannels;
            this.userCode =
              "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * " +
              o +
              " + dm;\n\n        float dotProd = 0.0;\n\n        // TODO: Vec4 over the batch size\n        for (int b = 0; b < " +
              t.batchSize +
              "; b++) {\n          for (int yR = 0; yR < " +
              t.outHeight +
              "; yR++) {\n            int xR = wR + yR * " +
              e +
              " - " +
              r +
              ";\n\n            if (xR < 0 || xR >= " +
              t.inHeight +
              ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < " +
              t.outWidth +
              "; yC++) {\n              int xC = wC + yC * " +
              n +
              " - " +
              i +
              ";\n\n              if (xC < 0 || xC >= " +
              t.inWidth +
              ") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          io = function(t) {
            (this.variableNames = ["dy", "W"]), (this.outputShape = t.inShape);
            var e = t.filterHeight,
              n = t.filterWidth,
              r = t.strideHeight,
              i = t.strideWidth,
              o = e - 1 - t.padInfo.top,
              a = n - 1 - t.padInfo.left,
              s = t.outChannels / t.inChannels;
            this.userCode =
              "\n      const ivec2 pads = ivec2(" +
              o +
              ", " +
              a +
              ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < " +
              e +
              "; wR++) {\n          float dyR = float(dyRCorner + wR) / " +
              r +
              ".0;\n\n          if (dyR < 0.0 || dyR >= " +
              t.outHeight +
              ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = " +
              e +
              " - 1 - wR;\n\n          for (int wC = 0; wC < " +
              n +
              "; wC++) {\n            float dyC = float(dyCCorner + wC) / " +
              i +
              ".0;\n\n            if (dyC < 0.0 || dyC >= " +
              t.outWidth +
              ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = " +
              n +
              " - 1 - wC;\n\n            // TODO: Vec4 over the channelMul\n            for (int dm = 0; dm < " +
              s +
              "; dm++) {\n              int d2 = d1 * " +
              s +
              " + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          oo = function(t) {
            (this.variableNames = ["x", "W"]), (this.outputShape = t.outShape);
            var e = t.padInfo.top,
              n = t.padInfo.left,
              r = t.strideHeight,
              i = t.strideWidth,
              o = t.dilationHeight,
              a = t.dilationWidth,
              s = t.filterHeight,
              u = t.filterWidth,
              c = 4 * Math.floor(t.inChannels / 4),
              l = t.inChannels % 4;
            this.userCode =
              "\n      const ivec2 strides = ivec2(" +
              r +
              ", " +
              i +
              ");\n      const ivec2 pads = ivec2(" +
              e +
              ", " +
              n +
              ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
              s +
              "; wR++) {\n          int xR = xRCorner + wR * " +
              o +
              ";\n\n          if (xR < 0 || xR >= " +
              t.inHeight +
              ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " +
              u +
              "; wC++) {\n            int xC = xCCorner + wC * " +
              a +
              ";\n\n            if (xC < 0 || xC >= " +
              t.inWidth +
              ") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < " +
              c +
              "; d1 += 4) {\n              vec4 xValues = vec4(\n                getX(batch, xR, xC, d1),\n                getX(batch, xR, xC, d1 + 1),\n                getX(batch, xR, xC, d1 + 2),\n                getX(batch, xR, xC, d1 + 3)\n              );\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              dotProd += dot(xValues, wValues);\n            }\n\n            if (" +
              (1 === l) +
              ") {\n              dotProd +=\n                getX(batch, xR, xC, " +
              c +
              ") *\n                getW(wR, wC, " +
              c +
              ", d2);\n            } else if (" +
              (2 === l) +
              ") {\n              vec2 xValues = vec2(\n                getX(batch, xR, xC, " +
              c +
              "),\n                getX(batch, xR, xC, " +
              c +
              " + 1)\n              );\n              vec2 wValues = vec2(\n                getW(wR, wC, " +
              c +
              ", d2),\n                getW(wR, wC, " +
              c +
              " + 1, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            } else if (" +
              (3 === l) +
              ") {\n              vec3 xValues = vec3(\n                getX(batch, xR, xC, " +
              c +
              "),\n                getX(batch, xR, xC, " +
              c +
              " + 1),\n                getX(batch, xR, xC, " +
              c +
              " + 2)\n              );\n              vec3 wValues = vec3(\n                getW(wR, wC, " +
              c +
              ", d2),\n                getW(wR, wC, " +
              c +
              " + 1, d2),\n                getW(wR, wC, " +
              c +
              " + 2, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          ao = function(t) {
            (this.variableNames = ["x", "W"]), (this.outputShape = t.outShape);
            var e = t.padInfo.front,
              n = t.padInfo.top,
              r = t.padInfo.left,
              i = t.strideDepth,
              o = t.strideHeight,
              a = t.strideWidth,
              s = t.dilationDepth,
              u = t.dilationHeight,
              c = t.dilationWidth,
              l = t.filterDepth,
              h = t.filterHeight,
              f = t.filterWidth,
              p = 4 * Math.floor(t.inChannels / 4),
              d = t.inChannels % 4;
            this.userCode =
              "\n      const ivec3 strides = ivec3(" +
              i +
              ", " +
              o +
              ", " +
              a +
              ");\n      const ivec3 pads = ivec3(" +
              e +
              ", " +
              n +
              ", " +
              r +
              ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < " +
              l +
              "; wF++) {\n          int xF = xFCorner + wF * " +
              s +
              ";\n\n          if (xF < 0 || xF >= " +
              t.inDepth +
              ") {\n            continue;\n          }\n\n          for (int wR = 0; wR < " +
              h +
              "; wR++) {\n            int xR = xRCorner + wR * " +
              u +
              ";\n\n            if (xR < 0 || xR >= " +
              t.inHeight +
              ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " +
              f +
              "; wC++) {\n              int xC = xCCorner + wC * " +
              c +
              ";\n\n              if (xC < 0 || xC >= " +
              t.inWidth +
              ") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < " +
              p +
              "; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (" +
              (1 === d) +
              ") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, " +
              p +
              ") *\n                  getW(wF, wR, wC, " +
              p +
              ", d2);\n              } else if (" +
              (2 === d) +
              ") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, " +
              p +
              "),\n                  getX(batch, xF, xR, xC, " +
              p +
              " + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, " +
              p +
              ", d2),\n                  getW(wF, wR, wC, " +
              p +
              " + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (" +
              (3 === d) +
              ") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, " +
              p +
              "),\n                  getX(batch, xF, xR, xC, " +
              p +
              " + 1),\n                  getX(batch, xF, xR, xC, " +
              p +
              " + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, " +
              p +
              ", d2),\n                  getW(wF, wR, wC, " +
              p +
              " + 1, d2),\n                  getW(wF, wR, wC, " +
              p +
              " + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          so = function(t) {
            (this.variableNames = ["x", "W"]), (this.outputShape = t.outShape);
            var e = t.inHeight,
              n = t.inWidth,
              r = t.padInfo.top,
              i = t.padInfo.left,
              o = t.strideHeight,
              a = t.strideWidth,
              s = t.dilationHeight,
              u = t.dilationWidth,
              c = t.filterHeight,
              l = t.filterWidth,
              h = t.outChannels / t.inChannels;
            this.userCode =
              "\n      const ivec2 strides = ivec2(" +
              o +
              ", " +
              a +
              ");\n      const ivec2 pads = ivec2(" +
              r +
              ", " +
              i +
              ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / " +
              h +
              ";\n        int q = d2 - d1 * " +
              h +
              ";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < " +
              c +
              "; wR++) {\n          int xR = xRCorner + wR * " +
              s +
              ";\n\n          if (xR < 0 || xR >= " +
              e +
              ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " +
              l +
              "; wC++) {\n            int xC = xCCorner + wC * " +
              u +
              ";\n\n            if (xC < 0 || xC >= " +
              n +
              ") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          uo = function(t) {
            (this.variableNames = ["x", "W"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = t.outShape);
            for (
              var e = t.inHeight,
                n = t.inWidth,
                r = t.padInfo.top,
                i = t.padInfo.left,
                o = t.strideHeight,
                a = t.strideWidth,
                s = t.dilationHeight,
                u = t.dilationWidth,
                c = t.filterHeight,
                l = t.filterWidth,
                h = l,
                f = "int xR; int xC; int xCOffset;",
                p = 0;
              p < c;
              p++
            )
              for (var d = 0; d < l; d++)
                f +=
                  "\n          vec4 xTexelR" +
                  p +
                  "C" +
                  2 * d +
                  " = vec4(0.);\n          vec4 wR" +
                  p +
                  "C" +
                  d +
                  " = vec4(0.);\n          vec4 xR" +
                  p +
                  "C" +
                  d +
                  " = vec4(0.);";
            for (p = 0; p < c; p++)
              for (var m = 0; m < h; m++) {
                if (
                  ((f +=
                    "\n          xR = xRCorner + " +
                    p * s +
                    ";\n          xC = xCCorner + " +
                    (d = 2 * m) * u +
                    ";\n        "),
                  1 === a)
                ) {
                  if (
                    d < l &&
                    ((f +=
                      i % 2 == 1
                        ? "\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < " +
                          e +
                          " && xCOffset >= 0 && xCOffset < " +
                          n +
                          ") {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < " +
                          e +
                          " && xCOffset >= 0 && xCOffset < " +
                          n +
                          ") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n                  xR" +
                          p +
                          "C" +
                          d +
                          " = vec4(previous.zw, xTexelR" +
                          p +
                          "C" +
                          d +
                          ".xy);\n                } else {\n                  xR" +
                          p +
                          "C" +
                          d +
                          " = vec4(0, 0, xTexelR" +
                          p +
                          "C" +
                          d +
                          ".xy);\n                }\n              "
                        : "\n                if(xR >= 0 && xR < " +
                          e +
                          " && xC >= 0 && xC < " +
                          n +
                          ") {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = vec4(0.);\n                }\n\n                xR" +
                          p +
                          "C" +
                          d +
                          " = xTexelR" +
                          p +
                          "C" +
                          d +
                          ";\n              "),
                    d + 1 < l)
                  ) {
                    var y = i % 2 == 0 ? v(u) : u;
                    (u % 2 == 0 && i % 2 == 1) || (u % 2 != 0 && i % 2 != 1)
                      ? ((f +=
                          "\n                  xCOffset = xC + " +
                          (i % 2) +
                          " + " +
                          y +
                          ";\n\n                  if(xR >= 0 && xR < " +
                          e +
                          " &&\n                    xCOffset >= 0 && xCOffset < " +
                          n +
                          ") {\n                    xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          " = getX(batch, xR, xCOffset, d1);\n                  }\n                "),
                        u > 1 &&
                          (f +=
                            "\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < " +
                            e +
                            " &&\n                      xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                      xTexelR" +
                            p +
                            "C" +
                            d +
                            " = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR" +
                            p +
                            "C" +
                            d +
                            " = vec4(0.);\n                    }\n                  "),
                        (f +=
                          "\n                  xR" +
                          p +
                          "C" +
                          (d + 1) +
                          " = vec4(\n                    xTexelR" +
                          p +
                          "C" +
                          d +
                          ".zw, xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          ".xy);\n                "))
                      : (f +=
                          "\n                  xCOffset = xC + " +
                          y +
                          ";\n\n                  if(xR >= 0 && xR < " +
                          e +
                          " &&\n                    xCOffset >= 0 && xCOffset < " +
                          n +
                          ") {\n                    xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          " = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR" +
                          p +
                          "C" +
                          (d + 1) +
                          " = xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          ";\n                ");
                  }
                } else
                  d < l &&
                    ((f +=
                      "\n              if(xR >= 0 && xR < " +
                      e +
                      ") {\n            "),
                    i % 2 == 1
                      ? ((f +=
                          "\n                xCOffset = xC + 1 - " +
                          a +
                          ";\n                if(xCOffset >= 0 && xCOffset < " +
                          n +
                          ") {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < " +
                          n +
                          ") {\n                  xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          " = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          " = vec4(0.);\n                }\n\n                xR" +
                          p +
                          "C" +
                          d +
                          " = vec4(\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          ".zw, xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          ".zw);\n              "),
                        d + 1 < l &&
                          (f +=
                            "\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + " +
                            a +
                            ";\n                  if(xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR" +
                            p +
                            "C" +
                            (d + 1) +
                            " = vec4(xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            ".xy, final.xy);\n                "))
                      : ((f +=
                          "\n                if(xC >= 0 && xC < " +
                          n +
                          ") {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          " = vec4(0.);\n                }\n\n                xCOffset = xC + " +
                          a +
                          ";\n                if(xCOffset >= 0 && xCOffset < " +
                          n +
                          ") {\n                  xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          " = vec4(0.);\n                }\n\n                xR" +
                          p +
                          "C" +
                          d +
                          " = vec4(\n                  xTexelR" +
                          p +
                          "C" +
                          d +
                          ".xy, xTexelR" +
                          p +
                          "C" +
                          (d + 2) +
                          ".xy);\n              "),
                        d + 1 < l &&
                          (f +=
                            "\n                  xR" +
                            p +
                            "C" +
                            (d + 1) +
                            " = vec4(\n                    xTexelR" +
                            p +
                            "C" +
                            d +
                            ".zw, xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            ".zw);\n                ")),
                    (f += "}"));
                d < l &&
                  ((f +=
                    "\n            vec4 wTexelR" +
                    p +
                    "C" +
                    d +
                    " = getW(" +
                    p +
                    ", " +
                    d +
                    ", d1, q);\n            wR" +
                    p +
                    "C" +
                    d +
                    " = vec4(wTexelR" +
                    p +
                    "C" +
                    d +
                    ".xz, wTexelR" +
                    p +
                    "C" +
                    d +
                    ".xz);\n          "),
                  d + 1 < l &&
                    (f +=
                      "\n              vec4 wTexelR" +
                      p +
                      "C" +
                      (d + 1) +
                      " = getW(" +
                      p +
                      ", " +
                      (d + 1) +
                      ", d1, q);\n              wR" +
                      p +
                      "C" +
                      (d + 1) +
                      " =\n                vec4(wTexelR" +
                      p +
                      "C" +
                      (d + 1) +
                      ".xz, wTexelR" +
                      p +
                      "C" +
                      (d + 1) +
                      ".xz);"));
              }
            for (p = 0; p < c; p++)
              for (d = 0; d < l; d++)
                f += "result += xR" + p + "C" + d + " * wR" + p + "C" + d + ";";
            this.userCode =
              "\n      const ivec2 strides = ivec2(" +
              o +
              ", " +
              a +
              ");\n      const ivec2 pads = ivec2(" +
              r +
              ", " +
              i +
              ");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 result = vec4(0.);\n\n        " +
              f +
              "\n\n        setOutput(result);\n      }\n    ";
          },
          co = function(t, e, n, r, i) {
            (this.variableNames = ["Image", "Boxes", "BoxInd"]),
              (this.outputShape = []);
            var o = t[0],
              a = t[1],
              s = t[2],
              u = t[3],
              c = e[0],
              l = n[0],
              h = n[1];
            this.outputShape = [c, l, h, u];
            var f = "bilinear" === r ? 1 : 0,
              p = [a - 1 + ".0", s - 1 + ".0"],
              d = p[0],
              m = p[1],
              y =
                l > 1
                  ? [
                      "" + (a - 1) / (l - 1),
                      "(y2-y1) * height_ratio",
                      "y1*" + d + " + float(y)*(height_scale)"
                    ]
                  : ["0.0", "0.0", "0.5 * (y1+y2) * " + d],
              g = y[0],
              v = y[1],
              b = y[2],
              w =
                h > 1
                  ? [
                      "" + (s - 1) / (h - 1),
                      "(x2-x1) * width_ratio",
                      "x1*" + m + " + float(x)*(width_scale)"
                    ]
                  : ["0.0", "0.0", "0.5 * (x1+x2) * " + m],
              _ = w[0],
              S = w[1],
              x = w[2];
            this.userCode =
              "\n      const float height_ratio = float(" +
              g +
              ");\n      const float width_ratio = float(" +
              _ +
              ");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= " +
              o +
              ") {\n          return;\n        }\n\n        float height_scale = " +
              v +
              ";\n        float width_scale = " +
              S +
              ";\n\n        float in_y = " +
              b +
              ";\n        if( in_y < 0.0 || in_y > " +
              d +
              " ) {\n          setOutput(float(" +
              i +
              "));\n          return;\n        }\n        float in_x = " +
              x +
              ";\n        if( in_x < 0.0 || in_x > " +
              m +
              " ) {\n          setOutput(float(" +
              i +
              "));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(" +
              f +
              " == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ";
          },
          lo = function(t, e, n) {
            (this.variableNames = ["x"]), (this.outputShape = t);
            var r = t.length,
              i = t[t.length - 1],
              o = n ? "<" : ">";
            this.userCode =
              "\n      int getIndex(int i) {\n        " +
              (n ? "return " + i + " -i - 1;" : "return i;") +
              "\n      }\n\n      void main() {\n        " +
              Di(r) +
              " coords = getOutputCoords();\n        int end = " +
              ho(r, "coords") +
              ";\n        float val = 0.0;\n        for (int i = " +
              i +
              " - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx " +
              o +
              " end) {\n            continue;\n          }\n          if (idx == end && " +
              e +
              ") {\n            continue;\n          }\n          " +
              ho(r, "coords") +
              " = idx;\n          val += getX(" +
              (function(t, e) {
                if (1 === r) return "" + e;
                if (2 === r) return e + ".x, " + e + ".y";
                if (3 === r) return e + ".x, " + e + ".y, " + e + ".z";
                if (4 === r)
                  return e + ".x, " + e + ".y, " + e + ".z, " + e + ".w";
                throw Error(
                  "Cumulative sum for rank " + r + " is not yet supported"
                );
              })(0, "coords") +
              ");\n        }\n        setOutput(val);\n      }\n    ";
          };
        function ho(t, e) {
          if (1 === t) return "" + e;
          if (2 === t) return e + ".y";
          if (3 === t) return e + ".z";
          if (4 === t) return e + ".w";
          throw Error("Cumulative sum for rank " + t + " is not yet supported");
        }
        var fo,
          po,
          mo = (function() {
            function t(t, e, n) {
              (this.variableNames = ["x"]),
                (this.outputShape = []),
                (this.outputShape = t),
                (this.blockSize = e),
                (this.dataFormat = n),
                (this.userCode =
                  "\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = " +
                  this.getHeightCoordString() +
                  ";\n      int w = " +
                  this.getWidthCoordString() +
                  ";\n      int d = " +
                  this.getDepthCoordString() +
                  ";\n\n      int in_h = h / " +
                  e +
                  ";\n      int offset_h = imod(h, " +
                  e +
                  ");\n      int in_w = w / " +
                  e +
                  ";\n      int offset_w = imod(w, " +
                  e +
                  ");\n      int offset_d = (offset_h * " +
                  e +
                  " + offset_w) *\n        " +
                  this.getOutputDepthSize() +
                  ";\n      int in_d = d + offset_d;\n\n      float result = " +
                  this.getInputSamplingString() +
                  ";\n      setOutput(result);\n    }\n  ");
            }
            return (
              (t.prototype.getHeightCoordString = function() {
                return "NHWC" === this.dataFormat ? "coords[1]" : "coords[2]";
              }),
              (t.prototype.getWidthCoordString = function() {
                return "NHWC" === this.dataFormat ? "coords[2]" : "coords[3]";
              }),
              (t.prototype.getDepthCoordString = function() {
                return "NHWC" === this.dataFormat ? "coords[3]" : "coords[1]";
              }),
              (t.prototype.getOutputDepthSize = function() {
                return "NHWC" === this.dataFormat
                  ? this.outputShape[3]
                  : this.outputShape[1];
              }),
              (t.prototype.getInputSamplingString = function() {
                return "NHWC" === this.dataFormat
                  ? "getX(b, in_h, in_w, in_d)"
                  : "getX(b, in_d, in_h, in_w)";
              }),
              t
            );
          })(),
          yo = function(t) {
            this.variableNames = ["A"];
            var e = Ti();
            (this.outputShape = t),
              (this.userCode =
                "\n      const float FLOAT_MAX = 1.70141184e38;\n      const float FLOAT_MIN = 1.17549435e-38;\n\n      lowp vec4 encode_float(highp float v) {\n        if (isnan(v)) {\n          return vec4(255, 255, 255, 255);\n        }\n\n        highp float av = abs(v);\n\n        if(av < FLOAT_MIN) {\n          return vec4(0.0, 0.0, 0.0, 0.0);\n        } else if(v > FLOAT_MAX) {\n          return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n        } else if(v < -FLOAT_MAX) {\n          return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n        }\n\n        highp vec4 c = vec4(0,0,0,0);\n\n        highp float e = floor(log2(av));\n        highp float m = exp2(fract(log2(av))) - 1.0;\n\n        c[2] = floor(128.0 * m);\n        m -= c[2] / 128.0;\n        c[1] = floor(32768.0 * m);\n        m -= c[1] / 32768.0;\n        c[0] = floor(8388608.0 * m);\n\n        highp float ebias = e + 127.0;\n        c[3] = floor(ebias / 2.0);\n        ebias -= c[3] * 2.0;\n        c[2] += floor(ebias) * 128.0;\n\n        c[3] += 128.0 * step(0.0, -v);\n\n        return c / 255.0;\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        " +
                e.output +
                " = encode_float(x);\n      }\n    ");
          },
          go = function(t, e) {
            this.variableNames = ["A"];
            var n = Ti(),
              r = e[0],
              i = e[1];
            (this.outputShape = t),
              (this.userCode =
                "\n      " +
                Ei(t) +
                "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex /= 4;\n        int r = flatIndex / " +
                i +
                ";\n        int c = imod(flatIndex, " +
                i +
                ");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(" +
                i +
                ".0, " +
                r +
                ".0);\n        vec4 values = " +
                n.texture2D +
                "(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        " +
                n.output +
                " = vec4(result, 0., 0., 0.);\n      }\n    ");
          },
          vo = function(t, e) {
            this.variableNames = ["A"];
            var n = Ti(),
              r = e[0],
              i = e[1];
            this.outputShape = t;
            for (var o = "", a = 0; a <= 1; a++)
              for (var s = 0; s <= 1; s++) {
                var u = 2 * a + s;
                o +=
                  "\n          localCoords = coords;\n          if(localCoords[2] + " +
                  s +
                  " < " +
                  t[2] +
                  ") {\n            localCoords[2] += " +
                  s +
                  ";\n            if(localCoords[1] + " +
                  a +
                  " < " +
                  t[1] +
                  ") {\n              localCoords[1] += " +
                  a +
                  ";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n    \n              flatIndex /= 4;\n              r = flatIndex / " +
                  i +
                  ";\n              c = imod(flatIndex, " +
                  i +
                  ");\n              uv = (vec2(c, r) + halfCR) / vec2(" +
                  i +
                  ".0, " +
                  r +
                  ".0);\n              values = " +
                  n.texture2D +
                  "(A, uv);\n\n              if(offset == 0) {\n                result[" +
                  u +
                  "] = values[0];\n              } else if(offset == 1) {\n                result[" +
                  u +
                  "] = values[1];\n              } else if(offset == 2) {\n                result[" +
                  u +
                  "] = values[2];\n              } else {\n                result[" +
                  u +
                  "] = values[3];\n              }\n            }\n          }\n        ";
              }
            this.userCode =
              "\n      " +
              Ei(t) +
              "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n        \n        " +
              o +
              "\n\n        " +
              n.output +
              " = result;\n      }\n    ";
          },
          bo = function(t, e, n) {
            this.variableNames = ["real", "imag"];
            var r = e[1];
            this.outputShape = e;
            var i = n ? "2.0 * " + Math.PI : "-2.0 * " + Math.PI,
              o = n ? r + ".0" : "1.0";
            this.userCode =
              "\n      const float exponentMultiplier = " +
              i +
              ";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        " +
              t +
              "\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(" +
              r +
              ");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < " +
              r +
              "; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / " +
              o +
              ";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ";
          },
          wo = (function() {
            function t(t, e) {
              (this.outputShape = []),
                (this.variableNames = ["x"]),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t) {
                var e = this;
                return function(n, r) {
                  null == e.valueLoc &&
                    (e.valueLoc = n.getUniformLocationNoThrow(r, "value")),
                    n.gl.uniform1f(e.valueLoc, t);
                };
              }),
              t
            );
          })(),
          _o = function(t) {
            this.variableNames = ["A"];
            var e = Ti(),
              n = t[0],
              r = t[1];
            (this.outputShape = t),
              (this.userCode =
                "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
                r +
                ".0, " +
                n +
                ".0);\n\n        vec4 values = " +
                e.texture2D +
                "(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ");
          },
          So = function(t) {
            this.variableNames = ["A"];
            var e = Ti(),
              n = t[0],
              r = t[1];
            (this.outputShape = t),
              (this.userCode =
                "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
                r +
                ".0, " +
                n +
                ".0);\n            vec4 values = " +
                e.texture2D +
                "(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        " +
                e.output +
                " = result;\n      }\n    ");
          },
          xo = function(t, e, n) {
            this.variableNames = ["A", "indices"];
            var r = t.slice();
            (r[n] = e), (this.outputShape = r), (this.rank = r.length);
            var i = Di(this.rank),
              o = (function(t, e) {
                var n = t.length;
                if (n > 4)
                  throw Error("Gather for rank " + n + " is not yet supported");
                if (1 === n) return "int(getIndices(resRC))";
                for (
                  var r = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"],
                    i = [],
                    o = 0;
                  o < t.length;
                  o++
                )
                  o === e
                    ? i.push("int(getIndices(" + r[o] + "))")
                    : i.push("" + r[o]);
                return i.join();
              })(t, n);
            this.userCode =
              "\n      void main() {\n        " +
              i +
              " resRC = getOutputCoords();\n        setOutput(getA(" +
              o +
              "));\n      }\n    ";
          },
          To = function(t, e, n) {
            (this.sliceDim = t),
              (this.strides = e),
              (this.variableNames = ["x", "indices"]),
              (this.outputShape = n);
            var r = Di(e.length),
              i = Di(n.length),
              o = this.sliceDim > 1 ? "strides[j]" : "strides";
            this.userCode =
              "\n        " +
              r +
              " strides = " +
              r +
              "(" +
              this.strides +
              ");\n         void main() {\n          " +
              i +
              " coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < " +
              this.sliceDim +
              "; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * " +
              o +
              ";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ";
          };
        function Ao(t, e) {
          return [e, t];
        }
        function ko(t, e) {
          return t * e;
        }
        function Eo(t, e, n) {
          var r = (function(t, e) {
            if (t % e != 0)
              throw new Error(
                "unpackedSize (" + t + ") must be a multiple of " + e
              );
            return t / e;
          })(t.length, n);
          if (e.length < r)
            throw new Error("matrix length (" + e.length + ") must be >= " + r);
          for (var i = 0, o = 0; o < t.length; o += n) e[i++] = t[o];
        }
        function No(t, e) {
          return [Math.max(1, Math.ceil(e / 2)), Math.max(1, Math.ceil(t / 2))];
        }
        function Oo(t, e) {
          var n = No(t, e);
          return n[0] * n[1] * 4;
        }
        function Co(t, e, n, r, i) {
          var o = n * r;
          if (i.length < o)
            throw new Error("matrix length (" + i.length + ") must be >= " + o);
          for (
            var a = r % 2 == 1,
              s = n % 2 == 1,
              u = Math.floor(r / 2),
              c = Math.floor(n / 2),
              l = Math.ceil(r / 2),
              h = l * Math.ceil(n / 2),
              f = v(n) * v(r),
              p = 0;
            p < e;
            p++
          ) {
            for (
              var d = p * n * r,
                m = p * f,
                y = a ? 4 : 0,
                g = r + (a ? 1 : 0),
                b = m,
                w = d,
                _ = d + r,
                S = 0;
              S < c;
              ++S
            ) {
              for (var x = 0; x < u; ++x)
                (i[w++] = t[b++]),
                  (i[w++] = t[b++]),
                  (i[_++] = t[b++]),
                  (i[_++] = t[b++]);
              (b += y), (w += g), (_ += g);
            }
            if (a) {
              b = m + 4 * (l - 1);
              var T = d + r - 1;
              for (y = 4 * l, g = 2 * r, S = 0; S < c; ++S)
                (i[T] = t[b]), (i[T + r] = t[b + 2]), (b += y), (T += g);
            }
            if (s) {
              for (b = m + 4 * (h - l), T = d + (n - 1) * r, x = 0; x < u; ++x)
                (i[T++] = t[b++]), (i[T++] = t[b++]), (b += 2);
              a && (i[d + n * r - 1] = t[b]);
            }
          }
          return i;
        }
        function Io(t, e) {
          var n = Ti();
          return Ht(
            t,
            e,
            n.version +
              "\n    precision highp float;\n    " +
              n.attribute +
              " vec3 clipSpacePos;\n    " +
              n.attribute +
              " vec2 uv;\n    " +
              n.varyingVs +
              " vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"
          );
        }
        function Mo(t, e) {
          return te(
            t,
            e,
            new Float32Array([
              -1,
              1,
              0,
              0,
              1,
              -1,
              -1,
              0,
              0,
              0,
              1,
              1,
              0,
              1,
              1,
              1,
              -1,
              0,
              1,
              0
            ])
          );
        }
        function Po(t, e) {
          return ee(t, e, new Uint16Array([0, 1, 2, 2, 1, 3]));
        }
        function Ro(t, e) {
          var n,
            r,
            i,
            o,
            a,
            s,
            u,
            c,
            l = t;
          return (
            2 === h.getNumber("WEBGL_VERSION")
              ? ((n = l.R32F),
                (r = l.R16F),
                (i = l.RGBA16F),
                (o = l.RGBA32F),
                (a = l.RED),
                (s = 4),
                (u = 1),
                (c = l.HALF_FLOAT))
              : ((n = t.RGBA),
                (r = t.RGBA),
                (i = t.RGBA),
                (o = l.RGBA),
                (a = t.RGBA),
                (s = 4),
                (u = 4),
                (c = null != e ? e.HALF_FLOAT_OES : null)),
            {
              internalFormatFloat: n,
              internalFormatHalfFloat: r,
              internalFormatPackedHalfFloat: i,
              internalFormatPackedFloat: o,
              textureFormatFloat: a,
              downloadTextureFormat: t.RGBA,
              downloadUnpackNumChannels: s,
              defaultNumChannels: u,
              textureTypeHalfFloat: c
            }
          );
        }
        function Do(t, e, n, r, i, o, a) {
          re(n, r);
          var s = ne(t, e),
            u = t.TEXTURE_2D;
          return (
            Bt(t, e, function() {
              return t.bindTexture(u, s);
            }),
            Bt(t, e, function() {
              return t.texParameteri(u, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE);
            }),
            Bt(t, e, function() {
              return t.texParameteri(u, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE);
            }),
            Bt(t, e, function() {
              return t.texParameteri(u, t.TEXTURE_MIN_FILTER, t.NEAREST);
            }),
            Bt(t, e, function() {
              return t.texParameteri(u, t.TEXTURE_MAG_FILTER, t.NEAREST);
            }),
            Bt(t, e, function() {
              return t.texImage2D(u, 0, i, n, r, 0, o, a, null);
            }),
            Bt(t, e, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            }),
            s
          );
        }
        function Fo(t, e, n, r, i) {
          var o = Ao(n, r);
          return Do(
            t,
            e,
            o[0],
            o[1],
            i.internalFormatFloat,
            i.textureFormatFloat,
            t.FLOAT
          );
        }
        function zo(t, e, n, r, i) {
          var o = Ao(n, r);
          return Do(
            t,
            e,
            o[0],
            o[1],
            i.internalFormatHalfFloat,
            i.textureFormatFloat,
            i.textureTypeHalfFloat
          );
        }
        function Lo(t, e, n, r, i) {
          var o = Ao(n, r);
          return Do(t, e, o[0], o[1], t.RGBA, t.RGBA, t.UNSIGNED_BYTE);
        }
        function jo(t, e, n, r, i) {
          var o = No(n, r);
          return Do(
            t,
            e,
            o[0],
            o[1],
            i.internalFormatPackedFloat,
            t.RGBA,
            t.FLOAT
          );
        }
        function Bo(t, e, n, r, i) {
          var o = No(n, r);
          return Do(
            t,
            e,
            o[0],
            o[1],
            i.internalFormatPackedHalfFloat,
            t.RGBA,
            i.textureTypeHalfFloat
          );
        }
        function qo(t, e, n, r) {
          return (
            Bt(t, e, function() {
              return t.bindBuffer(t.ARRAY_BUFFER, r);
            }),
            oe(t, e, n, "clipSpacePos", r, 3, 20, 0) &&
              oe(t, e, n, "uv", r, 2, 20, 12)
          );
        }
        function Uo(t, e, n, r, i, o, a) {
          Bt(t, e, function() {
            return t.bindTexture(t.TEXTURE_2D, n);
          });
          var s = new Float32Array(r * i * 4);
          s.set(o),
            Bt(t, e, function() {
              return t.texImage2D(
                t.TEXTURE_2D,
                0,
                a.internalFormatPackedFloat,
                r,
                i,
                0,
                t.RGBA,
                t.FLOAT,
                s
              );
            }),
            Bt(t, e, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            });
        }
        function Vo(t, e, n, r) {
          Bt(t, e, function() {
            return t.bindTexture(t.TEXTURE_2D, n);
          }),
            r.data instanceof Uint8Array
              ? Bt(t, e, function() {
                  return t.texImage2D(
                    t.TEXTURE_2D,
                    0,
                    t.RGBA,
                    r.width,
                    r.height,
                    0,
                    t.RGBA,
                    t.UNSIGNED_BYTE,
                    r.data
                  );
                })
              : Bt(t, e, function() {
                  return t.texImage2D(
                    t.TEXTURE_2D,
                    0,
                    t.RGBA,
                    t.RGBA,
                    t.UNSIGNED_BYTE,
                    r
                  );
                }),
            Bt(t, e, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            });
        }
        function Wo(t, e, n, r, i) {
          var o = t.createBuffer();
          Bt(t, e, function() {
            return t.bindBuffer(t.PIXEL_PACK_BUFFER, o);
          });
          var a = 4 * ko(n * r, i.downloadUnpackNumChannels);
          return (
            Bt(t, e, function() {
              return t.bufferData(t.PIXEL_PACK_BUFFER, a, t.STREAM_READ);
            }),
            Bt(t, e, function() {
              return t.readPixels(0, 0, r, n, t.RGBA, t.FLOAT, 0);
            }),
            Bt(t, e, function() {
              return t.bindBuffer(t.PIXEL_PACK_BUFFER, null);
            }),
            o
          );
        }
        function Go(t, e, n, r, i) {
          var o = t,
            a = new Float32Array(ko(n * r, i.downloadUnpackNumChannels));
          o.bindBuffer(o.PIXEL_PACK_BUFFER, e),
            o.getBufferSubData(o.PIXEL_PACK_BUFFER, 0, a),
            o.bindBuffer(o.PIXEL_PACK_BUFFER, null);
          var s = new Float32Array(n * r);
          return Eo(a, s, i.downloadUnpackNumChannels), s;
        }
        function Ho(t, e, n, r, i) {
          var o = Ao(n, r),
            a = o[0],
            s = o[1],
            u = new Float32Array(ko(n * r, i.downloadUnpackNumChannels));
          Bt(t, e, function() {
            return t.readPixels(
              0,
              0,
              a,
              s,
              i.downloadTextureFormat,
              t.FLOAT,
              u
            );
          });
          var c = new Float32Array(n * r);
          return Eo(u, c, i.downloadUnpackNumChannels), c;
        }
        function Ko(t, e, n, r, i) {
          var o = Ao(n, r),
            a = o[0],
            s = o[1],
            u = new Uint8Array(ko(n * r, 4));
          return (
            Bt(t, e, function() {
              return t.readPixels(
                0,
                0,
                a,
                s,
                i.downloadTextureFormat,
                t.UNSIGNED_BYTE,
                u
              );
            }),
            new Float32Array(u.buffer)
          );
        }
        function Qo(t, e, n, r, i, o, a, s) {
          var u = t,
            c = new Float32Array(Oo(o, a));
          u.bindBuffer(u.PIXEL_PACK_BUFFER, e),
            u.getBufferSubData(u.PIXEL_PACK_BUFFER, 0, c),
            u.bindBuffer(u.PIXEL_PACK_BUFFER, null);
          var l = new Float32Array(T([n, r, i]));
          return Co(c, n, r, i, l), l;
        }
        function Xo(t, e, n, r, i, o, a, s) {
          var u = No(o, a),
            c = u[0],
            l = u[1],
            h = new Float32Array(Oo(o, a));
          Bt(t, e, function() {
            return t.readPixels(0, 0, c, l, t.RGBA, t.FLOAT, h);
          });
          var f = new Float32Array(T([n, r, i]));
          return Co(h, n, r, i, f);
        }
        !(function(t) {
          (t[(t.RENDER = 0)] = "RENDER"),
            (t[(t.UPLOAD = 1)] = "UPLOAD"),
            (t[(t.PIXELS = 2)] = "PIXELS"),
            (t[(t.DOWNLOAD = 3)] = "DOWNLOAD");
        })(fo || (fo = {})),
          (function(t) {
            (t[(t.UNPACKED_FLOAT16 = 0)] = "UNPACKED_FLOAT16"),
              (t[(t.UNPACKED_FLOAT32 = 1)] = "UNPACKED_FLOAT32"),
              (t[(t.PACKED_4X1_UNSIGNED_BYTE = 2)] =
                "PACKED_4X1_UNSIGNED_BYTE"),
              (t[(t.PACKED_2X2_FLOAT32 = 3)] = "PACKED_2X2_FLOAT32"),
              (t[(t.PACKED_2X2_FLOAT16 = 4)] = "PACKED_2X2_FLOAT16");
          })(po || (po = {}));
        var $o = Object.freeze({
            createVertexShader: Io,
            createVertexBuffer: Mo,
            createIndexBuffer: Po,
            getTextureConfig: Ro,
            createFloat32MatrixTexture: Fo,
            createFloat16MatrixTexture: zo,
            createUnsignedBytesMatrixTexture: Lo,
            createPackedMatrixTexture: jo,
            createFloat16PackedMatrixTexture: Bo,
            bindVertexProgramAttributeStreams: qo,
            uploadDenseMatrixToTexture: Uo,
            uploadPixelDataToTexture: Vo,
            createBufferFromOutputTexture: Wo,
            downloadFloat32MatrixFromBuffer: Go,
            downloadFloat32MatrixFromOutputTexture: Ho,
            downloadByteEncodedFloatMatrixFromOutputTexture: Ko,
            downloadPackedMatrixFromBuffer: Qo,
            downloadMatrixFromPackedOutputTexture: Xo
          }),
          Yo = (function() {
            function t(t) {
              (this.outputTexture = null),
                (this.program = null),
                (this.disposed = !1),
                (this.vertexAttrsAreBound = !1),
                (this.itemsToPoll = []);
              var e = h.getNumber("WEBGL_VERSION");
              null != t ? ((this.gl = t), Lt(e, t)) : (this.gl = jt(e)),
                1 === h.getNumber("WEBGL_VERSION")
                  ? ((this.textureFloatExtension = Gt(
                      this.gl,
                      this.debug,
                      "OES_texture_float"
                    )),
                    (this.colorBufferFloatExtension = this.gl.getExtension(
                      "WEBGL_color_buffer_float"
                    )),
                    h.getBool("WEBGL_RENDER_FLOAT32_ENABLED") ||
                      ((this.textureHalfFloatExtension = Gt(
                        this.gl,
                        this.debug,
                        "OES_texture_half_float"
                      )),
                      (this.colorBufferHalfFloatExtension = this.gl.getExtension(
                        "EXT_color_buffer_half_float"
                      ))))
                  : (this.colorBufferFloatExtension = Gt(
                      this.gl,
                      this.debug,
                      "EXT_color_buffer_float"
                    )),
                (this.vertexBuffer = Mo(this.gl, this.debug)),
                (this.indexBuffer = Po(this.gl, this.debug)),
                (this.framebuffer = ie(this.gl, this.debug)),
                (this.textureConfig = Ro(
                  this.gl,
                  this.textureHalfFloatExtension
                ));
            }
            return (
              Object.defineProperty(t.prototype, "debug", {
                get: function() {
                  return h.getBool("DEBUG");
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.dispose = function() {
                var t = this;
                if (!this.disposed) {
                  null != this.program &&
                    console.warn(
                      "Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."
                    ),
                    null != this.outputTexture &&
                      console.warn(
                        "Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing."
                      );
                  var e = this.gl;
                  Bt(e, this.debug, function() {
                    return e.finish();
                  }),
                    Bt(e, this.debug, function() {
                      return e.bindFramebuffer(e.FRAMEBUFFER, null);
                    }),
                    Bt(e, this.debug, function() {
                      return e.deleteFramebuffer(t.framebuffer);
                    }),
                    Bt(e, this.debug, function() {
                      return e.bindBuffer(e.ARRAY_BUFFER, null);
                    }),
                    Bt(e, this.debug, function() {
                      return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, null);
                    }),
                    Bt(e, this.debug, function() {
                      return e.deleteBuffer(t.indexBuffer);
                    }),
                    (this.disposed = !0);
                }
              }),
              (t.prototype.createFloat32MatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(),
                  Fo(this.gl, this.debug, t, e, this.textureConfig)
                );
              }),
              (t.prototype.createFloat16MatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(),
                  zo(this.gl, this.debug, t, e, this.textureConfig)
                );
              }),
              (t.prototype.createUnsignedBytesMatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(),
                  Lo(this.gl, this.debug, t, e, this.textureConfig)
                );
              }),
              (t.prototype.uploadPixelDataToTexture = function(t, e) {
                this.throwIfDisposed(), Vo(this.gl, this.debug, t, e);
              }),
              (t.prototype.uploadDenseMatrixToTexture = function(t, e, n, r) {
                this.throwIfDisposed(),
                  Uo(this.gl, this.debug, t, e, n, r, this.textureConfig);
              }),
              (t.prototype.createFloat16PackedMatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(),
                  Bo(this.gl, this.debug, t, e, this.textureConfig)
                );
              }),
              (t.prototype.createPackedMatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(),
                  jo(this.gl, this.debug, t, e, this.textureConfig)
                );
              }),
              (t.prototype.deleteMatrixTexture = function(t) {
                var e = this;
                this.throwIfDisposed(),
                  this.outputTexture === t &&
                    (he(this.gl, this.debug, this.framebuffer),
                    (this.outputTexture = null)),
                  Bt(this.gl, this.debug, function() {
                    return e.gl.deleteTexture(t);
                  });
              }),
              (t.prototype.downloadFloat32MatrixFromOutputTexture = function(
                t,
                e,
                n
              ) {
                var r = this;
                return this.downloadMatrixDriver(t, function() {
                  return Ho(r.gl, r.debug, e, n, r.textureConfig);
                });
              }),
              (t.prototype.downloadByteEncodedFloatMatrixFromOutputTexture = function(
                t,
                e,
                n
              ) {
                var r = this;
                return this.downloadMatrixDriver(t, function() {
                  return Ko(r.gl, r.debug, e, n, r.textureConfig);
                });
              }),
              (t.prototype.downloadPackedMatrixFromBuffer = function(
                t,
                e,
                n,
                r,
                i,
                o
              ) {
                return Qo(this.gl, t, e, n, r, i, o, this.textureConfig);
              }),
              (t.prototype.downloadFloat32MatrixFromBuffer = function(t, e, n) {
                return Go(this.gl, t, e, n, this.textureConfig);
              }),
              (t.prototype.createBufferFromTexture = function(t, e, n) {
                this.bindTextureToFrameBuffer(t);
                var r = Wo(this.gl, this.debug, e, n, this.textureConfig);
                return this.unbindTextureToFrameBuffer(), r;
              }),
              (t.prototype.createAndWaitForFence = function() {
                var t = this.createFence(this.gl);
                return this.pollFence(t);
              }),
              (t.prototype.createFence = function(t) {
                var e,
                  n,
                  r = this;
                if (h.getBool("WEBGL_FENCE_API_ENABLED")) {
                  var i = t,
                    o = i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE, 0);
                  t.flush(),
                    (n = function() {
                      var t = i.clientWaitSync(o, 0, 0);
                      return (
                        t === i.ALREADY_SIGNALED || t === i.CONDITION_SATISFIED
                      );
                    }),
                    (e = o);
                } else
                  h.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") >
                  0
                    ? ((e = this.beginQuery()),
                      this.endQuery(),
                      (n = function() {
                        return r.isQueryAvailable(
                          e,
                          h.getNumber(
                            "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                          )
                        );
                      }))
                    : (n = function() {
                        return !0;
                      });
                return { query: e, isFencePassed: n };
              }),
              (t.prototype.downloadMatrixFromPackedTexture = function(
                t,
                e,
                n,
                r,
                i,
                o
              ) {
                var a = this;
                return this.downloadMatrixDriver(t, function() {
                  return Xo(a.gl, a.debug, e, n, r, i, o, a.textureConfig);
                });
              }),
              (t.prototype.createProgram = function(t) {
                this.throwIfDisposed();
                var e = this.gl,
                  n = Kt(e, this.debug, t),
                  r = Io(e, this.debug),
                  i = Yt(e, this.debug);
                return (
                  Bt(e, this.debug, function() {
                    return e.attachShader(i, r);
                  }),
                  Bt(e, this.debug, function() {
                    return e.attachShader(i, n);
                  }),
                  Jt(e, this.debug, i),
                  this.debug && Zt(e, this.debug, i),
                  this.vertexAttrsAreBound ||
                    (this.setProgram(i),
                    (this.vertexAttrsAreBound = qo(
                      e,
                      this.debug,
                      this.program,
                      this.vertexBuffer
                    ))),
                  i
                );
              }),
              (t.prototype.deleteProgram = function(t) {
                var e = this;
                this.throwIfDisposed(),
                  t === this.program && (this.program = null),
                  null != t &&
                    Bt(this.gl, this.debug, function() {
                      return e.gl.deleteProgram(t);
                    });
              }),
              (t.prototype.setProgram = function(t) {
                var e = this;
                this.throwIfDisposed(),
                  (this.program = t),
                  null != this.program &&
                    this.debug &&
                    Zt(this.gl, this.debug, this.program),
                  Bt(this.gl, this.debug, function() {
                    return e.gl.useProgram(t);
                  });
              }),
              (t.prototype.getUniformLocation = function(t, e, n) {
                return (
                  void 0 === n && (n = !0),
                  this.throwIfDisposed(),
                  n ? se(this.gl, this.debug, t, e) : ue(this.gl, t, e)
                );
              }),
              (t.prototype.getAttributeLocation = function(t, e) {
                var n = this;
                return (
                  this.throwIfDisposed(),
                  Bt(this.gl, this.debug, function() {
                    return n.gl.getAttribLocation(t, e);
                  })
                );
              }),
              (t.prototype.getUniformLocationNoThrow = function(t, e) {
                return this.throwIfDisposed(), this.gl.getUniformLocation(t, e);
              }),
              (t.prototype.setInputMatrixTexture = function(t, e, n) {
                this.throwIfDisposed(),
                  this.throwIfNoProgram(),
                  ce(this.gl, this.debug, this.program, t, e, n);
              }),
              (t.prototype.setOutputMatrixTexture = function(t, e, n) {
                this.setOutputMatrixTextureDriver(t, n, e);
              }),
              (t.prototype.setOutputPackedMatrixTexture = function(t, e, n) {
                this.throwIfDisposed();
                var r = No(e, n),
                  i = r[0],
                  o = r[1];
                this.setOutputMatrixTextureDriver(t, i, o);
              }),
              (t.prototype.setOutputMatrixWriteRegion = function(t, e, n, r) {
                this.setOutputMatrixWriteRegionDriver(n, t, r, e);
              }),
              (t.prototype.setOutputPackedMatrixWriteRegion = function(
                t,
                e,
                n,
                r
              ) {
                throw new Error(
                  "setOutputPackedMatrixWriteRegion not implemented."
                );
              }),
              (t.prototype.debugValidate = function() {
                null != this.program && Zt(this.gl, this.debug, this.program),
                  fe(this.gl);
              }),
              (t.prototype.executeProgram = function() {
                this.throwIfDisposed(), this.throwIfNoProgram();
                var t = this.gl;
                this.debug && this.debugValidate(),
                  Bt(t, this.debug, function() {
                    return t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0);
                  });
              }),
              (t.prototype.blockUntilAllProgramsCompleted = function() {
                var t = this;
                this.throwIfDisposed(),
                  Bt(this.gl, this.debug, function() {
                    return t.gl.finish();
                  });
              }),
              (t.prototype.getQueryTimerExtension = function() {
                return (
                  null == this.disjointQueryTimerExtension &&
                    (this.disjointQueryTimerExtension = Gt(
                      this.gl,
                      this.debug,
                      2 ===
                        h.getNumber(
                          "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                        )
                        ? "EXT_disjoint_timer_query_webgl2"
                        : "EXT_disjoint_timer_query"
                    )),
                  this.disjointQueryTimerExtension
                );
              }),
              (t.prototype.getQueryTimerExtensionWebGL2 = function() {
                return this.getQueryTimerExtension();
              }),
              (t.prototype.getQueryTimerExtensionWebGL1 = function() {
                return this.getQueryTimerExtension();
              }),
              (t.prototype.beginQuery = function() {
                if (
                  2 ===
                  h.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")
                ) {
                  var t = this.gl,
                    e = this.getQueryTimerExtensionWebGL2(),
                    n = t.createQuery();
                  return t.beginQuery(e.TIME_ELAPSED_EXT, n), n;
                }
                var r = this.getQueryTimerExtensionWebGL1(),
                  i = r.createQueryEXT();
                return r.beginQueryEXT(r.TIME_ELAPSED_EXT, i), i;
              }),
              (t.prototype.endQuery = function() {
                if (
                  2 !==
                  h.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")
                ) {
                  var t = this.getQueryTimerExtensionWebGL1();
                  t.endQueryEXT(t.TIME_ELAPSED_EXT);
                } else {
                  var e = this.gl,
                    n = this.getQueryTimerExtensionWebGL2();
                  e.endQuery(n.TIME_ELAPSED_EXT);
                }
              }),
              (t.prototype.waitForQueryAndGetTime = function(t) {
                return c(this, void 0, void 0, function() {
                  var e = this;
                  return l(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return [
                          4,
                          C(function() {
                            return (
                              e.disposed ||
                              e.isQueryAvailable(
                                t,
                                h.getNumber(
                                  "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                                )
                              )
                            );
                          })
                        ];
                      case 1:
                        return (
                          n.sent(),
                          [
                            2,
                            this.getQueryTime(
                              t,
                              h.getNumber(
                                "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                              )
                            )
                          ]
                        );
                    }
                  });
                });
              }),
              (t.prototype.getQueryTime = function(t, e) {
                if (0 === e) return null;
                if (2 === e) {
                  var n = this.gl;
                  return n.getQueryParameter(t, n.QUERY_RESULT) / 1e6;
                }
                var r = this.getQueryTimerExtensionWebGL1();
                return r.getQueryObjectEXT(t, r.QUERY_RESULT_EXT) / 1e6;
              }),
              (t.prototype.isQueryAvailable = function(t, e) {
                if (0 === e) return !0;
                if (2 === e) {
                  var n = this.gl,
                    r = this.getQueryTimerExtensionWebGL2(),
                    i = n.getQueryParameter(t, n.QUERY_RESULT_AVAILABLE);
                  return (
                    null == this.disjoint &&
                      (this.disjoint = this.gl.getParameter(
                        r.GPU_DISJOINT_EXT
                      )),
                    i && !this.disjoint
                  );
                }
                return (
                  (i = (r = this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(
                    t,
                    r.QUERY_RESULT_AVAILABLE_EXT
                  )),
                  null == this.disjoint &&
                    (this.disjoint = this.gl.getParameter(r.GPU_DISJOINT_EXT)),
                  i && !this.disjoint
                );
              }),
              (t.prototype.pollFence = function(t) {
                var e = this;
                return new Promise(function(n) {
                  e.addItemToPoll(
                    function() {
                      return t.isFencePassed();
                    },
                    function() {
                      return n();
                    }
                  );
                });
              }),
              (t.prototype.pollItems = function() {
                for (
                  var t = (function(t) {
                      for (var e = 0; e < t.length; ++e) {
                        if (!t[e]()) break;
                      }
                      return e - 1;
                    })(
                      this.itemsToPoll.map(function(t) {
                        return t.isDoneFn;
                      })
                    ),
                    e = 0;
                  e <= t;
                  ++e
                )
                  (0, this.itemsToPoll[e].resolveFn)();
                this.itemsToPoll = this.itemsToPoll.slice(t + 1);
              }),
              (t.prototype.addItemToPoll = function(t, e) {
                var n = this;
                this.itemsToPoll.push({ isDoneFn: t, resolveFn: e }),
                  this.itemsToPoll.length > 1 ||
                    C(function() {
                      return n.pollItems(), 0 === n.itemsToPoll.length;
                    });
              }),
              (t.prototype.bindTextureToFrameBuffer = function(t) {
                this.throwIfDisposed(),
                  le(this.gl, this.debug, t, this.framebuffer),
                  this.debug && fe(this.gl);
              }),
              (t.prototype.unbindTextureToFrameBuffer = function() {
                null != this.outputTexture
                  ? (le(
                      this.gl,
                      this.debug,
                      this.outputTexture,
                      this.framebuffer
                    ),
                    this.debug && fe(this.gl))
                  : he(this.gl, this.debug, this.framebuffer);
              }),
              (t.prototype.downloadMatrixDriver = function(t, e) {
                this.bindTextureToFrameBuffer(t);
                var n = e();
                return this.unbindTextureToFrameBuffer(), n;
              }),
              (t.prototype.setOutputMatrixTextureDriver = function(t, e, n) {
                this.throwIfDisposed();
                var r = this.gl;
                le(r, this.debug, t, this.framebuffer),
                  this.debug && fe(r),
                  (this.outputTexture = t),
                  Bt(r, this.debug, function() {
                    return r.viewport(0, 0, e, n);
                  }),
                  Bt(r, this.debug, function() {
                    return r.scissor(0, 0, e, n);
                  });
              }),
              (t.prototype.setOutputMatrixWriteRegionDriver = function(
                t,
                e,
                n,
                r
              ) {
                var i = this;
                this.throwIfDisposed(),
                  Bt(this.gl, this.debug, function() {
                    return i.gl.scissor(t, e, n, r);
                  });
              }),
              (t.prototype.throwIfDisposed = function() {
                if (this.disposed)
                  throw new Error("Attempted to use disposed GPGPUContext.");
              }),
              (t.prototype.throwIfNoProgram = function() {
                if (null == this.program)
                  throw new Error("No GPU program is currently set.");
              }),
              t
            );
          })();
        function Jo(t, e) {
          if (t.length !== e.length)
            throw Error(
              "Binary was compiled with " +
                t.length +
                " inputs, but was executed with " +
                e.length +
                " inputs"
            );
          t.forEach(function(t, n) {
            var r = t.logicalShape,
              i = e[n],
              o = i.shape;
            if (!A(r, o))
              throw Error(
                "Binary was compiled with different shapes than the current args. Shapes " +
                  r +
                  " and " +
                  o +
                  " must match"
              );
            if (!t.isUniform || !i.isUniform) {
              var a = t.texShape,
                s = i.isUniform ? null : i.texData.texShape;
              if (!A(a, s))
                throw Error(
                  "Binary was compiled with different texture shapes than the current args. Shape " +
                    a +
                    " and " +
                    s +
                    " must match"
                );
            }
          });
        }
        var Zo = function(t, e, n) {
            (this.variableNames = ["A"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = t);
            var r = n.filterWidth,
              i = n.inChannels,
              o = n.strideWidth,
              a = n.strideHeight,
              s = n.padInfo,
              u = n.outWidth,
              c = n.dilationWidth,
              l = n.dilationHeight,
              h = s.left,
              f = s.top,
              p = i * r,
              d = Ti();
            this.userCode =
              "\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            int blockIndex = rc.y + col;\n            int pos = rc.x + row;\n\n            if(blockIndex >= " +
              t[1] +
              " || pos >= " +
              t[0] +
              ") continue;\n\n            int offsetY = int(blockIndex / (" +
              u +
              ")) * " +
              a +
              " - " +
              f +
              ";\n            int d0 = offsetY + " +
              l +
              " * (pos / " +
              p +
              ");\n\n            if(d0 >= " +
              e[0] +
              " || d0 < 0) continue;\n\n            int offsetX = int(mod(float(blockIndex), " +
              u +
              ".) * " +
              o +
              ". - " +
              h +
              ".);\n            int d1 = offsetX + " +
              c +
              " * (int(mod(float(pos), " +
              p +
              ".) / " +
              i +
              ".));\n\n            if(d1 >= " +
              e[1] +
              " || d1 < 0) continue;\n\n            vec2 innerDims = vec2(d1, int(mod(float(pos), " +
              i +
              ".)));\n            result[row * 2 + col] = getChannel(getA(d0, int(innerDims.x),\n                                              int(innerDims.y)), innerDims);\n          }\n        }\n\n        " +
              d.output +
              " = result;\n      }\n    ";
          },
          ta = function(t, e, n, r, i) {
            (this.variableNames = ["x"]), (this.outputShape = []);
            var o,
              a = e,
              s = t[3] - 1;
            this.outputShape = t;
            var u = "float(" + n + ") + float(" + r + ") * sum";
            (o =
              0.5 === i
                ? "inversesqrt(" + u + ")"
                : 1 === i
                ? "1.0/(" + u + ")"
                : "exp(log(" + u + ") * float(-" + i + "));"),
              (this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -" +
                a +
                "; j <= " +
                a +
                "; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  " +
                s +
                ") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * " +
                o +
                ";\n        setOutput(val);\n      }\n    ");
          },
          ea = function(t, e, n, r, i) {
            (this.variableNames = ["inputImage", "outputImage", "dy"]),
              (this.outputShape = []),
              (this.outputShape = t),
              (this.depth = t[3]),
              (this.depthRadius = e),
              (this.bias = n),
              (this.alpha = r),
              (this.beta = i),
              (this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < " +
                this.depth +
                "; ++d) {\n          int depthBegin = int(max(0.0, float(d - " +
                e +
                ")));\n          int depthEnd = int(min(float(" +
                this.depth +
                "),\n              float(d + " +
                e +
                " + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = " +
                this.depth +
                ";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(" +
                r +
                ") * norm + float(" +
                n +
                ");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(" +
                r +
                ")\n                * float(" +
                i +
                ")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * " +
                i +
                ");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ");
          },
          na = function(t, e, n, r, i) {
            (this.variableNames = ["x"]),
              (this.outputShape = []),
              (this.usesPackedTextures = !0);
            var o,
              a = e,
              s = t[3] - 1;
            this.outputShape = t;
            var u = "float(" + n + ") + float(" + r + ") * sum";
            (o =
              0.5 === i
                ? "inversesqrt(" + u + ")"
                : 1 === i
                ? "1.0/(" + u + ")"
                : "exp(log(" + u + ") * float(-" + i + "));"),
              (this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < " +
                this.outputShape[3] +
                ";\n        bool hasNextRow = c < " +
                this.outputShape[2] +
                ";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - " +
                a +
                ";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - " +
                a +
                "; j <= " +
                a +
                "; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(" +
                s +
                "));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * " +
                o +
                ";\n        setOutput(result);\n      }\n    ");
          },
          ra = function(t) {
            (this.variableNames = ["dy", "maxPos"]),
              (this.outputShape = t.inShape);
            var e = t.strideHeight,
              n = t.strideWidth,
              r = t.dilationHeight,
              i = t.effectiveFilterHeight,
              o = t.effectiveFilterWidth,
              a = i - 1 - t.padInfo.top,
              s = o - 1 - t.padInfo.left,
              u = i * o - 1;
            this.userCode =
              "\n      const ivec2 pads = ivec2(" +
              a +
              ", " +
              s +
              ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
              i +
              ";\n          wR += " +
              r +
              ") {\n          float dyR = float(dyRCorner + wR) / " +
              e +
              ".0;\n\n          if (dyR < 0.0 || dyR >= " +
              t.outHeight +
              ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < " +
              o +
              "; wC++) {\n            float dyC = float(dyCCorner + wC) / " +
              n +
              ".0;\n\n            if (dyC < 0.0 || dyC >= " +
              t.outWidth +
              ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = " +
              u +
              " - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * " +
              o +
              " + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
          },
          ia = function(t, e, n, r, i, o) {
            void 0 === n && (n = !1),
              void 0 === r && (r = !1),
              void 0 === i && (i = !1),
              void 0 === o && (o = null),
              (this.variableNames = ["matrixA", "matrixB"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = e);
            var a = n ? t[1] : t[2],
              s = Math.ceil(a / 2),
              u = n ? "i * 2, rc.y" : "rc.y, i * 2",
              c = r ? "rc.z, i * 2" : "i * 2, rc.z",
              l = n ? ["a.xxyy", "a.zzww"] : ["a.xxzz", "a.yyww"],
              h = r ? ["b.xzxz", "b.ywyw"] : ["b.xyxy", "b.zwzw"],
              f = "",
              p = "";
            o &&
              ((f = "vec4 activation(vec4 x) {\n        " + o + "\n      }"),
              (p = "result = activation(result);"));
            var d = i ? "result += getBiasAtOutCoords();" : "";
            i && this.variableNames.push("bias"),
              (this.userCode =
                "\n      " +
                f +
                "\n\n      const float sharedDimension = " +
                s +
                ".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < " +
                s +
                "; i++) {\n          vec4 a = getMatrixA(rc.x, " +
                u +
                ");\n          vec4 b = getMatrixB(rc.x, " +
                c +
                ");\n\n          result += (" +
                l[0] +
                " * " +
                h[0] +
                ") + (" +
                l[1] +
                " * " +
                h[1] +
                ");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        " +
                d +
                "\n\n        " +
                p +
                "\n\n        setOutput(result);\n      }\n    ");
          },
          oa = (function() {
            function t(t, e, n) {
              (this.variableNames = ["probs"]),
                (this.outputShape = [t, n]),
                (this.userCode =
                  "\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < " +
                  (e - 1) +
                  "; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(" +
                  (e - 1) +
                  "));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t) {
                var e = this;
                return function(n, r) {
                  null == e.seedLoc &&
                    (e.seedLoc = n.getUniformLocation(r, "seed")),
                    n.gl.uniform1f(e.seedLoc, t);
                };
              }),
              t
            );
          })(),
          aa = function(t, e, n, r) {
            (this.variableNames = ["indices"]),
              (this.outputShape = [t, e]),
              (this.userCode =
                "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(" +
                r +
                "), float(" +
                n +
                "),\n                      float(index == coords.y)));\n      }\n    ");
          },
          sa = function(t) {
            (this.variableNames = ["A"]),
              (this.isPackShader = !0),
              (this.outputShape = t);
            var e = t.length;
            if (0 === e)
              this.userCode =
                "\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";
            else {
              var n = xi("rc", e),
                r = Di(e),
                i = (function(t, e, n) {
                  if (1 === t) return "rc > " + e[0];
                  for (var r = "", i = t - 2; i < t; i++)
                    (r += n[i] + " >= " + e[i]), i < t - 1 && (r += "||");
                  return r;
                })(e, t, n),
                o = (function(t, e, n, r) {
                  if (1 === t) return "";
                  var i = r.slice(-2);
                  return (
                    "\n    int r = " +
                    i[0] +
                    ";\n    int c = " +
                    i[1] +
                    ";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= " +
                    e +
                    ";\n    bool rEdge = rp1 >= " +
                    n +
                    ";\n  "
                  );
                })(e, t[t.length - 1], t[t.length - 2], n),
                a = (function(t, e) {
                  var n = t.length,
                    r = (function(t, e) {
                      for (var n = [], r = 0; r <= 1; r++)
                        for (var i = 0; i <= 1; i++) {
                          for (
                            var o =
                                (0 === r ? "r" : "rp1") +
                                ", " +
                                (0 === i ? "c" : "cp1"),
                              a = 2;
                            a < t;
                            a++
                          )
                            o = e[e.length - 1 - a] + "," + o;
                          n.push(o);
                        }
                      return n;
                    })(n, e);
                  return 1 === n
                    ? "getA(rc),\n            rc + 1 >= " +
                        t[0] +
                        " ? 0. : getA(rc + 1),\n            0, 0"
                    : "getA(" +
                        r[0] +
                        "),\n          cEdge ? 0. : getA(" +
                        r[1] +
                        "),\n          rEdge ? 0. : getA(" +
                        r[2] +
                        "),\n          rEdge || cEdge ? 0. : getA(" +
                        r[3] +
                        ")";
                })(t, n);
              this.userCode =
                "\n        void main() {\n          " +
                r +
                " rc = getOutputCoords();\n\n          if(" +
                i +
                ") {\n            setOutput(vec4(0));\n          } else {\n            " +
                o +
                "\n\n            setOutput(vec4(" +
                a +
                "));\n          }\n        }\n      ";
            }
          },
          ua = function(t, e, n) {
            (this.variableNames = ["x"]),
              (this.outputShape = e.map(function(e, n) {
                return e[0] + t[n] + e[1];
              }));
            var r = t.length,
              i = Di(r),
              o = e
                .map(function(t) {
                  return t[0];
                })
                .join(","),
              a = e
                .map(function(e, n) {
                  return e[0] + t[n];
                })
                .join(","),
              s = ["coords[0]", "coords[1]", "coords[2]", "coords[3]"].slice(
                0,
                r
              );
            this.userCode =
              1 !== r
                ? "\n      " +
                  i +
                  " start = " +
                  i +
                  "(" +
                  o +
                  ");\n      " +
                  i +
                  " end = " +
                  i +
                  "(" +
                  a +
                  ");\n\n      void main() {\n        " +
                  i +
                  " outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(" +
                  n +
                  "));\n        } else {\n          " +
                  i +
                  " coords = outC - start;\n          setOutput(getX(" +
                  s +
                  "));\n        }\n      }\n    "
                : "\n        int start = " +
                  o +
                  ";\n        int end = " +
                  a +
                  ";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(" +
                  n +
                  "));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ";
          },
          ca = function(t, e, n) {
            (this.variableNames = ["x"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = e.map(function(e, n) {
                return e[0] + t[n] + e[1];
              }));
            for (
              var r = t.length,
                i = Di(r),
                o = e
                  .map(function(t) {
                    return t[0];
                  })
                  .join(","),
                a = e
                  .map(function(e, n) {
                    return e[0] + t[n];
                  })
                  .join(","),
                s = xi("rc", r),
                u = xi("source", r),
                c = s[r - 1] + " < " + this.outputShape[r - 1],
                l = 1 === r ? "source" : "vec2(" + u.slice(-2).join() + ")",
                h = [
                  i + " rc = outputLoc;",
                  s[r - 1] + " += 1;\n       if(" + c + ") {\n      ",
                  1 === r
                    ? ""
                    : "}\n       rc = outputLoc;\n       " +
                      s[r - 2] +
                      " += 1;\n       if(" +
                      s[r - 2] +
                      " < " +
                      this.outputShape[r - 2] +
                      ") {",
                  1 === r
                    ? ""
                    : "  " + s[r - 1] + " += 1;\n         if(" + c + ") {"
                ],
                f =
                  1 === r
                    ? "rc < start || rc >= end"
                    : "any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",
                p = "",
                d = 0,
                m = 1 === r ? 2 : 4;
              d < m;
              d++
            )
              p +=
                "\n        " +
                h[d] +
                "\n        if (" +
                f +
                ") {\n          result[" +
                d +
                "] = float(" +
                n +
                ");\n        } else {\n          " +
                i +
                " source = rc - start;\n          result[" +
                d +
                "] = getChannel(getX(" +
                u.join() +
                "), " +
                l +
                ");\n        }\n      ";
            (p += 1 === r ? "} " : "}}"),
              (this.userCode =
                "\n      const " +
                i +
                " start = " +
                i +
                "(" +
                o +
                ");\n      const " +
                i +
                " end = " +
                i +
                "(" +
                a +
                ");\n\n      void main() {\n        " +
                i +
                " outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        " +
                p +
                "\n        setOutput(result);\n      }\n    ");
          },
          la = function(t, e, n) {
            if (((this.variableNames = ["x"]), "avg" === e && n))
              throw new Error("Cannot compute positions for average pool.");
            var r = t.filterWidth,
              i = t.strideHeight,
              o = t.strideWidth,
              a = t.dilationHeight,
              s = t.dilationWidth,
              u = t.effectiveFilterHeight,
              c = t.effectiveFilterWidth,
              l = t.padInfo.top,
              h = t.padInfo.left;
            this.outputShape = t.outShape;
            var f = "avg" === e,
              p = "0.0";
            if ((f || (p = "-1.0 / 1e-20"), n))
              this.userCode =
                "\n        const ivec2 strides = ivec2(" +
                i +
                ", " +
                o +
                ");\n        const ivec2 pads = ivec2(" +
                l +
                ", " +
                h +
                ");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < " +
                u +
                ";\n              wR += " +
                a +
                ") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " +
                c +
                ";\n                wC += " +
                s +
                ") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * " +
                c +
                " + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";
            else {
              var d =
                e +
                "(" +
                e +
                "(" +
                e +
                "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";
              "avg" === e && (d = "avgValue / count");
              var m = 4 * Math.floor(r / 4),
                y = r % 4,
                g =
                  "\n      if (" +
                  f +
                  ") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";
              this.userCode =
                "\n      const ivec2 strides = ivec2(" +
                i +
                ", " +
                o +
                ");\n      const ivec2 pads = ivec2(" +
                l +
                ", " +
                h +
                ");\n      const float initializationValue = " +
                p +
                ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(" +
                p +
                ");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < " +
                u +
                ";\n            wR += " +
                a +
                ") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " +
                m +
                "; wC += 4) {\n            int xC = xCCorner + wC * " +
                s +
                ";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " +
                s +
                ", d),\n              getValue(batch, xR, xC + 2 * " +
                s +
                ", d),\n              getValue(batch, xR, xC + 3 * " +
                s +
                ", d)\n            );\n\n            " +
                g +
                "\n          }\n\n          int xC = xCCorner + " +
                m +
                ";\n          if (" +
                (1 === y) +
                ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            " +
                g +
                "\n          } else if (" +
                (2 === y) +
                ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " +
                s +
                ", d),\n              initializationValue,\n              initializationValue\n            );\n\n            " +
                g +
                "\n          } else if (" +
                (3 === y) +
                ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " +
                s +
                ", d),\n              getValue(batch, xR, xC + 2 * " +
                s +
                ", d),\n              initializationValue\n            );\n\n            " +
                g +
                "\n          }\n        }\n        setOutput(" +
                d +
                ");\n      }\n    ";
            }
          },
          ha = function(t, e) {
            this.variableNames = ["x"];
            var n = t.windowSize,
              r = t.batchSize,
              i = t.inSize,
              o = Math.ceil(i / n);
            this.outputShape = [r, o];
            var a = "0.0",
              s = "";
            "prod" === e
              ? (a = "1.0")
              : "min" === e
              ? ((a = "1.0 / 1e-20"), (s = "min"))
              : "max" === e && ((a = "-1.0 / 1e-20"), (s = "max"));
            var u =
              e +
              "(" +
              e +
              "(" +
              e +
              "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";
            "sum" === e
              ? (u = "sumValue")
              : "prod" === e
              ? (u = "prodValue")
              : "all" === e
              ? (u = "allValue")
              : "any" === e && (u = "anyValue");
            var c = 4 * Math.floor(n / 4),
              l = n % 4,
              h =
                "\n      if (" +
                ("sum" === e) +
                ") {\n        sumValue += dot(values, ones);\n      } else if (" +
                ("prod" === e) +
                ") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = " +
                s +
                "(values, minMaxValue);\n      }\n    ",
              f = "vec4";
            "all" === e
              ? ((a = "1.0"),
                (h =
                  "\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      "),
                (f = "bvec4"))
              : "any" === e &&
                ((a = "0.0"),
                (h =
                  "\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      "),
                (f = "bvec4"));
            var p = "";
            i % n > 0 &&
              (p =
                "\n        if (inIdx < 0 || inIdx >= " +
                i +
                ") {\n          return initializationValue;\n        }\n      "),
              (this.userCode =
                "\n      const float initializationValue = " +
                a +
                ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        " +
                p +
                "\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * " +
                n +
                ";\n\n        vec4 minMaxValue = vec4(" +
                a +
                ");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < " +
                c +
                "; i += 4) {\n          int inIdx = inOffset + i;\n          " +
                f +
                " values = " +
                f +
                "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          " +
                h +
                "\n        }\n\n        int inIdx = inOffset + " +
                c +
                ";\n        if (" +
                (1 === l) +
                ") {\n          " +
                f +
                " values = " +
                f +
                "(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          " +
                h +
                "\n        } else if (" +
                (2 === l) +
                ") {\n          " +
                f +
                " values = " +
                f +
                "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          " +
                h +
                "\n        } else if (" +
                (3 === l) +
                ") {\n          " +
                f +
                " values = " +
                f +
                "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          " +
                h +
                "\n        }\n        setOutput(" +
                u +
                ");\n      }\n    ");
          },
          fa = function(t, e) {
            (this.variableNames = ["A"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = t);
            for (var n = "", r = 0; r < 4; r++) {
              var i = "thisRC = rc;";
              r % 2 == 1 && (i += "thisRC.z += 1;"),
                r > 1 && (i += "thisRC.y += 1;"),
                (n +=
                  "\n        " +
                  i +
                  "\n        " +
                  (r > 0 ? "if(thisRC.y < rows && thisRC.z < cols){" : "") +
                  "\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[" +
                  r +
                  "] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        " +
                  (r > 0 ? "}" : "") +
                  "\n      ");
            }
            this.userCode =
              "\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      " +
              Ai(["r", "c", "d"], e) +
              "\n      return ivec3(r, c, d);\n    }\n  \n      " +
              Ei(t) +
              "\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = " +
              t[1] +
              ";\n        int cols = " +
              t[2] +
              ";\n\n        " +
              n +
              "\n\n        setOutput(result);\n      }\n    ";
          },
          pa = function(t, e, n) {
            (this.variableNames = ["dy"]),
              (this.outputShape = []),
              (this.outputShape = e.shape);
            var r = e.shape,
              i = r[1],
              o = r[2],
              a = t.shape,
              s = a[1],
              u = a[2],
              c = [n && s > 1 ? i - 1 : i, n && u > 1 ? o - 1 : o],
              l = [n && s > 1 ? s - 1 : s, n && u > 1 ? u - 1 : u],
              h = c[0] / l[0],
              f = c[1] / l[1],
              p = 1 / h,
              d = 1 / f,
              m = 2 * Math.ceil(p) + 2,
              y = 2 * Math.ceil(d) + 2;
            this.userCode =
              "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(" +
              h +
              ");\n        const float widthScale = float(" +
              f +
              ");\n\n        const float invHeightScale = float(" +
              p +
              ");\n        const float invWidthScale = float(" +
              d +
              ");\n\n        const int winHeight = int(" +
              m +
              ");\n        const int winWidth = int(" +
              y +
              ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= " +
              s +
              ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= " +
              u +
              ") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), " +
              (i - 1) +
              ".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), " +
              (o - 1) +
              ".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ";
          },
          da = function(t, e, n, r) {
            (this.variableNames = ["A"]), (this.outputShape = []);
            var i = t[0],
              o = t[1],
              a = t[2],
              s = t[3];
            this.outputShape = [i, e, n, s];
            var u = [r && e > 1 ? o - 1 : o, r && n > 1 ? a - 1 : a],
              c = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n];
            this.userCode =
              "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          " +
              u[0] / c[0] +
              ",\n          " +
              u[1] / c[1] +
              ");\n      const vec2 inputShapeRC = vec2(" +
              o +
              ".0, " +
              a +
              ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ";
          },
          ma = function(t, e, n, r) {
            (this.variableNames = ["A"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = []);
            var i = t[0],
              o = t[1],
              a = t[2],
              s = t[3];
            this.outputShape = [i, e, n, s];
            var u = [r && e > 1 ? o - 1 : o, r && n > 1 ? a - 1 : a],
              c = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n];
            this.userCode =
              "\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          " +
              u[0] / c[0] +
              ",\n          " +
              u[1] / c[1] +
              ",\n          " +
              u[1] / c[1] +
              ");\n      const vec3 inputShapeRC = vec3(" +
              o +
              ".0, " +
              a +
              ".0,\n                                     " +
              a +
              ".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n        \n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < " +
              (s - 1) +
              "; \n        bool hasNextRow = coords.z < " +
              (n - 1) +
              ";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ";
          },
          ya = function(t, e, n) {
            (this.variableNames = ["dy"]),
              (this.outputShape = []),
              (this.outputShape = e.shape);
            var r = e.shape,
              i = r[1],
              o = r[2],
              a = t.shape,
              s = a[1],
              u = a[2],
              c = [n && s > 1 ? i - 1 : i, n && u > 1 ? o - 1 : o],
              l = [n && s > 1 ? s - 1 : s, n && u > 1 ? u - 1 : u],
              h = c[0] / l[0],
              f = c[1] / l[1],
              p = 1 / h,
              d = 1 / f,
              m = 2 * Math.ceil(p) + 2,
              y = 2 * Math.ceil(d) + 2;
            this.userCode =
              "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(" +
              h +
              ");\n        const float widthScale = float(" +
              f +
              ");\n\n        const float invHeightScale = float(" +
              p +
              ");\n        const float invWidthScale = float(" +
              d +
              ");\n\n        const int winHeight = int(" +
              m +
              ");\n        const int winWidth = int(" +
              y +
              ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= " +
              s +
              ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= " +
              u +
              ") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(" +
              c[0] +
              ") *\n                (float(dyR) / float(" +
              l[0] +
              "));\n\n            float sourceFracCol =\n                float(" +
              c[1] +
              ") *\n                  (float(dyC) / float(" +
              l[1] +
              "));\n\n            int sourceNearestRow = int(min(\n                float(int(" +
              i +
              ") - 1),\n                " +
              n +
              " ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(" +
              o +
              ") - 1),\n                " +
              n +
              " ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ";
          },
          ga = function(t, e, n, r) {
            (this.variableNames = ["A"]), (this.outputShape = []);
            var i = t[0],
              o = t[1],
              a = t[2],
              s = t[3];
            this.outputShape = [i, e, n, s];
            var u = [r && e > 1 ? o - 1 : o, r && n > 1 ? a - 1 : a],
              c = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],
              l = r ? "0.5" : "0.0";
            this.userCode =
              "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          " +
              u[0] / c[0] +
              ",\n          " +
              u[1] / c[1] +
              ");\n      const vec2 inputShapeRC = vec2(" +
              o +
              ".0, " +
              a +
              ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + " +
              l +
              ")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ";
          },
          va = function(t, e) {
            this.variableNames = ["x"];
            var n = t.length;
            if (n > 4)
              throw new Error(
                "WebGL backend: Reverse of rank-" +
                  n +
                  " tensor is not yet supported"
              );
            if (((this.outputShape = t), 1 !== n)) {
              var r = t
                  .map(function(n, r) {
                    return (function(n) {
                      return -1 !== e.indexOf(n) && 1 !== t[n]
                        ? t[n] + " - coords[" + n + "] - 1"
                        : "coords[" + n + "]";
                    })(r);
                  })
                  .join(","),
                i = Di(n);
              this.userCode =
                "\n      void main() {\n        " +
                i +
                " coords = getOutputCoords();\n        setOutput(getX(" +
                r +
                "));\n      }\n    ";
            } else
              this.userCode =
                "\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(" +
                t[0] +
                " - coord - 1));\n        }\n      ";
          },
          ba = function(t, e) {
            (this.variableNames = ["x"]), (this.usesPackedTextures = !0);
            var n = t.length;
            if (n > 4)
              throw new Error(
                "WebGL backend: Reverse of rank-" +
                  n +
                  " tensor is not yet supported"
              );
            this.outputShape = t;
            var r = xi("rc", n),
              i = r[n - 1] + " + 1 < " + this.outputShape[n - 1],
              o = r[n - 2] + " + 1 < " + this.outputShape[n - 2],
              a = Di(n);
            function s(n) {
              var r = t.map(function(r, i) {
                return (function(n, r) {
                  return -1 !== e.indexOf(n) && 1 !== t[n]
                    ? t[n] + " - " + r[n] + " - 1"
                    : "" + r[n];
                })(i, n);
              });
              return (
                "getChannel(getX(" +
                r.join(",") +
                "), vec2(" +
                r.slice(-2).join(",") +
                "))"
              );
            }
            this.userCode =
              1 === n
                ? "\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(" +
                  t[0] +
                  " - rc - 1),\n            " +
                  t[0] +
                  " - rc - 1);\n          if(" +
                  i +
                  "){\n              result.g = getChannel(getX(" +
                  t[0] +
                  " - (rc  + 1) - 1),\n                " +
                  t[0] +
                  " - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "
                : "\n        void main() {\n          " +
                  a +
                  " rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = " +
                  s(r.slice()) +
                  ";\n          if(" +
                  i +
                  "){\n            result.g = " +
                  (function(t) {
                    return (t[n - 1] = "(" + t[n - 1] + " + 1)"), s(t);
                  })(r.slice()) +
                  ";\n          }\n          if(" +
                  o +
                  ") {\n            result.b = " +
                  (function(t) {
                    return (t[n - 2] = "(" + t[n - 2] + " + 1)"), s(t);
                  })(r.slice()) +
                  ";\n            if(" +
                  i +
                  ") {\n              result.a = " +
                  (function(t) {
                    return (
                      (t[n - 1] = "(" + t[n - 1] + " + 1)"),
                      (t[n - 2] = "(" + t[n - 2] + " + 1)"),
                      s(t)
                    );
                  })(r.slice()) +
                  ";\n            }\n          }\n          setOutput(result);\n        }\n    ";
          },
          wa = function(t, e, n, r, i, o, a) {
            void 0 === a && (a = !0),
              (this.variableNames = ["updates", "indices", "defaultValue"]),
              (this.outputShape = o);
            var s = Di(i.length),
              u = Di(o.length),
              c = "";
            1 === n ? (c = "i") : 2 === n && (c = "i, j");
            var l = "getIndices(" + c + ")",
              h = "";
            1 === r ? (h = "i") : 2 === r && (h = "i, coords[1]");
            var f = "getUpdates(" + h + ")",
              p = e > 1 ? "strides[j]" : "strides";
            this.userCode =
              "\n        " +
              s +
              " strides = " +
              s +
              "(" +
              i +
              ");\n\n        void main() {\n          " +
              u +
              " coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < " +
              t +
              "; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < " +
              e +
              "; j++) {\n              int index = round(" +
              l +
              ");\n              flattenedIndex += index * " +
              p +
              ";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += " +
              f +
              ";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ";
          },
          _a = function(t, e) {
            this.variableNames = ["x", "segmentIds"];
            var n = t.windowSize,
              r = t.batchSize,
              i = t.inSize,
              o = t.numSegments,
              a = o * Math.ceil(i / n);
            this.outputShape = [r, a];
            var s = 4 * Math.floor(n / 4),
              u = n % 4,
              c = "\n        sumValue += dot(values, segFilter);\n    ",
              l = "";
            i % n > 0 &&
              (l =
                "\n        if (inIdx < 0 || inIdx >= " +
                i +
                ") {\n          return initializationValue;\n        }\n      ");
            var h = "";
            i % n > 0 &&
              (h =
                "\n        if (inIdx < 0 || inIdx >= " +
                i +
                ") {\n          return -1.0;\n        }\n      "),
              (this.userCode =
                "\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        " +
                l +
                "\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        " +
                h +
                "\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          " +
                o +
                ")) * float(" +
                n +
                "));\n        int currentSeg = int(mod(float(outIdx), float(" +
                o +
                ")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < " +
                s +
                "; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          " +
                c +
                "\n        }\n\n        int inIdx = inOffset + " +
                s +
                ";\n        if (" +
                (1 === u) +
                ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          " +
                c +
                "\n        } else if (" +
                (2 === u) +
                ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          " +
                c +
                "\n        } else if (" +
                (3 === u) +
                ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          " +
                c +
                "\n        }\n        setOutput(sumValue);\n      }\n    ");
          },
          Sa = function(t, e, n) {
            var r, i;
            if (
              ((this.variableNames = ["c", "a", "b"]),
              (this.outputShape = e),
              n > 4)
            )
              throw Error("Where for rank " + n + " is not yet supported");
            if (1 === n) (i = "resRC"), (r = "resRC");
            else {
              for (
                var o = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"],
                  a = [],
                  s = [],
                  u = 0;
                u < e.length;
                u++
              )
                s.push("" + o[u]), u < t && a.push("" + o[u]);
              (r = a.join()), (i = s.join());
            }
            var c = Di(n);
            this.userCode =
              "\n      void main() {\n        " +
              c +
              " resRC = getOutputCoords();\n        float cVal = getC(" +
              r +
              ");\n        if (cVal >= 1.0) {\n          setOutput(getA(" +
              i +
              "));\n        } else {\n          setOutput(getB(" +
              i +
              "));\n        }\n      }\n    ";
          },
          xa = (function() {
            function t(t) {
              (this.variableNames = ["source"]),
                (this.outputShape = t),
                (this.rank = t.length);
              var e,
                n = Di(this.rank),
                r = "uniform int start[" + this.rank + "];",
                i = (function(t) {
                  if (1 === t) return "sourceLoc";
                  if (t <= 6)
                    return Ta.slice(0, t)
                      .map(function(t) {
                        return "sourceLoc." + t;
                      })
                      .join(",");
                  throw Error(
                    "Slicing for rank " + t + " is not yet supported"
                  );
                })(this.rank);
              (e =
                "\n        " +
                n +
                " sourceLoc;\n        " +
                n +
                " coords = getOutputCoords();\n        " +
                t
                  .map(function(t, e) {
                    return (
                      "sourceLoc." +
                      Ta[e] +
                      " = start[" +
                      e +
                      "] + coords." +
                      Ta[e] +
                      ";"
                    );
                  })
                  .join("\n") +
                "\n      "),
                (this.userCode =
                  "\n      " +
                  r +
                  "\n      void main() {\n        " +
                  e +
                  "\n        setOutput(getSource(" +
                  i +
                  "));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t) {
                var e = this;
                if (t.length !== this.rank)
                  throw Error(
                    "The rank (" +
                      this.rank +
                      ") of the program must match the length of start (" +
                      t.length +
                      ")"
                  );
                return function(n, r) {
                  (null == e.startLoc &&
                    ((e.startLoc = n.getUniformLocationNoThrow(r, "start")),
                    null == e.startLoc)) ||
                    n.gl.uniform1iv(e.startLoc, t);
                };
              }),
              t
            );
          })(),
          Ta = ["x", "y", "z", "w", "u", "v"],
          Aa = (function() {
            function t(t) {
              (this.variableNames = ["source"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t),
                (this.rank = t.length);
              var e = Di(this.rank),
                n = xi("coords", this.rank),
                r = xi("sourceLoc", this.rank),
                i =
                  1 === this.rank
                    ? "sourceLoc"
                    : "vec2(" + r.slice(-2).join() + ")",
                o = "getChannel(getSource(" + r.join() + "), " + i + ")",
                a =
                  "\n      result.x = " +
                  o +
                  ";\n      if (++" +
                  n[this.rank - 1] +
                  " < " +
                  t[this.rank - 1] +
                  ") {\n        ++" +
                  r[this.rank - 1] +
                  ";\n        result.y = " +
                  o +
                  ";\n        --" +
                  r[this.rank - 1] +
                  ";\n      }\n    ",
                s =
                  1 === this.rank
                    ? ""
                    : "\n      --" +
                      n[this.rank - 1] +
                      ";\n      if (++" +
                      n[this.rank - 2] +
                      " < " +
                      t[this.rank - 2] +
                      ") {\n        ++" +
                      r[this.rank - 2] +
                      ";\n        result.z = " +
                      o +
                      ";\n        if (++" +
                      n[this.rank - 1] +
                      " < " +
                      t[this.rank - 1] +
                      ") {\n          ++" +
                      r[this.rank - 1] +
                      ";\n          result.w = " +
                      o +
                      ";\n        }\n      }\n    ",
                u =
                  this.rank <= 4
                    ? "sourceLoc = coords +\n            " +
                      e +
                      "(" +
                      t
                        .map(function(t, e) {
                          return "start[" + e + "]";
                        })
                        .join() +
                      ");"
                    : t
                        .map(function(t, e) {
                          return r[e] + " = " + n[e] + " + start[" + e + "];";
                        })
                        .join("\n");
              this.userCode =
                "\n      uniform int start[" +
                this.rank +
                "];\n      void main() {\n        " +
                e +
                " coords = getOutputCoords();\n        " +
                e +
                " sourceLoc;\n        " +
                u +
                " \n        vec4 result = vec4(0.);\n        " +
                a +
                "\n        " +
                s +
                "\n        setOutput(result);\n      }\n    ";
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t) {
                var e = this;
                if (t.length !== this.rank)
                  throw Error(
                    "The rank (" +
                      this.rank +
                      ") of the program must match the length of start (" +
                      t.length +
                      ")"
                  );
                return function(n, r) {
                  (null == e.startLoc &&
                    ((e.startLoc = n.getUniformLocationNoThrow(r, "start")),
                    null == e.startLoc)) ||
                    n.gl.uniform1iv(e.startLoc, t);
                };
              }),
              t
            );
          })(),
          ka = function(t, e, n, r) {
            this.variableNames = ["x"];
            var i = n.filter(function(t, e) {
              return -1 === r.indexOf(e);
            });
            this.outputShape = i;
            var o = n.length,
              a = Di(n.length),
              s = Di(i.length),
              u = "";
            if (1 === o) u = "coords * strides + begin";
            else {
              var c = 0;
              u = n
                .map(function(t, e) {
                  return -1 === r.indexOf(e)
                    ? (c++,
                      1 === i.length
                        ? "coords * strides[" + e + "] + begin[" + e + "]"
                        : "coords[" +
                          (c - 1) +
                          "] * strides[" +
                          e +
                          "] + begin[" +
                          e +
                          "]")
                    : "begin[" + e + "]";
                })
                .join(",");
            }
            this.userCode =
              "\n      " +
              a +
              " begin = " +
              a +
              "(" +
              t +
              ");\n      " +
              a +
              " strides = " +
              a +
              "(" +
              e +
              ");\n\n      void main() {\n        " +
              s +
              " coords = getOutputCoords();\n        setOutput(getX(" +
              u +
              "));\n      }\n    ";
          },
          Ea = (function() {
            function t(t) {
              (this.gpgpu = t),
                (this.numUsedTextures = 0),
                (this.numFreeTextures = 0),
                (this.freeTextures = {}),
                (this.logEnabled = !1),
                (this.usedTextures = {});
            }
            return (
              (t.prototype.acquireTexture = function(t, e, n) {
                var r,
                  i = Na(e, n),
                  o = Oa(t, i, n);
                if (
                  (o in this.freeTextures || (this.freeTextures[o] = []),
                  o in this.usedTextures || (this.usedTextures[o] = []),
                  this.freeTextures[o].length > 0)
                ) {
                  this.numFreeTextures--, this.numUsedTextures++, this.log();
                  var a = this.freeTextures[o].shift();
                  return this.usedTextures[o].push(a), a;
                }
                return (
                  this.numUsedTextures++,
                  this.log(),
                  i === po.PACKED_2X2_FLOAT32
                    ? (r = this.gpgpu.createPackedMatrixTexture(t[0], t[1]))
                    : i === po.PACKED_2X2_FLOAT16
                    ? (r = this.gpgpu.createFloat16PackedMatrixTexture(
                        t[0],
                        t[1]
                      ))
                    : i === po.UNPACKED_FLOAT32
                    ? (r = this.gpgpu.createFloat32MatrixTexture(t[0], t[1]))
                    : i === po.UNPACKED_FLOAT16
                    ? (r = this.gpgpu.createFloat16MatrixTexture(t[0], t[1]))
                    : i === po.PACKED_4X1_UNSIGNED_BYTE &&
                      (r = this.gpgpu.createUnsignedBytesMatrixTexture(
                        t[0],
                        t[1]
                      )),
                  this.usedTextures[o].push(r),
                  r
                );
              }),
              (t.prototype.releaseTexture = function(t, e, n, r) {
                if (null != this.freeTextures) {
                  var i = Oa(e, Na(n, r), r);
                  i in this.freeTextures || (this.freeTextures[i] = []),
                    this.freeTextures[i].push(t),
                    this.numFreeTextures++,
                    this.numUsedTextures--;
                  var o = this.usedTextures[i],
                    a = o.indexOf(t);
                  if (a < 0)
                    throw new Error(
                      "Cannot release a texture that was never provided by this texture manager"
                    );
                  o.splice(a, 1), this.log();
                }
              }),
              (t.prototype.log = function() {
                if (this.logEnabled) {
                  var t = this.numFreeTextures + this.numUsedTextures;
                  console.log(
                    "Free/Used",
                    this.numFreeTextures + " / " + this.numUsedTextures,
                    "(" + t + ")"
                  );
                }
              }),
              (t.prototype.getNumUsedTextures = function() {
                return this.numUsedTextures;
              }),
              (t.prototype.getNumFreeTextures = function() {
                return this.numFreeTextures;
              }),
              (t.prototype.dispose = function() {
                var t = this;
                if (null != this.freeTextures) {
                  for (var e in this.freeTextures)
                    this.freeTextures[e].forEach(function(e) {
                      t.gpgpu.deleteMatrixTexture(e);
                    });
                  for (var e in this.usedTextures)
                    this.usedTextures[e].forEach(function(e) {
                      t.gpgpu.deleteMatrixTexture(e);
                    });
                  (this.freeTextures = null),
                    (this.usedTextures = null),
                    (this.numUsedTextures = 0),
                    (this.numFreeTextures = 0);
                }
              }),
              t
            );
          })();
        function Na(t, e) {
          if (t === fo.UPLOAD) return po.PACKED_2X2_FLOAT32;
          if (t === fo.RENDER || null == t)
            return e
              ? h.getBool("WEBGL_RENDER_FLOAT32_ENABLED")
                ? po.PACKED_2X2_FLOAT32
                : po.PACKED_2X2_FLOAT16
              : h.getBool("WEBGL_RENDER_FLOAT32_ENABLED")
              ? po.UNPACKED_FLOAT32
              : po.UNPACKED_FLOAT16;
          if (t === fo.DOWNLOAD || t === fo.PIXELS)
            return po.PACKED_4X1_UNSIGNED_BYTE;
          throw new Error("Unknown logical texture type " + t);
        }
        function Oa(t, e, n) {
          return t[0] + "_" + t[1] + "_" + e + "_" + n;
        }
        var Ca = function(t, e) {
            this.variableNames = ["A"];
            for (var n = new Array(t.length), r = 0; r < n.length; r++)
              n[r] = t[r] * e[r];
            (this.outputShape = n), (this.rank = n.length);
            var i = Di(this.rank),
              o = (function(t) {
                var e = t.length;
                if (e > 5)
                  throw Error("Tile for rank " + e + " is not yet supported");
                if (1 === e) return "imod(resRC, " + t[0] + ")";
                for (
                  var n = [
                      "resRC.x",
                      "resRC.y",
                      "resRC.z",
                      "resRC.w",
                      "resRC.u"
                    ],
                    r = [],
                    i = 0;
                  i < t.length;
                  i++
                )
                  r.push("imod(" + n[i] + ", " + t[i] + ")");
                return r.join();
              })(t);
            this.userCode =
              "\n      void main() {\n        " +
              i +
              " resRC = getOutputCoords();\n        setOutput(getA(" +
              o +
              "));\n      }\n    ";
          },
          Ia = function(t, e) {
            this.variableNames = ["A"];
            for (var n = new Array(t.length), r = 0; r < n.length; r++)
              n[r] = t[e[r]];
            (this.outputShape = n), (this.rank = n.length);
            var i = Di(this.rank),
              o = (function(t) {
                var e = t.length;
                if (e > 6)
                  throw Error(
                    "Transpose for rank " + e + " is not yet supported"
                  );
                for (
                  var n = [
                      "resRC.x",
                      "resRC.y",
                      "resRC.z",
                      "resRC.w",
                      "resRC.u",
                      "resRC.v"
                    ],
                    r = new Array(e),
                    i = 0;
                  i < t.length;
                  i++
                )
                  r[t[i]] = n[i];
                return r.join();
              })(e);
            this.userCode =
              "\n    void main() {\n      " +
              i +
              " resRC = getOutputCoords();\n      setOutput(getA(" +
              o +
              "));\n    }\n    ";
          },
          Ma = function(t, e) {
            (this.variableNames = ["A"]), (this.usesPackedTextures = !0);
            for (var n = new Array(t.length), r = 0; r < n.length; r++)
              n[r] = t[e[r]];
            if (((this.outputShape = n), (this.rank = n.length), this.rank > 6))
              throw Error(
                "Packed transpose for rank " +
                  this.rank +
                  " is not yet supported."
              );
            var i = Di(this.rank),
              o = Si("rc", this.rank),
              a = new Array(this.rank);
            for (r = 0; r < e.length; r++) a[e[r]] = o[r];
            var s = "vec2(" + a.slice(-2).join() + ")",
              u = "++" + o[this.rank - 1] + " < " + n[this.rank - 1],
              c = "getChannel(getA(" + a.join() + "), " + s + ")";
            this.userCode =
              "\n    void main() {\n      " +
              i +
              " rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = " +
              c +
              ";\n      if(" +
              u +
              ") {\n        result[1] = " +
              c +
              ";\n      }\n      --" +
              o[this.rank - 1] +
              ";\n      if(++" +
              o[this.rank - 2] +
              " < " +
              n[this.rank - 2] +
              ") {\n        result[2] = " +
              c +
              ";\n        if(" +
              u +
              ") {\n          result[3] = " +
              c +
              ";\n        }\n      }  \n      setOutput(result);\n    }\n    ";
          },
          Pa = 1.7580993408473768,
          Ra = 1.0507009873554805,
          Da = function(t, e) {
            (this.variableNames = ["A"]),
              (this.outputShape = t),
              (this.userCode =
                "\n      float unaryOperation(float x) {\n        " +
                e +
                "\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ");
          },
          Fa = "if (isnan(x)) return x;",
          za = Fa + "\n  return (x < 0.0) ? 0.0 : x;\n",
          La = "return exp(x);",
          ja =
            "\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",
          Ba = function(t, e) {
            (this.variableNames = ["A"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = t),
              (this.userCode =
                "\n      vec4 unaryOperation(vec4 x) {\n        " +
                e +
                "\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ");
          },
          qa = function(t) {
            (this.variableNames = ["A"]),
              (this.usesPackedTextures = !0),
              (this.outputShape = t);
            var e = t.length,
              n = xi("rc", e),
              r = Di(e),
              i = (function(t, e) {
                if (1 === t) return "rc";
                for (var n = "", r = 0; r < t; r++)
                  (n += e[r]), r < t - 1 && (n += ",");
                return n;
              })(e, n),
              o = n.slice(-2),
              a = e <= 1 ? "rc" : "vec2(" + o.join(",") + ")";
            this.userCode =
              "\n      void main() {\n        " +
              r +
              " rc = getOutputCoords();\n        vec4 packedInput = getA(" +
              i +
              ");\n\n        setOutput(getChannel(packedInput, " +
              a +
              "));\n      }\n    ";
          },
          Ua = {},
          Va = 600,
          Wa = (function() {
            function t(t) {
              if (
                ((this.gpgpu = t),
                (this.pendingRead = new WeakMap()),
                (this.pendingDisposal = new WeakSet()),
                (this.dataRefCount = new WeakMap()),
                (this.numBytesInGPU = 0),
                (this.uploadWaitMs = 0),
                (this.downloadWaitMs = 0),
                (this.warnedAboutMemory = !1),
                (this.disposed = !1),
                !h.getBool("HAS_WEBGL"))
              )
                throw new Error("WebGL is not supported on this device");
              if (null == t) {
                var e = jt(h.getNumber("WEBGL_VERSION"));
                (this.binaryCache =
                  (n = h.getNumber("WEBGL_VERSION")) in Ua
                    ? Ua[n]
                    : ((Ua[n] = {}), Ua[n])),
                  (this.gpgpu = new Yo(e)),
                  (this.canvas = e.canvas),
                  (this.gpgpuCreatedLocally = !0);
              } else
                (this.binaryCache = {}),
                  (this.gpgpuCreatedLocally = !1),
                  (this.canvas = t.gl.canvas);
              var n;
              (this.textureManager = new Ea(this.gpgpu)),
                (this.numMBBeforeWarning =
                  null == h.global.screen
                    ? 1024
                    : (h.global.screen.height *
                        h.global.screen.width *
                        window.devicePixelRatio *
                        Va) /
                      1024 /
                      1024),
                (this.texData = new er(this, Rt));
            }
            return (
              (t.prototype.register = function(t, e, n) {
                if (this.texData.has(t))
                  throw new Error("Data buffer is already registered");
                this.texData.set(t, { shape: e, dtype: n });
              }),
              (t.prototype.fromPixels = function(t, e) {
                if (null == t)
                  throw new Error(
                    "pixels passed to tf.browser.fromPixels() can not be null"
                  );
                var n = [t.height, t.width],
                  r = [t.height, t.width, e];
                if (h.getBool("IS_BROWSER")) {
                  if (
                    !(
                      t instanceof HTMLVideoElement ||
                      t instanceof HTMLImageElement ||
                      t instanceof HTMLCanvasElement ||
                      t instanceof ImageData ||
                      t.data instanceof Uint8Array
                    )
                  )
                    throw new Error(
                      "pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData or {data: Uint32Array, width: number, height: number}, but was " +
                        t.constructor.name
                    );
                  if (t instanceof HTMLVideoElement) {
                    if (null == this.fromPixels2DContext) {
                      if ("complete" !== document.readyState)
                        throw new Error(
                          "The DOM is not ready yet. Please call tf.browser.fromPixels() once the DOM is ready. One way to do that is to add an event listener for `DOMContentLoaded` on the document object"
                        );
                      this.fromPixels2DContext = document
                        .createElement("canvas")
                        .getContext("2d");
                    }
                    (this.fromPixels2DContext.canvas.width = t.width),
                      (this.fromPixels2DContext.canvas.height = t.height),
                      this.fromPixels2DContext.drawImage(
                        t,
                        0,
                        0,
                        t.width,
                        t.height
                      ),
                      (t = this.fromPixels2DContext.canvas);
                  }
                }
                var i,
                  o,
                  a = this.makeTensorHandle(n, "int32");
                if (
                  ((this.texData.get(a.dataId).usage = fo.PIXELS),
                  this.gpgpu.uploadPixelDataToTexture(
                    this.getTexture(a.dataId),
                    t
                  ),
                  h.getBool("WEBGL_PACK"))
                ) {
                  i = new So(r);
                  var s = this.makePackedTensor(i.outputShape, a.dtype);
                  o = this.compileAndRun(i, [a], s);
                } else (i = new _o(r)), (o = this.compileAndRun(i, [a]));
                return this.disposeData(a.dataId), o;
              }),
              (t.prototype.makeTensorHandle = function(t, e) {
                var n = {};
                return (
                  this.register(n, t, e), { dataId: n, shape: t, dtype: e }
                );
              }),
              (t.prototype.write = function(t, e) {
                if (null == e)
                  throw new Error(
                    "MathBackendWebGL.write(): values can not be null"
                  );
                if (h.getBool("DEBUG"))
                  for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    if (!Vt(r))
                      throw Error(
                        "The value " +
                          r +
                          " cannot be represented on this device."
                      );
                  }
                var i = this.texData.get(t);
                if ("complex64" === i.dtype)
                  throw new Error(
                    "Cannot write to a complex64 dtype. Please use tf.complex(real, imag)."
                  );
                this.releaseGPUData(t), (i.usage = fo.UPLOAD), (i.values = e);
              }),
              (t.prototype.readSync = function(t) {
                var e = this.texData.get(t),
                  n = e.values,
                  r = e.dtype,
                  i = e.complexTensors,
                  o = e.slice,
                  a = e.shape;
                if (null != o) {
                  var s = new Da(a, "return x;"),
                    u = this.compileAndRun(s, [
                      { dataId: t, shape: a, dtype: r }
                    ]),
                    c = this.readSync(u.dataId);
                  return u.dispose(), c;
                }
                if (null != n) return this.convertAndCacheOnCPU(t);
                if ("string" === r) return n;
                var l,
                  h,
                  f = null != this.activeTimers;
                return (
                  f && (l = performance.now()),
                  (h =
                    "complex64" === r
                      ? wr(i.real.dataSync(), i.imag.dataSync())
                      : this.getValuesFromTexture(t)),
                  f && (this.downloadWaitMs += performance.now() - l),
                  this.convertAndCacheOnCPU(t, h)
                );
              }),
              (t.prototype.read = function(t) {
                return c(this, void 0, void 0, function() {
                  var e,
                    n,
                    r,
                    i,
                    o,
                    a,
                    s,
                    u,
                    c,
                    f,
                    p,
                    d,
                    m,
                    y,
                    g,
                    v,
                    b,
                    w,
                    _,
                    S,
                    x,
                    A,
                    k,
                    E,
                    N,
                    O,
                    C,
                    I;
                  return l(this, function(l) {
                    switch (l.label) {
                      case 0:
                        if (this.pendingRead.has(t))
                          return (
                            (r = this.pendingRead.get(t)),
                            [
                              2,
                              new Promise(function(t) {
                                return r.push(t);
                              })
                            ]
                          );
                        if (
                          ((i = this.texData.get(t)),
                          (o = i.texture),
                          (a = i.values),
                          (s = i.texShape),
                          (u = i.isPacked),
                          (c = i.shape),
                          (f = i.slice),
                          (p = i.dtype),
                          (d = i.complexTensors),
                          null != f)
                        )
                          return (
                            (m = new Da(c, "return x;")),
                            (y = this.compileAndRun(m, [
                              { dataId: t, shape: c, dtype: p }
                            ])),
                            (g = this.read(y.dataId)),
                            y.dispose(),
                            [2, g]
                          );
                        if (null != a) return [2, this.convertAndCacheOnCPU(t)];
                        if (
                          (this.pendingRead.set(t, []),
                          !h.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED") &&
                            2 === h.getNumber("WEBGL_VERSION"))
                        )
                          throw new Error(
                            "tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported."
                          );
                        return (
                          (v = null),
                          "complex64" === p
                            ? [3, 2]
                            : ((b = s[1]),
                              (w = s[0]),
                              u &&
                                ((e = No(s[0], s[1])), (b = e[0]), (w = e[1])),
                              h.get("WEBGL_BUFFER_SUPPORTED") &&
                                (v = this.gpgpu.createBufferFromTexture(
                                  o,
                                  w,
                                  b
                                )),
                              [4, this.gpgpu.createAndWaitForFence()])
                        );
                      case 1:
                        l.sent(), (l.label = 2);
                      case 2:
                        return "complex64" !== p
                          ? [3, 4]
                          : [4, Promise.all([d.real.data(), d.imag.data()])];
                      case 3:
                        return (
                          (S = l.sent()),
                          (x = S[0]),
                          (A = S[1]),
                          (_ = wr(x, A)),
                          [3, 5]
                        );
                      case 4:
                        null == v
                          ? (_ = this.getValuesFromTexture(t))
                          : ((k = T(c)),
                            u
                              ? ((E = ye(c)),
                                (N = 1),
                                (O = 1),
                                c.length &&
                                  ((n = ge(c)), (N = n[0]), (O = n[1])),
                                (_ = this.gpgpu
                                  .downloadPackedMatrixFromBuffer(
                                    v,
                                    E,
                                    N,
                                    O,
                                    s[0],
                                    s[1]
                                  )
                                  .subarray(0, k)))
                              : (_ = this.gpgpu
                                  .downloadFloat32MatrixFromBuffer(
                                    v,
                                    s[0],
                                    s[1]
                                  )
                                  .subarray(0, k))),
                          (l.label = 5);
                      case 5:
                        return (
                          (C = this.convertAndCacheOnCPU(t, _)),
                          (I = this.pendingRead.get(t)),
                          this.pendingRead.delete(t),
                          I.forEach(function(t) {
                            return t(C);
                          }),
                          this.pendingDisposal.has(t) &&
                            (this.pendingDisposal.delete(t),
                            this.disposeData(t)),
                          [2, C]
                        );
                    }
                  });
                });
              }),
              (t.prototype.getValuesFromTexture = function(t) {
                var e,
                  n = this,
                  r = this.texData.get(t),
                  i = r.shape,
                  o = r.dtype,
                  a = r.texture,
                  s = r.texShape,
                  u = T(i);
                if (h.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")) {
                  if (this.texData.get(t).isPacked) {
                    var c = ye(i),
                      l = 1,
                      f = 1;
                    return (
                      i.length && ((l = (e = ge(i))[0]), (f = e[1])),
                      this.gpgpu
                        .downloadMatrixFromPackedTexture(a, c, l, f, s[0], s[1])
                        .subarray(0, u)
                    );
                  }
                  return this.gpgpu
                    .downloadFloat32MatrixFromOutputTexture(a, s[0], s[1])
                    .subarray(0, u);
                }
                var p = this.makeTensorHandle(i, "float32");
                (p.size = T(i)),
                  (this.texData.get(p.dataId).usage = fo.DOWNLOAD);
                var d = Le(function() {
                    var e = new yo(i);
                    return n.compileAndRun(
                      e,
                      [{ shape: i, dtype: o, dataId: t }],
                      p,
                      null
                    );
                  }),
                  m = this.texData.get(d.dataId),
                  y = this.gpgpu
                    .downloadByteEncodedFloatMatrixFromOutputTexture(
                      m.texture,
                      m.texShape[0],
                      m.texShape[1]
                    )
                    .subarray(0, u);
                return this.disposeData(p.dataId), y;
              }),
              (t.prototype.time = function(t) {
                return c(this, void 0, void 0, function() {
                  var e, n, r, i, o, a, s;
                  return l(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return (
                          (e = this.activeTimers),
                          (n = []),
                          (r = !1),
                          null == this.programTimersStack
                            ? ((this.programTimersStack = n), (r = !0))
                            : this.activeTimers.push(n),
                          (this.activeTimers = n),
                          t(),
                          (i = x(
                            this.activeTimers.map(function(t) {
                              return t.query;
                            })
                          ).filter(function(t) {
                            return null != t;
                          })),
                          (o = x(
                            this.activeTimers.map(function(t) {
                              return t.name;
                            })
                          ).filter(function(t) {
                            return null != t;
                          })),
                          (this.activeTimers = e),
                          r && (this.programTimersStack = null),
                          [4, Promise.all(i)]
                        );
                      case 1:
                        return (
                          (a = u.sent()),
                          (s = {
                            uploadWaitMs: this.uploadWaitMs,
                            downloadWaitMs: this.downloadWaitMs,
                            kernelMs: b(a),
                            getExtraProfileInfo: function() {
                              return a
                                .map(function(t, e) {
                                  return { name: o[e], ms: t };
                                })
                                .map(function(t) {
                                  return t.name + ": " + t.ms;
                                })
                                .join(", ");
                            },
                            wallMs: null
                          }),
                          (this.uploadWaitMs = 0),
                          (this.downloadWaitMs = 0),
                          [2, s]
                        );
                    }
                  });
                });
              }),
              (t.prototype.memory = function() {
                return { unreliable: !1, numBytesInGPU: this.numBytesInGPU };
              }),
              (t.prototype.startTimer = function() {
                return h.getNumber(
                  "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                ) > 0
                  ? this.gpgpu.beginQuery()
                  : { startMs: performance.now(), endMs: null };
              }),
              (t.prototype.endTimer = function(t) {
                return h.getNumber(
                  "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                ) > 0
                  ? (this.gpgpu.endQuery(), t)
                  : ((t.endMs = performance.now()), t);
              }),
              (t.prototype.getQueryTime = function(t) {
                return c(this, void 0, void 0, function() {
                  var e;
                  return l(this, function(n) {
                    return h.getNumber(
                      "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                    ) > 0
                      ? [2, this.gpgpu.waitForQueryAndGetTime(t)]
                      : [2, (e = t).endMs - e.startMs];
                  });
                });
              }),
              (t.prototype.disposeData = function(t) {
                if (!this.pendingDisposal.has(t))
                  if (this.pendingRead.has(t)) this.pendingDisposal.add(t);
                  else if (this.texData.has(t)) {
                    this.releaseGPUData(t);
                    var e = this.texData.get(t).complexTensors;
                    null != e && (e.real.dispose(), e.imag.dispose()),
                      this.texData.delete(t);
                  }
              }),
              (t.prototype.releaseGPUData = function(t) {
                var e = this.texData.get(t),
                  n = e.texture,
                  r = e.dtype,
                  i = e.texShape,
                  o = e.usage,
                  a = e.isPacked,
                  s = e.slice,
                  u = (s && s.origDataId) || t,
                  c = this.dataRefCount.get(u);
                c > 1
                  ? this.dataRefCount.set(u, c - 1)
                  : (this.dataRefCount.delete(u),
                    null != n &&
                      ((this.numBytesInGPU -= this.computeBytes(i, r)),
                      this.textureManager.releaseTexture(n, i, o, a)));
                var l = this.texData.get(t);
                (l.texture = null),
                  (l.texShape = null),
                  (l.isPacked = !1),
                  (l.slice = null);
              }),
              (t.prototype.getTexture = function(t) {
                return this.uploadToGPU(t), this.texData.get(t).texture;
              }),
              (t.prototype.getCPUBackend = function() {
                return h.getBool("WEBGL_CPU_FORWARD")
                  ? (null == this.cpuBackend &&
                      (this.cpuBackend = Rt.findBackend("cpu")),
                    this.cpuBackend)
                  : null;
              }),
              (t.prototype.shouldExecuteOnCPU = function(t, e) {
                var n = this;
                return (
                  void 0 === e && (e = 128),
                  null != this.getCPUBackend() &&
                    t.every(function(t) {
                      return (
                        null == n.texData.get(t.dataId).texture && t.size < e
                      );
                    })
                );
              }),
              (t.prototype.getGPGPUContext = function() {
                return this.gpgpu;
              }),
              (t.prototype.getCanvas = function() {
                return this.canvas;
              }),
              (t.prototype.complex = function(t, e) {
                var n = this.makeOutputArray(t.shape, "complex64");
                return (
                  (this.texData.get(n.dataId).complexTensors = {
                    real: Rt.keep(t.clone()),
                    imag: Rt.keep(e.clone())
                  }),
                  n
                );
              }),
              (t.prototype.real = function(t) {
                return this.texData.get(t.dataId).complexTensors.real.clone();
              }),
              (t.prototype.imag = function(t) {
                return this.texData.get(t.dataId).complexTensors.imag.clone();
              }),
              (t.prototype.slice = function(t, e, n) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.slice(t, e, n);
                if (0 === T(n)) return Bn([], n, t.dtype);
                var r = this.texData.get(t.dataId).isPacked,
                  i = _n(t.shape, e, n);
                if (r || !i) {
                  var o = h.getBool("WEBGL_PACK_ARRAY_OPERATIONS")
                      ? new Aa(n)
                      : new xa(n),
                    a = o.getCustomSetupFunc(e);
                  return this.compileAndRun(o, [t], null, a);
                }
                return this.uploadToGPU(t.dataId), this.shallowSlice(t, e, n);
              }),
              (t.prototype.shallowSlice = function(t, e, n) {
                var r = this.texData.get(t.dataId),
                  i = yt.make(n, {}, t.dtype, this),
                  o = this.texData.get(i.dataId);
                Object.assign(o, r), (o.shape = n), (o.dtype = t.dtype);
                var a = Sn(e, t.strides);
                r.slice && (a += r.slice.flatOffset),
                  (o.slice = {
                    flatOffset: a,
                    origDataId: (r.slice && r.slice.origDataId) || t.dataId
                  });
                var s = this.dataRefCount.get(o.slice.origDataId) || 1;
                return this.dataRefCount.set(o.slice.origDataId, s + 1), i;
              }),
              (t.prototype.stridedSlice = function(t, e, n, r, i, o, a, s, u) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.stridedSlice(
                    t,
                    e,
                    n,
                    r,
                    i,
                    o,
                    a,
                    s,
                    u
                  );
                var c = vn(t.shape, e, n, r, i, o, a, s, u),
                  l = c[0],
                  h = c[1],
                  f = c[2],
                  p = h.filter(function(t, e) {
                    return -1 === f.indexOf(e);
                  });
                if (
                  p.some(function(t) {
                    return 0 === t;
                  })
                )
                  return Bn([], p);
                var d = new ka(l, r, h, f);
                return this.compileAndRun(d, [t]);
              }),
              (t.prototype.reverse = function(t, e) {
                var n = h.getBool("WEBGL_PACK_ARRAY_OPERATIONS")
                  ? new ba(t.shape, e)
                  : new va(t.shape, e);
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.concat = function(t, e) {
                if (this.shouldExecuteOnCPU(t))
                  return this.cpuBackend.concat(t, e);
                if (1 === t.length) return t[0];
                if (t.length > h.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")) {
                  var n = Math.floor(t.length / 2),
                    r = this.concat(t.slice(0, n), e),
                    i = this.concat(t.slice(n), e);
                  return this.concat([r, i], e);
                }
                if (h.getBool("WEBGL_PACK_ARRAY_OPERATIONS") && t[0].rank > 1) {
                  var o = new Ji(
                    t.map(function(t) {
                      return t.shape;
                    }),
                    e
                  );
                  return this.compileAndRun(o, t);
                }
                var a = pn(
                    t.map(function(t) {
                      return t.shape;
                    }),
                    e
                  ),
                  s = t.map(function(t) {
                    return t.as2D(-1, T(t.shape.slice(e)));
                  }),
                  u = new Yi(
                    s.map(function(t) {
                      return t.shape;
                    })
                  );
                return this.compileAndRun(u, s).reshape(a);
              }),
              (t.prototype.neg = function(t) {
                var e = new Da(t.shape, "return -x;");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.batchMatMul = function(t, e, n, r) {
                var i = n ? t.shape[2] : t.shape[1],
                  o = r ? e.shape[1] : e.shape[2],
                  a = n ? t.shape[1] : t.shape[2],
                  s = t.shape[0];
                if ((1 === i || 1 === o) && a > 1e3) {
                  n && (t = t.transpose([0, 2, 1])),
                    r && (e = e.transpose([0, 2, 1]));
                  var u = 1 === o ? t : t.as3D(s, a, 1),
                    c = 1 === o ? 2 : 1,
                    l = 1 === o ? e.as3D(s, 1, a) : e;
                  return this.multiply(u, l).sum(c, !0);
                }
                var h = At(t.dtype, e.dtype),
                  f = new ia(t.shape, [s, i, o], n, r),
                  p = this.makePackedTensor(f.outputShape, h);
                return this.compileAndRun(f, [t, e], p);
              }),
              (t.prototype.fusedBatchMatMul = function(t, e, n, r, i, o) {
                var a = n ? t.shape[2] : t.shape[1],
                  s = r ? e.shape[1] : e.shape[2],
                  u = t.shape[0],
                  c = At(t.dtype, e.dtype),
                  l = new ia(
                    t.shape,
                    [u, a, s],
                    n,
                    r,
                    !!i,
                    o
                      ? (function(t, e) {
                          if ((void 0 === e && (e = !1), "linear" === o))
                            return "return x;";
                          if ("relu" === o) return e ? ja : za;
                          throw new Error(
                            "Activation " +
                              o +
                              " has not been implemented for the WebGL backend."
                          );
                        })(0, !0)
                      : null
                  ),
                  h = this.makePackedTensor(l.outputShape, c),
                  f = [t, e];
                return i && f.push(i), this.compileAndRun(l, f, h);
              }),
              (t.prototype.multiply = function(t, e) {
                if ("complex64" === t.dtype) {
                  var n = this.texData.get(t.dataId),
                    r = this.texData.get(e.dataId),
                    i = new Ui(
                      "return areal * breal - aimag * bimag;",
                      t.shape,
                      e.shape
                    ),
                    o = new Ui(
                      "return areal * bimag + aimag * breal;",
                      t.shape,
                      e.shape
                    ),
                    a = [
                      this.makeComplexComponentTensorHandle(
                        t,
                        n.complexTensors.real
                      ),
                      this.makeComplexComponentTensorHandle(
                        t,
                        n.complexTensors.imag
                      ),
                      this.makeComplexComponentTensorHandle(
                        e,
                        r.complexTensors.real
                      ),
                      this.makeComplexComponentTensorHandle(
                        e,
                        r.complexTensors.imag
                      )
                    ],
                    s = this.compileAndRun(i, a),
                    u = this.compileAndRun(o, a),
                    c = this.complex(s, u);
                  return s.dispose(), u.dispose(), c;
                }
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.multiply(t, e);
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, Gi, t.dtype);
                var l = new Hi(Gi, t.shape, e.shape),
                  f = this.makeOutputArray(l.outputShape, t.dtype);
                return this.compileAndRun(l, [t, e], f);
              }),
              (t.prototype.batchNormalization = function(t, e, n, r, i, o) {
                var a = [t, e, n],
                  s = null;
                null != o && ((s = o.shape), a.push(o));
                var u = null;
                if (
                  (null != i && ((u = i.shape), a.push(i)),
                  h.getBool("WEBGL_PACK_NORMALIZATION"))
                ) {
                  var c = new qi(t.shape, e.shape, n.shape, s, u, r);
                  return this.compileAndRun(c, a);
                }
                var l = new Bi(t.shape, e.shape, n.shape, s, u, r);
                return this.compileAndRun(l, a);
              }),
              (t.prototype.localResponseNormalization4D = function(
                t,
                e,
                n,
                r,
                i
              ) {
                var o = h.getBool("WEBGL_PACK_NORMALIZATION")
                  ? new na(t.shape, e, n, r, i)
                  : new ta(t.shape, e, n, r, i);
                return this.compileAndRun(o, [t]);
              }),
              (t.prototype.LRNGrad = function(t, e, n, r, i, o, a) {
                var s = new ea(e.shape, r, i, o, a);
                return this.compileAndRun(s, [e, n, t]);
              }),
              (t.prototype.tile = function(t, e) {
                var n = new Ca(t.shape, e);
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.pad = function(t, e, n) {
                var r = h.getBool("WEBGL_PACK_ARRAY_OPERATIONS")
                  ? new ca(t.shape, e, n)
                  : new ua(t.shape, e, n);
                return this.compileAndRun(r, [t]);
              }),
              (t.prototype.transpose = function(t, e) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.transpose(t, e);
                var n = h.getBool("WEBGL_PACK_ARRAY_OPERATIONS")
                  ? new Ma(t.shape, e)
                  : new Ia(t.shape, e);
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.gather = function(t, e, n) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.gather(t, e, n);
                var r = new xo(t.shape, e.size, n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.batchToSpaceND = function(t, e, n) {
                w(t.rank <= 4, function() {
                  return "batchToSpaceND for rank > 4 with a WebGL backend not implemented yet";
                });
                var r = e.reduce(function(t, e) {
                    return t * e;
                  }),
                  i = Je(t.shape, e, r),
                  o = Ze(i.length, e.length),
                  a = tn(t.shape, e, r),
                  s = en(n, e.length),
                  u = nn(a, n, e.length);
                return t
                  .reshape(i)
                  .transpose(o)
                  .reshape(a)
                  .slice(s, u);
              }),
              (t.prototype.spaceToBatchND = function(t, e, n) {
                w(t.rank <= 4, function() {
                  return "spaceToBatchND for rank > 4 with a WebGL backend not implemented yet";
                });
                var r = e.reduce(function(t, e) {
                    return t * e;
                  }),
                  i = [[0, 0]];
                i.push.apply(i, n);
                for (var o = 1 + e.length; o < t.shape.length; ++o)
                  i.push([0, 0]);
                var a = t.pad(i),
                  s = Je(a.shape, e, r, !1),
                  u = Ze(s.length, e.length, !1),
                  c = tn(a.shape, e, r, !1);
                return a
                  .reshape(s)
                  .transpose(u)
                  .reshape(c);
              }),
              (t.prototype.reduce = function(t, e, n) {
                var r = t.shape[0],
                  i = t.shape[1],
                  o = yn(i),
                  a = new ha({ windowSize: o, inSize: i, batchSize: r }, e),
                  s = a.outputShape,
                  u = s[0],
                  c = s[1],
                  l = this.makeOutputArray([u, c], n);
                return (
                  this.compileAndRun(a, [t], l),
                  1 === l.shape[1] ? l : this.reduce(l, e, n)
                );
              }),
              (t.prototype.argReduce = function(t, e, n) {
                void 0 === n && (n = null);
                var r = t.shape[0],
                  i = t.shape[1];
                null != n && ((r = n.shape[0]), (i = n.shape[1]));
                var o = yn(i),
                  a = new _i(
                    { windowSize: o, inSize: i, batchSize: r },
                    e,
                    null == n
                  ),
                  s = a.outputShape,
                  u = s[0],
                  c = s[1],
                  l = this.makeOutputArray([u, c], "int32"),
                  h = [t];
                return (
                  null != n && h.push(n),
                  this.compileAndRun(a, h, l),
                  1 === l.shape[1] ? l : this.argReduce(t, e, l)
                );
              }),
              (t.prototype.argReducePacked = function(t, e, n) {
                void 0 === n && (n = null);
                var r = null != n ? n.shape : t.shape,
                  i = yn(r[r.length - 1]),
                  o = new Li(r, i, e, null == n),
                  a = this.makePackedTensor(o.outputShape, "int32"),
                  s = null == n ? [t] : [t, n];
                return (
                  this.compileAndRun(o, s, a),
                  a.rank === t.rank ? this.argReducePacked(t, e, a) : a
                );
              }),
              (t.prototype.sum = function(t, e) {
                un("sum", e, t.rank);
                var n = an(t.shape, e),
                  r = n[0],
                  i = T(n[1]),
                  o = t.as2D(-1, i),
                  a = kt(t.dtype);
                return this.reduce(o, "sum", a).reshape(r);
              }),
              (t.prototype.prod = function(t, e) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.prod(t, e);
                var n = an(t.shape, e),
                  r = n[0],
                  i = T(n[1]),
                  o = t.as2D(-1, i),
                  a = kt(t.dtype);
                return this.reduce(o, "prod", a).reshape(r);
              }),
              (t.prototype.unsortedSegmentSum = function(t, e, n) {
                var r = 0,
                  i = cn([r], t.rank),
                  o = t;
                null != i && ((o = t.transpose(i)), (r = hn(1, t.rank)[0]));
                var a = (function(t, e, n) {
                    for (var r = [], i = t.length, o = 0; o < i; o++)
                      o !== e ? r.push(t[o]) : r.push(n);
                    return r;
                  })(o.shape, r, n),
                  s = T([o.shape[r]]),
                  u = o.as2D(-1, s),
                  c = kt(t.dtype),
                  l = this.segOpCompute(
                    u,
                    "unsortedSegmentSum",
                    e,
                    c,
                    n
                  ).reshape(a);
                return null != i && (l = l.transpose(ln(i))), l;
              }),
              (t.prototype.segOpCompute = function(t, e, n, r, i) {
                var o = t.shape[0],
                  a = t.shape[1],
                  s = (function(t, e) {
                    var n,
                      r = !1;
                    for (
                      t <= mn
                        ? ((n = t), (r = !0))
                        : (n = Q(t, Math.floor(Math.sqrt(t))));
                      !r;

                    )
                      n > e || n === t ? (r = !0) : (n = Q(t, n + 1));
                    return n;
                  })(a, i),
                  u = new _a(
                    { windowSize: s, inSize: a, batchSize: o, numSegments: i },
                    e
                  ),
                  c = u.outputShape,
                  l = c[0],
                  h = c[1],
                  f = this.makeOutputArray([l, h], r);
                return (
                  this.compileAndRun(u, [t, n], f),
                  f.shape[1] === i
                    ? f
                    : ((n = Jn(0, i).tile([a / s])),
                      this.segOpCompute(f, e, n, r, i))
                );
              }),
              (t.prototype.argMinMaxReduce = function(t, e, n) {
                var r = [e];
                if (
                  (un(
                    "arg" + n.charAt(0).toUpperCase() + n.slice(1),
                    r,
                    t.rank
                  ),
                  !h.getBool("WEBGL_PACK_REDUCE") || t.rank <= 2)
                ) {
                  var i = an(t.shape, r),
                    o = i[0],
                    a = T(i[1]),
                    s = t.as2D(-1, a);
                  return this.argReduce(s, n).reshape(o);
                }
                return this.argReducePacked(t, n);
              }),
              (t.prototype.argMin = function(t, e) {
                return this.argMinMaxReduce(t, e, "min");
              }),
              (t.prototype.argMax = function(t, e) {
                return this.argMinMaxReduce(t, e, "max");
              }),
              (t.prototype.cumsum = function(t, e, n, r) {
                if (e !== t.rank - 1)
                  throw new Error(
                    "WebGL cumsum shader expects an inner-most axis=" +
                      (t.rank - 1) +
                      " but got axis=" +
                      e
                  );
                var i = new lo(t.shape, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.equal = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(equal(a, b));\n",
                    "bool"
                  );
                var n = new Hi("return float(a == b);", t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.notEqual = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(notEqual(a, b));\n",
                    "bool"
                  );
                var n = new Hi("return float(a != b);", t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.less = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.less(t, e);
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(lessThan(a, b));\n",
                    "bool"
                  );
                var n = new Hi("return float(a < b);", t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.lessEqual = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(lessThanEqual(a, b));\n",
                    "bool"
                  );
                var n = new Hi("return float(a <= b);", t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.greater = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.greater(t, e);
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(greaterThan(a, b));\n",
                    "bool"
                  );
                var n = new Hi("return float(a > b);", t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.greaterEqual = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(greaterThanEqual(a, b));\n",
                    "bool"
                  );
                var n = new Hi("return float(a >= b);", t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.logicalNot = function(t) {
                var e = new Da(t.shape, "return float(!(x >= 1.0));");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.logicalAnd = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",
                    "bool"
                  );
                var n = new Hi(
                    "return float(a >= 1.0 && b >= 1.0);",
                    t.shape,
                    e.shape
                  ),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.logicalOr = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",
                    "bool"
                  );
                var n = new Hi(
                    "return float(a >= 1.0 || b >= 1.0);",
                    t.shape,
                    e.shape
                  ),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.select = function(t, e, n) {
                var r = new Sa(t.rank, e.shape, e.rank),
                  i = this.makeOutputArray(r.outputShape, At(e.dtype, n.dtype));
                return this.compileAndRun(r, [t, e, n], i);
              }),
              (t.prototype.where = function(t) {
                Ye(
                  "tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead"
                );
                var e = t.dataSync();
                return vi(t.shape, e);
              }),
              (t.prototype.topk = function(t, e, n) {
                return Er(t.dataSync(), t.shape, t.dtype, e);
              }),
              (t.prototype.min = function(t, e) {
                un("min", e, t.rank);
                var n = an(t.shape, e),
                  r = n[0],
                  i = T(n[1]),
                  o = t.as2D(-1, i);
                return this.reduce(o, "min", o.dtype).reshape(r);
              }),
              (t.prototype.minimum = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.minimum(t, e);
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki(
                      "\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",
                      t.shape,
                      e.shape
                    )
                  : new Hi(
                      "\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",
                      t.shape,
                      e.shape
                    );
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.mod = function(t, e) {
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki(
                      "\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",
                      t.shape,
                      e.shape
                    )
                  : new Hi(
                      "if (b == 0.0) return NAN;\n  return mod(a, b);",
                      t.shape,
                      e.shape
                    );
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.max = function(t, e) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.max(t, e);
                un("max", e, t.rank);
                var n = an(t.shape, e),
                  r = n[0],
                  i = T(n[1]),
                  o = t.as2D(-1, i);
                return this.reduce(o, "max", o.dtype).reshape(r);
              }),
              (t.prototype.maximum = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.maximum(t, e);
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki(
                      "\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",
                      t.shape,
                      e.shape
                    )
                  : new Hi(
                      "\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",
                      t.shape,
                      e.shape
                    );
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.all = function(t, e) {
                un("all", e, t.rank);
                var n = an(t.shape, e),
                  r = n[0],
                  i = T(n[1]),
                  o = t.as2D(-1, i);
                return this.reduce(o, "all", o.dtype).reshape(r);
              }),
              (t.prototype.any = function(t, e) {
                un("any", e, t.rank);
                var n = an(t.shape, e),
                  r = n[0],
                  i = T(n[1]),
                  o = t.as2D(-1, i);
                return this.reduce(o, "any", o.dtype).reshape(r);
              }),
              (t.prototype.squaredDifference = function(t, e) {
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki("return (a - b) * (a - b);", t.shape, e.shape)
                  : new Hi("return (a - b) * (a - b);", t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.realDivide = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(b.x == 0.0) {\n    result.x = NAN;\n  } else if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(b.y == 0.0) {\n    result.y = NAN;\n  } else if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(b.z == 0.0) {\n    result.z = NAN;\n  } else if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(b.w == 0.0) {\n    result.w = NAN;\n  } else if(a.w == b.w) {\n    result.w = 1.;\n  }\n  \n  return result;\n",
                    "float32",
                    !0
                  );
                var n = new Hi(
                    "\nif (b == 0.0) {\n  return NAN;\n} \nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",
                    t.shape,
                    e.shape
                  ),
                  r = this.makeOutputArray(n.outputShape, "float32");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.floorDiv = function(t, e) {
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(
                    t,
                    e,
                    "\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",
                    "int32"
                  );
                var n = new Hi(
                    "\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",
                    t.shape,
                    e.shape
                  ),
                  r = this.makeOutputArray(n.outputShape, "int32");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.add = function(t, e) {
                if ("complex64" === t.dtype && "complex64" === e.dtype)
                  return this.complexSeparableBinaryOp(t, e, Vi);
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.add(t, e);
                var n = At(t.dtype, e.dtype);
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, Vi, n);
                var r = new Hi(Vi, t.shape, e.shape),
                  i = this.makeOutputArray(r.outputShape, n);
                return this.compileAndRun(r, [t, e], i);
              }),
              (t.prototype.packedBinaryOp = function(t, e, n, r, i) {
                void 0 === i && (i = !1);
                var o = new Ki(n, t.shape, e.shape, i),
                  a = this.makePackedTensor(o.outputShape, r);
                return this.compileAndRun(o, [t, e], a);
              }),
              (t.prototype.complexSeparableBinaryOp = function(t, e, n) {
                var r = this,
                  i = this.texData.get(t.dataId),
                  o = this.texData.get(e.dataId),
                  a = [
                    [i.complexTensors.real, o.complexTensors.real],
                    [i.complexTensors.imag, o.complexTensors.imag]
                  ].map(function(i) {
                    var o = i[0],
                      a = i[1],
                      s = r.makeComplexComponentTensorHandle(t, o),
                      u = r.makeComplexComponentTensorHandle(e, a),
                      c = new Hi(n, t.shape, e.shape),
                      l = r.makeOutputArray(
                        c.outputShape,
                        At(o.dtype, a.dtype)
                      );
                    return r.compileAndRun(c, [s, u], l);
                  }),
                  s = a[0],
                  u = a[1],
                  c = this.complex(s, u);
                return s.dispose(), u.dispose(), c;
              }),
              (t.prototype.makeComplexComponentTensorHandle = function(t, e) {
                return { dataId: e.dataId, dtype: e.dtype, shape: t.shape };
              }),
              (t.prototype.addN = function(t) {
                if (1 === t.length) return t[0];
                if (t.length > h.get("WEBGL_MAX_TEXTURES_IN_SHADER")) {
                  var e = Math.floor(t.length / 2),
                    n = this.addN(t.slice(0, e)),
                    r = this.addN(t.slice(e));
                  return this.addN([n, r]);
                }
                var i = t
                    .map(function(t) {
                      return t.dtype;
                    })
                    .reduce(function(t, e) {
                      return At(t, e);
                    }),
                  o = t.map(function(t) {
                    return t.shape;
                  }),
                  a = h.getBool("WEBGL_PACK"),
                  s = a ? new wi(t[0].shape, o) : new bi(t[0].shape, o),
                  u = a
                    ? this.makePackedTensor(s.outputShape, i)
                    : this.makeOutputArray(s.outputShape, i);
                return this.compileAndRun(s, t, u);
              }),
              (t.prototype.subtract = function(t, e) {
                if ("complex64" === t.dtype && "complex64" === e.dtype)
                  return this.complexSeparableBinaryOp(t, e, Wi);
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.subtract(t, e);
                var n = At(t.dtype, e.dtype);
                if (h.getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, Wi, t.dtype);
                var r = new Hi(Wi, t.shape, e.shape),
                  i = this.makeOutputArray(r.outputShape, n);
                return this.compileAndRun(r, [t, e], i);
              }),
              (t.prototype.pow = function(t, e) {
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS"),
                  r = n
                    ? new Ki(
                        "\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",
                        t.shape,
                        e.shape
                      )
                    : new Hi(
                        "\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",
                        t.shape,
                        e.shape
                      ),
                  i = At(t.dtype, e.dtype),
                  o = n
                    ? this.makePackedTensor(r.outputShape, i)
                    : this.makeOutputArray(r.outputShape, i);
                return this.compileAndRun(r, [t, e], o);
              }),
              (t.prototype.ceil = function(t) {
                var e = new Da(t.shape, "return ceil(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.floor = function(t) {
                var e = new Da(t.shape, "return floor(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.sign = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.isNaN = function(t) {
                var e = new Da(t.shape, "return float(isnan(x));"),
                  n = this.makeOutputArray(e.outputShape, "bool");
                return this.compileAndRun(e, [t], n);
              }),
              (t.prototype.isInf = function(t) {
                var e = new Da(t.shape, "return float(isinf(x));"),
                  n = this.makeOutputArray(e.outputShape, "bool");
                return this.compileAndRun(e, [t], n);
              }),
              (t.prototype.isFinite = function(t) {
                var e = new Da(
                    t.shape,
                    "return float(!isnan(x) && !isinf(x));"
                  ),
                  n = this.makeOutputArray(e.outputShape, "bool");
                return this.compileAndRun(e, [t], n);
              }),
              (t.prototype.round = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.exp = function(t) {
                var e;
                return (
                  (e = h.getBool("WEBGL_PACK")
                    ? new Ba(t.shape, La)
                    : new Da(t.shape, La)),
                  this.compileAndRun(e, [t])
                );
              }),
              (t.prototype.expm1 = function(t) {
                var e = new Da(t.shape, "return exp(x) - 1.0;");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.log = function(t) {
                var e;
                return (
                  (e = h.getBool("WEBGL_PACK")
                    ? new Ba(
                        t.shape,
                        "\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n"
                      )
                    : new Da(
                        t.shape,
                        "if (x < 0.0) return NAN;\n  return log(x);"
                      )),
                  this.compileAndRun(e, [t])
                );
              }),
              (t.prototype.log1p = function(t) {
                var e = new Da(t.shape, "return log(1.0 + x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.sqrt = function(t) {
                var e = new Da(t.shape, "return sqrt(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.rsqrt = function(t) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.rsqrt(t);
                var e = new Da(t.shape, "return inversesqrt(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.square = function(t) {
                var e = new Da(t.shape, "return x * x;");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.reciprocal = function(t) {
                var e = new Da(t.shape, "return 1.0 / x;");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.relu = function(t) {
                var e;
                return (
                  (e = h.getBool("WEBGL_PACK")
                    ? new Ba(t.shape, ja)
                    : new Da(t.shape, za)),
                  this.compileAndRun(e, [t])
                );
              }),
              (t.prototype.prelu = function(t, e) {
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki(
                      "\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",
                      t.shape,
                      e.shape
                    )
                  : new Hi("return (a < 0.) ? b * a : a;", t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.elu = function(t) {
                var e = new Da(
                  t.shape,
                  "return (x >= 0.0) ? x : (exp(x) - 1.0);"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.eluDer = function(t, e) {
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki(
                      "\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",
                      t.shape,
                      e.shape
                    )
                  : new Hi(
                      "return (b >= 1.0) ? a : a * (b + 1.0);",
                      t.shape,
                      e.shape
                    );
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.selu = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.int = function(t) {
                var e = new Da(t.shape, "return float(int(x));"),
                  n = this.makeOutputArray(e.outputShape, "int32");
                return this.compileAndRun(e, [t], n);
              }),
              (t.prototype.clip = function(t, e, n) {
                var r,
                  i = (r = h.getBool("WEBGL_PACK_CLIP")
                    ? new Xi(t.shape)
                    : new Qi(t.shape)).getCustomSetupFunc(e, n);
                return this.compileAndRun(r, [t], null, i);
              }),
              (t.prototype.abs = function(t) {
                var e = new Da(t.shape, "return abs(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.complexAbs = function(t) {
                var e = this.texData.get(t.dataId),
                  n = new $i(t.shape),
                  r = [
                    this.makeComplexComponentTensorHandle(
                      t,
                      e.complexTensors.real
                    ),
                    this.makeComplexComponentTensorHandle(
                      t,
                      e.complexTensors.imag
                    )
                  ];
                return this.compileAndRun(n, r);
              }),
              (t.prototype.sigmoid = function(t) {
                var e = new Da(t.shape, "return 1.0 / (1.0 + exp(-1.0 * x));");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.softplus = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.sin = function(t) {
                var e = new Da(
                  t.shape,
                  "if (isnan(x)) return x;\n  return sin(x);\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.cos = function(t) {
                var e = new Da(
                  t.shape,
                  "if (isnan(x)) return x;\n  return cos(x);\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.tan = function(t) {
                var e = new Da(t.shape, "return tan(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.asin = function(t) {
                var e = new Da(t.shape, "return asin(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.acos = function(t) {
                var e = new Da(t.shape, "return acos(x);");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.atan = function(t) {
                var e = new Da(
                  t.shape,
                  "if (isnan(x)) return x;\n  return atan(x);\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.atan2 = function(t, e) {
                var n = h.getBool("WEBGL_PACK_BINARY_OPERATIONS")
                  ? new Ki(
                      "\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",
                      t.shape,
                      e.shape
                    )
                  : new Hi(
                      "\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",
                      t.shape,
                      e.shape
                    );
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.sinh = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.cosh = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.tanh = function(t) {
                var e = new Da(
                  t.shape,
                  "\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.asinh = function(t) {
                var e = new Da(t.shape, "return log(x + sqrt(x * x + 1.0));");
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.acosh = function(t) {
                var e = new Da(
                  t.shape,
                  "if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.atanh = function(t) {
                var e = new Da(
                  t.shape,
                  "if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;"
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.erf = function(t) {
                var e = new Da(
                  t.shape,
                  '\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float t = 1.0 / (1.0 + p * x);\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\n'
                );
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.step = function(t, e) {
                var n = new Da(
                  t.shape,
                  (function(t) {
                    return (
                      void 0 === t && (t = 0),
                      Fa + "\n    return x > 0.0 ? 1.0 : float(" + t + ");\n  "
                    );
                  })(e)
                );
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.conv2dByMatMul = function(t, e, n) {
                var r = t.shape,
                  i = this.texData.get(t.dataId),
                  o = n.inChannels,
                  a = r[0] * r[1] * r[2],
                  s = n.outChannels,
                  u = (1 === a || 1 === s) && o > 1e3,
                  c = r[2] % 2 != 0 && !!i.isPacked;
                if (
                  u ||
                  !h.getBool("WEBGL_LAZILY_UNPACK") ||
                  !h.getBool("WEBGL_PACK_BINARY_OPERATIONS") ||
                  !c
                ) {
                  var l = this.reshape(t, [
                      1,
                      r[0] * r[1] * r[2],
                      n.inChannels
                    ]),
                    f = this.reshape(e, [1, n.inChannels, n.outChannels]);
                  return this.reshape(
                    this.batchMatMul(l, f, !1, !1),
                    n.outShape
                  );
                }
                var p = yt.make(
                    [1, r[0] * r[1] * (r[2] + 1), n.inChannels],
                    { dataId: t.dataId },
                    t.dtype,
                    this
                  ),
                  d = i.shape;
                (i.shape = i.shape.slice()),
                  i.shape[i.shape.length - 2]++,
                  w(we(i.shape, p.shape), function() {
                    return (
                      "packed reshape " +
                      i.shape +
                      " to " +
                      p.shape +
                      " isn't free"
                    );
                  });
                var m = this.reshape(e, [1, n.inChannels, n.outChannels]),
                  y = this.batchMatMul(p, m, !1, !1),
                  g = this.texData.get(y.dataId);
                return (
                  w(g.isPacked, function() {
                    return "batchMatMul result is expected to be packed";
                  }),
                  (i.shape = d),
                  (g.shape = n.outShape),
                  yt.make(n.outShape, { dataId: y.dataId }, y.dtype, this)
                );
              }),
              (t.prototype.conv2dWithIm2Row = function(t, e, n) {
                var r = n.filterWidth,
                  i = n.filterHeight,
                  o = n.inChannels,
                  a = n.outWidth,
                  s = n.outHeight,
                  u = r * i * o,
                  c = s * a,
                  l = [u, c],
                  h = t.squeeze([0]),
                  f = e.reshape([1, u, -1]),
                  p = new Zo(l, h.shape, n),
                  d = this.compileAndRun(p, [h]).reshape([1, l[0], l[1]]),
                  m = new ia(d.shape, [1, c, n.outChannels], !0, !1);
                return this.compileAndRun(m, [d, f]).reshape([
                  1,
                  s,
                  a,
                  n.outChannels
                ]);
              }),
              (t.prototype.conv2d = function(t, e, n) {
                if (
                  1 === n.filterHeight &&
                  1 === n.filterWidth &&
                  1 === n.dilationHeight &&
                  1 === n.dilationWidth &&
                  1 === n.strideHeight &&
                  1 === n.strideWidth &&
                  ("SAME" === n.padInfo.type || "VALID" === n.padInfo.type)
                )
                  return this.conv2dByMatMul(t, e, n);
                if (h.getBool("WEBGL_CONV_IM2COL") && 1 === t.shape[0])
                  return this.conv2dWithIm2Row(t, e, n);
                var r = new oo(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv2dDerInput = function(t, e, n) {
                var r = new to(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv2dDerFilter = function(t, e, n) {
                var r = new Zi(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.depthwiseConv2D = function(t, e, n) {
                var r;
                return h.getBool("WEBGL_PACK_DEPTHWISECONV") &&
                  n.strideWidth <= 2 &&
                  n.outChannels / n.inChannels == 1
                  ? ((r = new uo(n)),
                    this.compileAndRun(
                      r,
                      [t, e],
                      this.makePackedTensor(n.outShape, t.dtype)
                    ))
                  : ((r = new so(n)), this.compileAndRun(r, [t, e]));
              }),
              (t.prototype.depthwiseConv2DDerInput = function(t, e, n) {
                var r = new io(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.depthwiseConv2DDerFilter = function(t, e, n) {
                var r = new ro(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv3d = function(t, e, n) {
                var r = new ao(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv3dDerInput = function(t, e, n) {
                var r = new no(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv3dDerFilter = function(t, e, n) {
                var r = new eo(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.maxPool = function(t, e) {
                var n = new la(e, "max", !1),
                  r = this.makeOutputArray(n.outputShape, t.dtype);
                return this.compileAndRun(n, [t], r);
              }),
              (t.prototype.avgPool = function(t, e) {
                var n = new la(e, "avg", !1),
                  r = this.makeOutputArray(n.outputShape, "float32");
                return this.compileAndRun(n, [t], r);
              }),
              (t.prototype.maxPoolBackprop = function(t, e, n, r) {
                var i = new la(r, "max", !0),
                  o = this.compileAndRun(i, [e]),
                  a = new ra(r),
                  s = this.makeOutputArray(a.outputShape, e.dtype),
                  u = this.compileAndRun(a, [t, o], s);
                return o.dispose(), u;
              }),
              (t.prototype.avgPoolBackprop = function(t, e, n) {
                var r = new ji(n),
                  i = this.makeOutputArray(r.outputShape, e.dtype);
                return this.compileAndRun(r, [t], i);
              }),
              (t.prototype.cast = function(t, e) {
                return yr(t, e, this);
              }),
              (t.prototype.unstack = function(t, e) {
                for (
                  var n = t.shape[e], r = new Array(t.rank - 1), i = 0, o = 0;
                  o < t.rank;
                  o++
                )
                  o !== e && (r[i++] = t.shape[o]);
                var a = new Array(t.rank).fill(0),
                  s = t.shape.slice();
                s[e] = 1;
                var u = new Array(n);
                for (o = 0; o < u.length; o++)
                  (a[e] = o), (u[o] = this.slice(t, a, s).reshape(r));
                return u;
              }),
              (t.prototype.reshape = function(t, e) {
                var n = this.texData.get(t.dataId);
                return !n.isPacked ||
                  we(t.shape, e) ||
                  (null !== n.texture && we(n.shape, e))
                  ? gr(t, e)
                  : this.packedReshape(t, e);
              }),
              (t.prototype.resizeBilinear = function(t, e, n, r) {
                var i = h.getBool("WEBGL_PACK_IMAGE_OPERATIONS")
                  ? new ma(t.shape, e, n, r)
                  : new da(t.shape, e, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.resizeBilinearBackprop = function(t, e, n) {
                var r = new pa(t, e, n);
                return this.compileAndRun(r, [t]);
              }),
              (t.prototype.resizeNearestNeighbor = function(t, e, n, r) {
                var i = new ga(t.shape, e, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.resizeNearestNeighborBackprop = function(t, e, n) {
                var r = new ya(t, e, n);
                return this.compileAndRun(r, [t]);
              }),
              (t.prototype.multinomial = function(t, e, n, r) {
                var i = e ? t : Dn(t),
                  o = i.shape[0],
                  a = i.shape[1],
                  s = new oa(o, a, n),
                  u = this.makeOutputArray(s.outputShape, "int32"),
                  c = s.getCustomSetupFunc(r);
                return this.compileAndRun(s, [i], u, c);
              }),
              (t.prototype.oneHot = function(t, e, n, r) {
                var i = new aa(t.size, e, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.nonMaxSuppression = function(t, e, n, r, i) {
                return (
                  Ye(
                    "tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"
                  ),
                  Tr(t.dataSync(), e.dataSync(), n, r, i)
                );
              }),
              (t.prototype.cropAndResize = function(t, e, n, r, i, o) {
                var a = new co(t.shape, e.shape, r, i, o);
                return this.compileAndRun(a, [t, e, n]);
              }),
              (t.prototype.depthToSpace = function(t, e, n) {
                w(e > 1, function() {
                  return (
                    "blockSize should be > 1 for depthToSpace, but was: " + e
                  );
                });
                var r = t.shape[0],
                  i = "NHWC" === n ? t.shape[1] : t.shape[2],
                  o = "NHWC" === n ? t.shape[2] : t.shape[3],
                  a = "NHWC" === n ? t.shape[3] : t.shape[1],
                  s = i * e,
                  u = o * e,
                  c = a / (e * e),
                  l = new mo("NHWC" === n ? [r, s, u, c] : [r, c, s, u], e, n);
                return this.compileAndRun(l, [t]);
              }),
              (t.prototype.split = function(t, e, n) {
                return kr(t, e, n);
              }),
              (t.prototype.scatterND = function(t, e, n) {
                var r = gn(0, t, n),
                  i = r.sliceRank,
                  o = r.numUpdates,
                  a = r.sliceSize,
                  s = r.strides,
                  u = r.outputSize,
                  c = [u / a, a],
                  l = t.reshape([o, i]),
                  h = e.reshape([o, a]);
                if (0 === u) return gr(Bn([]), n);
                var f = qn(0),
                  p = new wa(o, i, l.rank, h.rank, s, c);
                return this.compileAndRun(p, [h, l, f]).reshape(n);
              }),
              (t.prototype.sparseToDense = function(t, e, n, r) {
                var i = gn(0, t, n),
                  o = i.sliceRank,
                  a = i.numUpdates,
                  s = i.strides,
                  u = i.outputSize,
                  c = new wa(a, o, t.rank, e.rank, s, [u, 1], !1);
                return this.compileAndRun(c, [e, t, r]).reshape(n);
              }),
              (t.prototype.fft = function(t) {
                return this.fftImpl(t, !1);
              }),
              (t.prototype.ifft = function(t) {
                return this.fftImpl(t, !0);
              }),
              (t.prototype.fftImpl = function(t, e) {
                var n = this.texData.get(t.dataId),
                  r = new bo("return real * expR - imag * expI;", t.shape, e),
                  i = new bo("return real * expI + imag * expR;", t.shape, e),
                  o = [
                    this.makeComplexComponentTensorHandle(
                      t,
                      n.complexTensors.real
                    ),
                    this.makeComplexComponentTensorHandle(
                      t,
                      n.complexTensors.imag
                    )
                  ],
                  a = this.compileAndRun(r, o),
                  s = this.compileAndRun(i, o),
                  u = this.complex(a, s).as2D(t.shape[0], t.shape[1]);
                return a.dispose(), s.dispose(), u;
              }),
              (t.prototype.gatherND = function(t, e) {
                var n = e.shape,
                  r = n[n.length - 1],
                  i = dn(t, e),
                  o = i[0],
                  a = i[1],
                  s = i[2],
                  u = i[3],
                  c = e.reshape([a, r]),
                  l = t.reshape([t.size / s, s]),
                  h = new To(r, u, [a, s]);
                return this.compileAndRun(h, [l, c]).reshape(o);
              }),
              (t.prototype.fill = function(t, e, n) {
                if ("string" === (n = n || H(e))) {
                  var r = D(n, T(t));
                  return r.fill(e), yt.make(t, { values: r }, n);
                }
                var i = new wo(t, e),
                  o = i.getCustomSetupFunc(e),
                  a = this.makeOutputArray(t, n);
                return this.compileAndRun(i, [], a, o);
              }),
              (t.prototype.onesLike = function(t) {
                if ("string" === t.dtype)
                  throw new Error(
                    "onesLike is not supported under string dtype"
                  );
                return this.fill(t.shape, 1, t.dtype);
              }),
              (t.prototype.zerosLike = function(t) {
                return this.fill(
                  t.shape,
                  "string" === t.dtype ? "" : 0,
                  t.dtype
                );
              }),
              (t.prototype.linspace = function(t, e, n) {
                return vr(t, e, n);
              }),
              (t.prototype.makeOutputArray = function(t, e) {
                return yt.make(t, {}, e, this);
              }),
              (t.prototype.makePackedTensor = function(t, e) {
                var n = yt.make(t, {}, e, this);
                return (this.texData.get(n.dataId).isPacked = !0), n;
              }),
              (t.prototype.unpackTensor = function(t) {
                var e = new qa(t.shape);
                return this.compileAndRun(
                  e,
                  [t],
                  yt.make(e.outputShape, {}, t.dtype, this)
                );
              }),
              (t.prototype.packTensor = function(t) {
                var e = new sa(t.shape);
                return this.compileAndRun(
                  e,
                  [t],
                  this.makePackedTensor(t.shape, t.dtype)
                );
              }),
              (t.prototype.packedReshape = function(t, e) {
                var n = t.reshape([ye(t.shape)].concat(ge(t.shape))),
                  r = [ye(e)].concat(ge(e)),
                  i = new fa(r, n.shape);
                return this.compileAndRun(i, [n]).reshape(e);
              }),
              (t.prototype.compileAndRun = function(t, e, n, r) {
                var i = this;
                if (
                  (null == n &&
                    (n = t.usesPackedTextures
                      ? this.makePackedTensor(t.outputShape, e[0].dtype)
                      : this.makeOutputArray(t.outputShape, e[0].dtype)),
                  0 === n.size)
                )
                  return (this.texData.get(n.dataId).values = R(n.dtype, 0)), n;
                var o = e.map(function(e) {
                  if ("complex64" === e.dtype)
                    throw new Error(
                      "GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts."
                    );
                  var n = i.texData.get(e.dataId);
                  if (null == n.texture) {
                    if (
                      !t.usesPackedTextures &&
                      T(e.shape) <= h.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM")
                    )
                      return {
                        shape: e.shape,
                        texData: null,
                        isUniform: !0,
                        uniformValues: n.values
                      };
                    t.usesPackedTextures &&
                      ((n.isPacked = !0), (n.shape = e.shape));
                  } else if (!!n.isPacked != !!t.usesPackedTextures)
                    (e = n.isPacked ? i.unpackTensor(e) : i.packTensor(e)),
                      (n = i.texData.get(e.dataId));
                  else if (n.isPacked && !we(n.shape, e.shape)) {
                    var r = e,
                      o = e.shape;
                    (e.shape = n.shape),
                      (e = i.packedReshape(e, o)),
                      (n = i.texData.get(e.dataId)),
                      (r.shape = o);
                  }
                  return (
                    i.uploadToGPU(e.dataId),
                    { shape: e.shape, texData: n, isUniform: !1 }
                  );
                });
                this.uploadToGPU(n.dataId);
                var a,
                  s = {
                    shape: n.shape,
                    texData: this.texData.get(n.dataId),
                    isUniform: !1
                  },
                  u = (function(t, e, n) {
                    var r = "";
                    o.concat(n).forEach(function(t) {
                      var e =
                          null != t.texData &&
                          null != t.texData.slice &&
                          t.texData.slice.flatOffset > 0,
                        n = t.isUniform ? "uniform" : t.texData.texShape;
                      r += t.shape + "_" + n + "_" + e;
                    });
                    var i = t.userCode;
                    return t.constructor.name + "_" + r + "_" + i;
                  })(t, 0, s),
                  c = this.getAndSaveBinary(u, function() {
                    return (function(t, e, n, r) {
                      var i = e.userCode,
                        o = n.map(function(t, n) {
                          var r = {
                            logicalShape: t.shape,
                            texShape: t.isUniform ? null : t.texData.texShape,
                            isUniform: t.isUniform,
                            isPacked: !t.isUniform && t.texData.isPacked,
                            flatOffset: null
                          };
                          return (
                            null != t.texData &&
                              null != t.texData.slice &&
                              t.texData.slice.flatOffset > 0 &&
                              (r.flatOffset = t.texData.slice.flatOffset),
                            { name: e.variableNames[n], shapeInfo: r }
                          );
                        }),
                        a = o.map(function(t) {
                          return t.shapeInfo;
                        }),
                        s = {
                          logicalShape: r.shape,
                          texShape: r.texData.texShape,
                          isUniform: !1,
                          isPacked: r.texData.isPacked,
                          flatOffset: null
                        },
                        u = Ni(o, s, i, e.usesPackedTextures),
                        c = t.createProgram(u),
                        l = null,
                        f = t.getUniformLocation(c, "NAN", !1);
                      1 === h.getNumber("WEBGL_VERSION") &&
                        (l = t.getUniformLocation(c, "INFINITY", !1));
                      for (var p = {}, d = 0; d < e.variableNames.length; d++) {
                        var m = e.variableNames[d];
                        (p[m] = t.getUniformLocation(c, m, !1)),
                          (p["offset" + m] = t.getUniformLocation(
                            c,
                            "offset" + m,
                            !1
                          ));
                      }
                      return {
                        program: e,
                        source: u,
                        webGLProgram: c,
                        uniformLocations: p,
                        inShapeInfos: a,
                        outShapeInfo: s,
                        infLoc: l,
                        nanLoc: f
                      };
                    })(i.gpgpu, t, o, s);
                  }),
                  l = null != this.activeTimers;
                return (
                  l && (a = this.startTimer()),
                  (function(t, e, n, r, i) {
                    Jo(e.inShapeInfos, n), Jo([e.outShapeInfo], [r]);
                    var o = r.texData.texture,
                      a = r.texData.texShape;
                    r.texData.isPacked
                      ? t.setOutputPackedMatrixTexture(o, a[0], a[1])
                      : t.setOutputMatrixTexture(o, a[0], a[1]),
                      t.setProgram(e.webGLProgram),
                      1 === h.getNumber("WEBGL_VERSION") &&
                        null !== e.infLoc &&
                        t.gl.uniform1f(e.infLoc, 1 / 0),
                      null !== e.nanLoc && t.gl.uniform1f(e.nanLoc, NaN),
                      n.forEach(function(n, r) {
                        var i = e.program.variableNames[r],
                          o = e.uniformLocations[i],
                          a = e.uniformLocations["offset" + i];
                        if (null != o)
                          if (n.isUniform)
                            if (T(n.shape) < 2)
                              t.gl.uniform1f(o, n.uniformValues[0]);
                            else {
                              var s = n.uniformValues;
                              s instanceof Float32Array ||
                                (s = new Float32Array(s)),
                                t.gl.uniform1fv(o, s);
                            }
                          else
                            null != n.texData.slice &&
                              null != a &&
                              t.gl.uniform1i(a, n.texData.slice.flatOffset),
                              t.setInputMatrixTexture(n.texData.texture, o, r);
                      }),
                      null != i && i(t, e.webGLProgram),
                      t.executeProgram();
                  })(this.gpgpu, c, o, s, r),
                  l &&
                    ((a = this.endTimer(a)),
                    this.activeTimers.push({
                      name: t.constructor.name,
                      query: this.getQueryTime(a)
                    })),
                  h.getBool("WEBGL_LAZILY_UNPACK") ||
                  !this.texData.get(n.dataId).isPacked ||
                  t.isPackShader
                    ? n
                    : this.unpackTensor(n)
                );
              }),
              (t.prototype.getAndSaveBinary = function(t, e) {
                return (
                  t in this.binaryCache || (this.binaryCache[t] = e()),
                  this.binaryCache[t]
                );
              }),
              (t.prototype.getTextureManager = function() {
                return this.textureManager;
              }),
              (t.prototype.dispose = function() {
                this.disposed ||
                  (this.textureManager.dispose(),
                  this.canvas.remove(),
                  null != this.fromPixels2DContext &&
                    this.fromPixels2DContext.canvas.remove(),
                  this.gpgpuCreatedLocally &&
                    ((this.gpgpu.program = null), this.gpgpu.dispose()),
                  (this.disposed = !0));
              }),
              (t.prototype.floatPrecision = function() {
                var t = this;
                return (
                  null == this.floatPrecisionValue &&
                    (this.floatPrecisionValue = Le(function() {
                      var e = h.getBool("DEBUG");
                      h.set("DEBUG", !1);
                      var n = t.abs(qn(1e-8)).dataSync()[0];
                      return h.set("DEBUG", e), n > 0 ? 32 : 16;
                    })),
                  this.floatPrecisionValue
                );
              }),
              (t.prototype.epsilon = function() {
                return 32 === this.floatPrecision() ? 1e-7 : 1e-4;
              }),
              (t.prototype.uploadToGPU = function(t) {
                var e,
                  n = this.texData.get(t),
                  r = n.shape,
                  i = n.dtype,
                  o = n.values,
                  a = n.texture,
                  s = n.usage,
                  u = n.isPacked;
                if (null == a) {
                  var c,
                    l = null != this.activeTimers;
                  l && (c = performance.now());
                  var h = ve(r, u);
                  if (((n.texShape = h), null != o)) {
                    var f = [1, 1, 1];
                    0 === r.length ||
                      (1 === r.length && 1 === r[0]) ||
                      (f = [ye(r)].concat(ge(r)));
                    var p = void 0,
                      d = h[1],
                      m = h[0];
                    u
                      ? ((d = (e = No(h[0], h[1]))[0]),
                        (m = e[1]),
                        (p = new vo(f, [m, d])))
                      : (p = new go(f, [m, d]));
                    var y = this.makeTensorHandle([m, d], i);
                    (this.texData.get(y.dataId).usage = fo.UPLOAD),
                      this.gpgpu.uploadDenseMatrixToTexture(
                        this.getTexture(y.dataId),
                        d,
                        m,
                        o
                      );
                    var g = this.makeTensorHandle(p.outputShape, y.dtype);
                    (g.size = T(p.outputShape)),
                      (this.texData.get(g.dataId).isPacked = u),
                      this.compileAndRun(p, [y], g);
                    var v = this.texData.get(g.dataId);
                    (n.texture = v.texture),
                      (n.texShape = v.texShape),
                      (n.isPacked = v.isPacked),
                      (n.usage = v.usage),
                      this.disposeData(y.dataId),
                      this.texData.delete(g.dataId),
                      (n.values = null),
                      l && (this.uploadWaitMs += performance.now() - c);
                  } else {
                    var b = this.acquireTexture(h, s, i, u);
                    n.texture = b;
                  }
                }
              }),
              (t.prototype.convertAndCacheOnCPU = function(t, e) {
                var n = this.texData.get(t),
                  r = n.dtype;
                return (
                  this.releaseGPUData(t),
                  null != e &&
                    (n.values = (function(t, e) {
                      if ("float32" === e || "complex64" === e) return t;
                      if ("int32" === e || "bool" === e) {
                        for (
                          var n =
                              "int32" === e
                                ? new Int32Array(t.length)
                                : new Uint8Array(t.length),
                            r = 0;
                          r < n.length;
                          ++r
                        )
                          n[r] = Math.round(t[r]);
                        return n;
                      }
                      throw new Error("Unknown dtype " + e);
                    })(e, r)),
                  n.values
                );
              }),
              (t.prototype.acquireTexture = function(t, e, n, r) {
                if (
                  ((this.numBytesInGPU += this.computeBytes(t, n)),
                  !this.warnedAboutMemory &&
                    this.numBytesInGPU > 1024 * this.numMBBeforeWarning * 1024)
                ) {
                  var i = (this.numBytesInGPU / 1024 / 1024).toFixed(2);
                  (this.warnedAboutMemory = !0),
                    console.warn(
                      "High memory usage in GPU: " +
                        i +
                        " MB, most likely due to a memory leak"
                    );
                }
                return this.textureManager.acquireTexture(t, e, r);
              }),
              (t.prototype.computeBytes = function(t, e) {
                return t[0] * t[1] * q(e);
              }),
              t
            );
          })();
        Dt() &&
          Rt.registerBackend(
            "webgl",
            function() {
              return new Wa();
            },
            2
          );
        var Ga = Rn({
            abs_: function(t) {
              var e = An(t, "x", "abs");
              return "complex64" === e.dtype
                ? Rt.runKernel(
                    function(t) {
                      return t.complexAbs(e);
                    },
                    { $x: e }
                  )
                : Rt.runKernel(
                    function(t, n) {
                      var r = t.abs(e);
                      return n([e]), r;
                    },
                    { $x: e },
                    function(t, e) {
                      var n = e[0];
                      return {
                        $x: function() {
                          return t.mul(n.toFloat().step(-1));
                        }
                      };
                    }
                  );
            }
          }),
          Ha = Rn({
            acos_: function(t) {
              var e = An(t, "x", "acos");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.acos(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t
                        .divStrict(
                          qn(1)
                            .sub(n.toFloat().square())
                            .sqrt()
                        )
                        .neg();
                    }
                  };
                }
              );
            }
          }),
          Ka = Rn({
            acosh_: function(t) {
              var e = An(t, "x", "acosh");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.acosh(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.divStrict(
                        n
                          .toFloat()
                          .square()
                          .sub(1)
                          .sqrt()
                      );
                    }
                  };
                }
              );
            }
          }),
          Qa = Rn({
            asin_: function(t) {
              var e = An(t, "x", "asin");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.asin(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.divStrict(
                        qn(1)
                          .sub(n.toFloat().square())
                          .sqrt()
                      );
                    }
                  };
                }
              );
            }
          }),
          Xa = Rn({
            asinh_: function(t) {
              var e = An(t, "x", "asinh");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.asinh(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.divStrict(
                        qn(1)
                          .add(n.toFloat().square())
                          .sqrt()
                      );
                    }
                  };
                }
              );
            }
          }),
          $a = Rn({
            atan_: function(t) {
              var e = An(t, "x", "atan");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.atan(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(
                        n
                          .toFloat()
                          .square()
                          .add(1)
                      );
                    }
                  };
                }
              );
            }
          }),
          Ya = Rn({
            atanh_: function(t) {
              var e = An(t, "x", "atanh");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.atanh(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(qn(1).sub(n.toFloat().square()));
                    }
                  };
                }
              );
            }
          }),
          Ja = Rn({
            ceil_: function(t) {
              var e = An(t, "x", "ceil");
              return Rt.runKernel(
                function(t) {
                  return t.ceil(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          Za = Rn({
            clipByValue_: function(t, e, n) {
              var r = An(t, "x", "clipByValue");
              return (
                w(e <= n, function() {
                  return (
                    "Error in clip: min (" +
                    e +
                    ") must be less than or equal to max (" +
                    n +
                    ")."
                  );
                }),
                Rt.runKernel(
                  function(t, i) {
                    var o = t.clip(r, e, n);
                    return i([r]), o;
                  },
                  { $x: r },
                  function(t, r) {
                    var i = r[0];
                    return {
                      $x: function() {
                        return t.where(
                          i.greaterEqual(e).logicalAnd(i.lessEqual(n)),
                          tr(t)
                        );
                      }
                    };
                  }
                )
              );
            }
          }),
          ts = Rn({
            cos_: function(t) {
              var e = An(t, "x", "cos");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.cos(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return n
                        .toFloat()
                        .sin()
                        .neg()
                        .mul(t);
                    }
                  };
                }
              );
            }
          }),
          es = Rn({
            cosh_: function(t) {
              var e = An(t, "x", "cosh");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.cosh(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return n
                        .toFloat()
                        .sinh()
                        .mulStrict(t);
                    }
                  };
                }
              );
            }
          }),
          ns = Rn({
            erf_: function(t) {
              var e = An(t, "x", "erf");
              return (
                w("int32" === e.dtype || "float32" === e.dtype, function() {
                  return "Input dtype must be `int32` or `float32`.";
                }),
                "int32" === e.dtype && (e = e.toFloat()),
                Rt.runKernel(
                  function(t, n) {
                    var r = t.erf(e);
                    return n([e]), r;
                  },
                  { $x: e },
                  function(t, e) {
                    var n = e[0];
                    return {
                      $x: function() {
                        return t.mul(
                          n
                            .square()
                            .neg()
                            .exp()
                            .mul(2 / Math.sqrt(Math.PI))
                        );
                      }
                    };
                  }
                )
              );
            }
          }),
          rs = Rn({
            exp_: function(t) {
              var e = An(t, "x", "exp");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.exp(e);
                  return n([r]), r;
                },
                { $x: e },
                function(t, e) {
                  return {
                    $x: function() {
                      return t.mulStrict(e[0]);
                    }
                  };
                }
              );
            }
          }),
          is = Rn({
            expm1_: function(t) {
              var e = An(t, "x", "expm1");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.expm1(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.mul(n.exp());
                    }
                  };
                }
              );
            }
          }),
          os = Rn({
            floor_: function(t) {
              var e = An(t, "x", "floor");
              return Rt.runKernel(
                function(t) {
                  return t.floor(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          as = Rn({
            log_: function(t) {
              var e = An(t, "x", "log");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.log(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(n.toFloat());
                    }
                  };
                }
              );
            }
          }),
          ss = Rn({
            log1p_: function(t) {
              var e = An(t, "x", "log1p");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.log1p(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(n.add(1));
                    }
                  };
                }
              );
            }
          }),
          us = Rn({
            logSigmoid_: function(t) {
              var e = An(t, "x", "logSigmoid");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.softplus(e.neg()).neg();
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.mul(n.neg().sigmoid());
                    }
                  };
                }
              );
            }
          }),
          cs = Rn({
            neg_: function(t) {
              var e = An(t, "x", "neg");
              return Rt.runKernel(
                function(t) {
                  return t.neg(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return t.neg();
                    }
                  };
                }
              );
            }
          }),
          ls = Rn({
            reciprocal_: function(t) {
              var e = An(t, "x", "reciprocal");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.reciprocal(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(n.square().neg());
                    }
                  };
                }
              );
            }
          }),
          hs = Rn({
            round_: function(t) {
              var e = An(t, "x", "round");
              return Rt.runKernel(
                function(t) {
                  return t.round(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          fs = Rn({
            rsqrt_: function(t) {
              var e = An(t, "x", "rsqrt");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.rsqrt(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(n.pow(1.5).mul(2)).neg();
                    }
                  };
                }
              );
            }
          }),
          ps = Rn({
            sigmoid_: function(t) {
              var e = An(t, "x", "sigmoid");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.sigmoid(e);
                  return n([r]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.mul(n.mul(qn(1).sub(n)));
                    }
                  };
                }
              );
            }
          }),
          ds = Rn({
            sign_: function(t) {
              var e = An(t, "x", "sign");
              return Rt.runKernel(
                function(t) {
                  return t.sign(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          ms = Rn({
            isNaN_: function(t) {
              var e = An(t, "x", "isNaN");
              return Rt.runKernel(
                function(t) {
                  return t.isNaN(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          ys = Rn({
            isInf_: function(t) {
              var e = An(t, "x", "isInf");
              return Rt.runKernel(
                function(t) {
                  return t.isInf(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          gs = Rn({
            isFinite_: function(t) {
              var e = An(t, "x", "isFinite");
              return Rt.runKernel(
                function(t) {
                  return t.isFinite(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          vs = Rn({
            sin_: function(t) {
              var e = An(t, "x", "sin");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.sin(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return n
                        .toFloat()
                        .cos()
                        .mul(t);
                    }
                  };
                }
              );
            }
          }),
          bs = Rn({
            sinh_: function(t) {
              var e = An(t, "x", "sinh");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.sinh(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return n
                        .toFloat()
                        .cosh()
                        .mulStrict(t);
                    }
                  };
                }
              );
            }
          }),
          ws = Rn({
            softplus_: function(t) {
              var e = An(t, "x", "softplus");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.softplus(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.mul(n.sigmoid());
                    }
                  };
                }
              );
            }
          }),
          _s = Rn({
            sqrt_: function(t) {
              var e = An(t, "x", "sqrt");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.sqrt(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(
                        n
                          .toFloat()
                          .sqrt()
                          .mul(2)
                      );
                    }
                  };
                }
              );
            }
          }),
          Ss = Rn({
            square_: function(t) {
              var e = An(t, "x", "square");
              return Rt.runKernel(
                function(t, n) {
                  return n([e]), t.square(e);
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.mul(n.toFloat().mul(2));
                    }
                  };
                }
              );
            }
          }),
          xs = Rn({
            step_: function(t, e) {
              void 0 === e && (e = 0);
              var n = An(t, "x", "step");
              return Rt.runKernel(
                function(t) {
                  return t.step(n, e);
                },
                { $x: n },
                function(t) {
                  return {
                    $x: function() {
                      return tr(t);
                    }
                  };
                }
              );
            }
          }),
          Ts = Rn({
            tan_: function(t) {
              var e = An(t, "x", "tan");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.tan(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return t.div(n.cos().square());
                    }
                  };
                }
              );
            }
          }),
          As = Rn({
            tanh_: function(t) {
              var e = An(t, "x", "tanh");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.tanh(e);
                  return n([r]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return qn(1)
                        .sub(n.square())
                        .mulStrict(t);
                    }
                  };
                }
              );
            }
          });
        function ks(t, e, n, r, i, o) {
          var a,
            s,
            u = An(t, "x", "batchNorm"),
            c = An(e, "mean", "batchNorm"),
            l = An(n, "variance", "batchNorm");
          return (
            null != i && (a = An(i, "scale", "batchNorm")),
            null != r && (s = An(r, "offset", "batchNorm")),
            w(2 === u.rank, function() {
              return (
                "Error in batchNorm3D: x must be rank 3 but got rank " +
                u.rank +
                "."
              );
            }),
            w(2 === c.rank || 1 === c.rank, function() {
              return (
                "Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank " +
                c.rank +
                "."
              );
            }),
            w(2 === l.rank || 1 === l.rank, function() {
              return (
                "Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank " +
                l.rank +
                "."
              );
            }),
            null != a &&
              w(2 === a.rank || 1 === a.rank, function() {
                return (
                  "Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank " +
                  a.rank +
                  "."
                );
              }),
            null != s &&
              w(2 === s.rank || 1 === s.rank, function() {
                return (
                  "Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank " +
                  s.rank +
                  "."
                );
              }),
            Os(u, c, l, s, a, o)
          );
        }
        function Es(t, e, n, r, i, o) {
          var a,
            s,
            u = An(t, "x", "batchNorm"),
            c = An(e, "mean", "batchNorm"),
            l = An(n, "variance", "batchNorm");
          return (
            null != i && (a = An(i, "scale", "batchNorm")),
            null != r && (s = An(r, "offset", "batchNorm")),
            w(3 === u.rank, function() {
              return (
                "Error in batchNorm3D: x must be rank 3 but got rank " +
                u.rank +
                "."
              );
            }),
            w(3 === c.rank || 1 === c.rank, function() {
              return (
                "Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank " +
                c.rank +
                "."
              );
            }),
            w(3 === l.rank || 1 === l.rank, function() {
              return (
                "Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank " +
                l.rank +
                "."
              );
            }),
            null != a &&
              w(3 === a.rank || 1 === a.rank, function() {
                return (
                  "Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank " +
                  a.rank +
                  "."
                );
              }),
            null != s &&
              w(3 === s.rank || 1 === s.rank, function() {
                return (
                  "Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank " +
                  s.rank +
                  "."
                );
              }),
            Os(u, c, l, s, a, o)
          );
        }
        function Ns(t, e, n, r, i, o) {
          var a,
            s,
            u = An(t, "x", "batchNorm"),
            c = An(e, "mean", "batchNorm"),
            l = An(n, "variance", "batchNorm");
          return (
            null != i && (a = An(i, "scale", "batchNorm")),
            null != r && (s = An(r, "offset", "batchNorm")),
            w(4 === u.rank, function() {
              return (
                "Error in batchNorm4D: x must be rank 4 but got rank " +
                u.rank +
                "."
              );
            }),
            w(4 === c.rank || 1 === c.rank, function() {
              return (
                "Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank " +
                c.rank +
                "."
              );
            }),
            w(4 === l.rank || 1 === l.rank, function() {
              return (
                "Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank " +
                l.rank +
                "."
              );
            }),
            null != a &&
              w(4 === a.rank || 1 === a.rank, function() {
                return (
                  "Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank " +
                  a.rank +
                  "."
                );
              }),
            null != s &&
              w(4 === s.rank || 1 === s.rank, function() {
                return (
                  "Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank " +
                  s.rank +
                  "."
                );
              }),
            Os(u, c, l, s, a, o)
          );
        }
        function Os(t, e, n, r, i, o) {
          null == o && (o = 0.001);
          var a,
            s,
            u,
            c = An(t, "x", "batchNorm"),
            l = An(e, "mean", "batchNorm"),
            h = An(n, "variance", "batchNorm");
          return (
            null != i && (a = An(i, "scale", "batchNorm")),
            null != r && (s = An(r, "offset", "batchNorm")),
            w(l.rank === h.rank, function() {
              return "Batch normalization gradient requires mean and variance to have equal ranks.";
            }),
            w(null == s || l.rank === s.rank, function() {
              return "Batch normalization gradient requires mean and offset to have equal ranks.";
            }),
            w(null == a || l.rank === a.rank, function() {
              return "Batch normalization gradient requires mean and scale to have equal ranks.";
            }),
            (u =
              0 === c.rank || 1 === c.rank
                ? c.as4D(1, 1, 1, c.size)
                : 2 === c.rank
                ? c.as4D(1, 1, c.shape[0], c.shape[1])
                : 3 === c.rank
                ? c.as4D(1, c.shape[0], c.shape[1], c.shape[2])
                : c),
            Rt.runKernel(
              function(t, e) {
                var n = t.batchNormalization(u, Cs(l), Cs(h), o, Cs(a), Cs(s));
                return e([c, l, h, a]), n;
              },
              { $x: c, $mean: l, $variance: h, $scale: a, $offset: s },
              function(t, e) {
                var n = e[0],
                  r = e[1],
                  i = e[2],
                  a = e[3],
                  s = null == a ? qn(1) : a,
                  c = ir(r.shape, u.shape),
                  l = [];
                if (1 === r.rank) {
                  for (var h = 0; h < u.shape.length - 1; ++h)
                    l.push(u.shape[h]);
                  l.push(1);
                }
                var f = n.sub(r),
                  p = t.mul(s),
                  d = fs(i.add(qn(o))),
                  m = d
                    .mul(d)
                    .mul(d)
                    .mul(qn(-0.5));
                return {
                  $x: function() {
                    return 1 === r.rank
                      ? t
                          .mul(di(d.as4D(1, 1, 1, r.shape[0]), l))
                          .mul(s)
                          .reshape(n.shape)
                      : t
                          .mul(d)
                          .mul(s)
                          .reshape(n.shape);
                  },
                  $mean: function() {
                    var t = d.mul(qn(-1)).mul(p);
                    return 1 === r.rank && (t = t.sum(c)), t.reshape(r.shape);
                  },
                  $variance: function() {
                    var t = m.mul(f).mul(p);
                    return 1 === r.rank && (t = t.sum(c)), t.reshape(r.shape);
                  },
                  $scale: function() {
                    var e = f.mul(d),
                      n = t.mul(e);
                    return 1 === r.rank && (n = n.sum(c)), n.reshape(r.shape);
                  },
                  $offset: function() {
                    var e = t;
                    return 1 === r.rank && (e = e.sum(c)), e.reshape(r.shape);
                  }
                };
              }
            ).reshape(c.shape)
          );
        }
        function Cs(t) {
          return null == t
            ? null
            : 0 === t.rank
            ? t.as1D()
            : 1 === t.rank
            ? t
            : 2 === t.rank
            ? t.as4D(1, 1, t.shape[0], t.shape[1])
            : 3 === t.rank
            ? t.as4D(1, t.shape[0], t.shape[1], t.shape[2])
            : t;
        }
        function Is() {
          Re(
            "tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"
          );
        }
        var Ms = Rn({
            batchNormalization2d_: function(t, e, n, r, i, o) {
              return void 0 === r && (r = 0.001), Is(), ks(t, e, n, o, i, r);
            }
          }),
          Ps = Rn({
            batchNormalization3d_: function(t, e, n, r, i, o) {
              return void 0 === r && (r = 0.001), Is(), Es(t, e, n, o, i, r);
            }
          }),
          Rs = Rn({
            batchNormalization4d_: function(t, e, n, r, i, o) {
              return void 0 === r && (r = 0.001), Is(), Ns(t, e, n, o, i, r);
            }
          }),
          Ds = Rn({
            batchNormalization_: function(t, e, n, r, i, o) {
              return void 0 === r && (r = 0.001), Is(), Os(t, e, n, o, i, r);
            }
          }),
          Fs = Rn({ batchNorm_: Os }),
          zs = Rn({ batchNorm2d_: ks }),
          Ls = Rn({ batchNorm3d_: Es }),
          js = Rn({ batchNorm4d_: Ns });
        function Bs(t, e, n, r, i, o) {
          w(t.length === e.rank, function() {
            return (
              "Length of inShape (" +
              t.length +
              ") and rank of dy (" +
              e.rank +
              ") must match"
            );
          });
          var a = t,
            s = e,
            u = !1;
          3 === e.rank &&
            ((u = !0),
            (s = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])),
            (a = [1, t[0], t[1], t[2]]));
          var c = a[3],
            l = s.shape[3];
          w(4 === a.length, function() {
            return (
              "Error in conv2dDerInput: inShape must be length 4, but got length " +
              a.length +
              "."
            );
          }),
            w(4 === s.rank, function() {
              return (
                "Error in conv2dDerInput: dy must be rank 4, but got rank " +
                s.rank
              );
            }),
            w(4 === n.rank, function() {
              return (
                "Error in conv2dDerInput: filter must be rank 4, but got rank " +
                n.rank
              );
            }),
            w(c === n.shape[2], function() {
              return (
                "Error in conv2dDerInput: depth of input (" +
                c +
                ") must match input depth for filter " +
                n.shape[2] +
                "."
              );
            }),
            w(l === n.shape[3], function() {
              return (
                "Error in conv2dDerInput: depth of output (" +
                l +
                ") must match output depth for filter " +
                n.shape[3] +
                "."
              );
            }),
            null != o &&
              w(k(i), function() {
                return (
                  "Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  i +
                  "."
                );
              });
          var h = sr(a, n.shape, r, 1, i, o),
            f = Rt.runKernel(
              function(t, e) {
                var r = t.conv2dDerInput(s, n, h);
                return e([n, s]), r;
              },
              { dy4D: s, filter: n },
              function(t, e) {
                var n = e[0],
                  a = e[1];
                return {
                  dy4D: function() {
                    return Ws(t, n, r, i, "NHWC", 1, o);
                  },
                  filter: function() {
                    return Hs(t, a, n.shape, r, i, o);
                  }
                };
              }
            );
          return u ? f.as3D(f.shape[1], f.shape[2], f.shape[3]) : f;
        }
        function qs(t, e, n, r, i, o) {
          var a = t;
          3 === t.rank && (a = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]));
          var s = e;
          3 === s.rank && (s = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])),
            w(4 === a.rank, function() {
              return (
                "Error in conv2dDerFilter: input must be rank 4, but got shape " +
                a.shape +
                "."
              );
            }),
            w(4 === s.rank, function() {
              return (
                "Error in conv2dDerFilter: dy must be rank 4, but got shape " +
                s.shape +
                "."
              );
            }),
            w(4 === n.length, function() {
              return (
                "Error in conv2dDerFilter: filterShape must be length 4, but got " +
                n +
                "."
              );
            }),
            w(a.shape[3] === n[2], function() {
              return (
                "Error in conv2dDerFilter: depth of input " +
                a.shape[3] +
                ") must match input depth in filter (" +
                n[2] +
                "."
              );
            }),
            w(s.shape[3] === n[3], function() {
              return (
                "Error in conv2dDerFilter: depth of dy (" +
                s.shape[3] +
                ") must match output depth for filter (" +
                n[3] +
                ")."
              );
            }),
            null != o &&
              w(k(i), function() {
                return (
                  "Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  i +
                  "."
                );
              });
          var u = sr(a.shape, n, r, 1, i, o);
          return Rt.runKernel(
            function(t) {
              return t.conv2dDerFilter(a, s, u);
            },
            { x4D: a, dy4D: s }
          );
        }
        function Us(t) {
          var e = (function(t) {
              return "number" == typeof t
                ? [t, t, t]
                : 2 === t.length
                ? [t[0], t[1], 1]
                : t;
            })(t),
            n = e[0],
            r = e[1],
            i = e[2];
          return 1 === n && 1 === r && 1 === i;
        }
        var Vs = Rn({
            conv1d_: function(t, e, n, r, i, o, a) {
              void 0 === i && (i = "NWC"), void 0 === o && (o = 1);
              var s = An(t, "x", "conv1d"),
                u = An(e, "filter", "conv1d"),
                c = s,
                l = !1;
              2 === s.rank &&
                ((l = !0), (c = s.as3D(1, s.shape[0], s.shape[1]))),
                w(3 === c.rank, function() {
                  return (
                    "Error in conv1d: input must be rank 3, but got rank " +
                    c.rank +
                    "."
                  );
                }),
                w(3 === u.rank, function() {
                  return (
                    "Error in conv1d: filter must be rank 3, but got rank " +
                    u.rank +
                    "."
                  );
                }),
                null != a &&
                  w(k(r), function() {
                    return (
                      "Error in conv1d: pad must be an integer when using, dimRoundingMode " +
                      a +
                      " but got pad " +
                      r +
                      "."
                    );
                  }),
                w(c.shape[2] === u.shape[1], function() {
                  return (
                    "Error in conv1d: depth of input (" +
                    c.shape[2] +
                    ") must match input depth for filter " +
                    u.shape[1] +
                    "."
                  );
                }),
                w(mr(n, o), function() {
                  return (
                    "Error in conv1D: Either stride or dilation must be 1. Got stride " +
                    n +
                    " and dilation '" +
                    o +
                    "'"
                  );
                }),
                w("NWC" === i, function() {
                  return (
                    "Error in conv1d: got dataFormat of " +
                    i +
                    " but only NWC is currently supported."
                  );
                });
              var h = u.as4D(1, u.shape[0], u.shape[1], u.shape[2]),
                f = c.as4D(c.shape[0], 1, c.shape[1], c.shape[2]),
                p = Ws(f, h, [1, n], r, "NHWC", [1, o], a);
              return l
                ? p.as2D(p.shape[2], p.shape[3])
                : p.as3D(p.shape[0], p.shape[2], p.shape[3]);
            }
          }),
          Ws = Rn({
            conv2d_: function(t, e, n, r, i, o, a) {
              void 0 === i && (i = "NHWC"), void 0 === o && (o = [1, 1]);
              var s = An(t, "x", "conv2d"),
                u = An(e, "filter", "conv2d"),
                c = s,
                l = !1;
              3 === s.rank &&
                ((l = !0), (c = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]))),
                w(4 === c.rank, function() {
                  return (
                    "Error in conv2d: input must be rank 4, but got rank " +
                    c.rank +
                    "."
                  );
                }),
                w(4 === u.rank, function() {
                  return (
                    "Error in conv2d: filter must be rank 4, but got rank " +
                    u.rank +
                    "."
                  );
                }),
                null != a &&
                  w(k(r), function() {
                    return (
                      "Error in conv2d: pad must be an integer when using, dimRoundingMode " +
                      a +
                      " but got pad " +
                      r +
                      "."
                    );
                  }),
                w(c.shape[3] === u.shape[2], function() {
                  return (
                    "Error in conv2d: depth of input (" +
                    c.shape[3] +
                    ") must match input depth for filter " +
                    u.shape[2] +
                    "."
                  );
                }),
                w(mr(n, o), function() {
                  return (
                    "Error in conv2D: Either strides or dilations must be 1. Got strides " +
                    n +
                    " and dilations '" +
                    o +
                    "'"
                  );
                }),
                w("NHWC" === i, function() {
                  return (
                    "Error in conv2d: got dataFormat of " +
                    i +
                    " but only NHWC is currently supported."
                  );
                });
              var h = sr(c.shape, u.shape, n, o, r, a),
                f = Rt.runKernel(
                  function(t, e) {
                    var n = t.conv2d(c, u, h);
                    return e([u, c]), n;
                  },
                  { x: c, $filter: u },
                  function(t, e) {
                    var i = e,
                      a = i[0],
                      s = i[1];
                    return (
                      w(dr(o), function() {
                        return (
                          "Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '" +
                          o +
                          "'"
                        );
                      }),
                      {
                        x: function() {
                          return Bs(s.shape, t, a, n, r);
                        },
                        $filter: function() {
                          return qs(s, t, a.shape, n, r);
                        }
                      }
                    );
                  }
                );
              return l ? f.as3D(f.shape[1], f.shape[2], f.shape[3]) : f;
            }
          }),
          Gs = Rn({
            conv3d_: function(t, e, n, r, i, o) {
              void 0 === i && (i = "NDHWC"), void 0 === o && (o = [1, 1, 1]);
              var a = An(t, "x", "conv3d"),
                s = An(e, "filter", "conv3d"),
                u = a,
                c = !1;
              4 === a.rank &&
                ((c = !0),
                (u = a.as5D(
                  1,
                  a.shape[0],
                  a.shape[1],
                  a.shape[2],
                  a.shape[3]
                ))),
                w(5 === u.rank, function() {
                  return (
                    "Error in conv3d: input must be rank 5, but got rank " +
                    u.rank +
                    "."
                  );
                }),
                w(5 === s.rank, function() {
                  return (
                    "Error in conv3d: filter must be rank 5, but got rank " +
                    s.rank +
                    "."
                  );
                }),
                w(u.shape[4] === s.shape[3], function() {
                  return (
                    "Error in conv3d: depth of input (" +
                    u.shape[4] +
                    ") must match input depth for filter " +
                    s.shape[3] +
                    "."
                  );
                }),
                w(
                  (function(t, e) {
                    return Us(n) || Us(e);
                  })(0, o),
                  function() {
                    return (
                      "Error in conv3D: Either strides or dilations must be 1. Got strides " +
                      n +
                      " and dilations '" +
                      o +
                      "'"
                    );
                  }
                ),
                w("NDHWC" === i, function() {
                  return (
                    "Error in conv3d: got dataFormat of " +
                    i +
                    " but only NDHWC is currently supported."
                  );
                });
              var l = ur(u.shape, s.shape, n, o, r),
                h = Rt.runKernel(
                  function(t, e) {
                    var n = t.conv3d(u, s, l);
                    return e([u, s]), n;
                  },
                  { x: u, $filter: s },
                  function(t, e) {
                    w(Us(o), function() {
                      return (
                        "Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '" +
                        o +
                        "'"
                      );
                    });
                    var i = e[0],
                      a = e[1];
                    return {
                      x: function() {
                        return (function(t, e, n, r, i) {
                          w(t.length === e.rank, function() {
                            return (
                              "Length of inShape (" +
                              t.length +
                              ") and rank of dy (" +
                              e.rank +
                              ") must match"
                            );
                          });
                          var o = t,
                            a = e,
                            s = !1;
                          4 === e.rank &&
                            ((s = !0),
                            (a = e.as5D(
                              1,
                              e.shape[0],
                              e.shape[1],
                              e.shape[2],
                              e.shape[3]
                            )),
                            (o = [1, t[0], t[1], t[2], t[3]]));
                          var u = o[4],
                            c = a.shape[4];
                          w(5 === o.length, function() {
                            return (
                              "Error in conv3dDerInput: inShape must be length 5, but got length " +
                              o.length +
                              "."
                            );
                          }),
                            w(5 === a.rank, function() {
                              return (
                                "Error in conv3dDerInput: dy must be rank 5, but got rank " +
                                a.rank
                              );
                            }),
                            w(5 === n.rank, function() {
                              return (
                                "Error in conv3dDerInput: filter must be rank 5, but got rank " +
                                n.rank
                              );
                            }),
                            w(u === n.shape[3], function() {
                              return (
                                "Error in conv3dDerInput: depth of input (" +
                                u +
                                ") must match input depth for filter " +
                                n.shape[3] +
                                "."
                              );
                            }),
                            w(c === n.shape[4], function() {
                              return (
                                "Error in conv3dDerInput: depth of output (" +
                                c +
                                ") must match output depth for filter " +
                                n.shape[4] +
                                "."
                              );
                            });
                          var l = ur(o, n.shape, r, 1, i),
                            h = Rt.runKernel(
                              function(t) {
                                return t.conv3dDerInput(a, n, l);
                              },
                              { dy5D: a }
                            );
                          return s
                            ? h.as4D(
                                h.shape[1],
                                h.shape[2],
                                h.shape[3],
                                h.shape[4]
                              )
                            : h;
                        })(i.shape, t, a, n, r);
                      },
                      $filter: function() {
                        return (function(t, e, n, r, i) {
                          var o = t;
                          4 === t.rank &&
                            (o = t.as5D(
                              1,
                              t.shape[0],
                              t.shape[1],
                              t.shape[2],
                              t.shape[3]
                            ));
                          var a = e;
                          4 === a.rank &&
                            (a = e.as5D(
                              1,
                              e.shape[0],
                              e.shape[1],
                              e.shape[2],
                              e.shape[3]
                            )),
                            w(5 === o.rank, function() {
                              return (
                                "Error in conv3dDerFilter: input must be rank 5, but got shape " +
                                o.shape +
                                "."
                              );
                            }),
                            w(5 === a.rank, function() {
                              return (
                                "Error in conv3dDerFilter: dy must be rank 5, but got shape " +
                                a.shape +
                                "."
                              );
                            }),
                            w(5 === n.length, function() {
                              return (
                                "Error in conv3dDerFilter: filterShape must be length 5, but got " +
                                n +
                                "."
                              );
                            }),
                            w(o.shape[4] === n[3], function() {
                              return (
                                "Error in conv3dDerFilter: depth of input " +
                                o.shape[4] +
                                ") must match input depth in filter (" +
                                n[3] +
                                "."
                              );
                            }),
                            w(a.shape[4] === n[4], function() {
                              return (
                                "Error in conv3dDerFilter: depth of dy (" +
                                a.shape[4] +
                                ") must match output depth for filter (" +
                                n[4] +
                                ")."
                              );
                            });
                          var s = ur(o.shape, n, r, 1, i);
                          return Rt.runKernel(
                            function(t) {
                              return t.conv3dDerFilter(o, a, s);
                            },
                            { x5D: o, dy5D: a }
                          );
                        })(i, t, a.shape, n, r);
                      }
                    };
                  }
                );
              return c
                ? h.as4D(h.shape[1], h.shape[2], h.shape[3], h.shape[4])
                : h;
            }
          }),
          Hs = Rn({ conv2dDerFilter_: qs }),
          Ks = Rn({
            depthwiseConv2d_: function(t, e, n, r, i, o, a) {
              void 0 === i && (i = "NHWC"), void 0 === o && (o = [1, 1]);
              var s = An(t, "x", "depthwiseConv2d"),
                u = An(e, "filter", "depthwiseConv2d"),
                c = s,
                l = !1;
              3 === s.rank &&
                ((l = !0), (c = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]))),
                w(4 === c.rank, function() {
                  return (
                    "Error in depthwiseConv2d: input must be rank 4, but got rank " +
                    c.rank +
                    "."
                  );
                }),
                w(4 === u.rank, function() {
                  return (
                    "Error in depthwiseConv2d: filter must be rank 4, but got rank " +
                    u.rank +
                    "."
                  );
                }),
                w(c.shape[3] === u.shape[2], function() {
                  return (
                    "Error in depthwiseConv2d: number of input channels (" +
                    c.shape[3] +
                    ") must match the inChannels dimension in filter " +
                    u.shape[2] +
                    "."
                  );
                }),
                null == o && (o = [1, 1]),
                w(mr(n, o), function() {
                  return (
                    "Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides " +
                    n +
                    " and dilations '" +
                    o +
                    "'"
                  );
                }),
                null != a &&
                  w(k(r), function() {
                    return (
                      "Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode " +
                      a +
                      " but got pad " +
                      r +
                      "."
                    );
                  });
              var h = sr(c.shape, u.shape, n, o, r, a, !0),
                f = Rt.runKernel(
                  function(t, e) {
                    var n = t.depthwiseConv2D(c, u, h);
                    return e([c, u]), n;
                  },
                  { x: c, $filter: u },
                  function(t, e) {
                    w(dr(o), function() {
                      return (
                        "Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '" +
                        o +
                        "'"
                      );
                    });
                    var n = e[0],
                      r = e[1];
                    return {
                      x: function() {
                        return (function(t, e, n, r) {
                          var i = e,
                            o = !1;
                          3 === e.rank &&
                            ((o = !0),
                            (i = e.as4D(
                              1,
                              e.shape[0],
                              e.shape[1],
                              e.shape[2]
                            )));
                          var a = Rt.runKernel(
                            function(t) {
                              return t.depthwiseConv2DDerInput(i, n, r);
                            },
                            { dy4D: i }
                          );
                          return o
                            ? a.as3D(a.shape[1], a.shape[2], a.shape[3])
                            : a;
                        })(n.shape, t, r, h);
                      },
                      $filter: function() {
                        return (function(t, e, n, r) {
                          var i = t;
                          3 === t.rank &&
                            (i = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]));
                          var o = e;
                          return (
                            3 === o.rank &&
                              (o = e.as4D(
                                1,
                                e.shape[0],
                                e.shape[1],
                                e.shape[2]
                              )),
                            Rt.runKernel(
                              function(t) {
                                return t.depthwiseConv2DDerFilter(i, o, r);
                              },
                              { x4D: i, dy4D: o }
                            )
                          );
                        })(n, t, r.shape, h);
                      }
                    };
                  }
                );
              return l ? f.as3D(f.shape[1], f.shape[2], f.shape[3]) : f;
            }
          }),
          Qs = Rn({
            separableConv2d_: function(t, e, n, r, i, o, a) {
              void 0 === o && (o = [1, 1]), void 0 === a && (a = "NHWC");
              var s = An(t, "x", "separableConv2d"),
                u = An(e, "depthwiseFilter", "separableConv2d"),
                c = An(n, "pointwiseFilter", "separableConv2d"),
                l = s,
                h = !1;
              if (
                (3 === s.rank &&
                  ((h = !0),
                  (l = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]))),
                "NCHW" === a)
              )
                throw new Error(
                  "separableConv2d currently does not support dataFormat NCHW; only NHWC is supported"
                );
              w(4 === l.rank, function() {
                return (
                  "Error in separableConv2d: input must be rank 4, but got rank " +
                  l.rank +
                  "."
                );
              }),
                w(4 === u.rank, function() {
                  return (
                    "Error in separableConv2d: depthwise filter must be rank 4, but got rank " +
                    u.rank +
                    "."
                  );
                }),
                w(4 === c.rank, function() {
                  return (
                    "Error in separableConv2d: pointwise filter must be rank 4, but got rank " +
                    u.rank +
                    "."
                  );
                }),
                w(1 === c.shape[0], function() {
                  return (
                    "Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got " +
                    c.shape[0] +
                    "."
                  );
                }),
                w(1 === c.shape[1], function() {
                  return (
                    "Error in separableConv2d: the second dimension of pointwise filter must be 1, but got " +
                    c.shape[1] +
                    "."
                  );
                });
              var f = u.shape[2],
                p = u.shape[3];
              w(c.shape[2] === f * p, function() {
                return (
                  "Error in separableConv2d: the third dimension of pointwise filter must be " +
                  f * p +
                  ", but got " +
                  c.shape[2] +
                  "."
                );
              });
              var d = Ks(l, u, r, i, a, o),
                m = Ws(d, c, 1, "valid", a);
              return h ? m.as3D(m.shape[1], m.shape[2], m.shape[3]) : m;
            }
          }),
          Xs = Rn({
            conv2dTranspose_: function(t, e, n, r, i, o) {
              return Bs(
                n,
                An(t, "x", "conv2dTranspose"),
                An(e, "filter", "conv2dTranspose"),
                r,
                i,
                o
              );
            }
          }),
          $s = Rn({
            matMul_: function(t, e, n, r) {
              var i;
              void 0 === n && (n = !1), void 0 === r && (r = !1);
              var o = An(t, "a", "matMul"),
                a = An(e, "b", "matMul");
              (i = Et(o, a)), (o = i[0]), (a = i[1]);
              var s = n ? o.shape[o.rank - 2] : o.shape[o.rank - 1],
                u = r ? a.shape[a.rank - 1] : a.shape[a.rank - 2],
                c = n ? o.shape[o.rank - 1] : o.shape[o.rank - 2],
                l = r ? a.shape[a.rank - 2] : a.shape[a.rank - 1],
                h = o.shape.slice(0, -2),
                f = a.shape.slice(0, -2),
                p = T(h),
                d = T(f);
              w(o.rank >= 2 && a.rank >= 2 && o.rank === a.rank, function() {
                return (
                  "Error in matMul: inputs must have the same rank of at least 2, got ranks " +
                  o.rank +
                  " and " +
                  a.rank +
                  "."
                );
              }),
                w(A(h, f), function() {
                  return (
                    "Error in matMul: outer dimensions (" +
                    h +
                    ") and (" +
                    f +
                    ") of Tensors with shapes " +
                    o.shape +
                    " and " +
                    a.shape +
                    " must match."
                  );
                }),
                w(s === u, function() {
                  return (
                    "Error in matMul: inner shapes (" +
                    s +
                    ") and (" +
                    u +
                    ") of Tensors with shapes " +
                    o.shape +
                    " and " +
                    a.shape +
                    " and transposeA=" +
                    n +
                    " and transposeB=" +
                    r +
                    " must match."
                  );
                });
              var m = o.shape.slice(0, -2).concat([c, l]),
                y = n ? o.as3D(p, s, c) : o.as3D(p, c, s),
                g = r ? a.as3D(d, l, u) : a.as3D(d, u, l);
              return Rt.runKernel(
                function(t, e) {
                  var i = t.batchMatMul(y, g, n, r);
                  return e([y, g]), i;
                },
                { $a: y, $b: g },
                function(t, e) {
                  var i = e,
                    o = i[0],
                    a = i[1];
                  return n || r
                    ? !n && r
                      ? {
                          $a: function() {
                            return t.matMul(a, !1, !1);
                          },
                          $b: function() {
                            return t.matMul(o, !0, !1);
                          }
                        }
                      : n && !r
                      ? {
                          $a: function() {
                            return a.matMul(t, !1, !0);
                          },
                          $b: function() {
                            return o.matMul(t, !1, !1);
                          }
                        }
                      : {
                          $a: function() {
                            return a.matMul(t, !0, !0);
                          },
                          $b: function() {
                            return t.matMul(o, !0, !0);
                          }
                        }
                    : {
                        $a: function() {
                          return t.matMul(a, !1, !0);
                        },
                        $b: function() {
                          return o.matMul(t, !0, !1);
                        }
                      };
                }
              ).reshape(m);
            }
          }),
          Ys = Rn({
            dot_: function(t, e) {
              var n = An(t, "t1", "dot"),
                r = An(e, "t2", "dot");
              w(
                !(
                  (1 !== n.rank && 2 !== n.rank) ||
                  (1 !== r.rank && 2 !== r.rank)
                ),
                function() {
                  return (
                    "Error in dot: inputs must all be rank 1 or 2, but got ranks " +
                    n.rank +
                    " and " +
                    r.rank +
                    "."
                  );
                }
              );
              var i = 1 === n.rank ? n.size : n.shape[1],
                o = 1 === r.rank ? r.size : r.shape[0];
              return (
                w(i === o, function() {
                  return (
                    "Error in dot: inner dimensions of inputs must match, but got " +
                    i +
                    " and " +
                    o +
                    "."
                  );
                }),
                1 === n.rank && 1 === r.rank
                  ? n
                      .as2D(1, -1)
                      .matMul(r.as2D(-1, 1))
                      .asScalar()
                  : 1 === n.rank && 2 === r.rank
                  ? n
                      .as2D(1, -1)
                      .matMul(r.as2D(r.shape[0], r.shape[1]))
                      .as1D()
                  : 2 === n.rank && 1 === r.rank
                  ? n.matMul(r.as2D(-1, 1)).as1D()
                  : n.matMul(r.as2D(r.shape[0], r.shape[1]))
              );
            }
          }),
          Js = Rn({
            outerProduct_: function(t, e) {
              var n = An(t, "v1", "outerProduct"),
                r = An(e, "v2", "outerProduct");
              return (
                w(1 === n.rank && 1 === r.rank, function() {
                  return (
                    "Error in outerProduct: inputs must be rank 1, but got ranks " +
                    n.rank +
                    " and " +
                    r.rank +
                    "."
                  );
                }),
                n.as2D(-1, 1).matMul(r.as2D(1, -1))
              );
            }
          }),
          Zs = Rn({
            reverse_: function(t, e) {
              var n = An(t, "x", "reverse");
              if (0 === n.rank) return n.clone();
              var r = M(e, n.shape);
              return Rt.runKernel(
                function(t) {
                  return t.reverse(n, r);
                },
                { $x: n },
                function(t) {
                  return {
                    $x: function() {
                      return t.reverse(r);
                    }
                  };
                }
              ).reshapeAs(n);
            }
          }),
          tu = Rn({
            reverse1d_: function(t) {
              var e = An(t, "x", "reverse");
              return (
                w(1 === e.rank, function() {
                  return (
                    "Error in reverse1D: x must be rank 1 but got rank " +
                    e.rank +
                    "."
                  );
                }),
                Zs(e, 0)
              );
            }
          }),
          eu = Rn({
            reverse2d_: function(t, e) {
              var n = An(t, "x", "reverse");
              return (
                w(2 === n.rank, function() {
                  return (
                    "Error in reverse2D: x must be rank 2 but got rank " +
                    n.rank +
                    "."
                  );
                }),
                Zs(n, e)
              );
            }
          }),
          nu = Rn({
            reverse3d_: function(t, e) {
              var n = An(t, "x", "reverse");
              return (
                w(3 === n.rank, function() {
                  return (
                    "Error in reverse3D: x must be rank 3 but got rank " +
                    n.rank +
                    "."
                  );
                }),
                Zs(n, e)
              );
            }
          }),
          ru = Rn({
            reverse4d_: function(t, e) {
              var n = An(t, "x", "reverse");
              return (
                w(4 === n.rank, function() {
                  return (
                    "Error in reverse4D: x must be rank 4 but got rank " +
                    n.rank +
                    "."
                  );
                }),
                Zs(n, e)
              );
            }
          });
        function iu(t, e, n, r, i, o) {
          var a = An(t, "x", "maxPool"),
            s = a,
            u = !1;
          3 === a.rank &&
            ((u = !0), (s = a.as4D(1, a.shape[0], a.shape[1], a.shape[2]))),
            null == r && (r = [1, 1]),
            w(4 === s.rank, function() {
              return (
                "Error in maxPool: input must be rank 4 but got rank " +
                s.rank +
                "."
              );
            }),
            w(mr(n, r), function() {
              return (
                "Error in maxPool: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                r +
                "'"
              );
            }),
            null != o &&
              w(k(i), function() {
                return (
                  "Error in maxPool: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  i +
                  "."
                );
              });
          var c = ar(s.shape, e, n, r, i, o),
            l = Rt.runKernel(
              function(t, e) {
                var n = t.maxPool(s, c);
                return e([s, n]), n;
              },
              { x: s },
              function(t, o) {
                var a = o[0],
                  s = o[1];
                return {
                  x: function() {
                    return (function(t, e, n, r, i, o, a, s) {
                      var u = An(t, "dy", "maxPoolBackprop"),
                        c = An(e, "input", "maxPoolBackprop"),
                        l = An(n, "output", "maxPoolBackprop");
                      w(c.rank === u.rank, function() {
                        return (
                          "Rank of input (" +
                          c.rank +
                          ") does not match rank of dy (" +
                          u.rank +
                          ")"
                        );
                      }),
                        null == o && (o = [1, 1]),
                        w(mr(i, o), function() {
                          return (
                            "Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides " +
                            i +
                            " and dilations '" +
                            o +
                            "'"
                          );
                        }),
                        w(4 === u.rank, function() {
                          return (
                            "Error in maxPoolBackprop: dy must be rank 4 but got rank " +
                            u.rank +
                            "."
                          );
                        }),
                        w(4 === c.rank, function() {
                          return (
                            "Error in maxPoolBackprop: input must be rank 4 but got rank " +
                            c.rank +
                            "."
                          );
                        });
                      var h = ar(c.shape, r, i, o, a, s);
                      return Rt.runKernel(
                        function(t) {
                          return t.maxPoolBackprop(u, c, l, h);
                        },
                        { $dy: u, $input: c }
                      );
                    })(t, a, s, e, n, r, i);
                  }
                };
              }
            );
          return u ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l;
        }
        function ou(t, e, n, r, i, o) {
          var a = An(t, "x", "avgPool", "float32");
          null == r && (r = [1, 1]),
            w(mr(n, r), function() {
              return (
                "Error in avgPool: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                r +
                "'"
              );
            });
          var s = a,
            u = !1;
          3 === a.rank &&
            ((u = !0), (s = a.as4D(1, a.shape[0], a.shape[1], a.shape[2]))),
            w(4 === s.rank, function() {
              return (
                "Error in avgPool: x must be rank 4 but got rank " +
                s.rank +
                "."
              );
            }),
            null != o &&
              w(k(i), function() {
                return (
                  "Error in avgPool: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  i +
                  "."
                );
              });
          var c = ar(s.shape, e, n, r, i, o),
            l = Rt.runKernel(
              function(t) {
                return t.avgPool(s, c);
              },
              { x: s },
              function(t) {
                return {
                  x: function() {
                    return (function(t, e, n, r, i, o) {
                      var a = An(t, "dy", "avgPoolBackprop"),
                        s = An(e, "input", "avgPoolBackprop");
                      w(s.rank === a.rank, function() {
                        return (
                          "Rank of input (" +
                          s.rank +
                          ") does not match rank of dy (" +
                          a.rank +
                          ")"
                        );
                      }),
                        null == i && (i = [1, 1]),
                        w(mr(r, i), function() {
                          return (
                            "Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides " +
                            r +
                            " and dilations '" +
                            i +
                            "'"
                          );
                        });
                      var u = s,
                        c = a,
                        l = !1;
                      3 === s.rank &&
                        ((l = !0),
                        (u = s.as4D(1, s.shape[0], s.shape[1], s.shape[2])),
                        (c = a.as4D(1, a.shape[0], a.shape[1], a.shape[2]))),
                        w(4 === c.rank, function() {
                          return (
                            "Error in avgPoolBackprop: dy must be rank 4 but got rank " +
                            c.rank +
                            "."
                          );
                        }),
                        w(4 === u.rank, function() {
                          return (
                            "Error in avgPoolBackprop: input must be rank 4 but got rank " +
                            u.rank +
                            "."
                          );
                        });
                      var h = ar(u.shape, n, r, i, o),
                        f = Rt.runKernel(
                          function(t) {
                            return t.avgPoolBackprop(c, u, h);
                          },
                          { dy4D: c, input4D: u }
                        );
                      return l ? f.as3D(f.shape[1], f.shape[2], f.shape[3]) : f;
                    })(t, s, e, n, r, i);
                  }
                };
              }
            );
          return (
            (l = l.cast(a.dtype)),
            u ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l
          );
        }
        var au = Rn({
            maxPool_: function(t, e, n, r, i) {
              return iu(t, e, n, 1, r, i);
            }
          }),
          su = Rn({
            avgPool_: function(t, e, n, r, i) {
              return ou(t, e, n, 1, r, i);
            }
          }),
          uu = Rn({
            pool_: function(t, e, n, r, i, o) {
              null == i && (i = [1, 1]),
                null == o && (o = 1),
                0 === r && (r = "valid");
              var a = An(t, "x", "maxPool"),
                s = a,
                u = !1;
              3 === a.rank &&
                ((u = !0), (s = a.as4D(1, a.shape[0], a.shape[1], a.shape[2]))),
                w(mr(o, i), function() {
                  return (
                    "Error in pool: Either strides or dilations must be 1. Got strides " +
                    o +
                    " and dilations '" +
                    i +
                    "'"
                  );
                });
              var c,
                l = ar(s.shape, e, o, i, r),
                h = [l.dilationHeight, l.dilationWidth];
              c =
                "same" === r
                  ? (function(t, e) {
                      var n = t
                          .map(function(t, n) {
                            return t + (t - 1) * (e[n] - 1);
                          })
                          .map(function(t) {
                            return t - 1;
                          }),
                        r = n.map(function(t) {
                          return Math.floor(t / 2);
                        }),
                        i = n.map(function(t, e) {
                          return t - r[e];
                        });
                      return n.map(function(t, e) {
                        return [r[e], i[e]];
                      });
                    })([l.filterHeight, l.filterWidth], h)
                  : [[0, 0], [0, 0]];
              var f = 1 === h[0] && 1 === h[1],
                p = (function(t, e, n) {
                  var r = n.map(function(t) {
                      return t[0];
                    }),
                    i = n.map(function(t) {
                      return t[1];
                    }),
                    o = t.concat(r, i),
                    a = e.map(function(t, e) {
                      return (t - (o[e] % t)) % t;
                    }),
                    s = i.map(function(t, e) {
                      return t + a[e];
                    });
                  return [
                    e.map(function(t, e) {
                      return [r[e], s[e]];
                    }),
                    e.map(function(t, e) {
                      return [0, a[e]];
                    })
                  ];
                })([l.inHeight, l.inWidth], h, c),
                d = p[0],
                m = p[1],
                y = f ? r : "valid",
                g = f ? s : hi(s, h, d),
                v = ("avg" === n
                  ? function() {
                      return ou(g, e, o, 1, y);
                    }
                  : function() {
                      return iu(g, e, o, 1, y);
                    })(),
                b = f ? v : Kr(v, h, m);
              return u ? b.as3D(b.shape[1], b.shape[2], b.shape[3]) : b;
            }
          }),
          cu = Rn({
            slice_: function(t, e, n) {
              var r,
                i,
                o = An(t, "x", "slice");
              if (0 === o.rank)
                throw new Error("Slicing scalar is not possible");
              (r =
                "number" == typeof e
                  ? [e].concat(new Array(o.rank - 1).fill(0))
                  : e.length < o.rank
                  ? e.concat(new Array(o.rank - e.length).fill(0))
                  : e.slice()),
                (i = (i =
                  null == n
                    ? new Array(o.rank).fill(-1)
                    : "number" == typeof n
                    ? [n].concat(new Array(o.rank - 1).fill(-1))
                    : n.length < o.rank
                    ? n.concat(new Array(o.rank - n.length).fill(-1))
                    : n).map(function(t, e) {
                  return t >= 0
                    ? t
                    : (w(-1 === t, function() {
                        return "Bad value in size";
                      }),
                      o.shape[e] - r[e]);
                })),
                (function(t, e, n) {
                  w(t.rank === e.length, function() {
                    return (
                      "Error in slice" +
                      t.rank +
                      "D: Length of begin " +
                      e +
                      " must match the rank of the array (" +
                      t.rank +
                      ")."
                    );
                  }),
                    w(t.rank === n.length, function() {
                      return (
                        "Error in slice" +
                        t.rank +
                        "D: Length of size " +
                        n +
                        " must match the rank of the array (" +
                        t.rank +
                        ")."
                      );
                    });
                  for (
                    var r = function(r) {
                        w(e[r] + n[r] <= t.shape[r], function() {
                          return (
                            "Error in slice" +
                            t.rank +
                            "D: begin[" +
                            r +
                            "] + size[" +
                            r +
                            "] (" +
                            (e[r] + n[r]) +
                            ") would overflow input.shape[" +
                            r +
                            "] (" +
                            t.shape[r] +
                            ")"
                          );
                        });
                      },
                      i = 0;
                    i < t.rank;
                    ++i
                  )
                    r(i);
                })(o, r, i);
              var a = o.shape;
              return Rt.runKernel(
                function(t) {
                  return t.slice(o, r, i);
                },
                { $x: o },
                function(t) {
                  for (var e = [], n = 0; n < t.rank; n++)
                    e.push([r[n], a[n] - r[n] - i[n]]);
                  return {
                    $x: function() {
                      return t.pad(e);
                    }
                  };
                }
              );
            }
          }),
          lu = Rn({
            slice1d_: function(t, e, n) {
              var r = An(t, "x", "slice1d");
              return (
                w(1 === r.rank, function() {
                  return (
                    "slice1d expects a rank-1 tensor, but got a rank-" +
                    r.rank +
                    " tensor"
                  );
                }),
                cu(r, [e], [n])
              );
            }
          }),
          hu = Rn({
            slice2d_: function(t, e, n) {
              var r = An(t, "x", "slice2d");
              return (
                w(2 === r.rank, function() {
                  return (
                    "slice2d expects a rank-2 tensor, but got a rank-" +
                    r.rank +
                    " tensor"
                  );
                }),
                cu(r, e, n)
              );
            }
          }),
          fu = Rn({
            slice3d_: function(t, e, n) {
              var r = An(t, "x", "slice3d");
              return (
                w(3 === r.rank, function() {
                  return (
                    "slice3d expects a rank-3 tensor, but got a rank-" +
                    r.rank +
                    " tensor"
                  );
                }),
                cu(r, e, n)
              );
            }
          }),
          pu = Rn({
            slice4d_: function(t, e, n) {
              var r = An(t, "x", "slice4d");
              return (
                w(4 === r.rank, function() {
                  return (
                    "slice4d expects a rank-4 tensor, but got a rank-" +
                    r.rank +
                    " tensor"
                  );
                }),
                cu(r, e, n)
              );
            }
          });
        function du(t, e, n, r, i) {
          return (
            e.rank < n.rank && (e = e.reshape(sn(e.shape, r))),
            t.rank < n.rank && (t = t.reshape(sn(t.shape, r))),
            {
              $x: function() {
                var r = t.mul(n.equal(e).cast(t.dtype));
                return null == i ? r : r.transpose(i);
              }
            }
          );
        }
        var mu = Rn({
            all_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "all", "bool"),
                i = M(e, r.shape),
                o = i,
                a = cn(o, r.rank);
              null != a && ((r = r.transpose(a)), (o = hn(o.length, r.rank)));
              var s = Rt.runKernel(
                function(t) {
                  return t.all(r, o);
                },
                { $x: r }
              );
              if (n) {
                var u = sn(s.shape, i);
                return s.reshape(u);
              }
              return s;
            }
          }),
          yu = Rn({
            any_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "any", "bool"),
                i = M(e, r.shape),
                o = i,
                a = cn(o, r.rank);
              null != a && ((r = r.transpose(a)), (o = hn(o.length, r.rank)));
              var s = Rt.runKernel(
                function(t) {
                  return t.any(r, o);
                },
                { $x: r }
              );
              if (n) {
                var u = sn(s.shape, i);
                return s.reshape(u);
              }
              return s;
            }
          }),
          gu = Rn({
            argMax_: function(t, e) {
              void 0 === e && (e = 0);
              var n = An(t, "x", "argMax");
              null == e && (e = 0);
              var r = M(e, n.shape),
                i = cn(r, n.rank);
              return (
                null != i && ((n = n.transpose(i)), (r = hn(r.length, n.rank))),
                Rt.runKernel(
                  function(t, e) {
                    var i = t.argMax(n, r[0]);
                    return e([n]), i;
                  },
                  { $x: n },
                  function(t, e) {
                    var n = e[0];
                    return {
                      $x: function() {
                        return tr(n);
                      }
                    };
                  }
                )
              );
            }
          }),
          vu = Rn({
            argMin_: function(t, e) {
              void 0 === e && (e = 0);
              var n = An(t, "x", "argMin");
              null == e && (e = 0);
              var r = M(e, n.shape),
                i = cn(r, n.rank);
              return (
                null != i && ((n = n.transpose(i)), (r = hn(r.length, n.rank))),
                Rt.runKernel(
                  function(t, e) {
                    var i = t.argMin(n, r[0]);
                    return e([n]), i;
                  },
                  { $x: n },
                  function(t, e) {
                    var n = e[0];
                    return {
                      $x: function() {
                        return tr(n);
                      }
                    };
                  }
                )
              );
            }
          }),
          bu = Rn({
            logSumExp_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "logSumExp"),
                i = M(e, r.shape),
                o = r.max(i, !0),
                a = r
                  .sub(o)
                  .exp()
                  .sum(i)
                  .log(),
                s = o.reshape(a.shape).add(a);
              if (n) {
                var u = sn(s.shape, i);
                return s.reshape(u);
              }
              return s;
            }
          }),
          wu = Rn({
            max_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "max"),
                i = r,
                o = M(e, r.shape),
                a = o,
                s = cn(a, r.rank);
              null != s && ((r = r.transpose(s)), (a = hn(a.length, r.rank)));
              var u = Rt.runKernel(
                function(t, e) {
                  var n = t.max(r, a);
                  return e([i, n]), n;
                },
                { $x: r },
                function(t, e) {
                  return du(t, e[1], e[0], o, s);
                }
              );
              if (n) {
                var c = sn(u.shape, o);
                u = u.reshape(c);
              }
              return u;
            }
          }),
          _u = Rn({
            mean_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "mean"),
                i = M(e, r.shape),
                o = T(an(r.shape, i)[1]);
              return Mn(function(t) {
                var r = qn(o);
                return {
                  value: (r.dtype === t.dtype ? t : t.cast(r.dtype))
                    .div(r)
                    .sum(e, n),
                  gradFunc: function(e) {
                    var n = t.shape.slice();
                    return (
                      i.forEach(function(t) {
                        n[t] = 1;
                      }),
                      e
                        .reshape(n)
                        .mul(Qn(t.shape, "float32"))
                        .div(o)
                    );
                  }
                };
              })(r);
            }
          }),
          Su = Rn({
            min_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "min"),
                i = r,
                o = M(e, r.shape),
                a = o,
                s = cn(a, r.rank);
              null != s && ((r = r.transpose(s)), (a = hn(a.length, r.rank)));
              var u = Rt.runKernel(
                function(t, e) {
                  var n = t.min(r, a);
                  return e([i, n]), n;
                },
                { $x: r },
                function(t, e) {
                  return du(t, e[1], e[0], o, s);
                }
              );
              if (n) {
                var c = sn(u.shape, o);
                u = u.reshape(c);
              }
              return u;
            }
          }),
          xu = Rn({
            moments_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = M(e, (t = An(t, "x", "moments")).shape),
                i = t.mean(r, n),
                o = i.shape;
              n || (o = sn(i.shape, r));
              var a = t
                .toFloat()
                .sub(i.reshape(o))
                .square();
              return { mean: i, variance: a.mean(r, n) };
            }
          }),
          Tu = Rn({
            sum_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "sum");
              "bool" === r.dtype && (r = r.toInt());
              var i = M(e, r.shape);
              return Mn(function(t) {
                var e = cn(i, t.rank),
                  r = i,
                  o = t;
                null != e && ((o = t.transpose(e)), (r = hn(r.length, t.rank)));
                var a = Rt.runKernel(
                  function(t) {
                    return t.sum(o, r);
                  },
                  { permutedX: o }
                );
                if (n) {
                  var s = sn(a.shape, i);
                  a = a.reshape(s);
                }
                return {
                  value: a,
                  gradFunc: function(e) {
                    var n = t.shape.slice();
                    return (
                      i.forEach(function(t) {
                        n[t] = 1;
                      }),
                      e.reshape(n).mul(Qn(t.shape, "float32"))
                    );
                  }
                };
              })(r);
            }
          }),
          Au = Rn({
            prod_: function(t, e, n) {
              void 0 === e && (e = null), void 0 === n && (n = !1);
              var r = An(t, "x", "prod");
              "bool" === r.dtype && (r = r.toInt());
              var i = M(e, r.shape),
                o = cn(i, r.rank),
                a = i,
                s = r;
              null != o && ((s = r.transpose(o)), (a = hn(a.length, r.rank)));
              var u = Rt.runKernel(
                function(t) {
                  return t.prod(s, a);
                },
                { permutedX: s }
              );
              if (n) {
                var c = sn(u.shape, i);
                u = u.reshape(c);
              }
              return u;
            }
          }),
          ku = Rn({
            equal_: function(t, e) {
              var n,
                r = An(t, "a", "equal"),
                i = An(e, "b", "equal");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t) {
                    return t.equal(r, i);
                  },
                  { $a: r, $b: i }
                )
              );
            }
          }),
          Eu = Rn({
            equalStrict_: function(t, e) {
              var n = An(t, "a", "equalStrict"),
                r = An(e, "b", "equalStrict");
              return _(n.shape, r.shape, "Error in equalStrict: "), n.equal(r);
            }
          }),
          Nu = Rn({
            greater_: function(t, e) {
              var n,
                r = An(t, "a", "greater"),
                i = An(e, "b", "greater");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t) {
                    return t.greater(r, i);
                  },
                  { $a: r, $b: i }
                )
              );
            }
          }),
          Ou = Rn({
            greaterEqual_: function(t, e) {
              var n,
                r = An(t, "a", "greaterEqual"),
                i = An(e, "b", "greaterEqual");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t, e) {
                    var n = t.greaterEqual(r, i);
                    return e([r, i]), n;
                  },
                  { $a: r, $b: i },
                  function(t, e) {
                    var n = e[0],
                      r = e[1];
                    return {
                      $a: function() {
                        return tr(n);
                      },
                      $b: function() {
                        return tr(r);
                      }
                    };
                  }
                )
              );
            }
          }),
          Cu = Rn({
            greaterEqualStrict_: function(t, e) {
              var n = An(t, "a", "greaterEqualStrict"),
                r = An(e, "b", "greaterEqualStrict");
              return (
                _(n.shape, r.shape, "Error in greaterEqualStrict: "),
                n.greaterEqual(r)
              );
            }
          }),
          Iu = Rn({
            greaterStrict_: function(t, e) {
              var n = An(t, "a", "greaterStrict"),
                r = An(e, "b", "greaterStrict");
              return (
                _(n.shape, r.shape, "Error in greaterStrict: "), n.greater(r)
              );
            }
          }),
          Mu = Rn({
            less_: function(t, e) {
              var n,
                r = An(t, "a", "less"),
                i = An(e, "b", "less");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t) {
                    return t.less(r, i);
                  },
                  { $a: r, $b: i }
                )
              );
            }
          }),
          Pu = Rn({
            lessEqual_: function(t, e) {
              var n,
                r = An(t, "a", "lessEqual"),
                i = An(e, "b", "lessEqual");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t) {
                    return t.lessEqual(r, i);
                  },
                  { $a: r, $b: i }
                )
              );
            }
          }),
          Ru = Rn({
            lessEqualStrict_: function(t, e) {
              var n = An(t, "a", "lessEqualStrict"),
                r = An(e, "b", "lessEqualStrict");
              return (
                _(n.shape, r.shape, "Error in lessEqualStrict: "),
                n.lessEqual(r)
              );
            }
          }),
          Du = Rn({
            lessStrict_: function(t, e) {
              var n = An(t, "a", "lessStrict"),
                r = An(e, "b", "lessStrict");
              return _(n.shape, r.shape, "Error in lessStrict: "), n.less(r);
            }
          }),
          Fu = Rn({
            notEqual_: function(t, e) {
              var n,
                r = An(t, "a", "notEqual"),
                i = An(e, "b", "notEqual");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t) {
                    return t.notEqual(r, i);
                  },
                  { $a: r, $b: i }
                )
              );
            }
          }),
          zu = Rn({
            notEqualStrict_: function(t, e) {
              var n = An(t, "a", "notEqualStrict"),
                r = An(e, "b", "notEqualStrict");
              return (
                _(n.shape, r.shape, "Error in notEqualStrict: "), n.notEqual(r)
              );
            }
          }),
          Lu = Rn({
            add_: function(t, e) {
              var n,
                r = An(t, "a", "add"),
                i = An(e, "b", "add");
              (n = Et(r, i)), (r = n[0]), (i = n[1]);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t) {
                  return t.add(r, i);
                },
                { $a: r, $b: i },
                function(t) {
                  return {
                    $a: function() {
                      var e = t,
                        n = ir(r.shape, o);
                      return n.length > 0 && (e = e.sum(n)), e.reshape(r.shape);
                    },
                    $b: function() {
                      var e = t,
                        n = ir(i.shape, o);
                      return n.length > 0 && (e = e.sum(n)), e.reshape(i.shape);
                    }
                  };
                }
              );
            }
          }),
          ju = Rn({
            addN_: function(t) {
              w(Array.isArray(t), function() {
                return "The argument passed to tf.addN() must be a list of tensors";
              }),
                w(t.length >= 1, function() {
                  return (
                    "Must pass at least one tensor to tf.addN(), but got " +
                    t.length
                  );
                });
              var e = t.map(function(t, e) {
                  return An(t, "tensors" + e, "addN");
                }),
                n = e[0];
              e.forEach(function(t) {
                if (t.dtype !== n.dtype)
                  throw new Error(
                    "All tensors passed to tf.addN() must have the same dtype"
                  );
              }),
                e.forEach(function(t) {
                  if (!A(t.shape, n.shape))
                    throw new Error(
                      "All tensors passed to tf.addN() must have the same shape"
                    );
                });
              var r = e;
              return Rt.runKernel(
                function(t) {
                  return t.addN(e);
                },
                r,
                function(t) {
                  var n = {};
                  return (
                    e.forEach(function(e, r) {
                      n[r] = function() {
                        return t.clone();
                      };
                    }),
                    n
                  );
                }
              );
            }
          }),
          Bu = Rn({
            addStrict_: function(t, e) {
              var n = An(t, "a", "addStrict"),
                r = An(e, "b", "addStrict");
              return _(n.shape, r.shape, "Error in addStrict: "), n.add(r);
            }
          }),
          qu = Rn({
            atan2_: function(t, e) {
              var n,
                r = An(t, "a", "atan2"),
                i = An(e, "b", "atan2");
              (n = Et(r, i)), (r = n[0]), (i = n[1]);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t, e) {
                  var n = t.atan2(r, i);
                  return e([r, i]), n;
                },
                { $a: r, $b: i },
                function(t, e) {
                  var n = e[0],
                    r = e[1];
                  return {
                    $a: function() {
                      var e = Lu(n.square(), r.square()),
                        i = t.mul(r.div(e)),
                        a = ir(n.shape, o);
                      return a.length > 0 && (i = i.sum(a)), i.reshape(n.shape);
                    },
                    $b: function() {
                      var e = Lu(n.square(), r.square()),
                        i = cs(t.mul(n.div(e))),
                        a = ir(r.shape, o);
                      return a.length > 0 && (i = i.sum(a)), i.reshape(r.shape);
                    }
                  };
                }
              );
            }
          }),
          Uu = Rn({
            div_: function(t, e) {
              var n,
                r = An(t, "a", "div"),
                i = An(e, "b", "div");
              if (
                ((n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                "int32" === r.dtype && "int32" === i.dtype)
              )
                return Wu(r, i);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t, e) {
                  var n = t.realDivide(r, i);
                  return e([r, i]), n;
                },
                { $a: r, $b: i },
                function(t, e) {
                  var n = e[0],
                    r = e[1];
                  return {
                    $a: function() {
                      var e = t.div(r.toFloat()),
                        i = ir(n.shape, o);
                      return i.length > 0 ? e.sum(i).reshape(n.shape) : e;
                    },
                    $b: function() {
                      var e = t.mul(n.toFloat()),
                        i = ir(r.shape, o);
                      i.length > 0 && (e = e.sum(i).reshape(r.shape));
                      var a = r.square();
                      return e.div(a.toFloat()).neg();
                    }
                  };
                }
              );
            }
          }),
          Vu = Rn({
            divStrict_: function(t, e) {
              var n = An(t, "a", "div"),
                r = An(e, "b", "div");
              return _(n.shape, r.shape, "Error in divideStrict: "), n.div(r);
            }
          }),
          Wu = Rn({
            floorDiv_: function(t, e) {
              var n,
                r = An(t, "a", "floorDiv"),
                i = An(e, "b", "floorDiv");
              (n = Et(r, i)), (r = n[0]), (i = n[1]);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t, e) {
                  var n = t.floorDiv(r, i);
                  return e([r, i]), n;
                },
                { $a: r, $b: i },
                function(t, e) {
                  var n = e[0],
                    r = e[1];
                  return {
                    $a: function() {
                      var e = t.div(r.toFloat()),
                        i = ir(n.shape, o);
                      return i.length > 0 ? e.sum(i).reshape(n.shape) : e;
                    },
                    $b: function() {
                      var e = t.mul(n.toFloat()),
                        i = ir(r.shape, o);
                      i.length > 0 && (e = e.sum(i).reshape(r.shape));
                      var a = r.square();
                      return e.div(a.toFloat()).neg();
                    }
                  };
                }
              );
            }
          }),
          Gu = Rn({
            maximum_: function(t, e) {
              var n,
                r = An(t, "a", "maximum"),
                i = An(e, "b", "maximum");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                "bool" === r.dtype && ((r = r.toInt()), (i = i.toInt())),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t, e) {
                    var n = t.maximum(r, i);
                    return e([r, i]), n;
                  },
                  { $a: r, $b: i },
                  function(t, e) {
                    var n = e[0],
                      r = e[1];
                    return {
                      $a: function() {
                        return t.mul(n.greaterEqual(r).toFloat());
                      },
                      $b: function() {
                        return t.mul(n.less(r).toFloat());
                      }
                    };
                  }
                )
              );
            }
          }),
          Hu = Rn({
            maximumStrict_: function(t, e) {
              var n = An(t, "a", "maximumStrict"),
                r = An(e, "b", "maximumStrict");
              return (
                _(n.shape, r.shape, "Error in maximumStrict: "), n.maximum(r)
              );
            }
          }),
          Ku = Rn({
            minimum_: function(t, e) {
              var n,
                r = An(t, "a", "minimum"),
                i = An(e, "b", "minimum");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                "bool" === r.dtype && ((r = r.toInt()), (i = i.toInt())),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t, e) {
                    var n = t.minimum(r, i);
                    return e([r, i]), n;
                  },
                  { $a: r, $b: i },
                  function(t, e) {
                    var n = e[0],
                      r = e[1];
                    return {
                      $a: function() {
                        return t.mul(n.lessEqual(r).toFloat());
                      },
                      $b: function() {
                        return t.mul(n.greater(r).toFloat());
                      }
                    };
                  }
                )
              );
            }
          }),
          Qu = Rn({
            minimumStrict_: function(t, e) {
              var n = An(t, "a", "minimumStrict"),
                r = An(e, "b", "minimumStrict");
              return (
                _(n.shape, r.shape, "Error in minimumStrict: "), n.minimum(r)
              );
            }
          }),
          Xu = Rn({
            mod_: function(t, e) {
              var n,
                r = An(t, "a", "mod"),
                i = An(e, "b", "mod");
              (n = Et(r, i)), (r = n[0]), (i = n[1]);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t, e) {
                  var n = t.mod(r, i);
                  return e([r, i]), n;
                },
                { $a: r, $b: i },
                function(t, e) {
                  var n = e[0],
                    r = e[1];
                  return {
                    $a: function() {
                      var e = ir(n.shape, o);
                      return e.length > 0 ? t.sum(e).reshape(n.shape) : t;
                    },
                    $b: function() {
                      var e = t.mul(
                          n
                            .div(r)
                            .floor()
                            .neg()
                        ),
                        i = ir(r.shape, o);
                      return i.length > 0 ? e.sum(i).reshape(r.shape) : e;
                    }
                  };
                }
              );
            }
          }),
          $u = Rn({
            modStrict_: function(t, e) {
              var n = An(t, "a", "modStrict"),
                r = An(e, "b", "modStrict");
              return _(n.shape, r.shape, "Error in modStrict: "), n.mod(r);
            }
          }),
          Yu = Rn({
            mul_: function(t, e) {
              var n,
                r = An(t, "a", "mul"),
                i = An(e, "b", "mul");
              (n = Et(r, i)), (r = n[0]), (i = n[1]);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t, e) {
                  var n = t.multiply(r, i);
                  return e([r, i]), n;
                },
                { $a: r, $b: i },
                function(t, e) {
                  var n = e[0],
                    r = e[1];
                  return {
                    $a: function() {
                      var e = t.mul(r.toFloat()),
                        i = ir(n.shape, o);
                      return i.length > 0 ? e.sum(i).reshape(n.shape) : e;
                    },
                    $b: function() {
                      var e = t.mul(n.toFloat()),
                        i = ir(r.shape, o);
                      return i.length > 0 ? e.sum(i).reshape(r.shape) : e;
                    }
                  };
                }
              );
            }
          }),
          Ju = Rn({
            mulStrict_: function(t, e) {
              var n = An(t, "a", "mul"),
                r = An(e, "b", "mul");
              return _(n.shape, r.shape, "Error in multiplyStrict: "), n.mul(r);
            }
          }),
          Zu = Rn({
            pow_: function(t, e) {
              var n = An(t, "base", "pow"),
                r = An(e, "exp", "pow"),
                i = or(n.shape, r.shape);
              return (
                (t = n.cast(At(n.dtype, r.dtype))),
                (e = r.cast(At(n.dtype, r.dtype))),
                Rt.runKernel(
                  function(t, e) {
                    var i = t.pow(n, r);
                    return e([n, r, i]), i;
                  },
                  { $base: n, $exp: r },
                  function(t, e) {
                    var n = e[0],
                      r = e[1],
                      o = e[2];
                    return {
                      $base: function() {
                        var e = r.toFloat(),
                          o = t.mul(e.mul(n.pow(e.sub(qn(1))))),
                          a = ir(n.shape, i);
                        return (
                          a.length > 0 && (o = o.sum(a)), o.reshape(n.shape)
                        );
                      },
                      $exp: function() {
                        var e = n.greater(0),
                          a = n.log().where(e, tr(n)),
                          s = t.mul(o.mul(a)),
                          u = ir(r.shape, i);
                        return (
                          u.length > 0 && (s = s.sum(u)), s.reshape(r.shape)
                        );
                      }
                    };
                  }
                )
              );
            }
          }),
          tc = Rn({
            powStrict_: function(t, e) {
              return _(t.shape, e.shape, "Error in powStrict: "), t.pow(e);
            }
          }),
          ec = Rn({
            squaredDifference_: function(t, e) {
              var n,
                r = An(t, "a", "squaredDifference"),
                i = An(e, "b", "squaredDifference");
              return (
                (n = Et(r, i)),
                (r = n[0]),
                (i = n[1]),
                or(r.shape, i.shape),
                Rt.runKernel(
                  function(t, e) {
                    var n = t.squaredDifference(r, i);
                    return e([r, i]), n;
                  },
                  { $a: r, $b: i },
                  function(t, e) {
                    var n = e[0],
                      r = e[1],
                      i = qn(2);
                    return {
                      $a: function() {
                        return t.mul(n.sub(r).mul(i));
                      },
                      $b: function() {
                        return t.mul(r.sub(n).mul(i));
                      }
                    };
                  }
                )
              );
            }
          }),
          nc = Rn({
            squaredDifferenceStrict_: function(t, e) {
              var n = An(t, "a", "squaredDifferenceStrict"),
                r = An(e, "b", "squaredDifferenceStrict");
              return (
                _(n.shape, r.shape, "Error in squaredDifferenceStrict: "),
                n.squaredDifference(r)
              );
            }
          }),
          rc = Rn({
            sub_: function(t, e) {
              var n,
                r = An(t, "a", "sub"),
                i = An(e, "b", "sub");
              (n = Et(r, i)), (r = n[0]), (i = n[1]);
              var o = or(r.shape, i.shape);
              return Rt.runKernel(
                function(t) {
                  return t.subtract(r, i);
                },
                { $a: r, $b: i },
                function(t) {
                  return {
                    $a: function() {
                      var e = t,
                        n = ir(r.shape, o);
                      return n.length > 0 && (e = e.sum(n)), e.reshape(r.shape);
                    },
                    $b: function() {
                      var e = t,
                        n = ir(i.shape, o);
                      return (
                        n.length > 0 && (e = e.sum(n)), e.neg().reshape(i.shape)
                      );
                    }
                  };
                }
              );
            }
          }),
          ic = Rn({
            subStrict_: function(t, e) {
              var n = An(t, "a", "subStrict"),
                r = An(e, "b", "subStrict");
              return _(n.shape, r.shape, "Error in subStrict: "), n.sub(r);
            }
          }),
          oc = Rn({
            logicalAnd_: function(t, e) {
              var n = An(t, "a", "logicalAnd", "bool"),
                r = An(e, "b", "logicalAnd", "bool");
              return (
                or(n.shape, r.shape),
                Rt.runKernel(
                  function(t) {
                    return t.logicalAnd(n, r);
                  },
                  { $a: n, $b: r }
                )
              );
            }
          }),
          ac = Rn({
            logicalNot_: function(t) {
              var e = An(t, "x", "logicalNot", "bool");
              return Rt.runKernel(
                function(t) {
                  return t.logicalNot(e);
                },
                { $x: e }
              );
            }
          }),
          sc = Rn({
            logicalOr_: function(t, e) {
              var n = An(t, "a", "logicalOr", "bool"),
                r = An(e, "b", "logicalOr", "bool");
              return (
                or(n.shape, r.shape),
                Rt.runKernel(
                  function(t) {
                    return t.logicalOr(n, r);
                  },
                  { $a: n, $b: r }
                )
              );
            }
          }),
          uc = Rn({
            logicalXor_: function(t, e) {
              var n = An(t, "a", "logicalXor", "bool"),
                r = An(e, "b", "logicalXor", "bool");
              return (
                or(n.shape, r.shape), sc(t, e).logicalAnd(oc(t, e).logicalNot())
              );
            }
          }),
          cc = Rn({
            where_: function(t, e, n) {
              var r = An(e, "a", "where"),
                i = An(n, "b", "where"),
                o = An(t, "condition", "where", "bool");
              return (
                _(r.shape, i.shape, "Error in where: "),
                1 === o.rank
                  ? w(o.shape[0] === r.shape[0], function() {
                      return "The first dimension of `a` must match the size of `condition`.";
                    })
                  : _(o.shape, i.shape, "Error in where: "),
                Rt.runKernel(
                  function(t, e) {
                    var n = t.select(o, r, i);
                    return e([o]), n;
                  },
                  { $condition: o, $a: r, $b: i },
                  function(t, e) {
                    var n = e[0];
                    return {
                      $condition: function() {
                        return tr(n).toFloat();
                      },
                      $a: function() {
                        return t.mul(n.cast(t.dtype));
                      },
                      $b: function() {
                        return t.mul(n.logicalNot().cast(t.dtype));
                      }
                    };
                  }
                )
              );
            }
          }),
          lc = function(t) {
            return c(this, void 0, void 0, function() {
              var e, n, r;
              return l(this, function(i) {
                switch (i.label) {
                  case 0:
                    return [
                      4,
                      (e = An(t, "condition", "whereAsync", "bool")).data()
                    ];
                  case 1:
                    return (
                      (n = i.sent()),
                      (r = vi(e.shape, n)),
                      t !== e && e.dispose(),
                      [2, r]
                    );
                }
              });
            });
          },
          hc = Rn({
            elu_: function(t) {
              var e = An(t, "x", "elu");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.elu(e);
                  return n([r]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      return Rt.runKernel(
                        function(e) {
                          return e.eluDer(t, n);
                        },
                        { dy: t, y: n }
                      );
                    }
                  };
                }
              );
            }
          }),
          fc = Rn({
            leakyRelu_: function(t, e) {
              void 0 === e && (e = 0.2);
              var n = An(t, "x", "leakyRelu");
              return Gu(qn(e).mul(n), n);
            }
          }),
          pc = Rn({
            prelu_: function(t, e) {
              var n = An(t, "x", "prelu"),
                r = An(e, "alpha", "prelu");
              return Rt.runKernel(
                function(t, e) {
                  var i = t.prelu(n, r);
                  return e([n, r]), i;
                },
                { $x: n, $alpha: r },
                function(t, e) {
                  var n = e[0],
                    r = e[1],
                    i = n.greater(0);
                  return {
                    $x: function() {
                      return cc(i, t, t.mul(r));
                    },
                    $alpha: function() {
                      var e = cc(i, tr(t), t.mul(n)),
                        o = ir(r.shape, t.shape);
                      return o.length > 0 && (e = e.sum(o)), e.reshape(r.shape);
                    }
                  };
                }
              );
            }
          }),
          dc = Rn({
            relu_: function(t) {
              var e = An(t, "x", "relu");
              return "bool" === e.dtype
                ? e.toInt()
                : Rt.runKernel(
                    function(t, n) {
                      var r = t.relu(e);
                      return n([e]), r;
                    },
                    { $x: e },
                    function(t, e) {
                      var n = e[0];
                      return {
                        $x: function() {
                          return t.mulStrict(n.step().toFloat());
                        }
                      };
                    }
                  );
            }
          }),
          mc = Rn({
            selu_: function(t) {
              var e = An(t, "x", "selu");
              return Rt.runKernel(
                function(t, n) {
                  var r = t.selu(e);
                  return n([e]), r;
                },
                { $x: e },
                function(t, e) {
                  var n = e[0];
                  return {
                    $x: function() {
                      var e = n.greater(qn(0)),
                        r = qn(Pa),
                        i = qn(Ra),
                        o = t.mul(i),
                        a = t.mul(r).mul(n.toFloat().exp());
                      return cc(e, o, a);
                    }
                  };
                }
              );
            }
          }),
          yc = Rn({
            transpose_: function(t, e) {
              var n = An(t, "x", "transpose");
              return (
                null == e &&
                  (e = n.shape
                    .map(function(t, e) {
                      return e;
                    })
                    .reverse()),
                w(n.rank === e.length, function() {
                  return (
                    "Error in transpose: rank of input " +
                    n.rank +
                    " must match length of perm " +
                    e +
                    "."
                  );
                }),
                e.forEach(function(t) {
                  w(t >= 0 && t < n.rank, function() {
                    return (
                      "All entries in 'perm' must be between 0 and " +
                      (n.rank - 1) +
                      " but got " +
                      e
                    );
                  });
                }),
                n.rank <= 1
                  ? n.clone()
                  : Rt.runKernel(
                      function(t) {
                        return t.transpose(n, e);
                      },
                      { $x: n },
                      function(t) {
                        var n = ln(e);
                        return {
                          $x: function() {
                            return t.transpose(n);
                          }
                        };
                      }
                    )
              );
            }
          }),
          gc = Rn({
            localResponseNormalization_: function(t, e, n, r, i) {
              void 0 === e && (e = 5),
                void 0 === n && (n = 1),
                void 0 === r && (r = 1),
                void 0 === i && (i = 0.5);
              var o = An(t, "x", "localResponseNormalization");
              w(4 === o.rank || 3 === o.rank, function() {
                return (
                  "Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank " +
                  o.rank +
                  "."
                );
              }),
                w(k(e), function() {
                  return (
                    "Error in localResponseNormalization: depthRadius must be an integer but got depthRadius " +
                    e +
                    "."
                  );
                });
              var a = o,
                s = !1;
              3 === o.rank &&
                ((s = !0), (a = o.as4D(1, o.shape[0], o.shape[1], o.shape[2])));
              var u = Rt.runKernel(
                function(t, o) {
                  var s = t.localResponseNormalization4D(a, e, n, r, i);
                  return o([a, s]), s;
                },
                { x4D: a },
                function(t, o) {
                  var a = o[0],
                    s = o[1];
                  return {
                    x4D: function() {
                      return Rt.runKernel(function(o) {
                        return o.LRNGrad(t, a, s, e, n, r, i);
                      }, {});
                    }
                  };
                }
              );
              return s ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;
            }
          }),
          vc = Rn({
            norm_: function(t, e, n, r) {
              void 0 === e && (e = "euclidean"),
                void 0 === n && (n = null),
                void 0 === r && (r = !1);
              var i = (function t(e, n, r) {
                  if ((void 0 === r && (r = null), 0 === e.rank))
                    return e.abs();
                  if (1 !== e.rank && null === r)
                    return t(e.reshape([-1]), n, r);
                  if (
                    1 === e.rank ||
                    "number" == typeof r ||
                    (Array.isArray(r) && 1 === r.length)
                  ) {
                    if (1 === n) return e.abs().sum(r);
                    if (n === 1 / 0) return e.abs().max(r);
                    if (n === -1 / 0) return e.abs().min(r);
                    if ("euclidean" === n || 2 === n)
                      return e
                        .abs()
                        .pow(qn(2, "int32"))
                        .sum(r)
                        .sqrt();
                    throw new Error("Error in norm: invalid ord value: " + n);
                  }
                  if (Array.isArray(r) && 2 === r.length) {
                    if (1 === n)
                      return e
                        .abs()
                        .sum(r[0])
                        .max(r[1] - 1);
                    if (n === 1 / 0)
                      return e
                        .abs()
                        .sum(r[1])
                        .max(r[0]);
                    if (n === -1 / 0)
                      return e
                        .abs()
                        .sum(r[1])
                        .min(r[0]);
                    if ("fro" === n || "euclidean" === n)
                      return e
                        .square()
                        .sum(r)
                        .sqrt();
                    throw new Error("Error in norm: invalid ord value: " + n);
                  }
                  throw new Error("Error in norm: invalid axis: " + r);
                })((t = An(t, "x", "norm")), e, n),
                o = i.shape;
              if (r) {
                var a = M(n, t.shape);
                o = sn(i.shape, a);
              }
              return i.reshape(o);
            }
          });
        function bc(t, e) {
          for (var n = [], r = t; r < e; ++r) n.push(r);
          return n;
        }
        function wc(t) {
          for (var e = [], n = 0; n < t.length; ++n)
            for (var r = 0; r < t[n].length; ++r) e.push(t[n][r]);
          return e;
        }
        var _c = Rn({
            gather_: function(t, e, n) {
              void 0 === n && (n = 0);
              var r = An(t, "x", "gather"),
                i = An(e, "indices", "gather", "int32");
              n = M(n, r.shape)[0];
              var o = (function(t, e, n) {
                for (
                  var r = t.shape[n], i = [], o = 1, a = 1, s = 0;
                  s < n;
                  s++
                )
                  i.push(t.shape[s]), (o *= t.shape[s]);
                for (s = 0; s < e.rank; s++) i.push(e.shape[s]);
                for (s = n + 1; s < t.rank; s++)
                  i.push(t.shape[s]), (a *= t.shape[s]);
                return {
                  batchSize: o,
                  sliceSize: a,
                  dimSize: r,
                  outputShape: i
                };
              })(r, i, n);
              return Rt.runKernel(
                function(t, e) {
                  var o = t.gather(r, i.flatten(), n);
                  return e([i]), o;
                },
                { $x: r },
                function(t, e) {
                  var i = e[0];
                  return {
                    $x: function() {
                      var e = r.shape,
                        o = i.size,
                        a = e.slice(0, n),
                        s = a.length,
                        u = e.slice(n, e.length).slice(1),
                        c = u.length,
                        l = bc(0, s),
                        h = bc(s + 1, s + 1 + c),
                        f = wc([a, [o], u]),
                        p = t.reshape(f),
                        d = i.reshape([o]),
                        m = wc([[s], l, h]),
                        y = p.transpose(m),
                        g = Sc(y, d, r.shape[n]),
                        v = ln(m);
                      return g.transpose(v);
                    }
                  };
                }
              ).reshape(o.outputShape);
            }
          }),
          Sc = Rn({
            unsortedSegmentSum_: function(t, e, n) {
              var r = An(t, "x", "unsortedSegmentSum"),
                i = An(e, "segmentIds", "unsortedSegmentSum", "int32");
              return (
                w(k(n), function() {
                  return "numSegments must be of dtype int";
                }),
                Rt.runKernel(
                  function(t, e) {
                    var o = t.unsortedSegmentSum(r, i, n);
                    return e([i]), o;
                  },
                  { $x: r },
                  function(t, e) {
                    var n = e[0];
                    return {
                      $x: function() {
                        return (function(t, e) {
                          for (
                            var n = Gu(e, tr(e)),
                              r = _c(t, n),
                              i = Ou(e, qn(0, "int32")),
                              o = r.rank - i.rank,
                              a = 0;
                            a < o;
                            ++a
                          )
                            i = Jr(i, a + 1);
                          i = oc(i, Qn(r.shape, "bool"));
                          var s = tr(r);
                          return cc(i, r, s);
                        })(t, n);
                      }
                    };
                  }
                )
              );
            }
          }),
          xc = Rn({
            basicLSTMCell_: function(t, e, n, r, i, o) {
              var a = An(t, "forgetBias", "basicLSTMCell"),
                s = An(e, "lstmKernel", "basicLSTMCell"),
                u = An(n, "lstmBias", "basicLSTMCell"),
                c = An(r, "data", "basicLSTMCell"),
                l = An(i, "c", "basicLSTMCell"),
                h = An(o, "h", "basicLSTMCell"),
                f = c
                  .concat(h, 1)
                  .matMul(s)
                  .add(u),
                p = f.shape[0],
                d = f.shape[1] / 4,
                m = [p, d],
                y = f.slice([0, 0], m),
                g = f.slice([0, d], m),
                v = f.slice([0, 2 * d], m),
                b = f.slice([0, 3 * d], m),
                w = y
                  .sigmoid()
                  .mulStrict(g.tanh())
                  .addStrict(l.mulStrict(a.add(v).sigmoid())),
                _ = w.tanh().mulStrict(b.sigmoid());
              return [w, _];
            }
          }),
          Tc = Rn({
            multiRNNCell_: function(t, e, n, r) {
              for (
                var i = An(e, "data", "multiRNNCell"),
                  o = kn(n, "c", "multiRNNCell"),
                  a = kn(r, "h", "multiRNNCell"),
                  s = i,
                  u = [],
                  c = 0;
                c < t.length;
                c++
              ) {
                var l = t[c](s, o[c], a[c]);
                u.push(l[0]), u.push(l[1]), (s = l[1]);
              }
              var h = [],
                f = [];
              for (c = 0; c < u.length; c += 2) h.push(u[c]), f.push(u[c + 1]);
              return [h, f];
            }
          }),
          Ac = Rn({
            movingAverage_: function(t, e, n, r, i) {
              void 0 === i && (i = !0);
              var o = An(t, "v", "movingAverage"),
                a = An(e, "x", "movingAverage"),
                s = An(n, "decay", "movingAverage");
              Nt(o, a),
                w(A(o.shape, a.shape), function() {
                  return "Shape mismatch in v and x";
                });
              var u = qn(1),
                c = u.sub(s),
                l = a.sub(o).mul(c);
              if (i) {
                w(null != r, function() {
                  return "When using zeroDebias: true, step is required.";
                });
                var h = An(r, "step", "movingAverage");
                l = l.div(u.sub(Zu(s, h)));
              }
              return o.add(l);
            }
          }),
          kc = Rn({
            stridedSlice_: function(t, e, n, r, i, o, a, s, u) {
              if (
                (void 0 === i && (i = 0),
                void 0 === o && (o = 0),
                void 0 === a && (a = 0),
                void 0 === s && (s = 0),
                void 0 === u && (u = 0),
                0 !== a)
              )
                throw new Error("ellipsis mask is not yet supported");
              if (0 !== s)
                throw new Error("new axis mask is not yet supported");
              var c = An(t, "x", "stridedSlice");
              if (
                r.every(function(t) {
                  return 1 === t;
                })
              ) {
                var l = vn(c.shape, e, n, r, i, o, a, s, u),
                  h = l[0],
                  f = l[1],
                  p = l[2],
                  d = f.filter(function(t, e) {
                    return -1 === p.indexOf(e);
                  });
                return cu(c, h, f).reshape(d);
              }
              return Rt.runKernel(
                function(t) {
                  return t.stridedSlice(c, e, n, r, i, o, a, s, u);
                },
                { $x: c }
              );
            }
          }),
          Ec = Rn({
            topk_: function(t, e, n) {
              void 0 === e && (e = 1), void 0 === n && (n = !0);
              var r = An(t, "x", "topk");
              if (0 === r.rank)
                throw new Error(
                  "topk() expects the input to be of rank 1 or higher"
                );
              var i = r.shape[r.shape.length - 1];
              if (e > i)
                throw new Error(
                  "'k' passed to topk() must be <= the last dimension (" +
                    i +
                    ") but got " +
                    e
                );
              var o = Rt.runKernel(
                function(t) {
                  return t.topk(r, e, n);
                },
                { $x: r }
              );
              return { values: o[0], indices: o[1] };
            }
          }),
          Nc = Rn({
            scatterND_: function(t, e, n) {
              var r = An(t, "indices", "scatterND", "int32"),
                i = An(e, "updates", "scatterND");
              return (
                (function(t, e, n) {
                  if (e.rank < 1)
                    throw new Error(
                      "tf.scatterND() expects the indices to be rank 1 or higher, but the rank was " +
                        e.rank +
                        "."
                    );
                  if (t.rank < 1)
                    throw new Error(
                      "tf.scatterND() expects the updates to be rank 1 or higher, but the rank was " +
                        t.rank +
                        "."
                    );
                  if ("int32" !== e.dtype)
                    throw new Error(
                      "The dtype of 'indices' should be int32, but got dtype: " +
                        e.dtype
                    );
                  if (n.length < 1)
                    throw new Error(
                      "Output rank must be greater or equal to 1, but got shape: " +
                        n
                    );
                  if (0 === n.length) {
                    if (0 === e.size)
                      throw new Error(
                        "Indices specified for empty output. indices shape: " +
                          e.shape
                      );
                    if (0 === t.size)
                      throw new Error(
                        "Updates specified for empty output. updates shape: " +
                          t.shape
                      );
                  }
                  !(function(t, e, n) {
                    var r = e.rank > 1 ? e.shape[e.rank - 1] : 1,
                      i = e.rank > 1 ? e.rank - 1 : 1,
                      o =
                        "Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: " +
                        n.shape +
                        ", indices.shape: " +
                        e.shape +
                        ", shape: " +
                        t +
                        ", sliceDim: " +
                        r +
                        ", and batchDim: " +
                        i +
                        ".";
                    if (n.rank < i)
                      throw new Error(o + " update.rank < " + i + ". ");
                    if (t.length < r + (n.rank - i))
                      throw new Error(
                        o + " Output shape length < " + (r + (n.rank - i))
                      );
                    if (n.rank !== i + t.length - r)
                      throw new Error(
                        o + " update.rank != " + (i + t.length - r)
                      );
                    for (var a = 0; a < i; ++a)
                      if (n.shape[a] !== e.shape[a])
                        throw new Error(
                          o +
                            " updates.shape[" +
                            a +
                            "] (" +
                            n.shape[a] +
                            ") != indices.shape[" +
                            a +
                            "] (" +
                            e.shape[a] +
                            ")."
                        );
                    for (a = 0; a < n.rank - i; ++a)
                      if (n.shape[a + i] !== t[a + r])
                        throw new Error(
                          o +
                            " updates.shape[" +
                            (a + i) +
                            "] (" +
                            n.shape[a + i] +
                            ") != shape[" +
                            (a + i) +
                            "] (" +
                            t[a + i] +
                            ")"
                        );
                  })(n, e, t);
                })(i, r, n),
                Rt.runKernel(
                  function(t) {
                    return t.scatterND(r, i, n);
                  },
                  { $indices: r, $updates: i }
                )
              );
            }
          }),
          Oc = Rn({
            fft_: function(t) {
              w("complex64" === t.dtype, function() {
                return (
                  "The dtype for tf.spectral.fft() must be complex64 but got " +
                  t.dtype +
                  "."
                );
              });
              var e = t.shape[t.shape.length - 1],
                n = t.size / e,
                r = t.as2D(n, e);
              return Rt.runKernel(
                function(t) {
                  return t.fft(r);
                },
                { input: t }
              ).reshape(t.shape);
            }
          }),
          Cc = Rn({
            ifft_: function(t) {
              w("complex64" === t.dtype, function() {
                return (
                  "The dtype for tf.spectral.ifft() must be complex64 but got " +
                  t.dtype +
                  "."
                );
              });
              var e = t.shape[t.shape.length - 1],
                n = t.size / e,
                r = t.as2D(n, e);
              return Rt.runKernel(
                function(t) {
                  return t.ifft(r);
                },
                { input: t }
              ).reshape(t.shape);
            }
          }),
          Ic = Rn({
            rfft_: function(t, e) {
              w("float32" === t.dtype, function() {
                return (
                  "The dtype for rfft() must be real value but got " + t.dtype
                );
              });
              var n,
                r = t.shape[t.shape.length - 1],
                i = t.size / r;
              if (null != e && e < r) {
                var o = t.shape.map(function(t) {
                    return 0;
                  }),
                  a = t.shape.map(function(t) {
                    return t;
                  });
                (a[t.shape.length - 1] = e), (n = t.slice(o, a)), (r = e);
              } else if (null != e && e > r) {
                var s = t.shape.map(function(t) {
                  return t;
                });
                (s[t.shape.length - 1] = e - r),
                  (n = t.concat(Xn(s), t.shape.length - 1)),
                  (r = e);
              } else n = t;
              var u = n.zerosLike(),
                c = zn(n, u).as2D(i, r),
                l = Oc(c),
                h = Math.floor(r / 2) + 1,
                f = Ln(l),
                p = jn(l),
                d = f.split([h, r - h], f.shape.length - 1),
                m = p.split([h, r - h], p.shape.length - 1),
                y = n.shape.slice();
              return (y[n.shape.length - 1] = h), zn(d[0], m[0]).reshape(y);
            }
          }),
          Mc = Rn({
            irfft_: function(t) {
              var e = t.shape[t.shape.length - 1],
                n = t.size / e;
              if (e <= 2) {
                var r = t.as2D(n, e),
                  i = Cc(r);
                return Ln(i);
              }
              var o = [n, 2 * (e - 1)],
                a = Ln(t).as2D(n, e),
                s = jn(t).as2D(n, e),
                u = a.slice([0, 1], [n, e - 2]).reverse(1),
                c = s
                  .slice([0, 1], [n, e - 2])
                  .reverse(1)
                  .mul(qn(-1)),
                l = a.concat(u, 1),
                h = s.concat(c, 1);
              return (r = zn(l, h).as2D(o[0], o[1])), (i = Cc(r)), Ln(i);
            }
          }),
          Pc = Object.freeze({ fft: Oc, ifft: Cc, rfft: Ic, irfft: Mc }),
          Rc = Rn({
            sparseToDense_: function(t, e, n, r) {
              void 0 === r && (r = 0);
              var i = An(t, "sparseIndices", "sparseToDense", "int32"),
                o = An(e, "sparseValues", "sparseToDense"),
                a = An(r, "defaultValue", "sparseToDense", o.dtype);
              return (
                (function(t, e, n, r) {
                  if ("int32" !== t.dtype)
                    throw new Error(
                      "tf.sparseToDense() expects the indices to be int32 type, but the dtype was " +
                        t.dtype +
                        "."
                    );
                  if (t.rank > 2)
                    throw new Error(
                      "sparseIndices should be a scalar, vector, or matrix, but got shape " +
                        t.shape +
                        "."
                    );
                  var i = t.rank > 0 ? t.shape[0] : 1,
                    o = t.rank > 1 ? t.shape[1] : 1;
                  if (n.length !== o)
                    throw new Error(
                      "outputShape has incorrect number of elements:, " +
                        n.length +
                        ", should be: " +
                        o +
                        "."
                    );
                  var a = e.size;
                  if (0 !== e.rank && (1 !== e.rank || a !== i))
                    throw new Error(
                      "sparseValues has incorrect shape " +
                        e.shape +
                        ", should be [] or [" +
                        i +
                        "]"
                    );
                  if (e.dtype !== r.dtype)
                    throw new Error(
                      "sparseValues.dtype must match defaultValues.dtype"
                    );
                })(i, o, n, a),
                Rt.runKernel(
                  function(t) {
                    return t.sparseToDense(i, o, n, a);
                  },
                  { $sparseIndices: i, $sparseValues: o, $defaultValue: a }
                )
              );
            }
          }),
          Dc = Rn({
            gatherND_: function(t, e) {
              var n = An(e, "indices", "gatherND", "int32"),
                r = An(t, "x", "gatherND");
              return Rt.runKernel(
                function(t) {
                  return t.gatherND(r, n);
                },
                { $x: r, $indices: n }
              );
            }
          }),
          Fc = Rn({
            dropout_: function(t, e, n, r) {
              if (null != n && !A(t.shape, n))
                throw new Error(
                  "Non-default noise shape is not implemented yet: " +
                    JSON.stringify(n)
                );
              var i = ci(t.shape, 0, 1, "float32", r).greater(e);
              return (i = i.div(rc(1, e))), t.mul(i);
            }
          });
        function zc(t, e, n) {
          for (
            var r = 1 - (t % 2), i = new Float32Array(t), o = 0;
            o < t;
            ++o
          ) {
            var a = (2 * Math.PI * o) / (t + r - 1);
            i[o] = e - n * Math.cos(a);
          }
          return Un(i, "float32");
        }
        var Lc,
          jc = Rn({
            hannWindow_: function(t) {
              return zc(t, 0.5, 0.5);
            }
          }),
          Bc = Rn({
            hammingWindow_: function(t) {
              return zc(t, 0.54, 0.46);
            }
          }),
          qc = Rn({
            frame_: function(t, e, n, r, i) {
              void 0 === r && (r = !1), void 0 === i && (i = 0);
              for (var o = 0, a = []; o + e <= t.size; )
                a.push(cu(t, o, e)), (o += n);
              if (r) {
                var s = o + e - t.size,
                  u = Nr([cu(t, o, e - s), $n([s], i)]);
                a.push(u);
              }
              return 0 === a.length ? Vn([], [0, e]) : Nr(a).as2D(a.length, e);
            }
          }),
          Uc = Object.freeze({ hannWindow: jc, hammingWindow: Bc, frame: qc });
        !(function(t) {
          (t[(t.NONE = 0)] = "NONE"),
            (t[(t.MEAN = 1)] = "MEAN"),
            (t[(t.SUM = 2)] = "SUM"),
            (t[(t.SUM_BY_NONZERO_WEIGHTS = 3)] = "SUM_BY_NONZERO_WEIGHTS");
        })(Lc || (Lc = {}));
        var Vc = Rn({
            absoluteDifference_: function(t, e, n, r) {
              void 0 === r && (r = Lc.SUM_BY_NONZERO_WEIGHTS);
              var i = An(t, "labels", "absoluteDifference"),
                o = An(e, "predictions", "absoluteDifference"),
                a = null;
              null != n && (a = An(n, "weights", "absoluteDifference")),
                _(i.shape, o.shape, "Error in absoluteDifference: ");
              var s = i.sub(o).abs();
              return Wc(s, a, r);
            }
          }),
          Wc = Rn({
            computeWeightedLoss_: function(t, e, n) {
              void 0 === n && (n = Lc.SUM_BY_NONZERO_WEIGHTS);
              var r = An(t, "losses", "computeWeightedLoss"),
                i = null;
              null != e && (i = An(e, "weights", "computeWeightedLoss"));
              var o = null == i ? r : r.mul(i);
              if (n === Lc.NONE) return o;
              if (n === Lc.SUM) return o.sum();
              if (n === Lc.MEAN) {
                if (null == i) return o.mean();
                var a = r.size / i.size,
                  s = o.sum().div(i.sum());
                return a > 1 ? s.div(qn(a)) : s;
              }
              if (n === Lc.SUM_BY_NONZERO_WEIGHTS) {
                if (null == i) return o.sum().div(qn(r.size));
                var u = i
                  .mul(Qn(r.shape))
                  .notEqual(qn(0))
                  .sum()
                  .toFloat();
                return o.sum().div(u);
              }
              throw Error("Unknown reduction: " + n);
            }
          }),
          Gc = Rn({
            cosineDistance_: function(t, e, n, r, i) {
              void 0 === i && (i = Lc.SUM_BY_NONZERO_WEIGHTS);
              var o = An(t, "labels", "cosineDistance"),
                a = An(e, "predictions", "cosineDistance"),
                s = null;
              null != r && (s = An(r, "weights", "cosineDistance")),
                _(o.shape, a.shape, "Error in cosineDistance: ");
              var u = qn(1).sub(o.mul(a).sum(n, !0));
              return Wc(u, s, i);
            }
          }),
          Hc = Rn({
            hingeLoss_: function(t, e, n, r) {
              void 0 === r && (r = Lc.SUM_BY_NONZERO_WEIGHTS);
              var i = An(t, "labels", "hingeLoss"),
                o = An(e, "predictions", "hingeLoss"),
                a = null;
              null != n && (a = An(n, "weights", "hingeLoss")),
                _(i.shape, o.shape, "Error in hingeLoss: ");
              var s = qn(1);
              i = qn(2)
                .mul(i)
                .sub(s);
              var u = s.sub(i.mul(o)).relu();
              return Wc(u, a, r);
            }
          }),
          Kc = Rn({
            huberLoss_: function(t, e, n, r, i) {
              void 0 === r && (r = 1),
                void 0 === i && (i = Lc.SUM_BY_NONZERO_WEIGHTS);
              var o = An(t, "labels", "huberLoss"),
                a = An(e, "predictions", "huberLoss"),
                s = null;
              null != n && (s = An(n, "weights", "huberLoss")),
                _(o.shape, a.shape, "Error in huberLoss: ");
              var u = qn(r),
                c = a.sub(o).abs(),
                l = Ku(c, u),
                h = c.sub(l),
                f = qn(0.5)
                  .mul(l.square())
                  .add(u.mul(h));
              return Wc(f, s, i);
            }
          }),
          Qc = Rn({
            logLoss_: function(t, e, n, r, i) {
              void 0 === r && (r = 1e-7),
                void 0 === i && (i = Lc.SUM_BY_NONZERO_WEIGHTS);
              var o = An(t, "labels", "logLoss"),
                a = An(e, "predictions", "logLoss"),
                s = null;
              null != n && (s = An(n, "weights", "logLoss")),
                _(o.shape, a.shape, "Error in logLoss: ");
              var u = qn(1),
                c = qn(r),
                l = o
                  .mul(a.add(c).log())
                  .neg()
                  .sub(
                    u.sub(o).mul(
                      u
                        .sub(a)
                        .add(c)
                        .log()
                    )
                  );
              return Wc(l, s, i);
            }
          }),
          Xc = Rn({
            meanSquaredError_: function(t, e, n, r) {
              void 0 === r && (r = Lc.SUM_BY_NONZERO_WEIGHTS);
              var i = An(t, "labels", "meanSquaredError"),
                o = An(e, "predictions", "meanSquaredError"),
                a = null;
              null != n && (a = An(n, "weights", "meanSquaredError")),
                _(i.shape, o.shape, "Error in meanSquaredError: ");
              var s = i.squaredDifference(o);
              return Wc(s, a, r);
            }
          }),
          $c = Rn({
            sigmoidCrossEntropy_: function(t, e, n, r, i) {
              void 0 === r && (r = 0),
                void 0 === i && (i = Lc.SUM_BY_NONZERO_WEIGHTS);
              var o = An(t, "multiClassLabels", "sigmoidCrossEntropy"),
                a = An(e, "logits", "sigmoidCrossEntropy"),
                s = null;
              if (
                (null != n && (s = An(n, "weights", "sigmoidCrossEntropy")),
                _(o.shape, a.shape, "Error in sigmoidCrossEntropy: "),
                r > 0)
              ) {
                var u = qn(r),
                  c = qn(1),
                  l = qn(0.5);
                o = o.mul(c.sub(u)).add(l.mul(u));
              }
              var h = (function(t, e) {
                var n = An(t, "labels", "sigmoidCrossEntropyWithLogits"),
                  r = An(e, "logits", "sigmoidCrossEntropyWithLogits");
                _(n.shape, r.shape, "Error in sigmoidCrossEntropyWithLogits: ");
                var i = r.relu(),
                  o = r.mul(n),
                  a = r
                    .abs()
                    .neg()
                    .exp()
                    .log1p();
                return i.sub(o).add(a);
              })(o, a);
              return Wc(h, s, i);
            }
          }),
          Yc = Rn({
            softmaxCrossEntropy_: function(t, e, n, r, i) {
              void 0 === r && (r = 0),
                void 0 === i && (i = Lc.SUM_BY_NONZERO_WEIGHTS);
              var o = An(t, "onehotLabels", "softmaxCrossEntropy"),
                a = An(e, "logits", "softmaxCrossEntropy"),
                s = null;
              if (
                (null != n && (s = An(n, "weights", "softmaxCrossEntropy")),
                _(o.shape, a.shape, "Error in softmaxCrossEntropy: "),
                r > 0)
              ) {
                var u = qn(r),
                  c = qn(1),
                  l = qn(o.shape[1]);
                o = o.mul(c.sub(u)).add(u.div(l));
              }
              var h = (function(t, e, n) {
                if (
                  (void 0 === n && (n = -1),
                  -1 === n && (n = e.rank - 1),
                  n !== e.rank - 1)
                )
                  throw Error(
                    "Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank " +
                      e.rank +
                      " and dim was " +
                      n
                  );
                return Mn(function(t, e, r) {
                  var i = e.logSumExp([n], !0),
                    o = e.toFloat().sub(i);
                  return (
                    r([t, o]),
                    {
                      value: o
                        .mul(t)
                        .neg()
                        .sum([n]),
                      gradFunc: function(t, e) {
                        var r = e[0],
                          i = e[1],
                          o = sn(t.shape, [n]);
                        return [
                          t.reshape(o).mul(r.toFloat().sub(i.exp())),
                          t.reshape(o).mul(i.exp().sub(r.toFloat()))
                        ];
                      }
                    }
                  );
                })(t, e);
              })(o, a);
              return Wc(h, s, i);
            }
          }),
          Jc = Object.freeze({
            get Reduction() {
              return Lc;
            },
            absoluteDifference: Vc,
            computeWeightedLoss: Wc,
            cosineDistance: Gc,
            hingeLoss: Hc,
            huberLoss: Kc,
            logLoss: Qc,
            meanSquaredError: Xc,
            sigmoidCrossEntropy: $c,
            softmaxCrossEntropy: Yc
          });
        function Zc(t, e) {
          return (
            void 0 === e && (e = !1),
            Rt.tidy(function() {
              if (2 !== t.shape.length)
                throw new Error(
                  "qr2d() requires a 2D Tensor, but got a " +
                    t.shape.length +
                    "D Tensor."
                );
              for (
                var n = t.shape[0],
                  r = t.shape[1],
                  i = Zr(n),
                  o = t.clone(),
                  a = Vn([[1]], [1, 1]),
                  s = a.clone(),
                  u = n >= r ? r : n,
                  c = function(t) {
                    var e,
                      u = o,
                      c = s,
                      l = i;
                    (e = Rt.tidy(function() {
                      var e = o.slice([t, t], [n - t, 1]),
                        u = e.norm(),
                        c = o.slice([t, t], [1, 1]),
                        l = c.sign().neg(),
                        h = c.sub(l.mul(u)),
                        f = e.div(h);
                      s =
                        1 === f.shape[0]
                          ? a.clone()
                          : a.concat(
                              f.slice([1, 0], [f.shape[0] - 1, f.shape[1]]),
                              0
                            );
                      var p = l
                          .matMul(h)
                          .div(u)
                          .neg(),
                        d = o.slice([t, 0], [n - t, r]),
                        m = p.mul(s);
                      o =
                        0 === t
                          ? d.sub(m.matMul(s.transpose().matMul(d)))
                          : o
                              .slice([0, 0], [t, r])
                              .concat(
                                d.sub(m.matMul(s.transpose().matMul(d))),
                                0
                              );
                      var y = i.slice([0, t], [n, i.shape[1] - t]);
                      return (
                        (i =
                          0 === t
                            ? y.sub(y.matMul(s).matMul(m.transpose()))
                            : i
                                .slice([0, 0], [n, t])
                                .concat(
                                  y.sub(y.matMul(s).matMul(m.transpose())),
                                  1
                                )),
                        [s, o, i]
                      );
                    })),
                      (s = e[0]),
                      (o = e[1]),
                      (i = e[2]),
                      je([u, c, l]);
                  },
                  l = 0;
                l < u;
                ++l
              )
                c(l);
              return (
                !e &&
                  n > r &&
                  ((i = i.slice([0, 0], [n, r])),
                  (o = o.slice([0, 0], [r, r]))),
                [i, o]
              );
            })
          );
        }
        var tl = Rn({
            gramSchmidt_: function(t) {
              var e;
              if (Array.isArray(t)) {
                (e = !1),
                  w(null != t && t.length > 0, function() {
                    return "Gram-Schmidt process: input must not be null, undefined, or empty";
                  });
                for (
                  var n = t[0].shape[0],
                    r = function(e) {
                      w(t[e].shape[0] === n, function() {
                        return (
                          "Gram-Schmidt: Non-unique lengths found in the input vectors: (" +
                          t[e].shape[0] +
                          " vs. " +
                          n +
                          ")"
                        );
                      });
                    },
                    i = 1;
                  i < t.length;
                  ++i
                )
                  r(i);
              } else
                (e = !0),
                  (t = Pr(t, t.shape[0], 0).map(function(t) {
                    return fi(t, [0]);
                  }));
              w(t.length <= t[0].shape[0], function() {
                return (
                  "Gram-Schmidt: Number of vectors (" +
                  t.length +
                  ") exceeds number of dimensions (" +
                  t[0].shape[0] +
                  ")."
                );
              });
              var o = [],
                a = t,
                s = function(t) {
                  o.push(
                    Rt.tidy(function() {
                      var e = a[t];
                      if (t > 0)
                        for (var n = 0; n < t; ++n) {
                          var r = Tu(o[n].mulStrict(e)).mul(o[n]);
                          e = e.sub(r);
                        }
                      return e.div(vc(e, "euclidean"));
                    })
                  );
                };
              for (i = 0; i < t.length; ++i) s(i);
              return e ? pi(o, 0) : o;
            }
          }),
          el = Rn({
            qr_: function(t, e) {
              if ((void 0 === e && (e = !1), t.rank < 2))
                throw new Error(
                  "qr() requires input tensor to have a rank >= 2, but got rank " +
                    t.rank
                );
              if (2 === t.rank) return Zc(t, e);
              var n = t.shape
                  .slice(0, t.shape.length - 2)
                  .reduce(function(t, e) {
                    return t * e;
                  }),
                r = yi(
                  t.reshape([
                    n,
                    t.shape[t.shape.length - 2],
                    t.shape[t.shape.length - 1]
                  ]),
                  0
                ),
                i = [],
                o = [];
              return (
                r.forEach(function(t) {
                  var n = Zc(t, e),
                    r = n[0],
                    a = n[1];
                  i.push(r), o.push(a);
                }),
                [pi(i, 0).reshape(t.shape), pi(o, 0).reshape(t.shape)]
              );
            }
          }),
          nl = Object.freeze({ gramSchmidt: tl, qr: el });
        function rl(t, e, n, r, i) {
          null == r && (r = 0.5), null == i && (i = Number.NEGATIVE_INFINITY);
          var o = t.shape[0];
          return (
            (n = Math.min(n, o)),
            w(0 <= r && r <= 1, function() {
              return "iouThreshold must be in [0, 1], but was '" + r + "'";
            }),
            w(2 === t.rank, function() {
              return (
                "boxes must be a 2D tensor, but was of rank '" + t.rank + "'"
              );
            }),
            w(4 === t.shape[1], function() {
              return (
                "boxes must have 4 columns, but 2nd dimension was " + t.shape[1]
              );
            }),
            w(1 === e.rank, function() {
              return "scores must be a 1D tensor";
            }),
            w(e.shape[0] === o, function() {
              return (
                "scores has incompatible shape with boxes. Expected " +
                o +
                ", but was " +
                e.shape[0]
              );
            }),
            { maxOutputSize: n, iouThreshold: r, scoreThreshold: i }
          );
        }
        var il = Rn({
            resizeBilinear_: function(t, e, n) {
              void 0 === n && (n = !1);
              var r = An(t, "images", "resizeBilinear");
              w(3 === r.rank || 4 === r.rank, function() {
                return (
                  "Error in resizeBilinear: x must be rank 3 or 4, but got rank " +
                  r.rank +
                  "."
                );
              }),
                w(2 === e.length, function() {
                  return (
                    "Error in resizeBilinear: new shape must 2D, but got shape " +
                    e +
                    "."
                  );
                });
              var i = r,
                o = !1;
              3 === r.rank &&
                ((o = !0), (i = r.as4D(1, r.shape[0], r.shape[1], r.shape[2])));
              var a = e[0],
                s = e[1],
                u = Rt.runKernel(
                  function(t, e) {
                    return e([i]), t.resizeBilinear(i, a, s, n);
                  },
                  { batchImages: i },
                  function(t, e) {
                    return {
                      batchImages: function() {
                        return Rt.runKernel(function(r) {
                          return r.resizeBilinearBackprop(t, e[0], n);
                        }, {});
                      }
                    };
                  }
                );
              return o ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;
            }
          }),
          ol = Rn({
            resizeNearestNeighbor_: function(t, e, n) {
              void 0 === n && (n = !1);
              var r = An(t, "images", "resizeNearestNeighbor");
              w(3 === r.rank || 4 === r.rank, function() {
                return (
                  "Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank " +
                  r.rank +
                  "."
                );
              }),
                w(2 === e.length, function() {
                  return (
                    "Error in resizeNearestNeighbor: new shape must 2D, but got shape " +
                    e +
                    "."
                  );
                }),
                w("float32" === r.dtype || "int32" === r.dtype, function() {
                  return "`images` must have `int32` or `float32` as dtype";
                });
              var i = r,
                o = !1;
              3 === r.rank &&
                ((o = !0), (i = r.as4D(1, r.shape[0], r.shape[1], r.shape[2])));
              var a = e[0],
                s = e[1],
                u = Rt.runKernel(
                  function(t, e) {
                    return e([i]), t.resizeNearestNeighbor(i, a, s, n);
                  },
                  { batchImages: i },
                  function(t, e) {
                    return {
                      batchImages: function() {
                        return Rt.runKernel(function(r) {
                          return r.resizeNearestNeighborBackprop(t, e[0], n);
                        }, {});
                      }
                    };
                  }
                );
              return o ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;
            }
          }),
          al = Rn({
            nonMaxSuppression_: function(t, e, n, r, i) {
              void 0 === r && (r = 0.5),
                void 0 === i && (i = Number.NEGATIVE_INFINITY);
              var o = An(t, "boxes", "nonMaxSuppression"),
                a = An(e, "scores", "nonMaxSuppression"),
                s = rl(o, a, n, r, i);
              return (
                (n = s.maxOutputSize),
                (r = s.iouThreshold),
                (i = s.scoreThreshold),
                Rt.runKernel(
                  function(t) {
                    return t.nonMaxSuppression(o, a, n, r, i);
                  },
                  { $boxes: o }
                )
              );
            }
          }),
          sl = Rn({
            cropAndResize_: function(t, e, n, r, i, o) {
              var a = An(t, "image", "cropAndResize", "float32"),
                s = An(e, "boxes", "cropAndResize", "float32"),
                u = An(n, "boxInd", "cropAndResize", "int32");
              (i = i || "bilinear"), (o = o || 0);
              var c = s.shape[0];
              return (
                w(4 === a.rank, function() {
                  return (
                    "Error in cropAndResize: image must be rank 4,but got rank " +
                    a.rank +
                    "."
                  );
                }),
                w(2 === s.rank && 4 === s.shape[1], function() {
                  return (
                    "Error in cropAndResize: boxes must be have size [" +
                    c +
                    ",4] but had shape " +
                    s.shape +
                    "."
                  );
                }),
                w(1 === u.rank && u.shape[0] === c, function() {
                  return (
                    "Error in cropAndResize: boxInd must be have size [" +
                    c +
                    "] but had shape " +
                    s.shape +
                    "."
                  );
                }),
                w(2 === r.length, function() {
                  return (
                    "Error in cropAndResize: cropSize must be of length 2, but got length " +
                    r.length +
                    "."
                  );
                }),
                w(r[0] >= 1 && r[1] >= 1, function() {
                  return "cropSize must be atleast [1,1], but was " + r;
                }),
                w("bilinear" === i || "nearest" === i, function() {
                  return "method must be bilinear or nearest, but was " + i;
                }),
                Rt.runKernel(
                  function(t, e) {
                    return t.cropAndResize(a, s, u, r, i, o);
                  },
                  { $image: a, $boxes: s }
                )
              );
            }
          }),
          ul = Object.freeze({
            resizeBilinear: il,
            resizeNearestNeighbor: ol,
            nonMaxSuppression: al,
            nonMaxSuppressionAsync: function(t, e, n, r, i) {
              return (
                void 0 === r && (r = 0.5),
                void 0 === i && (i = Number.NEGATIVE_INFINITY),
                c(this, void 0, void 0, function() {
                  var o, a, s, u, c, h;
                  return l(this, function(l) {
                    switch (l.label) {
                      case 0:
                        return (
                          (o = An(t, "boxes", "nonMaxSuppressionAsync")),
                          (a = An(e, "scores", "nonMaxSuppressionAsync")),
                          (s = rl(o, a, n, r, i)),
                          (n = s.maxOutputSize),
                          (r = s.iouThreshold),
                          (i = s.scoreThreshold),
                          [4, o.data()]
                        );
                      case 1:
                        return (u = l.sent()), [4, a.data()];
                      case 2:
                        return (
                          (c = l.sent()),
                          (h = Tr(u, c, n, r, i)),
                          o !== t && o.dispose(),
                          a !== e && a.dispose(),
                          [2, h]
                        );
                    }
                  });
                })
              );
            },
            cropAndResize: sl
          }),
          cl = Rn({
            matMul_: function(t, e, n, r, i, o) {
              var a;
              void 0 === n && (n = !1),
                void 0 === r && (r = !1),
                void 0 === o && (o = "linear");
              var s = An(t, "a", "fused matMul"),
                u = An(e, "b", "fused matMul");
              (a = Et(s, u)), (s = a[0]), (u = a[1]);
              var c = n ? s.shape[s.rank - 2] : s.shape[s.rank - 1],
                l = r ? u.shape[u.rank - 1] : u.shape[u.rank - 2],
                h = n ? s.shape[s.rank - 1] : s.shape[s.rank - 2],
                f = r ? u.shape[u.rank - 2] : u.shape[u.rank - 1],
                p = s.shape.slice(0, -2),
                d = u.shape.slice(0, -2),
                m = T(p),
                y = T(d);
              w(s.rank >= 2 && u.rank >= 2 && s.rank === u.rank, function() {
                return (
                  "Error in fused matMul: inputs must have the same rank of at least 2, got ranks " +
                  s.rank +
                  " and " +
                  u.rank +
                  "."
                );
              }),
                w(A(p, d), function() {
                  return (
                    "Error in fused matMul: outer dimensions (" +
                    p +
                    ") and (" +
                    d +
                    ") of Tensors with shapes " +
                    s.shape +
                    " and " +
                    u.shape +
                    " must match."
                  );
                }),
                w(c === l, function() {
                  return (
                    "Error in fused matMul: inner shapes (" +
                    c +
                    ") and (" +
                    l +
                    ") of Tensors with shapes " +
                    s.shape +
                    " and " +
                    u.shape +
                    " and transposeA=" +
                    n +
                    " and transposeB=" +
                    r +
                    " must match."
                  );
                });
              var g,
                v = s.shape.slice(0, -2).concat([h, f]),
                b = n ? s.as3D(m, c, h) : s.as3D(m, h, c),
                _ = r ? u.as3D(y, f, l) : u.as3D(y, l, f);
              null != i &&
                or(
                  v,
                  (g = Et((g = An(i, "bias", "fused matMul")), s)[0]).shape
                );
              var S = { $a: b, $b: _ };
              return (
                null != i && (S.$bias = g),
                Rt.runKernel(
                  function(t, e) {
                    var i = t.fusedBatchMatMul(b, _, n, r, g, o);
                    return e([b, _, i]), i;
                  },
                  S,
                  function(t, e) {
                    var a,
                      s = e[0],
                      u = e[1],
                      c = e[2];
                    if (null == o || "linear" === o) a = t;
                    else {
                      if ("relu" !== o)
                        throw new Error(
                          "Gradient for activation " +
                            o +
                            " has not been implemented yet."
                        );
                      a = t.mul(c.step());
                    }
                    var l = {};
                    return (
                      null != i &&
                        (l = {
                          $bias: function() {
                            var t = a,
                              e = ir(g.shape, a.shape);
                            return (
                              e.length > 0 && (t = t.sum(e)), t.reshape(g.shape)
                            );
                          }
                        }),
                      n || r
                        ? !n && r
                          ? Object.assign(
                              {
                                $a: function() {
                                  return a.matMul(u, !1, !1);
                                },
                                $b: function() {
                                  return a.matMul(s, !0, !1);
                                }
                              },
                              l
                            )
                          : n && !r
                          ? Object.assign(
                              {
                                $a: function() {
                                  return u.matMul(a, !1, !0);
                                },
                                $b: function() {
                                  return s.matMul(a, !1, !1);
                                }
                              },
                              l
                            )
                          : Object.assign(
                              {
                                $a: function() {
                                  return u.matMul(a, !0, !0);
                                },
                                $b: function() {
                                  return a.matMul(s, !0, !0);
                                }
                              },
                              l
                            )
                        : Object.assign(
                            {
                              $a: function() {
                                return a.matMul(u, !1, !0);
                              },
                              $b: function() {
                                return s.matMul(a, !0, !1);
                              }
                            },
                            l
                          )
                    );
                  }
                ).reshape(v)
              );
            }
          }),
          ll = Object.freeze({ matMul: cl }),
          hl = Object.freeze({
            image: ul,
            linalg: nl,
            losses: Jc,
            spectral: Pc,
            fused: ll,
            signal: Uc,
            op: Rn,
            batchNormalization2d: Ms,
            batchNormalization3d: Ps,
            batchNormalization4d: Rs,
            batchNormalization: Ds,
            batchNorm: Fs,
            batchNorm2d: zs,
            batchNorm3d: Ls,
            batchNorm4d: js,
            complex: zn,
            real: Ln,
            imag: jn,
            concat: Nr,
            concat1d: Or,
            concat2d: Cr,
            concat3d: Ir,
            concat4d: Mr,
            split: Pr,
            conv1d: Vs,
            conv2d: Ws,
            conv3d: Gs,
            conv2dDerFilter: Hs,
            depthwiseConv2d: Ks,
            separableConv2d: Qs,
            conv2dTranspose: Xs,
            matMul: $s,
            dot: Ys,
            outerProduct: Js,
            reverse: Zs,
            reverse1d: tu,
            reverse2d: eu,
            reverse3d: nu,
            reverse4d: ru,
            maxPool: au,
            avgPool: su,
            pool: uu,
            slice: cu,
            slice1d: lu,
            slice2d: hu,
            slice3d: fu,
            slice4d: pu,
            abs: Ga,
            acos: Ha,
            acosh: Ka,
            asin: Qa,
            asinh: Xa,
            atan: $a,
            atanh: Ya,
            ceil: Ja,
            clipByValue: Za,
            cos: ts,
            cosh: es,
            erf: ns,
            exp: rs,
            expm1: is,
            floor: os,
            log: as,
            log1p: ss,
            logSigmoid: us,
            neg: cs,
            reciprocal: ls,
            round: hs,
            rsqrt: fs,
            sigmoid: ps,
            sign: ds,
            isNaN: ms,
            isInf: ys,
            isFinite: gs,
            sin: vs,
            sinh: bs,
            softplus: ws,
            sqrt: _s,
            square: Ss,
            step: xs,
            tan: Ts,
            tanh: As,
            all: mu,
            any: yu,
            argMax: gu,
            argMin: vu,
            logSumExp: bu,
            max: wu,
            mean: _u,
            min: Su,
            moments: xu,
            sum: Tu,
            prod: Au,
            equal: ku,
            equalStrict: Eu,
            greater: Nu,
            greaterEqual: Ou,
            greaterEqualStrict: Cu,
            greaterStrict: Iu,
            less: Mu,
            lessEqual: Pu,
            lessEqualStrict: Ru,
            lessStrict: Du,
            notEqual: Fu,
            notEqualStrict: zu,
            add: Lu,
            addN: ju,
            addStrict: Bu,
            atan2: qu,
            div: Uu,
            divStrict: Vu,
            floorDiv: Wu,
            maximum: Gu,
            maximumStrict: Hu,
            minimum: Ku,
            minimumStrict: Qu,
            mod: Xu,
            modStrict: $u,
            mul: Yu,
            mulStrict: Ju,
            pow: Zu,
            powStrict: tc,
            squaredDifference: ec,
            squaredDifferenceStrict: nc,
            sub: rc,
            subStrict: ic,
            elu: hc,
            leakyRelu: fc,
            prelu: pc,
            relu: dc,
            selu: mc,
            logicalAnd: oc,
            logicalNot: ac,
            logicalOr: sc,
            logicalXor: uc,
            where: cc,
            whereAsync: lc,
            buffer: Gr,
            print: Hr,
            batchToSpaceND: Kr,
            cast: Qr,
            clone: Xr,
            cumsum: $r,
            depthToSpace: Yr,
            expandDims: Jr,
            eye: Zr,
            multinomial: ti,
            oneHot: ei,
            pad: ni,
            pad1d: ri,
            pad2d: ii,
            pad3d: oi,
            pad4d: ai,
            rand: si,
            randomNormal: ui,
            randomUniform: ci,
            reshape: li,
            spaceToBatchND: hi,
            squeeze: fi,
            stack: pi,
            tile: di,
            truncatedNormal: mi,
            unstack: yi,
            setdiff1dAsync: gi,
            fill: $n,
            linspace: Yn,
            ones: Qn,
            range: Jn,
            scalar: qn,
            tensor: Bn,
            tensor1d: Un,
            tensor2d: Vn,
            tensor3d: Wn,
            tensor4d: Gn,
            tensor5d: Hn,
            tensor6d: Kn,
            zeros: Xn,
            onesLike: Zn,
            zerosLike: tr,
            transpose: yc,
            softmax: Dn,
            logSoftmax: Fn,
            localResponseNormalization: gc,
            norm: vc,
            gather: _c,
            unsortedSegmentSum: Sc,
            basicLSTMCell: xc,
            multiRNNCell: Tc,
            movingAverage: Ac,
            stridedSlice: kc,
            topk: Ec,
            scatterND: Nc,
            fft: Oc,
            ifft: Cc,
            rfft: Ic,
            irfft: Mc,
            sparseToDense: Rc,
            gatherND: Dc,
            dropout: Fc,
            hannWindow: jc,
            hammingWindow: Bc,
            frame: qc
          }),
          fl = (function() {
            function t() {
              (this.blockSize = 48),
                (this.firstUse = !0),
                h.get("IS_BROWSER") &&
                  (this.fromPixels2DContext = document
                    .createElement("canvas")
                    .getContext("2d")),
                (this.data = new er(this, Rt));
            }
            return (
              (t.prototype.register = function(t, e, n) {
                if (
                  (this.firstUse &&
                    ((this.firstUse = !1),
                    h.get("IS_NODE") &&
                      Ye(
                        "\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================\n"
                      )),
                  this.data.has(t))
                )
                  throw new Error("Data buffer is already registered");
                this.data.set(t, { dtype: n });
              }),
              (t.prototype.write = function(t, e) {
                if (null == e)
                  throw new Error(
                    "MathBackendCPU.write(): values can not be null"
                  );
                this.data.get(t).values = e;
              }),
              (t.prototype.fromPixels = function(t, e) {
                if (null == t)
                  throw new Error(
                    "pixels passed to tf.browser.fromPixels() can not be null"
                  );
                var n, r;
                if (h.get("IS_NODE") && null == t.getContext)
                  throw new Error(
                    "When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package"
                  );
                if (null != t.getContext)
                  n = t.getContext("2d").getImageData(0, 0, t.width, t.height)
                    .data;
                else if (t instanceof ImageData || t.data instanceof Uint8Array)
                  n = t.data;
                else {
                  if (
                    !(
                      t instanceof HTMLImageElement ||
                      t instanceof HTMLVideoElement
                    )
                  )
                    throw new Error(
                      "pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData or {data: Uint32Array, width: number, height: number}, but was " +
                        t.constructor.name
                    );
                  if (null == this.fromPixels2DContext)
                    throw new Error(
                      "Can't read pixels from HTMLImageElement outside the browser."
                    );
                  (this.fromPixels2DContext.canvas.width = t.width),
                    (this.fromPixels2DContext.canvas.height = t.height),
                    this.fromPixels2DContext.drawImage(
                      t,
                      0,
                      0,
                      t.width,
                      t.height
                    ),
                    (n = this.fromPixels2DContext.getImageData(
                      0,
                      0,
                      t.width,
                      t.height
                    ).data);
                }
                if (4 === e) r = new Int32Array(n);
                else {
                  var i = t.width * t.height;
                  r = new Int32Array(i * e);
                  for (var o = 0; o < i; o++)
                    for (var a = 0; a < e; ++a) r[o * e + a] = n[4 * o + a];
                }
                return Wn(r, [t.height, t.width, e], "int32");
              }),
              (t.prototype.read = function(t) {
                return c(this, void 0, void 0, function() {
                  return l(this, function(e) {
                    return [2, this.readSync(t)];
                  });
                });
              }),
              (t.prototype.readSync = function(t) {
                var e = this.data.get(t),
                  n = e.dtype,
                  r = e.complexTensors;
                return "complex64" === n
                  ? wr(
                      this.readSync(r.real.dataId),
                      this.readSync(r.imag.dataId)
                    )
                  : this.data.get(t).values;
              }),
              (t.prototype.bufferSync = function(t) {
                return Gr(t.shape, t.dtype, this.readSync(t.dataId));
              }),
              (t.prototype.disposeData = function(t) {
                if (this.data.has(t)) {
                  var e = this.data.get(t).complexTensors;
                  null != e && (e.real.dispose(), e.imag.dispose()),
                    this.data.delete(t);
                }
              }),
              (t.prototype.time = function(t) {
                return c(this, void 0, void 0, function() {
                  var e;
                  return l(this, function(n) {
                    return (e = tt()), t(), [2, { kernelMs: tt() - e }];
                  });
                });
              }),
              (t.prototype.memory = function() {
                return {
                  unreliable: !0,
                  reasons: [
                    "The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."
                  ]
                };
              }),
              (t.prototype.complex = function(t, e) {
                var n = yt.make(t.shape, {}, "complex64");
                return (
                  (this.data.get(n.dataId).complexTensors = {
                    real: Rt.keep(t.clone()),
                    imag: Rt.keep(e.clone())
                  }),
                  n
                );
              }),
              (t.prototype.real = function(t) {
                return this.data.get(t.dataId).complexTensors.real.clone();
              }),
              (t.prototype.imag = function(t) {
                return this.data.get(t.dataId).complexTensors.imag.clone();
              }),
              (t.prototype.assertNotComplex = function(t, e) {
                Array.isArray(t) || (t = [t]),
                  t.forEach(function(t) {
                    null != t &&
                      w("complex64" !== t.dtype, function() {
                        return e + " does not support complex64 tensors.";
                      });
                  });
              }),
              (t.prototype.slice = function(t, e, n) {
                if ((this.assertNotComplex(t, "slice"), _n(t.shape, e, n))) {
                  var r = Sn(e, t.strides),
                    i = T(n);
                  return Bn(
                    this.readSync(t.dataId).subarray(r, r + i),
                    n,
                    t.dtype
                  );
                }
                for (
                  var o = Gr(n, t.dtype), a = this.bufferSync(t), s = 0;
                  s < o.size;
                  ++s
                ) {
                  var u = o.indexToLoc(s).map(function(t, n) {
                    return t + e[n];
                  });
                  o.values[s] = a.get.apply(a, u);
                }
                return o.toTensor();
              }),
              (t.prototype.stridedSlice = function(t, e, n, r, i, o, a, s, u) {
                this.assertNotComplex(t, "stridedSlice");
                var c = vn(t.shape, e, n, r, i, o, a, s, u),
                  l = c[0],
                  h = c[1],
                  f = c[2],
                  p = h.filter(function(t, e) {
                    return -1 === f.indexOf(e);
                  });
                if (
                  p.some(function(t) {
                    return 0 === t;
                  })
                )
                  return Bn([], p);
                for (
                  var d = Gr(h, t.dtype), m = this.bufferSync(t), y = 0;
                  y < d.size;
                  y++
                ) {
                  for (
                    var g = d.indexToLoc(y), v = new Array(g.length), b = 0;
                    b < v.length;
                    b++
                  )
                    v[b] = g[b] * r[b] + l[b];
                  d.set.apply(d, [m.get.apply(m, v)].concat(g));
                }
                return d.toTensor().reshape(p);
              }),
              (t.prototype.unstack = function(t, e) {
                for (
                  var n = t.shape[e], r = new Array(t.rank - 1), i = 0, o = 0;
                  o < t.rank;
                  o++
                )
                  o !== e && (r[i++] = t.shape[o]);
                var a = new Array(t.rank).fill(0),
                  s = t.shape.slice();
                s[e] = 1;
                var u = new Array(n);
                for (o = 0; o < u.length; o++)
                  (a[e] = o), (u[o] = this.slice(t, a, s).reshape(r));
                return u;
              }),
              (t.prototype.reverse = function(t, e) {
                this.assertNotComplex(t, "reverse");
                for (
                  var n = Gr(t.shape, t.dtype),
                    r = this.bufferSync(t),
                    i = function(i) {
                      var o = n.indexToLoc(i),
                        a = o.slice();
                      e.forEach(function(e) {
                        return (a[e] = t.shape[e] - 1 - a[e]);
                      }),
                        n.set.apply(n, [r.get.apply(r, a)].concat(o));
                    },
                    o = 0;
                  o < n.size;
                  o++
                )
                  i(o);
                return n.toTensor();
              }),
              (t.prototype.concat = function(t, e) {
                var n = this;
                this.assertNotComplex(t, "concat");
                var r = t.map(function(t) {
                    var n = T(t.shape.slice(e));
                    return t.as2D(-1, n);
                  }),
                  i = pn(
                    r.map(function(t) {
                      return t.shape;
                    }),
                    1
                  ),
                  o = Gr(i, t[0].dtype).values;
                if (1 === r[0].shape[0]) {
                  var a = 0;
                  r.forEach(function(t) {
                    o.set(n.readSync(t.dataId), a), (a += t.size);
                  });
                } else {
                  var s = 0;
                  r.forEach(function(t) {
                    for (
                      var e = n.readSync(t.dataId), r = 0, a = 0;
                      a < t.shape[0];
                      ++a
                    )
                      for (var u = a * i[1] + s, c = 0; c < t.shape[1]; ++c)
                        o[u + c] = e[r++];
                    s += t.shape[1];
                  });
                }
                var u = pn(
                  t.map(function(t) {
                    return t.shape;
                  }),
                  e
                );
                return Bn(o, u, t[0].dtype);
              }),
              (t.prototype.neg = function(t) {
                return (
                  this.assertNotComplex(t, "neg"), this.multiply(qn(-1), t)
                );
              }),
              (t.prototype.add = function(t, e) {
                return "complex64" === t.dtype || "complex64" === e.dtype
                  ? this.broadcastedBinaryComplexOp(
                      t.cast("complex64"),
                      e.cast("complex64"),
                      function(t, e, n, r) {
                        return { real: t + n, imag: e + r };
                      }
                    )
                  : this.broadcastedBinaryOp(
                      t,
                      e,
                      At(t.dtype, e.dtype),
                      function(t, e) {
                        return t + e;
                      }
                    );
              }),
              (t.prototype.addN = function(t) {
                var e = this;
                this.assertNotComplex(t, "addN");
                for (
                  var n = t.map(function(t) {
                      return e.readSync(t.dataId);
                    }),
                    r = Gr(t[0].shape, t[0].dtype),
                    i = r.values,
                    o = 0;
                  o < t.length;
                  o++
                )
                  for (var a = n[o], s = 0; s < i.length; s++) i[s] += a[s];
                return r.toTensor();
              }),
              (t.prototype.subtract = function(t, e) {
                return "complex64" === t.dtype || "complex64" === e.dtype
                  ? this.broadcastedBinaryComplexOp(
                      t.cast("complex64"),
                      e.cast("complex64"),
                      function(t, e, n, r) {
                        return { real: t - n, imag: e - r };
                      }
                    )
                  : this.broadcastedBinaryOp(
                      t,
                      e,
                      At(t.dtype, e.dtype),
                      function(t, e) {
                        return t - e;
                      }
                    );
              }),
              (t.prototype.pow = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "pow"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    return Math.pow(t, e);
                  })
                );
              }),
              (t.prototype.batchMatMul = function(t, e, n, r) {
                this.assertNotComplex([t, e], "matMul");
                for (
                  var i = n ? t.shape[1] : t.shape[2],
                    o = n ? t.shape[2] : t.shape[1],
                    a = r ? e.shape[1] : e.shape[2],
                    s = t.shape[0],
                    u = this.readSync(t.dataId),
                    c = this.readSync(e.dataId),
                    l = n
                      ? [t.strides[0], 1, t.strides[1]]
                      : [t.strides[0], t.strides[1], 1],
                    h = l[0],
                    f = l[1],
                    p = l[2],
                    d = r
                      ? [1, e.strides[1], e.strides[0]]
                      : [e.strides[1], 1, e.strides[0]],
                    m = d[0],
                    y = d[1],
                    g = d[2],
                    v = o * a,
                    b = Gr([s, o, a], t.dtype),
                    w = b.values,
                    _ = this.blockSize,
                    S = 0;
                  S < s;
                  S++
                )
                  for (var x = 0; x < o; x += _)
                    for (var T = 0; T < a; T += _)
                      for (var A = 0; A < i; A += _)
                        for (
                          var k = Math.min(x + _, o),
                            E = Math.min(T + _, a),
                            N = Math.min(A + _, i),
                            O = x;
                          O < k;
                          O++
                        )
                          for (var C = T; C < E; C++) {
                            for (var I = 0, M = A; M < N; M++)
                              I +=
                                u[S * h + O * f + M * p] *
                                c[M * m + C * y + S * g];
                            w[S * v + (O * a + C)] += I;
                          }
                return b.toTensor();
              }),
              (t.prototype.fusedBatchMatMul = function(t, e, n, r, i, o) {
                var a = this.batchMatMul(t, e, n, r);
                return (
                  i && (a = this.add(a, i)),
                  o &&
                    (a = (function(t, e, n) {
                      if ("linear" === e) return t.linear(n);
                      if ("relu" === e) return t.relu(n);
                      throw new Error(
                        "Activation " +
                          e +
                          " has not been implemented for the CPU backend."
                      );
                    })(this, o, a)),
                  a
                );
              }),
              (t.prototype.multiply = function(t, e) {
                return "complex64" === t.dtype || "complex64" === e.dtype
                  ? this.broadcastedBinaryComplexOp(
                      t.cast("complex64"),
                      e.cast("complex64"),
                      function(t, e, n, r) {
                        return { real: t * n - e * r, imag: t * r + e * n };
                      }
                    )
                  : this.broadcastedBinaryOp(
                      t,
                      e,
                      At(t.dtype, e.dtype),
                      function(t, e) {
                        return t * e;
                      }
                    );
              }),
              (t.prototype.realDivide = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "realDivide"),
                  this.broadcastedBinaryOp(t, e, "float32", function(t, e) {
                    return t / e;
                  })
                );
              }),
              (t.prototype.floorDiv = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "floorDiv"),
                  this.broadcastedBinaryOp(t, e, "int32", function(t, e) {
                    return Math.floor(t / e);
                  })
                );
              }),
              (t.prototype.sum = function(t, e) {
                this.assertNotComplex(t, "sum"), un("sum", e, t.rank);
                for (
                  var n = an(t.shape, e),
                    r = n[0],
                    i = n[1],
                    o = Xn(r, At(t.dtype, "int32")),
                    a = T(i),
                    s = this.readSync(o.dataId),
                    u = this.readSync(t.dataId),
                    c = 0;
                  c < s.length;
                  ++c
                ) {
                  for (var l = c * a, h = 0, f = 0; f < a; ++f) h += u[l + f];
                  s[c] = h;
                }
                return o;
              }),
              (t.prototype.prod = function(t, e) {
                this.assertNotComplex(t, "sum");
                for (
                  var n = an(t.shape, e),
                    r = n[0],
                    i = n[1],
                    o = Xn(r, At(t.dtype, "int32")),
                    a = T(i),
                    s = this.readSync(o.dataId),
                    u = this.readSync(t.dataId),
                    c = 0;
                  c < s.length;
                  ++c
                ) {
                  for (var l = c * a, h = 1, f = 0; f < a; ++f) h *= u[l + f];
                  s[c] = h;
                }
                return o;
              }),
              (t.prototype.unsortedSegmentSum = function(t, e, n) {
                this.assertNotComplex(t, "unsortedSegmentSum");
                for (var r = [], i = t.rank - e.rank, o = 0; o < i; ++o)
                  e = e.expandDims(o + 1);
                for (o = 0; o < n; ++o) {
                  var a = qn(o, "int32"),
                    s = ku(a, e)
                      .asType("float32")
                      .mul(t)
                      .sum(0);
                  r.push(s);
                }
                return pi(r);
              }),
              (t.prototype.argMin = function(t, e) {
                this.assertNotComplex(t, "argMin");
                var n = [e];
                un("argMin", n, t.rank);
                for (
                  var r = an(t.shape, n),
                    i = r[0],
                    o = r[1],
                    a = Xn(i, "int32"),
                    s = T(o),
                    u = this.readSync(a.dataId),
                    c = this.readSync(t.dataId),
                    l = 0;
                  l < u.length;
                  ++l
                ) {
                  for (var h = l * s, f = c[h], p = 0, d = 0; d < s; ++d) {
                    var m = c[h + d];
                    m < f && ((f = m), (p = d));
                  }
                  u[l] = p;
                }
                return a;
              }),
              (t.prototype.argMax = function(t, e) {
                this.assertNotComplex(t, "argMax");
                var n = [e];
                un("argMax", n, t.rank);
                for (
                  var r = an(t.shape, n),
                    i = r[0],
                    o = r[1],
                    a = Xn(i, "int32"),
                    s = T(o),
                    u = this.readSync(a.dataId),
                    c = this.readSync(t.dataId),
                    l = 0;
                  l < u.length;
                  ++l
                ) {
                  for (var h = l * s, f = c[h], p = 0, d = 0; d < s; ++d) {
                    var m = c[h + d];
                    m > f && ((f = m), (p = d));
                  }
                  u[l] = p;
                }
                return a;
              }),
              (t.prototype.cumsum = function(t, e, n, r) {
                if ((this.assertNotComplex(t, "cumsum"), e !== t.rank - 1))
                  throw new Error(
                    "backend.cumsum in CPU expects an inner-most axis=" +
                      (t.rank - 1) +
                      " but got axis=" +
                      e
                  );
                for (
                  var i = At(t.dtype, "int32"),
                    o = Xn(t.shape, i),
                    a = this.readSync(o.dataId),
                    s = this.readSync(t.dataId),
                    u = t.shape[t.rank - 1],
                    c = r
                      ? function(t, e) {
                          return t + u - e - 1;
                        }
                      : function(t, e) {
                          return t + e;
                        },
                    l = 0;
                  l < s.length;
                  l += u
                )
                  for (var h = 0; h < u; h++) {
                    var f = c(l, h);
                    if (0 === h) a[f] = n ? 0 : s[f];
                    else {
                      var p = c(l, h - 1);
                      a[f] = n ? s[p] + a[p] : s[f] + a[p];
                    }
                  }
                return o;
              }),
              (t.prototype.equal = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "equal"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t === e ? 1 : 0;
                  })
                );
              }),
              (t.prototype.notEqual = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "notEqual"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t !== e ? 1 : 0;
                  })
                );
              }),
              (t.prototype.less = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "less"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t < e ? 1 : 0;
                  })
                );
              }),
              (t.prototype.lessEqual = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "lessEqual"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t <= e ? 1 : 0;
                  })
                );
              }),
              (t.prototype.greater = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "greater"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t > e ? 1 : 0;
                  })
                );
              }),
              (t.prototype.greaterEqual = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "greaterEqual"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t >= e ? 1 : 0;
                  })
                );
              }),
              (t.prototype.logicalNot = function(t) {
                this.assertNotComplex(t, "logicalNot");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Uint8Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  n[r] = e[r] ? 0 : 1;
                return yt.make(t.shape, { values: n }, "bool");
              }),
              (t.prototype.logicalAnd = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "logicalAnd"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t && e;
                  })
                );
              }),
              (t.prototype.logicalOr = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "logicalOr"),
                  this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                    return t || e;
                  })
                );
              }),
              (t.prototype.select = function(t, e, n) {
                this.assertNotComplex([t, e, n], "select");
                for (
                  var r = this.readSync(t.dataId),
                    i = this.readSync(e.dataId),
                    o = this.readSync(n.dataId),
                    a = Xn(e.shape, At(e.dtype, n.dtype)),
                    s = this.readSync(a.dataId),
                    u = 0,
                    c =
                      0 === t.rank || t.rank > 1 || 1 === e.rank
                        ? 1
                        : e.shape[1],
                    l = 0;
                  l < r.length;
                  l++
                )
                  for (var h = 0; h < c; h++)
                    1 === r[l] ? (s[u++] = i[l]) : (s[u++] = o[l]);
                return a;
              }),
              (t.prototype.where = function(t) {
                this.assertNotComplex([t], "where");
                var e = this.readSync(t.dataId);
                return vi(t.shape, e);
              }),
              (t.prototype.topk = function(t, e, n) {
                return (
                  this.assertNotComplex(t, "topk"),
                  Er(this.readSync(t.dataId), t.shape, t.dtype, e)
                );
              }),
              (t.prototype.min = function(t, e) {
                this.assertNotComplex(t, "min"), un("min", e, t.rank);
                for (
                  var n = an(t.shape, e),
                    r = n[0],
                    i = n[1],
                    o = Xn(r, t.dtype),
                    a = T(i),
                    s = this.readSync(o.dataId),
                    u = this.readSync(t.dataId),
                    c = 0;
                  c < s.length;
                  ++c
                ) {
                  for (var l = c * a, h = u[l], f = 0; f < a; ++f) {
                    var p = u[l + f];
                    p < h && (h = p);
                  }
                  s[c] = h;
                }
                return o;
              }),
              (t.prototype.minimum = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "minimum"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    return Math.min(t, e);
                  })
                );
              }),
              (t.prototype.mod = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "mod"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    var n = t % e;
                    return (t < 0 && e < 0) || (t >= 0 && e >= 0)
                      ? n
                      : (n + e) % e;
                  })
                );
              }),
              (t.prototype.max = function(t, e) {
                this.assertNotComplex(t, "max"), un("max", e, t.rank);
                for (
                  var n = an(t.shape, e),
                    r = n[0],
                    i = n[1],
                    o = Xn(r, t.dtype),
                    a = T(i),
                    s = this.readSync(o.dataId),
                    u = this.readSync(t.dataId),
                    c = 0;
                  c < s.length;
                  ++c
                ) {
                  for (var l = c * a, h = u[l], f = 0; f < a; ++f) {
                    var p = u[l + f];
                    p > h && (h = p);
                  }
                  s[c] = h;
                }
                return o;
              }),
              (t.prototype.maximum = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "maximum"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    return Math.max(t, e);
                  })
                );
              }),
              (t.prototype.all = function(t, e) {
                this.assertNotComplex(t, "all"), un("all", e, t.rank);
                for (
                  var n = an(t.shape, e),
                    r = n[0],
                    i = n[1],
                    o = Xn(r, t.dtype),
                    a = T(i),
                    s = this.readSync(o.dataId),
                    u = this.readSync(t.dataId),
                    c = 0;
                  c < s.length;
                  ++c
                ) {
                  for (var l = c * a, h = u[l], f = 0; f < a; ++f) {
                    var p = u[l + f];
                    h = h && p;
                  }
                  s[c] = h;
                }
                return o;
              }),
              (t.prototype.any = function(t, e) {
                this.assertNotComplex(t, "any"), un("any", e, t.rank);
                for (
                  var n = an(t.shape, e),
                    r = n[0],
                    i = n[1],
                    o = Xn(r, t.dtype),
                    a = T(i),
                    s = this.readSync(o.dataId),
                    u = this.readSync(t.dataId),
                    c = 0;
                  c < s.length;
                  ++c
                ) {
                  for (var l = c * a, h = u[l], f = 0; f < a; ++f) {
                    var p = u[l + f];
                    h = h || p;
                  }
                  s[c] = h;
                }
                return o;
              }),
              (t.prototype.squaredDifference = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "squaredDifference"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    var n = t - e;
                    return n * n;
                  })
                );
              }),
              (t.prototype.ceil = function(t) {
                this.assertNotComplex(t, "ceil");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  n[r] = Math.ceil(e[r]);
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.floor = function(t) {
                this.assertNotComplex(t, "floor");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  n[r] = Math.floor(e[r]);
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.sign = function(t) {
                this.assertNotComplex(t, "x");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  e[r] < 0 ? (n[r] = -1) : e[r] > 0 ? (n[r] = 1) : (n[r] = 0);
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.isNaN = function(t) {
                this.assertNotComplex(t, "x");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Uint8Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  Number.isNaN(e[r]) && (n[r] = 1);
                return yt.make(t.shape, { values: n }, "bool");
              }),
              (t.prototype.isInf = function(t) {
                this.assertNotComplex(t, "x");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Uint8Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  Math.abs(e[r]) === 1 / 0 && (n[r] = 1);
                return yt.make(t.shape, { values: n }, "bool");
              }),
              (t.prototype.isFinite = function(t) {
                this.assertNotComplex(t, "x");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Uint8Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  Number.isFinite(e[r]) && (n[r] = 1);
                return yt.make(t.shape, { values: n }, "bool");
              }),
              (t.prototype.round = function(t) {
                this.assertNotComplex(t, "round");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                ) {
                  var i = Math.floor(e[r]);
                  e[r] - i < 0.5
                    ? (n[r] = Math.floor(e[r]))
                    : e[r] - i > 0.5
                    ? (n[r] = Math.ceil(e[r]))
                    : (n[r] = i % 2 == 0 ? i : i + 1);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.exp = function(t) {
                this.assertNotComplex(t, "exp");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  n[r] = Math.exp(e[r]);
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.expm1 = function(t) {
                this.assertNotComplex(t, "expm1");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  n[r] = Math.expm1(e[r]);
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.log = function(t) {
                this.assertNotComplex(t, "log");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                ) {
                  var i = e[r];
                  n[r] = Math.log(i);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.log1p = function(t) {
                this.assertNotComplex(t, "log1p");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                ) {
                  var i = e[r];
                  n[r] = Math.log1p(i);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.sqrt = function(t) {
                this.assertNotComplex(t, "sqrt");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                ) {
                  var i = e[r];
                  n[r] = Math.sqrt(i);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.rsqrt = function(t) {
                this.assertNotComplex(t, "rsqrt");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                ) {
                  var i = e[r];
                  n[r] = 1 / Math.sqrt(i);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.square = function(t) {
                this.assertNotComplex(t, "square");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                ) {
                  var i = e[r];
                  n[r] = i * i;
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.reciprocal = function(t) {
                this.assertNotComplex(t, "reciprocal");
                for (
                  var e = this.readSync(t.dataId),
                    n = new Float32Array(e.length),
                    r = 0;
                  r < e.length;
                  ++r
                )
                  n[r] = 1 / e[r];
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.linear = function(t) {
                return t;
              }),
              (t.prototype.relu = function(t) {
                this.assertNotComplex(t, "relu");
                for (
                  var e = Xn(t.shape, t.dtype),
                    n = this.readSync(e.dataId),
                    r = this.readSync(t.dataId),
                    i = 0;
                  i < r.length;
                  ++i
                )
                  n[i] = Math.max(0, r[i]);
                return e;
              }),
              (t.prototype.prelu = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "prelu"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    return t < 0 ? e * t : t;
                  })
                );
              }),
              (t.prototype.elu = function(t) {
                this.assertNotComplex(t, "elu");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                ) {
                  var i = n[r];
                  e[r] = i >= 0 ? i : Math.exp(i) - 1;
                }
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.eluDer = function(t, e) {
                this.assertNotComplex([t, e], "eluDer");
                for (
                  var n = new Float32Array(e.size),
                    r = this.readSync(e.dataId),
                    i = this.readSync(t.dataId),
                    o = 0;
                  o < r.length;
                  ++o
                ) {
                  var a = r[o];
                  n[o] = a >= 1 ? i[o] : i[o] * (a + 1);
                }
                return yt.make(e.shape, { values: n });
              }),
              (t.prototype.selu = function(t) {
                this.assertNotComplex(t, "selu");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                ) {
                  var i = n[r];
                  e[r] =
                    i >= 0
                      ? 1.0507009873554805 * i
                      : 1.7580993408473768 * (Math.exp(i) - 1);
                }
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.clip = function(t, e, n) {
                this.assertNotComplex(t, "clip");
                for (
                  var r = new Float32Array(t.size),
                    i = this.readSync(t.dataId),
                    o = 0;
                  o < i.length;
                  ++o
                ) {
                  var a = i[o];
                  r[o] = a > n ? n : a < e ? e : a;
                }
                return yt.make(t.shape, { values: r });
              }),
              (t.prototype.abs = function(t) {
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.abs(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.complexAbs = function(t) {
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < t.size;
                  ++r
                ) {
                  var i = n[2 * r],
                    o = n[2 * r + 1];
                  e[r] = Math.hypot(i, o);
                }
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.int = function(t) {
                this.assertNotComplex(t, "int");
                for (
                  var e = new Int32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = n[r];
                return yt.make(t.shape, { values: e }, "int32");
              }),
              (t.prototype.sigmoid = function(t) {
                this.assertNotComplex(t, "sigmoid");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = 1 / (1 + Math.exp(-n[r]));
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.softplus = function(t) {
                this.assertNotComplex(t, "softplus");
                for (
                  var e = Math.log(1.1920928955078125e-7) + 2,
                    n = new Float32Array(t.size),
                    r = this.readSync(t.dataId),
                    i = 0;
                  i < r.length;
                  ++i
                ) {
                  var o,
                    a = r[i] > -e,
                    s = r[i] < e,
                    u = Math.exp(r[i]);
                  (o = s ? u : a ? r[i] : Math.log(1 + u)), (n[i] = o);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.sin = function(t) {
                this.assertNotComplex(t, "sin");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.sin(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.cos = function(t) {
                this.assertNotComplex(t, "cos");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.cos(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.tan = function(t) {
                this.assertNotComplex(t, "tan");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.tan(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.asin = function(t) {
                this.assertNotComplex(t, "asin");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.asin(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.acos = function(t) {
                this.assertNotComplex(t, "acos");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.acos(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.atan = function(t) {
                this.assertNotComplex(t, "atan");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.atan(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.atan2 = function(t, e) {
                return (
                  this.assertNotComplex([t, e], "atan2"),
                  this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                    return Math.atan2(t, e);
                  })
                );
              }),
              (t.prototype.sinh = function(t) {
                this.assertNotComplex(t, "sinh");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.sinh(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.cosh = function(t) {
                this.assertNotComplex(t, "cosh");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.cosh(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.tanh = function(t) {
                this.assertNotComplex(t, "tanh");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = E(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.asinh = function(t) {
                this.assertNotComplex(t, "asinh");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.asinh(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.acosh = function(t) {
                this.assertNotComplex(t, "acosh");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.acosh(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.atanh = function(t) {
                this.assertNotComplex(t, "atanh");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                )
                  e[r] = Math.atanh(n[r]);
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.erf = function(t) {
                this.assertNotComplex(t, "erf");
                for (
                  var e = new Float32Array(t.size),
                    n = this.readSync(t.dataId),
                    r = 0;
                  r < n.length;
                  ++r
                ) {
                  var i = n[r],
                    o = 1 / (1 + 0.3275911 * i);
                  e[r] =
                    1 -
                    ((((1.061405429 * o - 1.453152027) * o + 1.421413741) * o -
                      0.284496736) *
                      o +
                      0.254829592) *
                      o *
                      Math.exp(-i * i);
                }
                return yt.make(t.shape, { values: e });
              }),
              (t.prototype.step = function(t, e) {
                void 0 === e && (e = 0), this.assertNotComplex(t, "step");
                for (
                  var n = new Float32Array(t.size),
                    r = this.readSync(t.dataId),
                    i = 0;
                  i < r.length;
                  ++i
                ) {
                  var o = r[i];
                  isNaN(o) ? (n[i] = NaN) : (n[i] = o > 0 ? 1 : e);
                }
                return yt.make(t.shape, { values: n });
              }),
              (t.prototype.conv2d = function(t, e, n) {
                this.assertNotComplex([t, e], "conv2d");
                for (
                  var r = n.filterHeight,
                    i = n.filterWidth,
                    o = n.dilationHeight,
                    a = n.dilationWidth,
                    s = n.padInfo.left,
                    u = n.padInfo.top,
                    c = Gr(n.outShape, t.dtype),
                    l = this.readSync(t.dataId),
                    h = this.readSync(e.dataId),
                    f = c.values,
                    p = 0;
                  p < n.batchSize;
                  ++p
                )
                  for (
                    var d = p * t.strides[0], m = p * c.strides[0], y = 0;
                    y < n.outHeight;
                    ++y
                  )
                    for (
                      var g = m + y * c.strides[1],
                        v = y * n.strideHeight - u,
                        b = 0;
                      b < r;
                      b++
                    ) {
                      var w = v + b * o;
                      if (!(w < 0 || w >= n.inHeight))
                        for (
                          var _ = b * e.strides[0],
                            S = d + w * t.strides[1],
                            x = 0;
                          x < n.outWidth;
                          ++x
                        )
                          for (
                            var T = g + x * n.outChannels,
                              A = x * n.strideWidth - s,
                              k = 0;
                            k < i;
                            k++
                          ) {
                            var E = A + k * a;
                            if (!(E < 0 || E >= n.inWidth))
                              for (
                                var N = _ + k * e.strides[1],
                                  O = S + E * n.inChannels,
                                  C = N,
                                  I = 0;
                                I < n.inChannels;
                                ++I
                              ) {
                                for (
                                  var M = l[O + I], P = 0;
                                  P < n.outChannels;
                                  ++P
                                )
                                  f[T + P] += M * h[C + P];
                                C += n.outChannels;
                              }
                          }
                    }
                return c.toTensor();
              }),
              (t.prototype.conv3d = function(t, e, n) {
                for (
                  var r = n.filterDepth,
                    i = n.filterHeight,
                    o = n.filterWidth,
                    a = n.dilationDepth,
                    s = n.dilationHeight,
                    u = n.dilationWidth,
                    c = n.padInfo.front,
                    l = n.padInfo.left,
                    h = n.padInfo.top,
                    f = Gr(n.outShape, t.dtype),
                    p = this.readSync(t.dataId),
                    d = this.readSync(e.dataId),
                    m = f.values,
                    y = 0;
                  y < n.batchSize;
                  ++y
                )
                  for (
                    var g = y * t.strides[0], v = y * f.strides[0], b = 0;
                    b < n.outDepth;
                    ++b
                  )
                    for (
                      var w = v + b * f.strides[1],
                        _ = b * n.strideDepth - c,
                        S = 0;
                      S < r;
                      S++
                    ) {
                      var x = _ + S * a;
                      if (!(x < 0 || x >= n.inDepth))
                        for (
                          var T = S * e.strides[0],
                            A = g + x * t.strides[1],
                            k = 0;
                          k < n.outHeight;
                          ++k
                        )
                          for (
                            var E = w + k * f.strides[2],
                              N = k * n.strideHeight - h,
                              O = 0;
                            O < i;
                            O++
                          ) {
                            var C = N + O * s;
                            if (!(C < 0 || C >= n.inHeight))
                              for (
                                var I = T + O * e.strides[1],
                                  M = A + C * t.strides[2],
                                  P = 0;
                                P < n.outWidth;
                                ++P
                              )
                                for (
                                  var R = E + P * n.outChannels,
                                    D = P * n.strideWidth - l,
                                    F = 0;
                                  F < o;
                                  F++
                                ) {
                                  var z = D + F * u;
                                  if (!(z < 0 || z >= n.inWidth))
                                    for (
                                      var L = I + F * e.strides[2],
                                        j = M + z * n.inChannels,
                                        B = L,
                                        q = 0;
                                      q < n.inChannels;
                                      ++q
                                    ) {
                                      for (
                                        var U = p[j + q], V = 0;
                                        V < n.outChannels;
                                        ++V
                                      )
                                        m[R + V] += U * d[B + V];
                                      B += n.outChannels;
                                    }
                                }
                          }
                    }
                return f.toTensor();
              }),
              (t.prototype.conv2dDerInput = function(t, e, n) {
                this.assertNotComplex([t, e], "conv2dDerInput");
                for (
                  var r = Gr(n.inShape, "float32"),
                    i = r.values,
                    o = r.strides,
                    a = o[0],
                    s = o[1],
                    u = o[2],
                    c = this.readSync(t.dataId),
                    l = t.strides,
                    h = l[0],
                    f = l[1],
                    p = l[2],
                    d = this.readSync(e.dataId),
                    m = e.strides,
                    y = m[0],
                    g = m[1],
                    v = m[2],
                    b = n.batchSize,
                    w = n.filterHeight,
                    _ = n.filterWidth,
                    S = n.inChannels,
                    x = n.inHeight,
                    T = n.inWidth,
                    A = n.outChannels,
                    k = n.outHeight,
                    E = n.outWidth,
                    N = n.strideHeight,
                    O = n.strideWidth,
                    C = w - 1 - n.padInfo.top,
                    I = _ - 1 - n.padInfo.left,
                    M = 0;
                  M < b;
                  ++M
                )
                  for (var P = 0; P < S; ++P)
                    for (var R = 0; R < x; ++R)
                      for (
                        var D = R - C,
                          F = Math.max(0, Math.ceil(D / N)),
                          z = Math.min(k, (w + D) / N),
                          L = 0;
                        L < T;
                        ++L
                      ) {
                        for (
                          var j = L - I,
                            B = Math.max(0, Math.ceil(j / O)),
                            q = Math.min(E, (_ + j) / O),
                            U = 0,
                            V = F;
                          V < z;
                          ++V
                        )
                          for (var W = V * N - D, G = B; G < q; ++G)
                            for (
                              var H = h * M + f * V + p * G,
                                K =
                                  y * (w - 1 - W) +
                                  g * (_ - 1 - (G * O - j)) +
                                  v * P,
                                Q = 0;
                              Q < A;
                              ++Q
                            )
                              U += c[H + Q] * d[K + Q];
                        i[a * M + s * R + u * L + P] = U;
                      }
                return r.toTensor();
              }),
              (t.prototype.conv3dDerInput = function(t, e, n) {
                for (
                  var r = Gr(n.inShape, "float32"),
                    i = r.values,
                    o = r.strides,
                    a = o[0],
                    s = o[1],
                    u = o[2],
                    c = o[3],
                    l = this.readSync(t.dataId),
                    h = t.strides,
                    f = h[0],
                    p = h[1],
                    d = h[2],
                    m = h[3],
                    y = this.readSync(e.dataId),
                    g = e.strides,
                    v = g[0],
                    b = g[1],
                    w = g[2],
                    _ = g[3],
                    S = n.batchSize,
                    x = n.filterDepth,
                    T = n.filterHeight,
                    A = n.filterWidth,
                    k = n.inChannels,
                    E = n.inDepth,
                    N = n.inHeight,
                    O = n.inWidth,
                    C = n.outChannels,
                    I = n.outDepth,
                    M = n.outHeight,
                    P = n.outWidth,
                    R = n.strideDepth,
                    D = n.strideHeight,
                    F = n.strideWidth,
                    z = x - 1 - n.padInfo.front,
                    L = T - 1 - n.padInfo.top,
                    j = A - 1 - n.padInfo.left,
                    B = 0;
                  B < S;
                  ++B
                )
                  for (var q = 0; q < k; ++q)
                    for (var U = 0; U < E; ++U)
                      for (
                        var V = U - z,
                          W = Math.max(0, Math.ceil(V / R)),
                          G = Math.min(I, (x + V) / R),
                          H = 0;
                        H < N;
                        ++H
                      )
                        for (
                          var K = H - L,
                            Q = Math.max(0, Math.ceil(K / D)),
                            X = Math.min(M, (T + K) / D),
                            $ = 0;
                          $ < O;
                          ++$
                        ) {
                          for (
                            var Y = $ - j,
                              J = Math.max(0, Math.ceil(Y / F)),
                              Z = Math.min(P, (A + Y) / F),
                              tt = 0,
                              et = W;
                            et < G;
                            ++et
                          )
                            for (var nt = et * R - V, rt = Q; rt < X; ++rt)
                              for (var it = rt * D - K, ot = J; ot < Z; ++ot)
                                for (
                                  var at = f * B + p * et + d * rt + m * ot,
                                    st =
                                      v * (x - 1 - nt) +
                                      b * (T - 1 - it) +
                                      w * (A - 1 - (ot * F - Y)) +
                                      _ * q,
                                    ut = 0;
                                  ut < C;
                                  ++ut
                                )
                                  tt += l[at + ut] * y[st + ut];
                          i[a * B + s * U + u * H + c * $ + q] = tt;
                        }
                return r.toTensor();
              }),
              (t.prototype.conv2dDerFilter = function(t, e, n) {
                this.assertNotComplex([t, e], "conv2dDerFilter");
                for (
                  var r = n.strideHeight,
                    i = n.strideWidth,
                    o = n.filterHeight,
                    a = n.filterWidth,
                    s = Gr(n.filterShape, "float32"),
                    u = n.padInfo.left,
                    c = n.padInfo.top,
                    l = this.bufferSync(t),
                    h = this.bufferSync(e),
                    f = 0;
                  f < o;
                  ++f
                )
                  for (
                    var p = Math.max(0, Math.ceil((c - f) / r)),
                      d = Math.min(n.outHeight, (n.inHeight + c - f) / r),
                      m = 0;
                    m < a;
                    ++m
                  )
                    for (
                      var y = Math.max(0, Math.ceil((u - m) / i)),
                        g = Math.min(n.outWidth, (n.inWidth + u - m) / i),
                        v = 0;
                      v < n.inChannels;
                      ++v
                    )
                      for (var b = 0; b < n.outChannels; ++b) {
                        for (var w = 0, _ = 0; _ < n.batchSize; ++_)
                          for (var S = p; S < d; ++S)
                            for (var x = f + S * r - c, T = y; T < g; ++T) {
                              var A = m + T * i - u;
                              w += l.get(_, x, A, v) * h.get(_, S, T, b);
                            }
                        s.set(w, f, m, v, b);
                      }
                return s.toTensor();
              }),
              (t.prototype.conv3dDerFilter = function(t, e, n) {
                for (
                  var r = n.strideDepth,
                    i = n.strideHeight,
                    o = n.strideWidth,
                    a = n.filterDepth,
                    s = n.filterHeight,
                    u = n.filterWidth,
                    c = Gr(n.filterShape, "float32"),
                    l = c.values,
                    h = c.strides,
                    f = h[0],
                    p = h[1],
                    d = h[2],
                    m = h[3],
                    y = this.readSync(e.dataId),
                    g = e.strides,
                    v = g[0],
                    b = g[1],
                    w = g[2],
                    _ = g[3],
                    S = this.readSync(t.dataId),
                    x = t.strides,
                    T = x[0],
                    A = x[1],
                    k = x[2],
                    E = x[3],
                    N = n.padInfo.front,
                    O = n.padInfo.left,
                    C = n.padInfo.top,
                    I = 0;
                  I < a;
                  ++I
                )
                  for (
                    var M = Math.max(0, Math.ceil((N - I) / r)),
                      P = Math.min(n.outDepth, (n.inDepth + N - I) / r),
                      R = I * f,
                      D = 0;
                    D < s;
                    ++D
                  )
                    for (
                      var F = Math.max(0, Math.ceil((C - D) / i)),
                        z = Math.min(n.outHeight, (n.inHeight + C - D) / i),
                        L = D * p + R,
                        j = 0;
                      j < u;
                      ++j
                    )
                      for (
                        var B = Math.max(0, Math.ceil((O - j) / o)),
                          q = Math.min(n.outWidth, (n.inWidth + O - j) / o),
                          U = j * d + L,
                          V = 0;
                        V < n.inChannels;
                        ++V
                      )
                        for (var W = V * m + U, G = 0; G < n.outChannels; ++G) {
                          for (var H = 0, K = 0; K < n.batchSize; ++K)
                            for (var Q = K * T, X = K * v, $ = M; $ < P; ++$)
                              for (
                                var Y = (I + $ * r - N) * A + Q,
                                  J = $ * b + X,
                                  Z = F;
                                Z < z;
                                ++Z
                              )
                                for (
                                  var tt = (D + Z * i - C) * k + Y,
                                    et = Z * w + J,
                                    nt = B;
                                  nt < q;
                                  ++nt
                                ) {
                                  var rt = nt * _ + et;
                                  H +=
                                    S[(j + nt * o - O) * E + tt + V] *
                                    y[rt + G];
                                }
                          l[W + G] = H;
                        }
                return c.toTensor();
              }),
              (t.prototype.depthwiseConv2D = function(t, e, n) {
                this.assertNotComplex([t, e], "depthwiseConv2D");
                for (
                  var r = n.filterHeight,
                    i = n.filterWidth,
                    o = n.dilationHeight,
                    a = n.dilationWidth,
                    s = n.padInfo.left,
                    u = n.padInfo.top,
                    c = n.outChannels / n.inChannels,
                    l = Gr(n.outShape, t.dtype),
                    h = this.readSync(t.dataId),
                    f = this.readSync(e.dataId),
                    p = l.values,
                    d = 0;
                  d < n.batchSize;
                  ++d
                )
                  for (
                    var m = d * t.strides[0], y = d * l.strides[0], g = 0;
                    g < n.outHeight;
                    ++g
                  )
                    for (
                      var v = y + g * l.strides[1],
                        b = g * n.strideHeight - s,
                        w = 0;
                      w < r;
                      ++w
                    ) {
                      var _ = b + w * o;
                      if (!(_ < 0 || _ >= n.inHeight))
                        for (
                          var S = w * e.strides[0],
                            x = m + _ * t.strides[1],
                            T = 0;
                          T < n.outWidth;
                          ++T
                        )
                          for (
                            var A = v + T * l.strides[2],
                              k = T * n.strideWidth - u,
                              E = 0;
                            E < i;
                            ++E
                          ) {
                            var N = k + E * a;
                            if (!(N < 0 || N >= n.inWidth))
                              for (
                                var O = S + E * e.strides[1],
                                  C = x + N * n.inChannels,
                                  I = A,
                                  M = O,
                                  P = 0;
                                P < n.inChannels;
                                ++P
                              ) {
                                for (var R = h[C + P], D = 0; D < c; ++D)
                                  p[I + D] += R * f[M + D];
                                (I += c), (M += c);
                              }
                          }
                    }
                return l.toTensor();
              }),
              (t.prototype.depthwiseConv2DDerInput = function(t, e, n) {
                this.assertNotComplex([t, e], "depthwiseConv2DDerInput");
                for (
                  var r = Gr(n.inShape, "float32"),
                    i = r.values,
                    o = r.strides,
                    a = o[0],
                    s = o[1],
                    u = o[2],
                    c = this.readSync(t.dataId),
                    l = t.strides,
                    h = l[0],
                    f = l[1],
                    p = l[2],
                    d = this.readSync(e.dataId),
                    m = e.strides,
                    y = m[0],
                    g = m[1],
                    v = m[2],
                    b = n.batchSize,
                    w = n.filterHeight,
                    _ = n.filterWidth,
                    S = n.inChannels,
                    x = n.inHeight,
                    T = n.inWidth,
                    A = n.outChannels,
                    k = n.outHeight,
                    E = n.outWidth,
                    N = n.strideHeight,
                    O = n.strideWidth,
                    C = w - 1 - n.padInfo.top,
                    I = _ - 1 - n.padInfo.left,
                    M = A / S,
                    P = 0;
                  P < b;
                  ++P
                )
                  for (var R = 0; R < S; ++R)
                    for (var D = 0; D < x; ++D)
                      for (
                        var F = D - C,
                          z = Math.max(0, Math.ceil(F / N)),
                          L = Math.min(k, (w + F) / N),
                          j = 0;
                        j < T;
                        ++j
                      ) {
                        for (
                          var B = j - I,
                            q = Math.max(0, Math.ceil(B / O)),
                            U = Math.min(E, (_ + B) / O),
                            V = 0,
                            W = z;
                          W < L;
                          ++W
                        )
                          for (var G = W * N - F, H = q; H < U; ++H)
                            for (
                              var K = h * P + f * W + p * H,
                                Q =
                                  y * (w - 1 - G) +
                                  g * (_ - 1 - (H * O - B)) +
                                  v * R,
                                X = 0;
                              X < M;
                              ++X
                            )
                              V += c[K + (R * M + X)] * d[Q + X];
                        i[a * P + s * D + u * j + R] = V;
                      }
                return r.toTensor();
              }),
              (t.prototype.depthwiseConv2DDerFilter = function(t, e, n) {
                this.assertNotComplex([t, e], "depthwiseConv2DDerFilter");
                for (
                  var r = n.strideHeight,
                    i = n.strideWidth,
                    o = n.filterHeight,
                    a = n.filterWidth,
                    s = Gr(n.filterShape, "float32"),
                    u = n.padInfo.left,
                    c = n.padInfo.top,
                    l = n.outChannels / n.inChannels,
                    h = this.bufferSync(t),
                    f = this.bufferSync(e),
                    p = 0;
                  p < o;
                  ++p
                )
                  for (
                    var d = Math.max(0, Math.ceil((c - p) / r)),
                      m = Math.min(n.outHeight, (n.inHeight + c - p) / r),
                      y = 0;
                    y < a;
                    ++y
                  )
                    for (
                      var g = Math.max(0, Math.ceil((u - y) / i)),
                        v = Math.min(n.outWidth, (n.inWidth + u - y) / i),
                        b = 0;
                      b < n.outChannels;
                      ++b
                    ) {
                      for (
                        var w = Math.trunc(b / l), _ = b % l, S = 0, x = 0;
                        x < n.batchSize;
                        ++x
                      )
                        for (var T = d; T < m; ++T)
                          for (var A = p + T * r - c, k = g; k < v; ++k) {
                            var E = y + k * i - u;
                            S += h.get(x, A, E, w) * f.get(x, T, k, b);
                          }
                      s.set(S, p, y, w, _);
                    }
                return s.toTensor();
              }),
              (t.prototype.tile = function(t, e) {
                this.assertNotComplex(t, "tile");
                for (var n = new Array(t.rank), r = 0; r < n.length; r++)
                  n[r] = t.shape[r] * e[r];
                var i = Gr(n, t.dtype),
                  o = this.bufferSync(t);
                for (r = 0; r < i.values.length; ++r) {
                  for (
                    var a = i.indexToLoc(r), s = new Array(t.rank), u = 0;
                    u < s.length;
                    u++
                  )
                    s[u] = a[u] % t.shape[u];
                  var c = o.locToIndex(s);
                  i.values[r] = o.values[c];
                }
                return i.toTensor();
              }),
              (t.prototype.pad = function(t, e, n) {
                this.assertNotComplex(t, "pad");
                var r = e.map(function(e, n) {
                    return e[0] + t.shape[n] + e[1];
                  }),
                  i = e.map(function(t) {
                    return t[0];
                  }),
                  o = this.bufferSync(t),
                  a = Gr(r, t.dtype);
                0 !== n && a.values.fill(n);
                for (var s = 0; s < t.size; s++) {
                  var u = o.indexToLoc(s),
                    c = u.map(function(t, e) {
                      return t + i[e];
                    });
                  a.set.apply(a, [o.get.apply(o, u)].concat(c));
                }
                return a.toTensor();
              }),
              (t.prototype.transpose = function(t, e) {
                this.assertNotComplex(t, "transpose");
                for (var n = new Array(t.rank), r = 0; r < n.length; r++)
                  n[r] = t.shape[e[r]];
                var i = this.readSync(t.dataId),
                  o = Gr(n, t.dtype),
                  a = this.bufferSync(t);
                for (r = 0; r < t.size; ++r) {
                  for (
                    var s = a.indexToLoc(r), u = new Array(s.length), c = 0;
                    c < u.length;
                    c++
                  )
                    u[c] = s[e[c]];
                  var l = o.locToIndex(u);
                  o.values[l] = i[r];
                }
                return o.toTensor();
              }),
              (t.prototype.gather = function(t, e, n) {
                this.assertNotComplex([t, e], "gather");
                var r = t.shape.slice(),
                  i = this.readSync(e.dataId);
                r[n] = i.length;
                for (
                  var o = Gr(r, t.dtype), a = this.bufferSync(t), s = 0;
                  s < o.size;
                  ++s
                ) {
                  var u = o.indexToLoc(s),
                    c = u.slice();
                  c[n] = i[u[n]];
                  var l = a.locToIndex(c);
                  o.values[s] = a.values[l];
                }
                return o.toTensor();
              }),
              (t.prototype.batchToSpaceND = function(t, e, n) {
                this.assertNotComplex([t], "batchToSpaceND");
                var r = e.reduce(function(t, e) {
                    return t * e;
                  }),
                  i = Je(t.shape, e, r),
                  o = Ze(i.length, e.length),
                  a = tn(t.shape, e, r),
                  s = en(n, e.length),
                  u = nn(a, n, e.length);
                return t
                  .reshape(i)
                  .transpose(o)
                  .reshape(a)
                  .slice(s, u);
              }),
              (t.prototype.spaceToBatchND = function(t, e, n) {
                this.assertNotComplex([t], "spaceToBatchND");
                var r = e.reduce(function(t, e) {
                    return t * e;
                  }),
                  i = [[0, 0]];
                i.push.apply(i, n);
                for (var o = 1 + e.length; o < t.shape.length; ++o)
                  i.push([0, 0]);
                var a = t.pad(i),
                  s = Je(a.shape, e, r, !1),
                  u = Ze(s.length, e.length, !1),
                  c = tn(a.shape, e, r, !1);
                return a
                  .reshape(s)
                  .transpose(u)
                  .reshape(c);
              }),
              (t.prototype.pool = function(t, e, n) {
                this.assertNotComplex(t, "pool");
                for (
                  var r = e.strideHeight,
                    i = e.strideWidth,
                    o = e.dilationHeight,
                    a = e.dilationWidth,
                    s = e.effectiveFilterHeight,
                    u = e.effectiveFilterWidth,
                    c = e.padInfo.top,
                    l = e.padInfo.left,
                    h =
                      "max" === n
                        ? Number.NEGATIVE_INFINITY
                        : Number.POSITIVE_INFINITY,
                    f = this.readSync(t.dataId),
                    p = Gr(e.outShape, t.dtype),
                    d = p.values,
                    m = e.outShape[1] * e.outShape[2] * e.outShape[3],
                    y = e.outShape[2] * e.outShape[3],
                    g = e.outShape[3],
                    v = 0;
                  v < e.batchSize;
                  ++v
                )
                  for (
                    var b = v * m, w = v * t.strides[0], _ = 0;
                    _ < e.inChannels;
                    ++_
                  )
                    for (var S = 0; S < e.outHeight; ++S)
                      for (
                        var x = S * r - c,
                          T = Math.max(0, x),
                          A = Math.min(e.inHeight, s + x),
                          k = b + S * y,
                          E = 0;
                        E < e.outWidth;
                        ++E
                      ) {
                        for (
                          var N = E * i - l,
                            O = Math.max(0, N),
                            C = Math.min(e.inWidth, u + N),
                            I = h,
                            M = 0,
                            P = 0,
                            R = T;
                          R < A;
                          R += o
                        ) {
                          for (
                            var D = w + R * t.strides[1], F = O;
                            F < C;
                            F += a
                          ) {
                            var z = f[D + F * t.strides[2] + _];
                            "max" === n && z > I
                              ? (I = z)
                              : "avg" === n && ((M += z), P++);
                          }
                          if (isNaN(I)) break;
                        }
                        d[k + E * g + _] = "avg" === n ? M / P : I;
                      }
                return p.toTensor();
              }),
              (t.prototype.maxPool = function(t, e) {
                return this.pool(t, e, "max");
              }),
              (t.prototype.maxPoolPositions = function(t, e) {
                for (
                  var n = Gr(e.outShape, "int32"),
                    r = e.strideHeight,
                    i = e.strideWidth,
                    o = e.dilationHeight,
                    a = e.dilationWidth,
                    s = e.effectiveFilterHeight,
                    u = e.effectiveFilterWidth,
                    c = e.padInfo.top,
                    l = e.padInfo.left,
                    h = this.bufferSync(t),
                    f = 0;
                  f < e.batchSize;
                  ++f
                )
                  for (var p = 0; p < e.inChannels; ++p)
                    for (var d = 0; d < e.outHeight; ++d) {
                      for (var m = d * r - c, y = m; y < 0; ) y += o;
                      for (
                        var g = Math.min(e.inHeight, s + m), v = 0;
                        v < e.outWidth;
                        ++v
                      ) {
                        for (var b = v * i - l, w = b; w < 0; ) w += a;
                        for (
                          var _ = Math.min(e.inWidth, u + b),
                            S = Number.NEGATIVE_INFINITY,
                            x = -1,
                            T = y;
                          T < g;
                          T += o
                        )
                          for (var A = T - m, k = w; k < _; k += a) {
                            var E = k - b,
                              N = h.get(f, T, k, p);
                            N > S && ((S = N), (x = A * u + E));
                          }
                        n.set(x, f, d, v, p);
                      }
                    }
                return n.toTensor();
              }),
              (t.prototype.maxPoolBackprop = function(t, e, n, r) {
                this.assertNotComplex([e, n], "maxPoolBackprop");
                for (
                  var i = this.maxPoolPositions(e, r),
                    o = r.strideHeight,
                    a = r.strideWidth,
                    s = r.dilationHeight,
                    u = r.dilationWidth,
                    c = r.effectiveFilterHeight,
                    l = r.effectiveFilterWidth,
                    h = l - 1 - r.padInfo.left,
                    f = c - 1 - r.padInfo.top,
                    p = Gr(e.shape, "float32"),
                    d = this.bufferSync(i),
                    m = this.bufferSync(t),
                    y = 0;
                  y < r.batchSize;
                  ++y
                )
                  for (var g = 0; g < r.inChannels; ++g)
                    for (var v = 0; v < r.inHeight; ++v)
                      for (var b = 0; b < r.inWidth; ++b) {
                        for (
                          var w = v - f, _ = b - h, S = 0, x = 0;
                          x < c;
                          x += s
                        ) {
                          var T = (w + x) / o;
                          if (
                            !(T < 0 || T >= r.outHeight || Math.floor(T) !== T)
                          )
                            for (var A = 0; A < l; A += u) {
                              var k = (_ + A) / a;
                              if (
                                !(
                                  k < 0 ||
                                  k >= r.outWidth ||
                                  Math.floor(k) !== k
                                )
                              ) {
                                var E =
                                  c * l - 1 - d.get(y, T, k, g) === x * l + A
                                    ? 1
                                    : 0;
                                0 !== E && (S += m.get(y, T, k, g) * E);
                              }
                            }
                        }
                        p.set(S, y, v, b, g);
                      }
                return p.toTensor();
              }),
              (t.prototype.avgPoolBackprop = function(t, e, n) {
                this.assertNotComplex([t, e], "avgPoolBackprop");
                for (
                  var r = n.strideHeight,
                    i = n.strideWidth,
                    o = n.filterHeight,
                    a = n.filterWidth,
                    s = n.dilationHeight,
                    u = n.dilationWidth,
                    c = n.effectiveFilterHeight,
                    l = n.effectiveFilterWidth,
                    h = l - 1 - n.padInfo.left,
                    f = c - 1 - n.padInfo.top,
                    p = Gr(e.shape, "float32"),
                    d = 1 / (o * a),
                    m = this.bufferSync(t),
                    y = 0;
                  y < n.batchSize;
                  ++y
                )
                  for (var g = 0; g < n.inChannels; ++g)
                    for (var v = 0; v < n.inHeight; ++v)
                      for (var b = 0; b < n.inWidth; ++b) {
                        for (
                          var w = v - f, _ = b - h, S = 0, x = 0;
                          x < c;
                          x += s
                        ) {
                          var T = (w + x) / r;
                          if (
                            !(T < 0 || T >= n.outHeight || Math.floor(T) !== T)
                          )
                            for (var A = 0; A < l; A += u) {
                              var k = (_ + A) / i;
                              k < 0 ||
                                k >= n.outWidth ||
                                Math.floor(k) !== k ||
                                (S += m.get(y, T, k, g));
                            }
                        }
                        p.set(S * d, y, v, b, g);
                      }
                return p.toTensor();
              }),
              (t.prototype.cast = function(t, e) {
                return yr(t, e, this);
              }),
              (t.prototype.reshape = function(t, e) {
                return gr(t, e);
              }),
              (t.prototype.avgPool = function(t, e) {
                return (
                  this.assertNotComplex(t, "avgPool"),
                  this.pool(t, e, "avg").toFloat()
                );
              }),
              (t.prototype.resizeBilinear = function(t, e, n, r) {
                this.assertNotComplex(t, "resizeBilinear");
                for (
                  var i = t.shape,
                    o = i[0],
                    a = i[1],
                    s = i[2],
                    u = i[3],
                    c = this.readSync(t.dataId),
                    l = new Float32Array(T([o, e, n, u])),
                    h = [r && e > 1 ? a - 1 : a, r && n > 1 ? s - 1 : s],
                    f = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],
                    p = 0,
                    d = h[0] / f[0],
                    m = h[1] / f[1],
                    y = 0;
                  y < o;
                  y++
                )
                  for (var g = 0; g < e; g++)
                    for (
                      var v = d * g,
                        b = Math.floor(v),
                        w = v - b,
                        _ = Math.min(a - 1, Math.ceil(v)),
                        S = y * t.strides[0] + b * t.strides[1],
                        x = y * t.strides[0] + _ * t.strides[1],
                        A = 0;
                      A < n;
                      A++
                    )
                      for (
                        var k = m * A,
                          E = Math.floor(k),
                          N = k - E,
                          O = Math.min(s - 1, Math.ceil(k)),
                          C = S + E * t.strides[2],
                          I = x + E * t.strides[2],
                          M = S + +O * t.strides[2],
                          P = x + O * t.strides[2],
                          R = 0;
                        R < u;
                        R++
                      ) {
                        var D = c[C + R],
                          F = c[I + R],
                          z = D + (c[M + R] - D) * N,
                          L = z + (F + (c[P + R] - F) * N - z) * w;
                        l[p++] = L;
                      }
                return Bn(l, [o, e, n, u]);
              }),
              (t.prototype.resizeBilinearBackprop = function(t, e, n) {
                this.assertNotComplex([t, e], "resizeBilinearBackprop");
                for (
                  var r = e.shape,
                    i = r[0],
                    o = r[1],
                    a = r[2],
                    s = r[3],
                    u = t.shape,
                    c = u[1],
                    l = u[2],
                    h = new Float32Array(i * o * a * s),
                    f = [n && c > 1 ? o - 1 : o, n && l > 1 ? a - 1 : a],
                    p = [n && c > 1 ? c - 1 : c, n && l > 1 ? l - 1 : l],
                    d = f[0] / p[0],
                    m = f[1] / p[1],
                    y = this.readSync(t.dataId),
                    g = 0,
                    v = 0;
                  v < i;
                  v++
                )
                  for (var b = v * e.strides[0], w = 0; w < c; w++)
                    for (
                      var _ = w * d,
                        S = Math.floor(_),
                        x = Math.min(Math.ceil(_), o - 1),
                        T = b + S * e.strides[1],
                        A = b + x * e.strides[1],
                        k = _ - S,
                        E = 1 - k,
                        N = 0;
                      N < l;
                      N++
                    )
                      for (
                        var O = N * m,
                          C = Math.floor(O),
                          I = Math.min(Math.ceil(O), a - 1),
                          M = O - C,
                          P = 1 - M,
                          R = T + C * e.strides[2],
                          D = T + I * e.strides[2],
                          F = A + C * e.strides[2],
                          z = A + I * e.strides[2],
                          L = E * P,
                          j = E * M,
                          B = k * P,
                          q = k * M,
                          U = 0;
                        U < s;
                        U++
                      ) {
                        var V = y[g++];
                        (h[R + U] += V * L),
                          (h[D + U] += V * j),
                          (h[F + U] += V * B),
                          (h[z + U] += V * q);
                      }
                return Gn(h, [i, a, o, s], e.dtype);
              }),
              (t.prototype.resizeNearestNeighbor = function(t, e, n, r) {
                this.assertNotComplex(t, "resizeNearestNeighbor");
                for (
                  var i = t.shape,
                    o = i[0],
                    a = i[1],
                    s = i[2],
                    u = i[3],
                    c = this.readSync(t.dataId),
                    l = new Float32Array(o * e * n * u),
                    h = [r && e > 1 ? a - 1 : a, r && n > 1 ? s - 1 : s],
                    f = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],
                    p = h[0] / f[0],
                    d = h[1] / f[1],
                    m = 0,
                    y = 0;
                  y < o;
                  y++
                )
                  for (var g = y * t.strides[0], v = 0; v < e; v++)
                    for (
                      var b = p * v,
                        w =
                          g +
                          Math.min(a - 1, r ? Math.round(b) : Math.floor(b)) *
                            t.strides[1],
                        _ = 0;
                      _ < n;
                      _++
                    )
                      for (
                        var S = d * _,
                          x =
                            w +
                            Math.min(s - 1, r ? Math.round(S) : Math.floor(S)) *
                              t.strides[2],
                          T = 0;
                        T < u;
                        T++
                      ) {
                        var A = c[x + T];
                        l[m++] = A;
                      }
                return Bn(l, [o, e, n, u], t.dtype);
              }),
              (t.prototype.resizeNearestNeighborBackprop = function(t, e, n) {
                this.assertNotComplex([t, e], "resizeNearestNeighborBackprop");
                for (
                  var r = e.shape,
                    i = r[0],
                    o = r[1],
                    a = r[2],
                    s = r[3],
                    u = t.shape,
                    c = u[1],
                    l = u[2],
                    h = new Float32Array(i * o * a * s),
                    f = this.readSync(t.dataId),
                    p = [n && c > 1 ? o - 1 : o, n && l > 1 ? a - 1 : a],
                    d = [n && c > 1 ? c - 1 : c, n && l > 1 ? l - 1 : l],
                    m = p[0] / d[0],
                    y = p[1] / d[1],
                    g = 1 / m,
                    v = 1 / y,
                    b = 2 * Math.ceil(g) + 2,
                    w = 2 * Math.ceil(v) + 2,
                    _ = 0;
                  _ < i;
                  _++
                )
                  for (var S = _ * e.strides[0], x = 0; x < o; x++)
                    for (
                      var T = S + x * e.strides[1],
                        A = Math.floor(x * g),
                        k = Math.floor(A - b / 2),
                        E = 0;
                      E < a;
                      E++
                    )
                      for (
                        var N = T + E * e.strides[2],
                          O = Math.floor(E * v),
                          C = Math.floor(O - w / 2),
                          I = 0;
                        I < s;
                        I++
                      ) {
                        for (var M = 0, P = 0; P < b; P++) {
                          var R = P + k;
                          if (!(R < 0 || R >= c)) {
                            var D = S + R * t.strides[1],
                              F = R * m;
                            if (
                              x ===
                              Math.min(o - 1, n ? Math.round(F) : Math.floor(F))
                            )
                              for (var z = 0; z < w; z++) {
                                var L = z + C;
                                if (!(L < 0 || L >= l)) {
                                  var j = D + L * t.strides[2],
                                    B = L * y;
                                  E ===
                                    Math.min(
                                      a - 1,
                                      n ? Math.round(B) : Math.floor(B)
                                    ) && (M += f[j + I]);
                                }
                              }
                          }
                        }
                        h[N + I] = M;
                      }
                return Gn(h, e.shape, e.dtype);
              }),
              (t.prototype.batchNormalization = function(t, e, n, r, i, o) {
                this.assertNotComplex([t, e, n, i, o], "batchNorm");
                for (
                  var a = this.readSync(t.dataId),
                    s = this.readSync(e.dataId),
                    u = this.readSync(n.dataId),
                    c = i ? this.readSync(i.dataId) : new Float32Array([1]),
                    l = o ? this.readSync(o.dataId) : new Float32Array([0]),
                    h = new Float32Array(a.length),
                    f = l.length,
                    p = c.length,
                    d = u.length,
                    m = s.length,
                    y = 0,
                    g = 0,
                    v = 0,
                    b = 0,
                    w = 0;
                  w < a.length;
                  ++w
                )
                  (h[w] =
                    l[y++] +
                    ((a[w] - s[g++]) * c[v++]) / Math.sqrt(u[b++] + r)),
                    y >= f && (y = 0),
                    g >= m && (g = 0),
                    v >= p && (v = 0),
                    b >= d && (b = 0);
                return Gn(h, t.shape);
              }),
              (t.prototype.localResponseNormalization4D = function(
                t,
                e,
                n,
                r,
                i
              ) {
                this.assertNotComplex(t, "localResponseNormalization4D");
                var o = t.shape[3],
                  a = o - 1,
                  s = this.readSync(t.dataId),
                  u = t.size,
                  c = new Float32Array(u);
                function l(t) {
                  for (
                    var n = t % o,
                      r = t - n + Math.max(0, n - e),
                      i = t - n + Math.min(n + e, a),
                      u = 0;
                    r <= i;
                    r++
                  ) {
                    var c = s[r];
                    u += c * c;
                  }
                  return u;
                }
                for (var h = 0; h < u; h++) {
                  var f = l(h),
                    p = s[h] * Math.pow(n + r * f, -i);
                  c[h] = p;
                }
                return Gn(c, t.shape);
              }),
              (t.prototype.LRNGrad = function(t, e, n, r, i, o, a) {
                this.assertNotComplex(t, "LRNGrad");
                for (
                  var s = t.shape[3],
                    u = this.readSync(t.dataId),
                    c = this.readSync(e.dataId),
                    l = this.readSync(n.dataId),
                    h = new Float32Array(t.size),
                    f = t.size,
                    p = 0;
                  p < f;
                  p++
                ) {
                  for (
                    var d = p % s,
                      m = p - d + Math.max(0, d - r),
                      y = p - d + Math.min(s, d + r + 1),
                      g = 0,
                      v = m;
                    v < y;
                    v++
                  )
                    g += Math.pow(c[v], 2);
                  for (g = o * g + i, v = m; v < y; v++) {
                    var b = (-2 * o * a * c[v] * l[p]) / g;
                    p === v && (b += Math.pow(g, -a)), (b *= u[p]), (h[v] += b);
                  }
                }
                return Gn(h, t.shape);
              }),
              (t.prototype.multinomial = function(t, e, n, r) {
                this.assertNotComplex(t, "multinomial");
                for (
                  var i = e ? t : Dn(t),
                    o = i.shape[0],
                    a = i.shape[1],
                    s = Xn([o, n], "int32"),
                    u = this.readSync(s.dataId),
                    c = this.readSync(i.dataId),
                    l = 0;
                  l < o;
                  ++l
                ) {
                  var h = l * a,
                    f = new Float32Array(a - 1);
                  f[0] = c[h];
                  for (var p = 1; p < f.length; ++p) f[p] = f[p - 1] + c[h + p];
                  for (var d = Ur(r.toString()), m = l * n, y = 0; y < n; ++y) {
                    var g = d();
                    u[m + y] = f.length;
                    for (var v = 0; v < f.length; v++)
                      if (g < f[v]) {
                        u[m + y] = v;
                        break;
                      }
                  }
                }
                return s;
              }),
              (t.prototype.oneHot = function(t, e, n, r) {
                this.assertNotComplex(t, "oneHot");
                var i = new Float32Array(t.size * e);
                i.fill(r);
                for (var o = this.readSync(t.dataId), a = 0; a < t.size; ++a)
                  o[a] >= 0 && o[a] < e && (i[a * e + o[a]] = n);
                return Vn(i, [t.size, e], "int32");
              }),
              (t.prototype.nonMaxSuppression = function(t, e, n, r, i) {
                return (
                  this.assertNotComplex(t, "nonMaxSuppression"),
                  Tr(this.readSync(t.dataId), this.readSync(e.dataId), n, r, i)
                );
              }),
              (t.prototype.fft = function(t) {
                return this.fftBatch(t, !1);
              }),
              (t.prototype.ifft = function(t) {
                return this.fftBatch(t, !0);
              }),
              (t.prototype.fftBatch = function(t, e) {
                for (
                  var n = t.shape[0],
                    r = t.shape[1],
                    i = Gr(t.shape, "float32"),
                    o = Gr(t.shape, "float32"),
                    a = Ln(t).as2D(n, r),
                    s = jn(t).as2D(n, r),
                    u = 0;
                  u < n;
                  u++
                )
                  for (
                    var c = a.slice([u, 0], [1, r]),
                      l = s.slice([u, 0], [1, r]),
                      h = zn(c, l),
                      f = this.readSync(this.fftImpl(h, e).dataId),
                      p = 0;
                    p < r;
                    p++
                  ) {
                    var d = _r(f, p);
                    (i.values[u * r + p] = d.real),
                      (o.values[u * r + p] = d.imag);
                  }
                return zn(i.toTensor(), o.toTensor()).as2D(n, r);
              }),
              (t.prototype.fftImpl = function(t, e) {
                var n = t.as1D(),
                  r = n.size;
                if (this.isExponentOf2(r)) {
                  var i = this.fftRadix2(n, r, e).as2D(t.shape[0], t.shape[1]);
                  return e && (i = zn(Ln(i).div(qn(r)), jn(i).div(qn(r)))), i;
                }
                var o = this.readSync(t.dataId),
                  a = (function(t) {
                    for (
                      var e = new Float32Array(t.length / 2),
                        n = new Float32Array(t.length / 2),
                        r = 0;
                      r < t.length;
                      r += 2
                    )
                      (e[r / 2] = t[r]), (n[r / 2] = t[r + 1]);
                    return { real: e, imag: n };
                  })(this.fourierTransformByMatmul(o, r, e));
                return zn(a.real, a.imag).as2D(t.shape[0], t.shape[1]);
              }),
              (t.prototype.isExponentOf2 = function(t) {
                return 0 == (t & (t - 1));
              }),
              (t.prototype.fftRadix2 = function(t, e, n) {
                if (1 === e) return t;
                var r = this.readSync(t.dataId),
                  i = e / 2,
                  o = (function(t) {
                    for (
                      var e = Math.ceil(t.length / 4),
                        n = new Float32Array(e),
                        r = new Float32Array(e),
                        i = 0;
                      i < t.length;
                      i += 4
                    )
                      (n[Math.floor(i / 4)] = t[i]),
                        (r[Math.floor(i / 4)] = t[i + 1]);
                    return { real: n, imag: r };
                  })(r),
                  a = zn(o.real, o.imag).as1D(),
                  s = (function(t) {
                    for (
                      var e = Math.floor(t.length / 4),
                        n = new Float32Array(e),
                        r = new Float32Array(e),
                        i = 2;
                      i < t.length;
                      i += 4
                    )
                      (n[Math.floor(i / 4)] = t[i]),
                        (r[Math.floor(i / 4)] = t[i + 1]);
                    return { real: n, imag: r };
                  })(r),
                  u = zn(s.real, s.imag).as1D();
                (a = this.fftRadix2(a, i, n)), (u = this.fftRadix2(u, i, n));
                var c = (function(t, e) {
                    for (
                      var n = new Float32Array(t / 2),
                        r = new Float32Array(t / 2),
                        i = 0;
                      i < Math.ceil(t / 2);
                      i++
                    ) {
                      var o = (e ? 2 : -2) * Math.PI * (i / t);
                      (n[i] = Math.cos(o)), (r[i] = Math.sin(o));
                    }
                    return { real: n, imag: r };
                  })(e, n),
                  l = zn(c.real, c.imag).mul(u),
                  h = a.add(l),
                  f = a.sub(l),
                  p = Ln(h).concat(Ln(f)),
                  d = jn(h).concat(jn(f));
                return zn(p, d).as1D();
              }),
              (t.prototype.fourierTransformByMatmul = function(t, e, n) {
                for (var r = new Float32Array(2 * e), i = 0; i < e; i++) {
                  for (var o = 0, a = 0, s = 0; s < e; s++) {
                    var u = xr(i * s, e, n),
                      c = _r(t, s);
                    (o += c.real * u.real - c.imag * u.imag),
                      (a += c.real * u.imag + c.imag * u.real);
                  }
                  n && ((o /= e), (a /= e)), Sr(r, o, a, i);
                }
                return r;
              }),
              (t.prototype.depthToSpace = function(t, e, n) {
                w("NHWC" === n, function() {
                  return (
                    "Only NHWC dataFormat supported on CPU for depthToSpace. Got " +
                    n
                  );
                }),
                  w(e > 1, function() {
                    return (
                      "blockSize should be > 1 for depthToSpace, but was: " + e
                    );
                  });
                for (
                  var r = t.shape[0],
                    i = t.shape[1],
                    o = t.shape[2],
                    a = t.shape[3],
                    s = i * e,
                    u = o * e,
                    c = a / (e * e),
                    l = this.readSync(t.dataId),
                    h = new Float32Array(r * s * u * c),
                    f = 0,
                    p = 0;
                  p < r;
                  ++p
                )
                  for (var d = 0; d < s; ++d)
                    for (
                      var m = Math.floor(d / e), y = d % e, g = 0;
                      g < u;
                      ++g
                    )
                      for (
                        var v = Math.floor(g / e),
                          b = (y * e + (g % e)) * c,
                          _ = 0;
                        _ < c;
                        ++_
                      ) {
                        var S = _ + b + a * (v + o * (m + i * p));
                        h[f++] = l[S];
                      }
                return Gn(h, [r, s, u, c]);
              }),
              (t.prototype.broadcastedBinaryOp = function(t, e, n, r) {
                var i = or(t.shape, e.shape),
                  o = Gr(i, n),
                  a = this.readSync(t.dataId),
                  s = this.readSync(e.dataId),
                  u = rr(t.shape, i),
                  c = rr(e.shape, i),
                  l = o.values;
                if (u.length + c.length === 0)
                  for (var h = 0; h < l.length; ++h)
                    l[h] = r(a[h % a.length], s[h % s.length]);
                else {
                  var f = this.bufferSync(t),
                    p = this.bufferSync(e),
                    d = function(n) {
                      var i = o.indexToLoc(n),
                        h = i.slice(-t.rank);
                      u.forEach(function(t) {
                        return (h[t] = 0);
                      });
                      var d = f.locToIndex(h),
                        m = i.slice(-e.rank);
                      c.forEach(function(t) {
                        return (m[t] = 0);
                      });
                      var y = p.locToIndex(m);
                      l[n] = r(a[d], s[y]);
                    };
                  for (h = 0; h < l.length; ++h) d(h);
                }
                return o.toTensor();
              }),
              (t.prototype.broadcastedBinaryComplexOp = function(t, e, n) {
                var r = or(t.shape, e.shape),
                  i = Gr(r, "float32"),
                  o = Gr(r, "float32"),
                  a = this.readSync(t.dataId),
                  s = this.readSync(e.dataId),
                  u = rr(t.shape, r),
                  c = rr(e.shape, r),
                  l = i.values,
                  h = o.values;
                if (u.length + c.length === 0)
                  for (var f = 0; f < l.length; f++) {
                    var p = f % a.length,
                      d = f % s.length,
                      m = n(a[2 * p], a[2 * p + 1], s[2 * d], s[2 * d + 1]);
                    (l[f] = m.real), (h[f] = m.imag);
                  }
                else {
                  var y = this.bufferSync(
                      this.data.get(t.dataId).complexTensors.real
                    ),
                    g = this.bufferSync(
                      this.data.get(e.dataId).complexTensors.real
                    ),
                    v = function(r) {
                      var o = i.indexToLoc(r),
                        f = o.slice(-t.rank);
                      u.forEach(function(t) {
                        return (f[t] = 0);
                      });
                      var p = y.locToIndex(f),
                        d = o.slice(-e.rank);
                      c.forEach(function(t) {
                        return (d[t] = 0);
                      });
                      var m = g.locToIndex(d),
                        v = n(a[2 * p], a[2 * p + 1], s[2 * m], s[2 * m + 1]);
                      (l[r] = v.real), (h[r] = v.imag);
                    };
                  for (f = 0; f < l.length; f++) v(f);
                }
                return this.complex(i.toTensor(), o.toTensor());
              }),
              (t.prototype.split = function(t, e, n) {
                return kr(t, e, n);
              }),
              (t.prototype.dispose = function() {}),
              (t.prototype.floatPrecision = function() {
                return 32;
              }),
              (t.prototype.epsilon = function() {
                return 1e-7;
              }),
              (t.prototype.cropAndResize = function(t, e, n, r, i, o) {
                for (
                  var a = t.shape,
                    s = a[0],
                    u = a[1],
                    c = a[2],
                    l = a[3],
                    h = e.shape[0],
                    f = r[0],
                    p = r[1],
                    d = Gr([h, f, p, l], t.dtype),
                    m = this.readSync(e.dataId),
                    y = this.readSync(n.dataId),
                    g = this.readSync(t.dataId),
                    v = t.strides,
                    b = d.strides,
                    w = 0;
                  w < h;
                  w++
                ) {
                  var _ = 4 * w,
                    S = m[_],
                    x = m[_ + 1],
                    T = m[_ + 2],
                    A = m[_ + 3],
                    k = y[w];
                  if (!(k >= s))
                    for (
                      var E = f > 1 ? ((T - S) * (u - 1)) / (f - 1) : 0,
                        N = p > 1 ? ((A - x) * (c - 1)) / (p - 1) : 0,
                        O = 0;
                      O < f;
                      O++
                    ) {
                      var C =
                        f > 1 ? S * (u - 1) + O * E : 0.5 * (S + T) * (u - 1);
                      if (C < 0 || C > u - 1)
                        for (var I = 0; I < p; I++)
                          for (var M = 0; M < l; M++) {
                            var P = M + I * b[2] + O * b[1] + w * b[0];
                            d.values[P] = o;
                          }
                      else if ("bilinear" === i) {
                        var R = Math.floor(C),
                          D = Math.ceil(C),
                          F = C - R;
                        for (I = 0; I < p; I++)
                          if (
                            (G =
                              p > 1
                                ? x * (c - 1) + I * N
                                : 0.5 * (x + A) * (c - 1)) < 0 ||
                            G > c - 1
                          )
                            for (M = 0; M < l; M++)
                              (P = M + I * b[2] + O * b[1] + w * b[0]),
                                (d.values[P] = o);
                          else {
                            var z = Math.floor(G),
                              L = Math.ceil(G),
                              j = G - z;
                            for (M = 0; M < l; M++) {
                              var B =
                                  g[(P = M + z * v[2] + R * v[1] + k * v[0])],
                                q = g[(P = M + L * v[2] + R * v[1] + k * v[0])],
                                U = g[(P = M + z * v[2] + D * v[1] + k * v[0])],
                                V = B + (q - B) * j,
                                W =
                                  U +
                                  (g[(P = M + L * v[2] + D * v[1] + k * v[0])] -
                                    U) *
                                    j;
                              (P = M + I * b[2] + O * b[1] + w * b[0]),
                                (d.values[P] = V + (W - V) * F);
                            }
                          }
                      } else
                        for (I = 0; I < p; ++I) {
                          var G;
                          if (
                            (G =
                              p > 1
                                ? x * (c - 1) + I * N
                                : 0.5 * (x + A) * (c - 1)) < 0 ||
                            G > c - 1
                          )
                            for (M = 0; M < l; M++)
                              (P = M + I * b[2] + O * b[1] + w * b[0]),
                                (d.values[P] = o);
                          else {
                            var H = Math.round(G),
                              K = Math.round(C);
                            for (M = 0; M < l; M++) {
                              var Q = M + H * v[2] + K * v[1] + k * v[0],
                                X = M + I * b[2] + O * b[1] + w * b[0];
                              d.values[X] = g[Q];
                            }
                          }
                        }
                    }
                }
                return d.toTensor();
              }),
              (t.prototype.sparseToDense = function(t, e, n, r) {
                var i = gn(0, t, n),
                  o = i.sliceRank,
                  a = i.numUpdates,
                  s = i.sliceSize,
                  u = i.strides,
                  c = i.outputSize;
                return this.scatter(t, e, n, c, s, a, o, u, r, !1);
              }),
              (t.prototype.gatherND = function(t, e) {
                var n = e.shape,
                  r = n[n.length - 1],
                  i = dn(t, e),
                  o = i[0],
                  a = i[1],
                  s = i[2],
                  u = i[3];
                if (0 === a) return Bn([], o, t.dtype);
                for (
                  var c = new ft([a, s], t.dtype),
                    l = this.readSync(e.dataId),
                    h = this.readSync(t.dataId),
                    f = 0;
                  f < a;
                  f++
                ) {
                  for (var p = [], d = 0, m = 0; m < r; m++) {
                    var y = l[f * r + m];
                    (d += y * u[m]), p.push(y);
                  }
                  if (d < 0 || d >= t.size / s)
                    throw new Error(
                      "Invalid indices: " +
                        p +
                        " does not index into " +
                        t.shape
                    );
                  for (var g = 0; g < s; g++)
                    c.values[f * s + g] = h[d * s + g];
                }
                return c.toTensor().reshape(o);
              }),
              (t.prototype.scatterND = function(t, e, n) {
                var r = gn(0, t, n),
                  i = r.sliceRank,
                  o = r.numUpdates,
                  a = r.sliceSize,
                  s = r.strides,
                  u = r.outputSize,
                  c = qn(0);
                return this.scatter(t, e, n, u, a, o, i, s, c, !0);
              }),
              (t.prototype.fill = function(t, e, n) {
                var r = D((n = n || H(e)), T(t));
                return r.fill(e), yt.make(t, { values: r }, n);
              }),
              (t.prototype.onesLike = function(t) {
                if ("string" === t.dtype)
                  throw new Error(
                    "onesLike is not supported for string tensors"
                  );
                return this.fill(t.shape, 1, t.dtype);
              }),
              (t.prototype.zerosLike = function(t) {
                var e = D(t.dtype, T(t.shape));
                return yt.make(t.shape, { values: e }, t.dtype);
              }),
              (t.prototype.linspace = function(t, e, n) {
                return vr(t, e, n);
              }),
              (t.prototype.scatter = function(t, e, n, r, i, o, a, s, u, c) {
                var l = [r / i, i],
                  h = this.readSync(t.dataId),
                  f = this.readSync(e.dataId);
                if (0 === r) return Bn([], n, e.dtype);
                var p = new ft(l, e.dtype);
                p.values.fill(this.readSync(u.dataId)[0]);
                for (var d = 0; d < o; d++) {
                  for (var m = [], y = 0, g = 0; g < a; g++) {
                    var v = h[d * a + g];
                    m.push(v), (y += v * s[g]);
                  }
                  if (y < 0 || y >= r / i)
                    throw new Error(
                      "Invalid indices: " + m + " does not index into " + n
                    );
                  for (var b = 0; b < i; b++)
                    c
                      ? (p.values[y * i + b] += f[d * i + b])
                      : (p.values[y * i + b] =
                          0 === e.rank ? f[0] : f[d * i + b]);
                }
                return p.toTensor().reshape(n);
              }),
              t
            );
          })();
        Rt.registerBackend(
          "cpu",
          function() {
            return new fl();
          },
          1
        );
        var pl = (function() {
          function t() {}
          return (
            (t.prototype.fetch = function(t, e) {
              return fetch(t, e);
            }),
            t
          );
        })();
        h.get("IS_BROWSER") && h.setPlatform("browser", new pl());
        var dl,
          ml = (function() {
            function t() {}
            return (
              (t.prototype.fetch = function(t, e) {
                return null != h.global.fetch
                  ? h.global.fetch(t, e)
                  : (null == dl && (dl = n(190)), dl(t, e));
              }),
              t
            );
          })();
        h.get("IS_NODE") && h.setPlatform("node", new ml());
        var yl = { float32: 4, int32: 4, uint16: 2, uint8: 1, bool: 1 };
        function gl(t, e) {
          for (
            var n = {},
              r = 0,
              i = function(e) {
                var i = e.name,
                  o = e.dtype,
                  a = e.shape,
                  s = T(a),
                  u = void 0;
                if (("quantization" in e)) {
                  var c = e.quantization;
                  if ("uint8" !== c.dtype && "uint16" !== c.dtype)
                    throw new Error(
                      "Weight " +
                        e.name +
                        " has unknown quantization dtype " +
                        c.dtype +
                        ". Supported quantization dtypes are: 'uint8' and 'uint16'."
                    );
                  var l = yl[c.dtype],
                    h = t.slice(r, r + s * l),
                    f =
                      "uint8" === c.dtype
                        ? new Uint8Array(h)
                        : new Uint16Array(h);
                  if ("float32" === o)
                    u = Float32Array.from(f, function(t) {
                      return t * c.scale + c.min;
                    });
                  else {
                    if ("int32" !== o)
                      throw new Error(
                        "Unsupported dtype in weight '" + i + "': " + o
                      );
                    u = Int32Array.from(f, function(t) {
                      return Math.round(t * c.scale + c.min);
                    });
                  }
                  r += s * l;
                } else {
                  var p = yl[o];
                  if (((h = t.slice(r, r + s * p)), "float32" === o))
                    u = new Float32Array(h);
                  else if ("int32" === o) u = new Int32Array(h);
                  else {
                    if ("bool" !== o)
                      throw new Error(
                        "Unsupported dtype in weight '" + i + "': " + o
                      );
                    u = new Uint8Array(h);
                  }
                  r += s * p;
                }
                var d = void 0;
                if ("float32" === o) d = Bn(u, a, "float32");
                else if ("int32" === o) d = Bn(u, a, "int32");
                else {
                  if ("bool" !== o)
                    throw new Error(
                      "Unsupported dtype in weight '" + i + "': " + o
                    );
                  d = Bn(u, a, "bool");
                }
                n[i] = d;
              },
              o = 0,
              a = e;
            o < a.length;
            o++
          )
            i(a[o]);
          return n;
        }
        function vl(t) {
          if (null === t)
            throw new Error("Invalid input value: " + JSON.stringify(t));
          var e = 0,
            n = [];
          t.forEach(function(t) {
            if (
              ((e += t.byteLength),
              n.push(
                t.byteLength === t.buffer.byteLength ? t : new t.constructor(t)
              ),
              !(
                t instanceof Float32Array ||
                t instanceof Int32Array ||
                t instanceof Uint8Array
              ))
            )
              throw new Error(
                "Unsupported TypedArray subtype: " + t.constructor.name
              );
          });
          var r = new Uint8Array(e),
            i = 0;
          return (
            n.forEach(function(t) {
              r.set(new Uint8Array(t.buffer), i), (i += t.byteLength);
            }),
            r.buffer
          );
        }
        var bl =
          void 0 !== i &&
          ("undefined" == typeof Blob ||
            "undefined" == typeof atob ||
            "undefined" == typeof btoa);
        function wl(t) {
          return bl ? i.byteLength(t) : new Blob([t]).size;
        }
        function _l(t) {
          var e = 0;
          t.forEach(function(t) {
            e += t.byteLength;
          });
          var n = new Uint8Array(e),
            r = 0;
          return (
            t.forEach(function(t) {
              n.set(new Uint8Array(t), r), (r += t.byteLength);
            }),
            n.buffer
          );
        }
        function Sl(t) {
          for (t = t.trim(); t.endsWith("/"); ) t = t.slice(0, t.length - 1);
          var e = t.split("/");
          return e[e.length - 1];
        }
        function xl(t) {
          if (t.modelTopology instanceof ArrayBuffer)
            throw new Error(
              "Expected JSON model topology, received ArrayBuffer."
            );
          return {
            dateSaved: new Date(),
            modelTopologyType: "JSON",
            modelTopologyBytes:
              null == t.modelTopology ? 0 : wl(JSON.stringify(t.modelTopology)),
            weightSpecsBytes:
              null == t.weightSpecs ? 0 : wl(JSON.stringify(t.weightSpecs)),
            weightDataBytes: null == t.weightData ? 0 : t.weightData.byteLength
          };
        }
        var Tl = (function() {
            function t() {
              (this.saveRouters = []), (this.loadRouters = []);
            }
            return (
              (t.getInstance = function() {
                return null == t.instance && (t.instance = new t()), t.instance;
              }),
              (t.registerSaveRouter = function(e) {
                t.getInstance().saveRouters.push(e);
              }),
              (t.registerLoadRouter = function(e) {
                t.getInstance().loadRouters.push(e);
              }),
              (t.getSaveHandlers = function(e) {
                return t.getHandlers(e, "save");
              }),
              (t.getLoadHandlers = function(e, n) {
                return t.getHandlers(e, "load", n);
              }),
              (t.getHandlers = function(e, n, r) {
                var i = [];
                return (
                  ("load" === n
                    ? t.getInstance().loadRouters
                    : t.getInstance().saveRouters
                  ).forEach(function(t) {
                    var n = t(e, r);
                    null !== n && i.push(n);
                  }),
                  i
                );
              }),
              t
            );
          })(),
          Al = "://",
          kl = (function() {
            function t() {
              this.managers = {};
            }
            return (
              (t.getInstance = function() {
                return null == t.instance && (t.instance = new t()), t.instance;
              }),
              (t.registerManager = function(e, n) {
                w(null != e, function() {
                  return "scheme must not be undefined or null.";
                }),
                  e.endsWith(Al) && (e = e.slice(0, e.indexOf(Al))),
                  w(e.length > 0, function() {
                    return "scheme must not be an empty string.";
                  });
                var r = t.getInstance();
                w(null == r.managers[e], function() {
                  return (
                    "A model store manager is already registered for scheme '" +
                    e +
                    "'."
                  );
                }),
                  (r.managers[e] = n);
              }),
              (t.getManager = function(t) {
                var e = this.getInstance().managers[t];
                if (null == e)
                  throw new Error(
                    "Cannot find model manager for scheme '" + t + "'"
                  );
                return e;
              }),
              (t.getSchemes = function() {
                return Object.keys(this.getInstance().managers);
              }),
              t
            );
          })();
        function El(t) {
          if (-1 === t.indexOf(Al))
            throw new Error(
              "The url string provided does not contain a scheme. Supported schemes are: " +
                kl.getSchemes().join(",")
            );
          return { scheme: t.split(Al)[0], path: t.split(Al)[1] };
        }
        function Nl(t, e, n) {
          return (
            void 0 === n && (n = !1),
            c(this, void 0, void 0, function() {
              var r, i, o, a, s, u, c, h, f;
              return l(this, function(l) {
                switch (l.label) {
                  case 0:
                    return (
                      w(t !== e, function() {
                        return (
                          "Old path and new path are the same: '" + t + "'"
                        );
                      }),
                      w((r = Tl.getLoadHandlers(t)).length > 0, function() {
                        return (
                          "Copying failed because no load handler is found for source URL " +
                          t +
                          "."
                        );
                      }),
                      w(r.length < 2, function() {
                        return (
                          "Copying failed because more than one (" +
                          r.length +
                          ") load handlers for source URL " +
                          t +
                          "."
                        );
                      }),
                      (i = r[0]),
                      w((o = Tl.getSaveHandlers(e)).length > 0, function() {
                        return (
                          "Copying failed because no save handler is found for destination URL " +
                          e +
                          "."
                        );
                      }),
                      w(o.length < 2, function() {
                        return (
                          "Copying failed because more than one (" +
                          r.length +
                          ") save handlers for destination URL " +
                          e +
                          "."
                        );
                      }),
                      (a = o[0]),
                      (s = El(t).scheme),
                      (u = El(t).path),
                      (c = s === El(t).scheme),
                      [4, i.load()]
                    );
                  case 1:
                    return (
                      (h = l.sent()),
                      n && c ? [4, kl.getManager(s).removeModel(u)] : [3, 3]
                    );
                  case 2:
                    l.sent(), (l.label = 3);
                  case 3:
                    return [4, a.save(h)];
                  case 4:
                    return (
                      (f = l.sent()),
                      !n || c ? [3, 6] : [4, kl.getManager(s).removeModel(u)]
                    );
                  case 5:
                    l.sent(), (l.label = 6);
                  case 6:
                    return [2, f.modelArtifactsInfo];
                }
              });
            })
          );
        }
        var Ol = "models_store",
          Cl = "model_info_store";
        function Il() {
          if (!h.getBool("IS_BROWSER"))
            throw new Error(
              "Failed to obtain IndexedDB factory because the current environmentis not a web browser."
            );
          var t = window,
            e =
              t.indexedDB ||
              t.mozIndexedDB ||
              t.webkitIndexedDB ||
              t.msIndexedDB ||
              t.shimIndexedDB;
          if (null == e)
            throw new Error(
              "The current browser does not appear to support IndexedDB."
            );
          return e;
        }
        function Ml(t) {
          var e = t.result;
          e.createObjectStore(Ol, { keyPath: "modelPath" }),
            e.createObjectStore(Cl, { keyPath: "modelPath" });
        }
        var Pl = (function() {
            function t(t) {
              if (((this.indexedDB = Il()), null == t || !t))
                throw new Error(
                  "For IndexedDB, modelPath must not be null, undefined or empty."
                );
              this.modelPath = t;
            }
            return (
              (t.prototype.save = function(t) {
                return c(this, void 0, void 0, function() {
                  return l(this, function(e) {
                    if (t.modelTopology instanceof ArrayBuffer)
                      throw new Error(
                        "BrowserLocalStorage.save() does not support saving model topology in binary formats yet."
                      );
                    return [2, this.databaseAction(this.modelPath, t)];
                  });
                });
              }),
              (t.prototype.load = function() {
                return c(this, void 0, void 0, function() {
                  return l(this, function(t) {
                    return [2, this.databaseAction(this.modelPath)];
                  });
                });
              }),
              (t.prototype.databaseAction = function(t, e) {
                var n = this;
                return new Promise(function(t, r) {
                  var i = n.indexedDB.open("tensorflowjs", 1);
                  (i.onupgradeneeded = function() {
                    return Ml(i);
                  }),
                    (i.onsuccess = function() {
                      var o = i.result;
                      if (null == e) {
                        var a = o.transaction(Ol, "readonly"),
                          s = a.objectStore(Ol).get(n.modelPath);
                        (s.onsuccess = function() {
                          if (null == s.result)
                            return (
                              o.close(),
                              r(
                                new Error(
                                  "Cannot find model with path '" +
                                    n.modelPath +
                                    "' in IndexedDB."
                                )
                              )
                            );
                          t(s.result.modelArtifacts);
                        }),
                          (s.onerror = function(t) {
                            return o.close(), r(s.error);
                          }),
                          (a.oncomplete = function() {
                            return o.close();
                          });
                      } else {
                        var u,
                          c = xl(e),
                          l = o.transaction(Cl, "readwrite"),
                          h = l.objectStore(Cl),
                          f = h.put({
                            modelPath: n.modelPath,
                            modelArtifactsInfo: c
                          });
                        (f.onsuccess = function() {
                          var i = (u = o.transaction(Ol, "readwrite"))
                            .objectStore(Ol)
                            .put({
                              modelPath: n.modelPath,
                              modelArtifacts: e,
                              modelArtifactsInfo: c
                            });
                          (i.onsuccess = function() {
                            return t({ modelArtifactsInfo: c });
                          }),
                            (i.onerror = function(t) {
                              var e = (h = l.objectStore(Cl)).delete(
                                n.modelPath
                              );
                              (e.onsuccess = function() {
                                return o.close(), r(i.error);
                              }),
                                (e.onerror = function(t) {
                                  return o.close(), r(i.error);
                                });
                            });
                        }),
                          (f.onerror = function(t) {
                            return o.close(), r(f.error);
                          }),
                          (l.oncomplete = function() {
                            null == u
                              ? o.close()
                              : (u.oncomplete = function() {
                                  return o.close();
                                });
                          });
                      }
                    }),
                    (i.onerror = function(t) {
                      return r(i.error);
                    });
                });
              }),
              (t.URL_SCHEME = "indexeddb://"),
              t
            );
          })(),
          Rl = function(t) {
            return h.getBool("IS_BROWSER") &&
              !Array.isArray(t) &&
              t.startsWith(Pl.URL_SCHEME)
              ? ((e = t.slice(Pl.URL_SCHEME.length)), new Pl(e))
              : null;
            var e;
          };
        Tl.registerSaveRouter(Rl), Tl.registerLoadRouter(Rl);
        var Dl = (function() {
          function t() {
            this.indexedDB = Il();
          }
          return (
            (t.prototype.listModels = function() {
              return c(this, void 0, void 0, function() {
                var t = this;
                return l(this, function(e) {
                  return [
                    2,
                    new Promise(function(e, n) {
                      var r = t.indexedDB.open("tensorflowjs", 1);
                      (r.onupgradeneeded = function() {
                        return Ml(r);
                      }),
                        (r.onsuccess = function() {
                          var t = r.result,
                            i = t.transaction(Cl, "readonly"),
                            o = i.objectStore(Cl).getAll();
                          (o.onsuccess = function() {
                            for (
                              var t = {}, n = 0, r = o.result;
                              n < r.length;
                              n++
                            ) {
                              var i = r[n];
                              t[i.modelPath] = i.modelArtifactsInfo;
                            }
                            e(t);
                          }),
                            (o.onerror = function(e) {
                              return t.close(), n(o.error);
                            }),
                            (i.oncomplete = function() {
                              return t.close();
                            });
                        }),
                        (r.onerror = function(t) {
                          return n(r.error);
                        });
                    })
                  ];
                });
              });
            }),
            (t.prototype.removeModel = function(t) {
              return c(this, void 0, void 0, function() {
                var e = this;
                return l(this, function(n) {
                  var r;
                  return (
                    (t = (r = t).startsWith(Pl.URL_SCHEME)
                      ? r.slice(Pl.URL_SCHEME.length)
                      : r),
                    [
                      2,
                      new Promise(function(n, r) {
                        var i = e.indexedDB.open("tensorflowjs", 1);
                        (i.onupgradeneeded = function() {
                          return Ml(i);
                        }),
                          (i.onsuccess = function() {
                            var e,
                              o = i.result,
                              a = o.transaction(Cl, "readwrite"),
                              s = a.objectStore(Cl),
                              u = s.get(t);
                            (u.onsuccess = function() {
                              if (null == u.result)
                                return (
                                  o.close(),
                                  r(
                                    new Error(
                                      "Cannot find model with path '" +
                                        t +
                                        "' in IndexedDB."
                                    )
                                  )
                                );
                              var i = s.delete(t),
                                a = function() {
                                  var i = (e = o.transaction(Ol, "readwrite"))
                                    .objectStore(Ol)
                                    .delete(t);
                                  (i.onsuccess = function() {
                                    return n(u.result.modelArtifactsInfo);
                                  }),
                                    (i.onerror = function(t) {
                                      return r(u.error);
                                    });
                                };
                              (i.onsuccess = a),
                                (i.onerror = function(t) {
                                  return a(), o.close(), r(u.error);
                                });
                            }),
                              (u.onerror = function(t) {
                                return o.close(), r(u.error);
                              }),
                              (a.oncomplete = function() {
                                null == e
                                  ? o.close()
                                  : (e.oncomplete = function() {
                                      return o.close();
                                    });
                              });
                          }),
                          (i.onerror = function(t) {
                            return r(i.error);
                          });
                      })
                    ]
                  );
                });
              });
            }),
            t
          );
        })();
        if (h.getBool("IS_BROWSER"))
          try {
            kl.registerManager(Pl.URL_SCHEME, new Dl());
          } catch (a) {}
        var Fl = "/",
          zl = "tensorflowjs_models",
          Ll = "info",
          jl = "model_topology",
          Bl = "weight_specs",
          ql = "weight_data",
          Ul = "model_metadata";
        function Vl(t) {
          return {
            info: [zl, t, Ll].join(Fl),
            topology: [zl, t, jl].join(Fl),
            weightSpecs: [zl, t, Bl].join(Fl),
            weightData: [zl, t, ql].join(Fl),
            modelMetadata: [zl, t, Ul].join(Fl)
          };
        }
        function Wl(t) {
          var e = t.split(Fl);
          if (e.length < 3) throw new Error("Invalid key format: " + t);
          return e.slice(1, e.length - 1).join(Fl);
        }
        var Gl = (function() {
            function t(t) {
              if (!h.getBool("IS_BROWSER") || void 0 === window.localStorage)
                throw new Error(
                  "The current environment does not support local storage."
                );
              if (((this.LS = window.localStorage), null == t || !t))
                throw new Error(
                  "For local storage, modelPath must not be null, undefined or empty."
                );
              (this.modelPath = t), (this.keys = Vl(this.modelPath));
            }
            return (
              (t.prototype.save = function(t) {
                return c(this, void 0, void 0, function() {
                  var e, n, r;
                  return l(this, function(o) {
                    if (t.modelTopology instanceof ArrayBuffer)
                      throw new Error(
                        "BrowserLocalStorage.save() does not support saving model topology in binary formats yet."
                      );
                    (e = JSON.stringify(t.modelTopology)),
                      (n = JSON.stringify(t.weightSpecs)),
                      (r = xl(t));
                    try {
                      return (
                        this.LS.setItem(this.keys.info, JSON.stringify(r)),
                        this.LS.setItem(this.keys.topology, e),
                        this.LS.setItem(this.keys.weightSpecs, n),
                        this.LS.setItem(
                          this.keys.weightData,
                          ((a = t.weightData),
                          bl
                            ? i.from(a).toString("base64")
                            : btoa(
                                String.fromCharCode.apply(
                                  null,
                                  new Uint8Array(a)
                                )
                              ))
                        ),
                        this.LS.setItem(
                          this.keys.modelMetadata,
                          JSON.stringify({
                            format: t.format,
                            generatedBy: t.generatedBy,
                            convertedBy: t.convertedBy
                          })
                        ),
                        [2, { modelArtifactsInfo: r }]
                      );
                    } catch (t) {
                      throw (this.LS.removeItem(this.keys.info),
                      this.LS.removeItem(this.keys.topology),
                      this.LS.removeItem(this.keys.weightSpecs),
                      this.LS.removeItem(this.keys.weightData),
                      this.LS.removeItem(this.keys.modelMetadata),
                      new Error(
                        "Failed to save model '" +
                          this.modelPath +
                          "' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=" +
                          r.modelTopologyBytes +
                          ", weightSpecsBytes=" +
                          r.weightSpecsBytes +
                          ", weightDataBytes=" +
                          r.weightDataBytes +
                          "."
                      ));
                    }
                    var a;
                    return [2];
                  });
                });
              }),
              (t.prototype.load = function() {
                return c(this, void 0, void 0, function() {
                  var t, e, n, r, o, a, s;
                  return l(this, function(u) {
                    if (
                      null == (t = JSON.parse(this.LS.getItem(this.keys.info)))
                    )
                      throw new Error(
                        "In local storage, there is no model with name '" +
                          this.modelPath +
                          "'"
                      );
                    if ("JSON" !== t.modelTopologyType)
                      throw new Error(
                        "BrowserLocalStorage does not support loading non-JSON model topology yet."
                      );
                    if (
                      ((e = {}),
                      null ==
                        (n = JSON.parse(this.LS.getItem(this.keys.topology))))
                    )
                      throw new Error(
                        "In local storage, the topology of model '" +
                          this.modelPath +
                          "' is missing."
                      );
                    if (
                      ((e.modelTopology = n),
                      null ==
                        (r = JSON.parse(
                          this.LS.getItem(this.keys.weightSpecs)
                        )))
                    )
                      throw new Error(
                        "In local storage, the weight specs of model '" +
                          this.modelPath +
                          "' are missing."
                      );
                    if (
                      ((e.weightSpecs = r),
                      null != (o = this.LS.getItem(this.keys.modelMetadata)) &&
                        ((a = JSON.parse(o)),
                        (e.format = a.format),
                        (e.generatedBy = a.generatedBy),
                        (e.convertedBy = a.convertedBy)),
                      null == (s = this.LS.getItem(this.keys.weightData)))
                    )
                      throw new Error(
                        "In local storage, the binary weight values of model '" +
                          this.modelPath +
                          "' are missing."
                      );
                    return (
                      (e.weightData = (function(t) {
                        if (bl) {
                          var e = i.from(t, "base64");
                          return e.buffer.slice(
                            e.byteOffset,
                            e.byteOffset + e.byteLength
                          );
                        }
                        for (
                          var n = atob(t), r = new Uint8Array(n.length), o = 0;
                          o < n.length;
                          ++o
                        )
                          r.set([n.charCodeAt(o)], o);
                        return r.buffer;
                      })(s)),
                      [2, e]
                    );
                  });
                });
              }),
              (t.URL_SCHEME = "localstorage://"),
              t
            );
          })(),
          Hl = function(t) {
            return h.getBool("IS_BROWSER") &&
              !Array.isArray(t) &&
              t.startsWith(Gl.URL_SCHEME)
              ? ((e = t.slice(Gl.URL_SCHEME.length)), new Gl(e))
              : null;
            var e;
          };
        Tl.registerSaveRouter(Hl), Tl.registerLoadRouter(Hl);
        var Kl = (function() {
          function t() {
            w(h.getBool("IS_BROWSER"), function() {
              return "Current environment is not a web browser";
            }),
              w(void 0 !== window.localStorage, function() {
                return "Current browser does not appear to support localStorage";
              }),
              (this.LS = window.localStorage);
          }
          return (
            (t.prototype.listModels = function() {
              return c(this, void 0, void 0, function() {
                var t, e, n, r, i, o;
                return l(this, function(a) {
                  for (
                    t = {}, e = zl + Fl, n = Fl + Ll, r = 0;
                    r < this.LS.length;
                    ++r
                  )
                    (i = this.LS.key(r)).startsWith(e) &&
                      i.endsWith(n) &&
                      ((o = Wl(i)), (t[o] = JSON.parse(this.LS.getItem(i))));
                  return [2, t];
                });
              });
            }),
            (t.prototype.removeModel = function(t) {
              return c(this, void 0, void 0, function() {
                var e, n;
                return l(this, function(r) {
                  var i;
                  if (
                    ((t = (i = t).startsWith(Gl.URL_SCHEME)
                      ? i.slice(Gl.URL_SCHEME.length)
                      : i),
                    (e = Vl(t)),
                    null == this.LS.getItem(e.info))
                  )
                    throw new Error("Cannot find model at path '" + t + "'");
                  return (
                    (n = JSON.parse(this.LS.getItem(e.info))),
                    this.LS.removeItem(e.info),
                    this.LS.removeItem(e.topology),
                    this.LS.removeItem(e.weightSpecs),
                    this.LS.removeItem(e.weightData),
                    [2, n]
                  );
                });
              });
            }),
            t
          );
        })();
        if (h.getBool("IS_BROWSER"))
          try {
            kl.registerManager(Gl.URL_SCHEME, new Kl());
          } catch (a) {}
        var Ql = "model",
          Xl = ".json",
          $l = ".weights.bin";
        function Yl(t) {
          return new Promise(function(t) {
            return setTimeout(t);
          }).then(t);
        }
        var Jl = (function() {
            function t(e) {
              if (!h.getBool("IS_BROWSER"))
                throw new Error(
                  "browserDownloads() cannot proceed because the current environment is not a browser."
                );
              e.startsWith(t.URL_SCHEME) && (e = e.slice(t.URL_SCHEME.length)),
                (null != e && 0 !== e.length) || (e = Ql),
                (this.modelTopologyFileName = e + Xl),
                (this.weightDataFileName = e + $l);
            }
            return (
              (t.prototype.save = function(t) {
                return c(this, void 0, void 0, function() {
                  var e, n, r, i, o, a;
                  return l(this, function(s) {
                    switch (s.label) {
                      case 0:
                        if (
                          ((e = window.URL.createObjectURL(
                            new Blob([t.weightData], {
                              type: "application/octet-stream"
                            })
                          )),
                          !(t.modelTopology instanceof ArrayBuffer))
                        )
                          return [3, 1];
                        throw new Error(
                          "BrowserDownloads.save() does not support saving model topology in binary formats yet."
                        );
                      case 1:
                        return (
                          (n = [
                            {
                              paths: ["./" + this.weightDataFileName],
                              weights: t.weightSpecs
                            }
                          ]),
                          (r = {
                            modelTopology: t.modelTopology,
                            format: t.format,
                            generatedBy: t.generatedBy,
                            convertedBy: t.convertedBy,
                            weightsManifest: n
                          }),
                          (i = window.URL.createObjectURL(
                            new Blob([JSON.stringify(r)], {
                              type: "application/json"
                            })
                          )),
                          ((o =
                            null == this.jsonAnchor
                              ? document.createElement("a")
                              : this
                                  .jsonAnchor).download = this.modelTopologyFileName),
                          (o.href = i),
                          [
                            4,
                            Yl(function() {
                              return o.dispatchEvent(new MouseEvent("click"));
                            })
                          ]
                        );
                      case 2:
                        return (
                          s.sent(),
                          null == t.weightData
                            ? [3, 4]
                            : (((a =
                                null == this.weightDataAnchor
                                  ? document.createElement("a")
                                  : this
                                      .weightDataAnchor).download = this.weightDataFileName),
                              (a.href = e),
                              [
                                4,
                                Yl(function() {
                                  return a.dispatchEvent(
                                    new MouseEvent("click")
                                  );
                                })
                              ])
                        );
                      case 3:
                        s.sent(), (s.label = 4);
                      case 4:
                        return [2, { modelArtifactsInfo: xl(t) }];
                    }
                  });
                });
              }),
              (t.URL_SCHEME = "downloads://"),
              t
            );
          })(),
          Zl = (function() {
            function t(t) {
              if (null == t || t.length < 1)
                throw new Error(
                  "When calling browserFiles, at least 1 file is required, but received " +
                    t
                );
              this.files = t;
            }
            return (
              (t.prototype.load = function() {
                return c(this, void 0, void 0, function() {
                  var t,
                    e,
                    n = this;
                  return l(this, function(r) {
                    return (
                      (t = this.files[0]),
                      (e = this.files.slice(1)),
                      [
                        2,
                        new Promise(function(r, i) {
                          var o = new FileReader();
                          (o.onload = function(o) {
                            var a = JSON.parse(o.target.result),
                              s = a.modelTopology;
                            if (null != s) {
                              0 === e.length && r({ modelTopology: s });
                              var u = a.weightsManifest;
                              if (null != u) {
                                var c;
                                try {
                                  c = n.checkManifestAndWeightFiles(u, e);
                                } catch (t) {
                                  return void i(t);
                                }
                                var l = [],
                                  h = [],
                                  f = [];
                                u.forEach(function(t) {
                                  t.paths.forEach(function(t) {
                                    h.push(t), f.push(null);
                                  }),
                                    l.push.apply(l, t.weights);
                                }),
                                  u.forEach(function(t) {
                                    t.paths.forEach(function(t) {
                                      var e = new FileReader();
                                      (e.onload = function(e) {
                                        var n = e.target.result,
                                          i = h.indexOf(t);
                                        (f[i] = n),
                                          -1 === f.indexOf(null) &&
                                            r({
                                              modelTopology: s,
                                              weightSpecs: l,
                                              weightData: _l(f)
                                            });
                                      }),
                                        (e.onerror = function(e) {
                                          return i(
                                            "Failed to weights data from file of path '" +
                                              t +
                                              "'."
                                          );
                                        }),
                                        e.readAsArrayBuffer(c[t]);
                                    });
                                  });
                              } else
                                i(
                                  new Error(
                                    "weightManifest field is missing from file " +
                                      t.name
                                  )
                                );
                            } else
                              i(
                                new Error(
                                  "modelTopology field is missing from file " +
                                    t.name
                                )
                              );
                          }),
                            (o.onerror = function(e) {
                              return i(
                                "Failed to read model topology and weights manifest JSON from file '" +
                                  t.name +
                                  "'. BrowserFiles supports loading Keras-style tf.Model artifacts only."
                              );
                            }),
                            o.readAsText(t);
                        })
                      ]
                    );
                  });
                });
              }),
              (t.prototype.checkManifestAndWeightFiles = function(t, e) {
                for (
                  var n = [],
                    r = e.map(function(t) {
                      return Sl(t.name);
                    }),
                    i = {},
                    o = 0,
                    a = t;
                  o < a.length;
                  o++
                )
                  a[o].paths.forEach(function(t) {
                    var o = Sl(t);
                    if (-1 !== n.indexOf(o))
                      throw new Error(
                        "Duplicate file basename found in weights manifest: '" +
                          o +
                          "'"
                      );
                    if ((n.push(o), -1 === r.indexOf(o)))
                      throw new Error(
                        "Weight file with basename '" + o + "' is not provided."
                      );
                    i[t] = e[r.indexOf(o)];
                  });
                if (n.length !== e.length)
                  throw new Error(
                    "Mismatch in the number of files in weights manifest (" +
                      n.length +
                      ") and the number of weight files provided (" +
                      e.length +
                      ")."
                  );
                return i;
              }),
              t
            );
          })();
        function th(t, e, n, r) {
          !(function(t) {
            w(null != t && Array.isArray(t) && t.length > 0, function() {
              return "promises must be a none empty array";
            });
          })(t),
            (function(t, e) {
              w(t >= 0 && t <= 1, function() {
                return (
                  "Progress fraction must be in range [0, 1], but got startFraction " +
                  t
                );
              }),
                w(e >= 0 && e <= 1, function() {
                  return (
                    "Progress fraction must be in range [0, 1], but got endFraction " +
                    e
                  );
                }),
                w(e >= t, function() {
                  return (
                    "startFraction must be no more than endFraction, but got startFraction " +
                    t +
                    " and endFraction " +
                    e
                  );
                });
            })((n = null == n ? 0 : n), (r = null == r ? 1 : r));
          var i = 0;
          return Promise.all(
            t.map(function(o) {
              return (
                o.then(function(o) {
                  var a = n + (++i / t.length) * (r - n);
                  return e(a), o;
                }),
                o
              );
            })
          );
        }
        function eh(t, e) {
          return c(this, void 0, void 0, function() {
            var n, r, i, o, a, s, u, c, h;
            return l(this, function(l) {
              switch (l.label) {
                case 0:
                  return (
                    null == e && (e = {}),
                    (n = null == e.fetchFunc ? nt : e.fetchFunc),
                    (r = t.map(function(t) {
                      return n(t, e.requestInit);
                    })),
                    (i = 0),
                    (o = 0.5),
                    null != e.onProgress ? [3, 2] : [4, Promise.all(r)]
                  );
                case 1:
                  return (a = l.sent()), [3, 4];
                case 2:
                  return [4, th(r, e.onProgress, i, o)];
                case 3:
                  (a = l.sent()), (l.label = 4);
                case 4:
                  return (
                    (s = a.map(function(t) {
                      return t.arrayBuffer();
                    })),
                    (u = 0.5),
                    (c = 1),
                    null != e.onProgress ? [3, 6] : [4, Promise.all(s)]
                  );
                case 5:
                  return (h = l.sent()), [3, 8];
                case 6:
                  return [4, th(s, e.onProgress, u, c)];
                case 7:
                  (h = l.sent()), (l.label = 8);
                case 8:
                  return [2, h];
              }
            });
          });
        }
        function nh(t) {
          var e = this;
          return function(n, r, i) {
            return (
              void 0 === r && (r = ""),
              c(e, void 0, void 0, function() {
                var e, o, a, s, u, c, h, f, p, d;
                return l(this, function(l) {
                  switch (l.label) {
                    case 0:
                      if (
                        ((e = n.map(function() {
                          return !1;
                        })),
                        (o = {}),
                        (a =
                          null != i
                            ? i.map(function() {
                                return !1;
                              })
                            : []),
                        (s = []),
                        n.forEach(function(t, n) {
                          var r = 0;
                          t.weights.forEach(function(t) {
                            var u =
                                "quantization" in t
                                  ? t.quantization.dtype
                                  : t.dtype,
                              c = yl[u] * T(t.shape),
                              l = function() {
                                (e[n] = !0),
                                  null == o[n] && (o[n] = []),
                                  o[n].push({
                                    manifestEntry: t,
                                    groupOffset: r,
                                    sizeBytes: c
                                  });
                              };
                            null != i
                              ? i.forEach(function(e, n) {
                                  e === t.name && (l(), (a[n] = !0));
                                })
                              : l(),
                              s.push(t.name),
                              (r += c);
                          });
                        }),
                        !a.every(function(t) {
                          return t;
                        }))
                      )
                        throw ((u = i.filter(function(t, e) {
                          return !a[e];
                        })),
                        new Error(
                          "Could not find weights in manifest with names: " +
                            u.join(", ") +
                            ". \nManifest JSON has weights with names: " +
                            s.join(", ") +
                            "."
                        ));
                      return (
                        (c = e.reduce(function(t, e, n) {
                          return e && t.push(n), t;
                        }, [])),
                        (h = []),
                        c.forEach(function(t) {
                          n[t].paths.forEach(function(t) {
                            var e = r + (r.endsWith("/") ? "" : "/") + t;
                            h.push(e);
                          });
                        }),
                        [4, t(h)]
                      );
                    case 1:
                      return (
                        (f = l.sent()),
                        (p = {}),
                        (d = 0),
                        c.forEach(function(t) {
                          for (
                            var e = n[t].paths.length, r = 0, i = 0;
                            i < e;
                            i++
                          )
                            r += f[d + i].byteLength;
                          for (
                            var a = new ArrayBuffer(r),
                              s = new Uint8Array(a),
                              u = 0,
                              c = 0;
                            c < e;
                            c++
                          ) {
                            var l = new Uint8Array(f[d + c]);
                            s.set(l, u), (u += l.byteLength);
                          }
                          o[t].forEach(function(t) {
                            var e = gl(
                              a.slice(
                                t.groupOffset,
                                t.groupOffset + t.sizeBytes
                              ),
                              [t.manifestEntry]
                            );
                            for (var n in e) p[n] = e[n];
                          }),
                            (d += e);
                        }),
                        [2, p]
                      );
                  }
                });
              })
            );
          };
        }
        Tl.registerSaveRouter(function(t) {
          return h.getBool("IS_BROWSER") &&
            !Array.isArray(t) &&
            t.startsWith(Jl.URL_SCHEME)
            ? (void 0 === (e = t.slice(Jl.URL_SCHEME.length)) && (e = "model"),
              new Jl(e))
            : null;
          var e;
        });
        var rh = (function() {
          function t(t, e) {
            if (
              ((this.DEFAULT_METHOD = "POST"),
              null == e && (e = {}),
              (this.weightPathPrefix = e.weightPathPrefix),
              (this.onProgress = e.onProgress),
              null != e.fetchFunc
                ? (w("function" == typeof e.fetchFunc, function() {
                    return "Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)";
                  }),
                  (this.fetch = e.fetchFunc))
                : (this.fetch = nt),
              w(null != t && t.length > 0, function() {
                return "URL path for http must not be null, undefined or empty.";
              }),
              Array.isArray(t) &&
                w(2 === t.length, function() {
                  return (
                    "URL paths for http must have a length of 2, (actual length is " +
                    t.length +
                    ")."
                  );
                }),
              (this.path = t),
              null != e.requestInit && null != e.requestInit.body)
            )
              throw new Error(
                "requestInit is expected to have no pre-existing body, but has one."
              );
            this.requestInit = e.requestInit || {};
          }
          return (
            (t.prototype.save = function(t) {
              return c(this, void 0, void 0, function() {
                var e, n, r, i;
                return l(this, function(o) {
                  switch (o.label) {
                    case 0:
                      if (t.modelTopology instanceof ArrayBuffer)
                        throw new Error(
                          "BrowserHTTPRequest.save() does not support saving model topology in binary formats yet."
                        );
                      return (
                        ((e = Object.assign(
                          { method: this.DEFAULT_METHOD },
                          this.requestInit
                        )).body = new FormData()),
                        (n = [
                          {
                            paths: ["./model.weights.bin"],
                            weights: t.weightSpecs
                          }
                        ]),
                        (r = {
                          modelTopology: t.modelTopology,
                          format: t.format,
                          generatedBy: t.generatedBy,
                          convertedBy: t.convertedBy,
                          weightsManifest: n
                        }),
                        e.body.append(
                          "model.json",
                          new Blob([JSON.stringify(r)], {
                            type: "application/json"
                          }),
                          "model.json"
                        ),
                        null != t.weightData &&
                          e.body.append(
                            "model.weights.bin",
                            new Blob([t.weightData], {
                              type: "application/octet-stream"
                            }),
                            "model.weights.bin"
                          ),
                        [4, this.fetch(this.path, e)]
                      );
                    case 1:
                      if ((i = o.sent()).ok)
                        return [
                          2,
                          { modelArtifactsInfo: xl(t), responses: [i] }
                        ];
                      throw new Error(
                        "BrowserHTTPRequest.save() failed due to HTTP response status " +
                          i.status +
                          "."
                      );
                  }
                });
              });
            }),
            (t.prototype.load = function() {
              return c(this, void 0, void 0, function() {
                var t, e, n, r, i, o, a, s;
                return l(this, function(u) {
                  switch (u.label) {
                    case 0:
                      return [4, this.fetch(this.path, this.requestInit)];
                    case 1:
                      if (!(t = u.sent()).ok)
                        throw new Error(
                          "Request to " +
                            this.path +
                            " failed with status code " +
                            t.status +
                            ". Please verify this URL points to the model JSON of the model to load."
                        );
                      u.label = 2;
                    case 2:
                      return u.trys.push([2, 4, , 5]), [4, t.json()];
                    case 3:
                      return (e = u.sent()), [3, 5];
                    case 4:
                      throw (u.sent(),
                      (n =
                        "Failed to parse model JSON of response from " +
                        this.path +
                        "."),
                      this.path.endsWith(".pb")
                        ? (n +=
                            " Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.")
                        : (n +=
                            " Please make sure the server is serving valid JSON for this request."),
                      new Error(n));
                    case 5:
                      if (
                        ((r = e.modelTopology),
                        (i = e.weightsManifest),
                        null == r && null == i)
                      )
                        throw new Error(
                          "The JSON from HTTP path " +
                            this.path +
                            " contains neither model topology or manifest for weights."
                        );
                      return null == i ? [3, 7] : [4, this.loadWeights(i)];
                    case 6:
                      (s = u.sent()), (o = s[0]), (a = s[1]), (u.label = 7);
                    case 7:
                      return [
                        2,
                        { modelTopology: r, weightSpecs: o, weightData: a }
                      ];
                  }
                });
              });
            }),
            (t.prototype.loadWeights = function(t) {
              return c(this, void 0, void 0, function() {
                var e, n, r, i, o, a, s, u, c, h, f;
                return l(this, function(l) {
                  switch (l.label) {
                    case 0:
                      for (
                        e = Array.isArray(this.path) ? this.path[1] : this.path,
                          n = (function(t) {
                            var e = t.lastIndexOf("/"),
                              n = t.lastIndexOf("?");
                            return [
                              t.substring(0, e) + "/",
                              n > e ? t.substring(n) : ""
                            ];
                          })(e),
                          r = n[0],
                          i = n[1],
                          o = this.weightPathPrefix || r,
                          a = [],
                          s = 0,
                          u = t;
                        s < u.length;
                        s++
                      )
                        (c = u[s]), a.push.apply(a, c.weights);
                      return (
                        (h = []),
                        t.forEach(function(t) {
                          t.paths.forEach(function(t) {
                            h.push(o + t + i);
                          });
                        }),
                        [
                          4,
                          eh(h, {
                            requestInit: this.requestInit,
                            fetchFunc: this.fetch,
                            onProgress: this.onProgress
                          })
                        ]
                      );
                    case 1:
                      return (f = l.sent()), [2, [a, _l(f)]];
                  }
                });
              });
            }),
            (t.URL_SCHEME_REGEX = /^https?:\/\//),
            t
          );
        })();
        function ih(t) {
          return null != t.match(rh.URL_SCHEME_REGEX);
        }
        var oh = function(t, e) {
          return (Array.isArray(t)
          ? t.every(function(t) {
              return ih(t);
            })
          : ih(t))
            ? ah(t, { onProgress: e })
            : null;
        };
        function ah(t, e) {
          return new rh(t, e);
        }
        Tl.registerSaveRouter(oh), Tl.registerLoadRouter(oh);
        var sh = (function() {
            function t(t, e, n) {
              (this.modelTopology = t),
                (this.weightSpecs = e),
                (this.weightData = n);
            }
            return (
              (t.prototype.load = function() {
                return c(this, void 0, void 0, function() {
                  var t;
                  return l(this, function(e) {
                    return (
                      (t = {}),
                      null != this.modelTopology &&
                        (t = u({ modelTopology: this.modelTopology }, t)),
                      null != this.weightSpecs &&
                        this.weightSpecs.length > 0 &&
                        (t = u({ weightSpecs: this.weightSpecs }, t)),
                      null != this.weightData &&
                        this.weightData.byteLength > 0 &&
                        (t = u({ weightData: this.weightData }, t)),
                      [2, t]
                    );
                  });
                });
              }),
              t
            );
          })(),
          uh = (function() {
            function t(t) {
              this.saveHandler = t;
            }
            return (
              (t.prototype.save = function(t) {
                return c(this, void 0, void 0, function() {
                  return l(this, function(e) {
                    return [2, this.saveHandler(t)];
                  });
                });
              }),
              t
            );
          })(),
          ch = Object.freeze({
            browserFiles: function(t) {
              return new Zl(t);
            },
            browserHTTPRequest: function(t, e) {
              return ah(t, e);
            },
            concatenateArrayBuffers: _l,
            decodeWeights: gl,
            encodeWeights: function(t, e) {
              return c(this, void 0, void 0, function() {
                var n, r, i, o, a, s, u;
                return l(this, function(c) {
                  switch (c.label) {
                    case 0:
                      for (
                        n = [],
                          r = [],
                          i = Array.isArray(t)
                            ? t.map(function(t) {
                                return t.name;
                              })
                            : Object.keys(t),
                          o = 0;
                        o < i.length;
                        ++o
                      ) {
                        if (
                          ((a = i[o]),
                          "float32" !==
                            (s = Array.isArray(t) ? t[o].tensor : t[a]).dtype &&
                            "int32" !== s.dtype &&
                            "bool" !== s.dtype)
                        )
                          throw new Error(
                            "Unsupported dtype in weight '" +
                              a +
                              "': " +
                              s.dtype
                          );
                        (u = { name: a, shape: s.shape, dtype: s.dtype }),
                          null != e && (u.group = e),
                          n.push(u),
                          r.push(s.data());
                      }
                      return [4, Promise.all(r)];
                    case 1:
                      return [2, { data: vl(c.sent()), specs: n }];
                  }
                });
              });
            },
            fromMemory: function(t, e, n) {
              return new sh(t, e, n);
            },
            getLoadHandlers: function(t, e) {
              return Tl.getLoadHandlers(t, e);
            },
            getModelArtifactsInfoForJSON: xl,
            getSaveHandlers: function(t) {
              return Tl.getSaveHandlers(t);
            },
            http: ah,
            isHTTPScheme: ih,
            loadWeights: function(t, e, n, r) {
              return (
                void 0 === e && (e = ""),
                c(this, void 0, void 0, function() {
                  return l(this, function(i) {
                    return [
                      2,
                      nh(function(t) {
                        return eh(t, { requestInit: r });
                      })(t, e, n)
                    ];
                  });
                })
              );
            },
            registerLoadRouter: function(t) {
              return Tl.registerLoadRouter(t);
            },
            registerSaveRouter: function(t) {
              return Tl.registerSaveRouter(t);
            },
            weightsLoaderFactory: nh,
            withSaveHandler: function(t) {
              return new uh(t);
            },
            copyModel: function(t, e) {
              return c(this, void 0, void 0, function() {
                return l(this, function(n) {
                  return [2, Nl(t, e, !1)];
                });
              });
            },
            listModels: function() {
              return c(this, void 0, void 0, function() {
                var t, e, n, r, i, o, a;
                return l(this, function(s) {
                  switch (s.label) {
                    case 0:
                      (t = kl.getSchemes()),
                        (e = {}),
                        (n = 0),
                        (r = t),
                        (s.label = 1);
                    case 1:
                      return n < r.length
                        ? ((i = r[n]), [4, kl.getManager(i).listModels()])
                        : [3, 4];
                    case 2:
                      for (a in (o = s.sent())) e[i + Al + a] = o[a];
                      s.label = 3;
                    case 3:
                      return n++, [3, 1];
                    case 4:
                      return [2, e];
                  }
                });
              });
            },
            moveModel: function(t, e) {
              return c(this, void 0, void 0, function() {
                return l(this, function(n) {
                  return [2, Nl(t, e, !0)];
                });
              });
            },
            removeModel: function(t) {
              return c(this, void 0, void 0, function() {
                var e;
                return l(this, function(n) {
                  return (
                    (e = El(t)),
                    [2, kl.getManager(e.scheme).removeModel(e.path)]
                  );
                });
              });
            }
          }),
          lh = Rn({
            confusionMatrix_: function(t, e, n) {
              var r = An(t, "labels", "confusionMatrix"),
                i = An(e, "predictions", "confusionMatrix");
              w(null == n || (n > 0 && Number.isInteger(n)), function() {
                return (
                  "If provided, numClasses must be a positive integer, but got " +
                  n
                );
              }),
                w(1 === r.rank, function() {
                  return (
                    "Expected the rank of labels to be 1, but got " + r.rank
                  );
                }),
                w(1 === i.rank, function() {
                  return (
                    "Expected the rank of predictions to be 1, but got " +
                    i.rank
                  );
                }),
                w(r.shape[0] === i.shape[0], function() {
                  return (
                    "Mismatch in the number of examples: " +
                    r.shape[0] +
                    " vs. " +
                    i.shape[0] +
                    ". Labels and predictions should have the same number of elements."
                  );
                }),
                w(n > 0 && Number.isInteger(n), function() {
                  return (
                    "numClasses is required to be a positive integer, but got " +
                    n
                  );
                });
              var o = ei(r.asType("int32"), n),
                a = ei(i.asType("int32"), n);
              return o
                .transpose()
                .matMul(a)
                .asType("int32");
            }
          }),
          hh = Object.freeze({ confusionMatrix: lh }),
          fh = Rn({
            fromPixels_: function(t, e) {
              if ((void 0 === e && (e = 3), e > 4))
                throw new Error(
                  "Cannot construct Tensor with more than 4 channels from pixels."
                );
              return Rt.fromPixels(t, e);
            }
          }),
          ph = Object.freeze({
            toPixels: function(t, e) {
              return c(this, void 0, void 0, function() {
                var n,
                  r,
                  i,
                  o,
                  a,
                  s,
                  u,
                  c,
                  h,
                  f,
                  p,
                  d,
                  m,
                  y,
                  g,
                  v,
                  b,
                  w,
                  _,
                  S,
                  x,
                  T,
                  A;
                return l(this, function(l) {
                  switch (l.label) {
                    case 0:
                      if (
                        ((n = An(t, "img", "toPixels")),
                        t instanceof yt || (n = n.toInt()),
                        2 !== n.rank && 3 !== n.rank)
                      )
                        throw new Error(
                          "toPixels only supports rank 2 or 3 tensors, got rank " +
                            n.rank +
                            "."
                        );
                      if (
                        ((r = n.shape.slice(0, 2)),
                        (i = r[0]),
                        (o = r[1]),
                        (a = 2 === n.rank ? 1 : n.shape[2]) > 4 || 2 === a)
                      )
                        throw new Error(
                          "toPixels only supports depth of size 1, 3 or 4 but got " +
                            a
                        );
                      return [4, n.data()];
                    case 1:
                      return (
                        (s = l.sent()),
                        (u = n.min()),
                        (c = n.max()),
                        [4, Promise.all([u.data(), c.data()])]
                      );
                    case 2:
                      if (
                        ((h = l.sent()),
                        (f = h[0]),
                        (p = h[1]),
                        (d = f[0]),
                        (m = p[0]),
                        u.dispose(),
                        c.dispose(),
                        "float32" === n.dtype)
                      ) {
                        if (d < 0 || m > 1)
                          throw new Error(
                            "Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [" +
                              d +
                              " - " +
                              m +
                              "]."
                          );
                      } else {
                        if ("int32" !== n.dtype)
                          throw new Error(
                            "Unsupported type for toPixels: " +
                              n.dtype +
                              ". Please use float32 or int32 tensors."
                          );
                        if (d < 0 || m > 255)
                          throw new Error(
                            "Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [" +
                              d +
                              " - " +
                              m +
                              "]."
                          );
                      }
                      for (
                        y = "float32" === n.dtype ? 255 : 1,
                          g = new Uint8ClampedArray(o * i * 4),
                          v = 0;
                        v < i * o;
                        ++v
                      )
                        (b = void 0),
                          (w = void 0),
                          (_ = void 0),
                          (S = void 0),
                          1 === a
                            ? ((b = s[v] * y),
                              (w = s[v] * y),
                              (_ = s[v] * y),
                              (S = 255))
                            : 3 === a
                            ? ((b = s[3 * v] * y),
                              (w = s[3 * v + 1] * y),
                              (_ = s[3 * v + 2] * y),
                              (S = 255))
                            : 4 === a &&
                              ((b = s[4 * v] * y),
                              (w = s[4 * v + 1] * y),
                              (_ = s[4 * v + 2] * y),
                              (S = s[4 * v + 3] * y)),
                          (g[0 + (x = 4 * v)] = Math.round(b)),
                          (g[x + 1] = Math.round(w)),
                          (g[x + 2] = Math.round(_)),
                          (g[x + 3] = Math.round(S));
                      return (
                        null != e &&
                          ((e.width = o),
                          (e.height = i),
                          (T = e.getContext("2d")),
                          (A = new ImageData(g, o, i)),
                          T.putImageData(A, 0, 0)),
                        n !== t && n.dispose(),
                        [2, g]
                      );
                  }
                });
              });
            },
            fromPixels: fh
          }),
          dh = (function() {
            function t() {}
            return (
              (t.prototype.getClassName = function() {
                return this.constructor.className;
              }),
              (t.fromConfig = function(t, e) {
                return new t(e);
              }),
              t
            );
          })(),
          mh = (function() {
            function t() {
              this.classNameMap = {};
            }
            return (
              (t.getMap = function() {
                return null == t.instance && (t.instance = new t()), t.instance;
              }),
              (t.register = function(e) {
                t.getMap().classNameMap[e.className] = [e, e.fromConfig];
              }),
              t
            );
          })();
        function yh(t) {
          w(null != t.className, function() {
            return "Class being registered does not have the static className property defined.";
          }),
            w("string" == typeof t.className, function() {
              return (
                "className is required to be a string, but got type " +
                typeof t.className
              );
            }),
            w(t.className.length > 0, function() {
              return "Class being registered has an empty-string as its className, which is disallowed.";
            }),
            mh.register(t);
        }
        var gh = Object.freeze({
            Serializable: dh,
            SerializationMap: mh,
            registerClass: yh
          }),
          vh = 0.001,
          bh = 0.1;
        function wh() {
          return 32 === Rt.backend.floatPrecision() ? vh : bh;
        }
        function _h(t, e, n) {
          var r = !0;
          if (((B(t) || B(e)) && (r = !1), B(t) && B(e) && (r = !0), r)) {
            var i = t.constructor.name,
              o = e.constructor.name;
            if (i !== o)
              throw new Error(
                "Arrays are of different type. Actual: " +
                  i +
                  ". Expected: " +
                  o
              );
          }
          if (Array.isArray(t) && Array.isArray(e)) {
            var a = xn(t),
              s = xn(e);
            if (!A(a, s))
              throw new Error(
                "Arrays have different shapes. Actual: [" +
                  a +
                  "]. Expected: [" +
                  s +
                  "]"
              );
          }
          var u = B(t) ? t : x(t),
            c = B(e) ? e : x(e);
          if (u.length !== c.length)
            throw new Error(
              "Arrays have different lengths actual: " +
                u.length +
                " vs expected: " +
                c.length +
                ".\nActual:   " +
                u +
                ".\nExpected: " +
                c +
                "."
            );
          for (var l = 0; l < c.length; ++l) {
            var h = u[l],
              f = c[l];
            if (!n(h, f))
              throw new Error(
                "Arrays differ: actual[" +
                  l +
                  "] = " +
                  h +
                  ", expected[" +
                  l +
                  "] = " +
                  f +
                  ".\nActual:   " +
                  u +
                  ".\nExpected: " +
                  c +
                  "."
              );
          }
        }
        function Sh(t, e, n) {
          return (
            (!isFinite(t) && !isFinite(e)) ||
            !(isNaN(t) || isNaN(e) || Math.abs(t - e) > n)
          );
        }
        var xh = Object.freeze({
            TEST_EPSILON_FLOAT16: bh,
            expectArraysClose: function(t, e, n) {
              return (
                null == n && (n = wh()),
                _h(t, e, function(t, e) {
                  return Sh(t, e, n);
                })
              );
            },
            testEpsilon: wh,
            expectPromiseToFail: function(t, e) {
              t().then(
                function() {
                  return e.fail();
                },
                function() {
                  return e();
                }
              );
            },
            expectArraysEqual: function(t, e) {
              var n =
                "string" == typeof e ||
                "number" == typeof e ||
                "boolean" == typeof e
                  ? [e]
                  : e;
              return V(t) || V(t[0]) || V(e) || V(e[0])
                ? _h(t, n, function(t, e) {
                    return t == e;
                  })
                : _h(t, e, function(t, e) {
                    return Sh(t, e, 0);
                  });
            },
            expectNumbersClose: function(t, e, n) {
              if ((null == n && (n = wh()), !Sh(t, e, n)))
                throw new Error(
                  "Numbers differ: actual === " + t + ", expected === " + e
                );
            },
            expectValuesInRange: function(t, e, n) {
              for (var r = 0; r < t.length; r++)
                if (t[r] < e || t[r] > n)
                  throw new Error(
                    "Value out of range:" + t[r] + " low: " + e + ", high: " + n
                  );
            },
            expectArrayBuffersEqual: function(t, e) {
              expect(new Float32Array(t)).toEqual(new Float32Array(e));
            }
          }),
          Th = "1.2.1",
          Ah = Object.freeze({
            gpgpu_util: $o,
            webgl_util: Ce,
            MathBackendWebGL: Wa,
            setWebGLContext: Lt,
            GPGPUContext: Yo
          }),
          kh = (function(t) {
            function e() {
              return (null !== t && t.apply(this, arguments)) || this;
            }
            return (
              s(e, t),
              (e.prototype.minimize = function(t, e, n) {
                void 0 === e && (e = !1);
                var r = this.computeGradients(t, n),
                  i = r.value,
                  o = r.grads;
                if (null != n) {
                  var a = n.map(function(t) {
                    return { name: t.name, tensor: o[t.name] };
                  });
                  this.applyGradients(a);
                } else this.applyGradients(o);
                return je(o), e ? i : (i.dispose(), null);
              }),
              Object.defineProperty(e.prototype, "iterations", {
                get: function() {
                  return (
                    null == this.iterations_ && (this.iterations_ = 0),
                    this.iterations_
                  );
                },
                enumerable: !0,
                configurable: !0
              }),
              (e.prototype.incrementIterations = function() {
                this.iterations_ = this.iterations + 1;
              }),
              (e.prototype.computeGradients = function(t, e) {
                return In(t, e);
              }),
              (e.prototype.dispose = function() {
                null != this.iterations_ && je(this.iterations_);
              }),
              (e.prototype.saveIterations = function() {
                return c(this, void 0, void 0, function() {
                  return l(this, function(t) {
                    return (
                      null == this.iterations_ && (this.iterations_ = 0),
                      [
                        2,
                        { name: "iter", tensor: qn(this.iterations_, "int32") }
                      ]
                    );
                  });
                });
              }),
              (e.prototype.getWeights = function() {
                return c(this, void 0, void 0, function() {
                  return l(this, function(t) {
                    throw new Error(
                      "getWeights() is not implemented for this optimizer yet."
                    );
                  });
                });
              }),
              (e.prototype.setWeights = function(t) {
                return c(this, void 0, void 0, function() {
                  return l(this, function(t) {
                    throw new Error(
                      "setWeights() is not implemented for this optimizer class " +
                        this.getClassName()
                    );
                  });
                });
              }),
              (e.prototype.extractIterations = function(t) {
                return c(this, void 0, void 0, function() {
                  var e;
                  return l(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return (e = this), [4, t[0].tensor.data()];
                      case 1:
                        return (e.iterations_ = n.sent()[0]), [2, t.slice(1)];
                    }
                  });
                });
              }),
              e
            );
          })(dh);
        Object.defineProperty(kh, Symbol.hasInstance, {
          value: function(t) {
            return (
              null != t.minimize &&
              null != t.computeGradients &&
              null != t.applyGradients
            );
          }
        });
        var Eh = (function(t) {
          function e(e, n, r) {
            void 0 === r && (r = null);
            var i = t.call(this) || this;
            return (
              (i.learningRate = e),
              (i.rho = n),
              (i.epsilon = r),
              (i.accumulatedGrads = []),
              (i.accumulatedUpdates = []),
              null == r && (i.epsilon = Rt.backend.epsilon()),
              i
            );
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              (Array.isArray(t)
                ? t.map(function(t) {
                    return t.name;
                  })
                : Object.keys(t)
              ).forEach(function(n, r) {
                var i = Rt.registeredVariables[n];
                null == e.accumulatedGrads[r] &&
                  (e.accumulatedGrads[r] = {
                    originalName: n + "/accum_grad",
                    variable: Le(function() {
                      return tr(i).variable(!1);
                    })
                  }),
                  null == e.accumulatedUpdates[r] &&
                    (e.accumulatedUpdates[r] = {
                      originalName: n + "/accum_var",
                      variable: Le(function() {
                        return tr(i).variable(!1);
                      })
                    });
                var o = Array.isArray(t) ? t[r].tensor : t[n];
                if (null != o) {
                  var a = e.accumulatedGrads[r].variable,
                    s = e.accumulatedUpdates[r].variable;
                  Le(function() {
                    var t = a.mul(e.rho).add(o.square().mul(1 - e.rho)),
                      n = s
                        .add(e.epsilon)
                        .sqrt()
                        .div(a.add(e.epsilon).sqrt())
                        .mul(o),
                      r = s.mul(e.rho).add(n.square().mul(1 - e.rho));
                    a.assign(t), s.assign(r);
                    var u = n.mul(-e.learningRate).add(i);
                    i.assign(u);
                  });
                }
              }),
                this.incrementIterations();
            }),
            (e.prototype.dispose = function() {
              null != this.accumulatedUpdates &&
                (je(
                  this.accumulatedGrads.map(function(t) {
                    return t.variable;
                  })
                ),
                je(
                  this.accumulatedUpdates.map(function(t) {
                    return t.variable;
                  })
                ));
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                var t;
                return l(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return (
                        (t = this.accumulatedGrads.concat(
                          this.accumulatedUpdates
                        )),
                        [4, this.saveIterations()]
                      );
                    case 1:
                      return [
                        2,
                        [e.sent()].concat(
                          t.map(function(t) {
                            return { name: t.originalName, tensor: t.variable };
                          })
                        )
                      ];
                  }
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                var e;
                return l(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return [4, this.extractIterations(t)];
                    case 1:
                      return (
                        (t = n.sent()),
                        (e = t.length / 2),
                        (this.accumulatedGrads = t.slice(0, e).map(function(t) {
                          return {
                            originalName: t.name,
                            variable: t.tensor.variable(!1)
                          };
                        })),
                        (this.accumulatedUpdates = t
                          .slice(e, 2 * e)
                          .map(function(t) {
                            return {
                              originalName: t.name,
                              variable: t.tensor.variable(!1)
                            };
                          })),
                        [2]
                      );
                  }
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                rho: this.rho,
                epsilon: this.epsilon
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.rho, e.epsilon);
            }),
            (e.className = "AdadeltaOptimizer"),
            e
          );
        })(kh);
        yh(Eh);
        var Nh = (function(t) {
          function e(e, n) {
            void 0 === n && (n = 0.1);
            var r = t.call(this) || this;
            return (
              (r.learningRate = e),
              (r.initialAccumulatorValue = n),
              (r.accumulatedGrads = []),
              r
            );
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              (Array.isArray(t)
                ? t.map(function(t) {
                    return t.name;
                  })
                : Object.keys(t)
              ).forEach(function(n, r) {
                var i = Rt.registeredVariables[n];
                null == e.accumulatedGrads[r] &&
                  (e.accumulatedGrads[r] = {
                    originalName: n + "/accumulator",
                    variable: Le(function() {
                      return $n(i.shape, e.initialAccumulatorValue).variable(
                        !1
                      );
                    })
                  });
                var o = Array.isArray(t) ? t[r].tensor : t[n];
                if (null != o) {
                  var a = e.accumulatedGrads[r].variable;
                  Le(function() {
                    var t = a.add(o.square());
                    a.assign(t);
                    var n = o
                      .div(t.add(Rt.backend.epsilon()).sqrt())
                      .mul(-e.learningRate)
                      .add(i);
                    i.assign(n);
                  });
                }
              }),
                this.incrementIterations();
            }),
            (e.prototype.dispose = function() {
              null != this.accumulatedGrads &&
                je(
                  this.accumulatedGrads.map(function(t) {
                    return t.variable;
                  })
                );
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                return l(this, function(t) {
                  switch (t.label) {
                    case 0:
                      return [4, this.saveIterations()];
                    case 1:
                      return [
                        2,
                        [t.sent()].concat(
                          this.accumulatedGrads.map(function(t) {
                            return { name: t.originalName, tensor: t.variable };
                          })
                        )
                      ];
                  }
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                return l(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return [4, this.extractIterations(t)];
                    case 1:
                      return (
                        (t = e.sent()),
                        (this.accumulatedGrads = t.map(function(t) {
                          return {
                            originalName: t.name,
                            variable: t.tensor.variable(!1)
                          };
                        })),
                        [2]
                      );
                  }
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                initialAccumulatorValue: this.initialAccumulatorValue
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.initialAccumulatorValue);
            }),
            (e.className = "Adagrad"),
            e
          );
        })(kh);
        yh(Nh);
        var Oh = (function(t) {
          function e(e, n, r, i) {
            void 0 === i && (i = null);
            var o = t.call(this) || this;
            return (
              (o.learningRate = e),
              (o.beta1 = n),
              (o.beta2 = r),
              (o.epsilon = i),
              (o.accumulatedFirstMoment = []),
              (o.accumulatedSecondMoment = []),
              Le(function() {
                (o.accBeta1 = qn(n).variable()),
                  (o.accBeta2 = qn(r).variable());
              }),
              null == i && (o.epsilon = Rt.backend.epsilon()),
              o
            );
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this,
                n = Array.isArray(t)
                  ? t.map(function(t) {
                      return t.name;
                    })
                  : Object.keys(t);
              Le(function() {
                var r = rc(1, e.accBeta1),
                  i = rc(1, e.accBeta2);
                n.forEach(function(n, o) {
                  var a = Rt.registeredVariables[n];
                  null == e.accumulatedFirstMoment[o] &&
                    (e.accumulatedFirstMoment[o] = {
                      originalName: n + "/m",
                      variable: Le(function() {
                        return tr(a).variable(!1);
                      })
                    }),
                    null == e.accumulatedSecondMoment[o] &&
                      (e.accumulatedSecondMoment[o] = {
                        originalName: n + "/v",
                        variable: Le(function() {
                          return tr(a).variable(!1);
                        })
                      });
                  var s = Array.isArray(t) ? t[o].tensor : t[n];
                  if (null != s) {
                    var u = e.accumulatedFirstMoment[o].variable,
                      c = e.accumulatedSecondMoment[o].variable,
                      l = u.mul(e.beta1).add(s.mul(1 - e.beta1)),
                      h = c.mul(e.beta2).add(s.square().mul(1 - e.beta2)),
                      f = l.div(r),
                      p = h.div(i);
                    u.assign(l), c.assign(h);
                    var d = f
                      .div(p.sqrt().add(e.epsilon))
                      .mul(-e.learningRate)
                      .add(a);
                    a.assign(d);
                  }
                }),
                  e.accBeta1.assign(e.accBeta1.mul(e.beta1)),
                  e.accBeta2.assign(e.accBeta2.mul(e.beta2));
              }),
                this.incrementIterations();
            }),
            (e.prototype.dispose = function() {
              this.accBeta1.dispose(),
                this.accBeta2.dispose(),
                null != this.accumulatedFirstMoment &&
                  je(
                    this.accumulatedFirstMoment.map(function(t) {
                      return t.variable;
                    })
                  ),
                null != this.accumulatedSecondMoment &&
                  je(
                    this.accumulatedSecondMoment.map(function(t) {
                      return t.variable;
                    })
                  );
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                var t;
                return l(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return (
                        (t = this.accumulatedFirstMoment.concat(
                          this.accumulatedSecondMoment
                        )),
                        [4, this.saveIterations()]
                      );
                    case 1:
                      return [
                        2,
                        [e.sent()].concat(
                          t.map(function(t) {
                            return { name: t.originalName, tensor: t.variable };
                          })
                        )
                      ];
                  }
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                var e,
                  n = this;
                return l(this, function(r) {
                  switch (r.label) {
                    case 0:
                      return [4, this.extractIterations(t)];
                    case 1:
                      return (
                        (t = r.sent()),
                        Le(function() {
                          n.accBeta1.assign(Zu(n.beta1, n.iterations_ + 1)),
                            n.accBeta2.assign(Zu(n.beta2, n.iterations_ + 1));
                        }),
                        (e = t.length / 2),
                        (this.accumulatedFirstMoment = t
                          .slice(0, e)
                          .map(function(t) {
                            return {
                              originalName: t.name,
                              variable: t.tensor.variable(!1)
                            };
                          })),
                        (this.accumulatedSecondMoment = t
                          .slice(e, 2 * e)
                          .map(function(t) {
                            return {
                              originalName: t.name,
                              variable: t.tensor.variable(!1)
                            };
                          })),
                        [2]
                      );
                  }
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                beta1: this.beta1,
                beta2: this.beta2,
                epsilon: this.epsilon
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.beta1, e.beta2, e.epsilon);
            }),
            (e.className = "Adam"),
            e
          );
        })(kh);
        yh(Oh);
        var Ch = (function(t) {
          function e(e, n, r, i, o) {
            void 0 === i && (i = null), void 0 === o && (o = 0);
            var a = t.call(this) || this;
            return (
              (a.learningRate = e),
              (a.beta1 = n),
              (a.beta2 = r),
              (a.epsilon = i),
              (a.decay = o),
              (a.accumulatedFirstMoment = []),
              (a.accumulatedWeightedInfNorm = []),
              Le(function() {
                (a.iteration = qn(0).variable()),
                  (a.accBeta1 = qn(n).variable());
              }),
              null == i && (a.epsilon = Rt.backend.epsilon()),
              a
            );
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this,
                n = Array.isArray(t)
                  ? t.map(function(t) {
                      return t.name;
                    })
                  : Object.keys(t);
              Le(function() {
                var r = rc(1, e.accBeta1),
                  i = Uu(-e.learningRate, e.iteration.mul(e.decay).add(1));
                n.forEach(function(n, o) {
                  var a = Rt.registeredVariables[n];
                  null == e.accumulatedFirstMoment[o] &&
                    (e.accumulatedFirstMoment[o] = {
                      originalName: n + "/m",
                      variable: tr(a).variable(!1)
                    }),
                    null == e.accumulatedWeightedInfNorm[o] &&
                      (e.accumulatedWeightedInfNorm[o] = {
                        originalName: n + "/v",
                        variable: tr(a).variable(!1)
                      });
                  var s = Array.isArray(t) ? t[o].tensor : t[n];
                  if (null != s) {
                    var u = e.accumulatedFirstMoment[o].variable,
                      c = e.accumulatedWeightedInfNorm[o].variable,
                      l = u.mul(e.beta1).add(s.mul(1 - e.beta1)),
                      h = c.mul(e.beta2),
                      f = s.abs(),
                      p = h.maximum(f);
                    u.assign(l), c.assign(p);
                    var d = i
                      .div(r)
                      .mul(l.div(p.add(e.epsilon)))
                      .add(a);
                    a.assign(d);
                  }
                }),
                  e.iteration.assign(e.iteration.add(1)),
                  e.accBeta1.assign(e.accBeta1.mul(e.beta1));
              }),
                this.incrementIterations();
            }),
            (e.prototype.dispose = function() {
              this.accBeta1.dispose(),
                this.iteration.dispose(),
                null != this.accumulatedFirstMoment &&
                  je(
                    this.accumulatedFirstMoment.map(function(t) {
                      return t.variable;
                    })
                  ),
                null != this.accumulatedWeightedInfNorm &&
                  je(
                    this.accumulatedWeightedInfNorm.map(function(t) {
                      return t.variable;
                    })
                  );
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                return l(this, function(t) {
                  throw new Error(
                    "getWeights() is not implemented for Adamax yet."
                  );
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                return l(this, function(t) {
                  throw new Error(
                    "setWeights() is not implemented for Adamax yet."
                  );
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                beta1: this.beta1,
                beta2: this.beta2,
                epsilon: this.epsilon,
                decay: this.decay
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(
                e.learningRate,
                e.beta1,
                e.beta2,
                e.epsilon,
                e.decay
              );
            }),
            (e.className = "Adamax"),
            e
          );
        })(kh);
        yh(Ch);
        var Ih = (function(t) {
          function e(e) {
            var n = t.call(this) || this;
            return (n.learningRate = e), n.setLearningRate(e), n;
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              (Array.isArray(t)
                ? t.map(function(t) {
                    return t.name;
                  })
                : Object.keys(t)
              ).forEach(function(n, r) {
                var i = Array.isArray(t) ? t[r].tensor : t[n];
                if (null != i) {
                  var o = Rt.registeredVariables[n];
                  Le(function() {
                    var t = e.c.mul(i).add(o);
                    o.assign(t);
                  });
                }
              }),
                this.incrementIterations();
            }),
            (e.prototype.setLearningRate = function(t) {
              (this.learningRate = t),
                null != this.c && this.c.dispose(),
                (this.c = Be(qn(-t)));
            }),
            (e.prototype.dispose = function() {
              this.c.dispose();
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                return l(this, function(t) {
                  switch (t.label) {
                    case 0:
                      return [4, this.saveIterations()];
                    case 1:
                      return [2, [t.sent()]];
                  }
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                return l(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return [4, this.extractIterations(t)];
                    case 1:
                      if (0 !== (t = e.sent()).length)
                        throw new Error(
                          "SGD optimizer does not have settable weights."
                        );
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return { learningRate: this.learningRate };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate);
            }),
            (e.className = "SGD"),
            e
          );
        })(kh);
        yh(Ih);
        var Mh = (function(t) {
          function e(e, n, r) {
            void 0 === r && (r = !1);
            var i = t.call(this, e) || this;
            return (
              (i.learningRate = e),
              (i.momentum = n),
              (i.useNesterov = r),
              (i.accumulations = []),
              (i.m = qn(i.momentum)),
              i
            );
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              (Array.isArray(t)
                ? t.map(function(t) {
                    return t.name;
                  })
                : Object.keys(t)
              ).forEach(function(n, r) {
                var i = Rt.registeredVariables[n];
                null == e.accumulations[r] &&
                  (e.accumulations[r] = {
                    originalName: n + "/momentum",
                    variable: Le(function() {
                      return tr(i).variable(!1);
                    })
                  });
                var o = e.accumulations[r].variable,
                  a = Array.isArray(t) ? t[r].tensor : t[n];
                null != a &&
                  Le(function() {
                    var t,
                      n = e.m.mul(o).add(a);
                    (t = e.useNesterov
                      ? e.c.mul(a.add(n.mul(e.m))).add(i)
                      : e.c.mul(n).add(i)),
                      o.assign(n),
                      i.assign(t);
                  });
              }),
                this.incrementIterations();
            }),
            (e.prototype.dispose = function() {
              this.m.dispose(),
                null != this.accumulations &&
                  je(
                    this.accumulations.map(function(t) {
                      return t.variable;
                    })
                  );
            }),
            (e.prototype.setMomentum = function(t) {
              this.momentum = t;
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                return l(this, function(t) {
                  switch (t.label) {
                    case 0:
                      return [4, this.saveIterations()];
                    case 1:
                      return [
                        2,
                        [t.sent()].concat(
                          this.accumulations.map(function(t) {
                            return { name: t.originalName, tensor: t.variable };
                          })
                        )
                      ];
                  }
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                return l(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return [4, this.extractIterations(t)];
                    case 1:
                      return (
                        (t = e.sent()),
                        (this.accumulations = t.map(function(t) {
                          return {
                            originalName: t.name,
                            variable: t.tensor.variable(!1)
                          };
                        })),
                        [2]
                      );
                  }
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                momentum: this.momentum,
                useNesterov: this.useNesterov
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.momentum, e.useNesterov);
            }),
            (e.className = "MomentumOptimizer"),
            e
          );
        })(Ih);
        yh(Mh);
        var Ph = (function(t) {
          function e(e, n, r, i, o) {
            void 0 === n && (n = 0.9),
              void 0 === r && (r = 0),
              void 0 === i && (i = null),
              void 0 === o && (o = !1);
            var a = t.call(this) || this;
            return (
              (a.learningRate = e),
              (a.decay = n),
              (a.momentum = r),
              (a.epsilon = i),
              (a.accumulatedMeanSquares = []),
              (a.accumulatedMoments = []),
              (a.accumulatedMeanGrads = []),
              (a.centered = o),
              null == i && (a.epsilon = Rt.backend.epsilon()),
              a
            );
          }
          return (
            s(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              (Array.isArray(t)
                ? t.map(function(t) {
                    return t.name;
                  })
                : Object.keys(t)
              ).forEach(function(n, r) {
                var i = Rt.registeredVariables[n];
                null == e.accumulatedMeanSquares[r] &&
                  (e.accumulatedMeanSquares[r] = {
                    originalName: n + "/rms",
                    variable: Le(function() {
                      return tr(i).variable(!1);
                    })
                  }),
                  null == e.accumulatedMoments[r] &&
                    (e.accumulatedMoments[r] = {
                      originalName: n + "/momentum",
                      variable: Le(function() {
                        return tr(i).variable(!1);
                      })
                    }),
                  null == e.accumulatedMeanGrads[r] &&
                    e.centered &&
                    (e.accumulatedMeanGrads[r] = {
                      originalName: n + "/mg",
                      variable: Le(function() {
                        return tr(i).variable(!1);
                      })
                    });
                var o = Array.isArray(t) ? t[r].tensor : t[n];
                if (null != o) {
                  var a = e.accumulatedMeanSquares[r].variable,
                    s = e.accumulatedMoments[r].variable;
                  Le(function() {
                    var t = a.mul(e.decay).add(o.square().mul(1 - e.decay));
                    if (e.centered) {
                      var n = e.accumulatedMeanGrads[r].variable,
                        u = n.mul(e.decay).add(o.mul(1 - e.decay)),
                        c = s
                          .mul(e.momentum)
                          .add(
                            o
                              .mul(e.learningRate)
                              .div(t.sub(u.square().add(e.epsilon)).sqrt())
                          );
                      a.assign(t), n.assign(u), s.assign(c);
                      var l = i.sub(c);
                      i.assign(l);
                    } else {
                      var h = a.mul(e.decay).add(o.square().mul(1 - e.decay));
                      (c = s
                        .mul(e.momentum)
                        .add(
                          o.mul(e.learningRate).div(h.add(e.epsilon).sqrt())
                        )),
                        a.assign(h),
                        s.assign(c),
                        (l = i.sub(c)),
                        i.assign(l);
                    }
                  });
                }
              }),
                this.incrementIterations();
            }),
            (e.prototype.dispose = function() {
              null != this.accumulatedMeanSquares &&
                je(
                  this.accumulatedMeanSquares.map(function(t) {
                    return t.variable;
                  })
                ),
                null != this.accumulatedMeanGrads &&
                  this.centered &&
                  je(
                    this.accumulatedMeanGrads.map(function(t) {
                      return t.variable;
                    })
                  ),
                null != this.accumulatedMoments &&
                  je(
                    this.accumulatedMoments.map(function(t) {
                      return t.variable;
                    })
                  );
            }),
            (e.prototype.getWeights = function() {
              return c(this, void 0, void 0, function() {
                var t;
                return l(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return (
                        (t = this.accumulatedMeanSquares.concat(
                          this.accumulatedMoments
                        )),
                        this.centered &&
                          t.push.apply(t, this.accumulatedMeanGrads),
                        [4, this.saveIterations()]
                      );
                    case 1:
                      return [
                        2,
                        [e.sent()].concat(
                          t.map(function(t) {
                            return { name: t.originalName, tensor: t.variable };
                          })
                        )
                      ];
                  }
                });
              });
            }),
            (e.prototype.setWeights = function(t) {
              return c(this, void 0, void 0, function() {
                var e;
                return l(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return [4, this.extractIterations(t)];
                    case 1:
                      return (
                        (t = n.sent()),
                        (e = this.centered ? t.length / 3 : t.length / 2),
                        (this.accumulatedMeanSquares = t
                          .slice(0, e)
                          .map(function(t) {
                            return {
                              originalName: t.name,
                              variable: t.tensor.variable(!1)
                            };
                          })),
                        (this.accumulatedMoments = t
                          .slice(e, 2 * e)
                          .map(function(t) {
                            return {
                              originalName: t.name,
                              variable: t.tensor.variable(!1)
                            };
                          })),
                        this.centered &&
                          (this.accumulatedMeanGrads = t
                            .slice(2 * e, 3 * e)
                            .map(function(t) {
                              return {
                                originalName: t.name,
                                variable: t.tensor.variable(!1)
                              };
                            })),
                        [2]
                      );
                  }
                });
              });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                decay: this.decay,
                momentum: this.momentum,
                epsilon: this.epsilon,
                centered: this.centered
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(
                e.learningRate,
                e.decay,
                e.momentum,
                e.epsilon,
                e.centered
              );
            }),
            (e.className = "RMSProp"),
            e
          );
        })(kh);
        yh(Ph);
        var Rh = (function() {
            function t() {}
            return (
              (t.sgd = function(t) {
                return new Ih(t);
              }),
              (t.momentum = function(t, e, n) {
                return void 0 === n && (n = !1), new Mh(t, e, n);
              }),
              (t.rmsprop = function(t, e, n, r, i) {
                return (
                  void 0 === e && (e = 0.9),
                  void 0 === n && (n = 0),
                  void 0 === r && (r = null),
                  void 0 === i && (i = !1),
                  new Ph(t, e, n, r, i)
                );
              }),
              (t.adam = function(t, e, n, r) {
                return (
                  void 0 === t && (t = 0.001),
                  void 0 === e && (e = 0.9),
                  void 0 === n && (n = 0.999),
                  void 0 === r && (r = null),
                  new Oh(t, e, n, r)
                );
              }),
              (t.adadelta = function(t, e, n) {
                return (
                  void 0 === t && (t = 0.001),
                  void 0 === e && (e = 0.95),
                  void 0 === n && (n = null),
                  new Eh(t, e, n)
                );
              }),
              (t.adamax = function(t, e, n, r, i) {
                return (
                  void 0 === t && (t = 0.002),
                  void 0 === e && (e = 0.9),
                  void 0 === n && (n = 0.999),
                  void 0 === r && (r = null),
                  void 0 === i && (i = 0),
                  new Ch(t, e, n, r, i)
                );
              }),
              (t.adagrad = function(t, e) {
                return void 0 === e && (e = 0.1), new Nh(t, e);
              }),
              t
            );
          })(),
          Dh = {
            sgd: Rh.sgd,
            momentum: Rh.momentum,
            adadelta: Rh.adadelta,
            adagrad: Rh.adagrad,
            rmsprop: Rh.rmsprop,
            adamax: Rh.adamax,
            adam: Rh.adam
          },
          Fh =
            "undefined" != typeof requestAnimationFrame
              ? requestAnimationFrame
              : void 0 !== o
              ? o
              : function(t) {
                  return t();
                };
        function zh() {
          return new Promise(function(t) {
            return Fh(function() {
              return t();
            });
          });
        }
        dt = hl;
      }.call(this, n(11), n(5), n(3).Buffer, n(57).setImmediate);
  },
  function(t, e) {
    "function" == typeof Object.create
      ? (t.exports = function(t, e) {
          e &&
            ((t.super_ = e),
            (t.prototype = Object.create(e.prototype, {
              constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
              }
            })));
        })
      : (t.exports = function(t, e) {
          if (e) {
            t.super_ = e;
            var n = function() {};
            (n.prototype = e.prototype),
              (t.prototype = new n()),
              (t.prototype.constructor = t);
          }
        });
  },
  function(t, e, n) {
    var r = n(3),
      i = r.Buffer;
    function o(t, e) {
      for (var n in t) e[n] = t[n];
    }
    function a(t, e, n) {
      return i(t, e, n);
    }
    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow
      ? (t.exports = r)
      : (o(r, e), (e.Buffer = a)),
      o(i, a),
      (a.from = function(t, e, n) {
        if ("number" == typeof t)
          throw new TypeError("Argument must not be a number");
        return i(t, e, n);
      }),
      (a.alloc = function(t, e, n) {
        if ("number" != typeof t)
          throw new TypeError("Argument must be a number");
        var r = i(t);
        return (
          void 0 !== e
            ? "string" == typeof n
              ? r.fill(e, n)
              : r.fill(e)
            : r.fill(0),
          r
        );
      }),
      (a.allocUnsafe = function(t) {
        if ("number" != typeof t)
          throw new TypeError("Argument must be a number");
        return i(t);
      }),
      (a.allocUnsafeSlow = function(t) {
        if ("number" != typeof t)
          throw new TypeError("Argument must be a number");
        return r.SlowBuffer(t);
      });
  },
  function(t, e, n) {
    "use strict";
    (function(t) {
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
       * @license  MIT
       */
      var r = n(107),
        i = n(108),
        o = n(56);
      function a() {
        return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function s(t, e) {
        if (a() < e) throw new RangeError("Invalid typed array length");
        return (
          u.TYPED_ARRAY_SUPPORT
            ? ((t = new Uint8Array(e)).__proto__ = u.prototype)
            : (null === t && (t = new u(e)), (t.length = e)),
          t
        );
      }
      function u(t, e, n) {
        if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u))
          return new u(t, e, n);
        if ("number" == typeof t) {
          if ("string" == typeof e)
            throw new Error(
              "If encoding is specified then the first argument must be a string"
            );
          return h(this, t);
        }
        return c(this, t, e, n);
      }
      function c(t, e, n, r) {
        if ("number" == typeof e)
          throw new TypeError('"value" argument must not be a number');
        return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer
          ? (function(t, e, n, r) {
              if ((e.byteLength, n < 0 || e.byteLength < n))
                throw new RangeError("'offset' is out of bounds");
              if (e.byteLength < n + (r || 0))
                throw new RangeError("'length' is out of bounds");
              e =
                void 0 === n && void 0 === r
                  ? new Uint8Array(e)
                  : void 0 === r
                  ? new Uint8Array(e, n)
                  : new Uint8Array(e, n, r);
              u.TYPED_ARRAY_SUPPORT
                ? ((t = e).__proto__ = u.prototype)
                : (t = f(t, e));
              return t;
            })(t, e, n, r)
          : "string" == typeof e
          ? (function(t, e, n) {
              ("string" == typeof n && "" !== n) || (n = "utf8");
              if (!u.isEncoding(n))
                throw new TypeError(
                  '"encoding" must be a valid string encoding'
                );
              var r = 0 | d(e, n),
                i = (t = s(t, r)).write(e, n);
              i !== r && (t = t.slice(0, i));
              return t;
            })(t, e, n)
          : (function(t, e) {
              if (u.isBuffer(e)) {
                var n = 0 | p(e.length);
                return 0 === (t = s(t, n)).length ? t : (e.copy(t, 0, 0, n), t);
              }
              if (e) {
                if (
                  ("undefined" != typeof ArrayBuffer &&
                    e.buffer instanceof ArrayBuffer) ||
                  "length" in e
                )
                  return "number" != typeof e.length || (r = e.length) != r
                    ? s(t, 0)
                    : f(t, e);
                if ("Buffer" === e.type && o(e.data)) return f(t, e.data);
              }
              var r;
              throw new TypeError(
                "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
              );
            })(t, e);
      }
      function l(t) {
        if ("number" != typeof t)
          throw new TypeError('"size" argument must be a number');
        if (t < 0) throw new RangeError('"size" argument must not be negative');
      }
      function h(t, e) {
        if ((l(e), (t = s(t, e < 0 ? 0 : 0 | p(e))), !u.TYPED_ARRAY_SUPPORT))
          for (var n = 0; n < e; ++n) t[n] = 0;
        return t;
      }
      function f(t, e) {
        var n = e.length < 0 ? 0 : 0 | p(e.length);
        t = s(t, n);
        for (var r = 0; r < n; r += 1) t[r] = 255 & e[r];
        return t;
      }
      function p(t) {
        if (t >= a())
          throw new RangeError(
            "Attempt to allocate Buffer larger than maximum size: 0x" +
              a().toString(16) +
              " bytes"
          );
        return 0 | t;
      }
      function d(t, e) {
        if (u.isBuffer(t)) return t.length;
        if (
          "undefined" != typeof ArrayBuffer &&
          "function" == typeof ArrayBuffer.isView &&
          (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)
        )
          return t.byteLength;
        "string" != typeof t && (t = "" + t);
        var n = t.length;
        if (0 === n) return 0;
        for (var r = !1; ; )
          switch (e) {
            case "ascii":
            case "latin1":
            case "binary":
              return n;
            case "utf8":
            case "utf-8":
            case void 0:
              return B(t).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * n;
            case "hex":
              return n >>> 1;
            case "base64":
              return q(t).length;
            default:
              if (r) return B(t).length;
              (e = ("" + e).toLowerCase()), (r = !0);
          }
      }
      function m(t, e, n) {
        var r = t[e];
        (t[e] = t[n]), (t[n] = r);
      }
      function y(t, e, n, r, i) {
        if (0 === t.length) return -1;
        if (
          ("string" == typeof n
            ? ((r = n), (n = 0))
            : n > 2147483647
            ? (n = 2147483647)
            : n < -2147483648 && (n = -2147483648),
          (n = +n),
          isNaN(n) && (n = i ? 0 : t.length - 1),
          n < 0 && (n = t.length + n),
          n >= t.length)
        ) {
          if (i) return -1;
          n = t.length - 1;
        } else if (n < 0) {
          if (!i) return -1;
          n = 0;
        }
        if (("string" == typeof e && (e = u.from(e, r)), u.isBuffer(e)))
          return 0 === e.length ? -1 : g(t, e, n, r, i);
        if ("number" == typeof e)
          return (
            (e &= 255),
            u.TYPED_ARRAY_SUPPORT &&
            "function" == typeof Uint8Array.prototype.indexOf
              ? i
                ? Uint8Array.prototype.indexOf.call(t, e, n)
                : Uint8Array.prototype.lastIndexOf.call(t, e, n)
              : g(t, [e], n, r, i)
          );
        throw new TypeError("val must be string, number or Buffer");
      }
      function g(t, e, n, r, i) {
        var o,
          a = 1,
          s = t.length,
          u = e.length;
        if (
          void 0 !== r &&
          ("ucs2" === (r = String(r).toLowerCase()) ||
            "ucs-2" === r ||
            "utf16le" === r ||
            "utf-16le" === r)
        ) {
          if (t.length < 2 || e.length < 2) return -1;
          (a = 2), (s /= 2), (u /= 2), (n /= 2);
        }
        function c(t, e) {
          return 1 === a ? t[e] : t.readUInt16BE(e * a);
        }
        if (i) {
          var l = -1;
          for (o = n; o < s; o++)
            if (c(t, o) === c(e, -1 === l ? 0 : o - l)) {
              if ((-1 === l && (l = o), o - l + 1 === u)) return l * a;
            } else -1 !== l && (o -= o - l), (l = -1);
        } else
          for (n + u > s && (n = s - u), o = n; o >= 0; o--) {
            for (var h = !0, f = 0; f < u; f++)
              if (c(t, o + f) !== c(e, f)) {
                h = !1;
                break;
              }
            if (h) return o;
          }
        return -1;
      }
      function v(t, e, n, r) {
        n = Number(n) || 0;
        var i = t.length - n;
        r ? (r = Number(r)) > i && (r = i) : (r = i);
        var o = e.length;
        if (o % 2 != 0) throw new TypeError("Invalid hex string");
        r > o / 2 && (r = o / 2);
        for (var a = 0; a < r; ++a) {
          var s = parseInt(e.substr(2 * a, 2), 16);
          if (isNaN(s)) return a;
          t[n + a] = s;
        }
        return a;
      }
      function b(t, e, n, r) {
        return U(B(e, t.length - n), t, n, r);
      }
      function w(t, e, n, r) {
        return U(
          (function(t) {
            for (var e = [], n = 0; n < t.length; ++n)
              e.push(255 & t.charCodeAt(n));
            return e;
          })(e),
          t,
          n,
          r
        );
      }
      function _(t, e, n, r) {
        return w(t, e, n, r);
      }
      function S(t, e, n, r) {
        return U(q(e), t, n, r);
      }
      function x(t, e, n, r) {
        return U(
          (function(t, e) {
            for (
              var n, r, i, o = [], a = 0;
              a < t.length && !((e -= 2) < 0);
              ++a
            )
              (n = t.charCodeAt(a)),
                (r = n >> 8),
                (i = n % 256),
                o.push(i),
                o.push(r);
            return o;
          })(e, t.length - n),
          t,
          n,
          r
        );
      }
      function T(t, e, n) {
        return 0 === e && n === t.length
          ? r.fromByteArray(t)
          : r.fromByteArray(t.slice(e, n));
      }
      function A(t, e, n) {
        n = Math.min(t.length, n);
        for (var r = [], i = e; i < n; ) {
          var o,
            a,
            s,
            u,
            c = t[i],
            l = null,
            h = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
          if (i + h <= n)
            switch (h) {
              case 1:
                c < 128 && (l = c);
                break;
              case 2:
                128 == (192 & (o = t[i + 1])) &&
                  (u = ((31 & c) << 6) | (63 & o)) > 127 &&
                  (l = u);
                break;
              case 3:
                (o = t[i + 1]),
                  (a = t[i + 2]),
                  128 == (192 & o) &&
                    128 == (192 & a) &&
                    (u = ((15 & c) << 12) | ((63 & o) << 6) | (63 & a)) >
                      2047 &&
                    (u < 55296 || u > 57343) &&
                    (l = u);
                break;
              case 4:
                (o = t[i + 1]),
                  (a = t[i + 2]),
                  (s = t[i + 3]),
                  128 == (192 & o) &&
                    128 == (192 & a) &&
                    128 == (192 & s) &&
                    (u =
                      ((15 & c) << 18) |
                      ((63 & o) << 12) |
                      ((63 & a) << 6) |
                      (63 & s)) > 65535 &&
                    u < 1114112 &&
                    (l = u);
            }
          null === l
            ? ((l = 65533), (h = 1))
            : l > 65535 &&
              ((l -= 65536),
              r.push(((l >>> 10) & 1023) | 55296),
              (l = 56320 | (1023 & l))),
            r.push(l),
            (i += h);
        }
        return (function(t) {
          var e = t.length;
          if (e <= k) return String.fromCharCode.apply(String, t);
          var n = "",
            r = 0;
          for (; r < e; )
            n += String.fromCharCode.apply(String, t.slice(r, (r += k)));
          return n;
        })(r);
      }
      (e.Buffer = u),
        (e.SlowBuffer = function(t) {
          +t != t && (t = 0);
          return u.alloc(+t);
        }),
        (e.INSPECT_MAX_BYTES = 50),
        (u.TYPED_ARRAY_SUPPORT =
          void 0 !== t.TYPED_ARRAY_SUPPORT
            ? t.TYPED_ARRAY_SUPPORT
            : (function() {
                try {
                  var t = new Uint8Array(1);
                  return (
                    (t.__proto__ = {
                      __proto__: Uint8Array.prototype,
                      foo: function() {
                        return 42;
                      }
                    }),
                    42 === t.foo() &&
                      "function" == typeof t.subarray &&
                      0 === t.subarray(1, 1).byteLength
                  );
                } catch (t) {
                  return !1;
                }
              })()),
        (e.kMaxLength = a()),
        (u.poolSize = 8192),
        (u._augment = function(t) {
          return (t.__proto__ = u.prototype), t;
        }),
        (u.from = function(t, e, n) {
          return c(null, t, e, n);
        }),
        u.TYPED_ARRAY_SUPPORT &&
          ((u.prototype.__proto__ = Uint8Array.prototype),
          (u.__proto__ = Uint8Array),
          "undefined" != typeof Symbol &&
            Symbol.species &&
            u[Symbol.species] === u &&
            Object.defineProperty(u, Symbol.species, {
              value: null,
              configurable: !0
            })),
        (u.alloc = function(t, e, n) {
          return (function(t, e, n, r) {
            return (
              l(e),
              e <= 0
                ? s(t, e)
                : void 0 !== n
                ? "string" == typeof r
                  ? s(t, e).fill(n, r)
                  : s(t, e).fill(n)
                : s(t, e)
            );
          })(null, t, e, n);
        }),
        (u.allocUnsafe = function(t) {
          return h(null, t);
        }),
        (u.allocUnsafeSlow = function(t) {
          return h(null, t);
        }),
        (u.isBuffer = function(t) {
          return !(null == t || !t._isBuffer);
        }),
        (u.compare = function(t, e) {
          if (!u.isBuffer(t) || !u.isBuffer(e))
            throw new TypeError("Arguments must be Buffers");
          if (t === e) return 0;
          for (
            var n = t.length, r = e.length, i = 0, o = Math.min(n, r);
            i < o;
            ++i
          )
            if (t[i] !== e[i]) {
              (n = t[i]), (r = e[i]);
              break;
            }
          return n < r ? -1 : r < n ? 1 : 0;
        }),
        (u.isEncoding = function(t) {
          switch (String(t).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return !0;
            default:
              return !1;
          }
        }),
        (u.concat = function(t, e) {
          if (!o(t))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t.length) return u.alloc(0);
          var n;
          if (void 0 === e)
            for (e = 0, n = 0; n < t.length; ++n) e += t[n].length;
          var r = u.allocUnsafe(e),
            i = 0;
          for (n = 0; n < t.length; ++n) {
            var a = t[n];
            if (!u.isBuffer(a))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            a.copy(r, i), (i += a.length);
          }
          return r;
        }),
        (u.byteLength = d),
        (u.prototype._isBuffer = !0),
        (u.prototype.swap16 = function() {
          var t = this.length;
          if (t % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var e = 0; e < t; e += 2) m(this, e, e + 1);
          return this;
        }),
        (u.prototype.swap32 = function() {
          var t = this.length;
          if (t % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var e = 0; e < t; e += 4)
            m(this, e, e + 3), m(this, e + 1, e + 2);
          return this;
        }),
        (u.prototype.swap64 = function() {
          var t = this.length;
          if (t % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var e = 0; e < t; e += 8)
            m(this, e, e + 7),
              m(this, e + 1, e + 6),
              m(this, e + 2, e + 5),
              m(this, e + 3, e + 4);
          return this;
        }),
        (u.prototype.toString = function() {
          var t = 0 | this.length;
          return 0 === t
            ? ""
            : 0 === arguments.length
            ? A(this, 0, t)
            : function(t, e, n) {
                var r = !1;
                if (((void 0 === e || e < 0) && (e = 0), e > this.length))
                  return "";
                if (
                  ((void 0 === n || n > this.length) && (n = this.length),
                  n <= 0)
                )
                  return "";
                if ((n >>>= 0) <= (e >>>= 0)) return "";
                for (t || (t = "utf8"); ; )
                  switch (t) {
                    case "hex":
                      return O(this, e, n);
                    case "utf8":
                    case "utf-8":
                      return A(this, e, n);
                    case "ascii":
                      return E(this, e, n);
                    case "latin1":
                    case "binary":
                      return N(this, e, n);
                    case "base64":
                      return T(this, e, n);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return C(this, e, n);
                    default:
                      if (r) throw new TypeError("Unknown encoding: " + t);
                      (t = (t + "").toLowerCase()), (r = !0);
                  }
              }.apply(this, arguments);
        }),
        (u.prototype.equals = function(t) {
          if (!u.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
          return this === t || 0 === u.compare(this, t);
        }),
        (u.prototype.inspect = function() {
          var t = "",
            n = e.INSPECT_MAX_BYTES;
          return (
            this.length > 0 &&
              ((t = this.toString("hex", 0, n)
                .match(/.{2}/g)
                .join(" ")),
              this.length > n && (t += " ... ")),
            "<Buffer " + t + ">"
          );
        }),
        (u.prototype.compare = function(t, e, n, r, i) {
          if (!u.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
          if (
            (void 0 === e && (e = 0),
            void 0 === n && (n = t ? t.length : 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = this.length),
            e < 0 || n > t.length || r < 0 || i > this.length)
          )
            throw new RangeError("out of range index");
          if (r >= i && e >= n) return 0;
          if (r >= i) return -1;
          if (e >= n) return 1;
          if (this === t) return 0;
          for (
            var o = (i >>>= 0) - (r >>>= 0),
              a = (n >>>= 0) - (e >>>= 0),
              s = Math.min(o, a),
              c = this.slice(r, i),
              l = t.slice(e, n),
              h = 0;
            h < s;
            ++h
          )
            if (c[h] !== l[h]) {
              (o = c[h]), (a = l[h]);
              break;
            }
          return o < a ? -1 : a < o ? 1 : 0;
        }),
        (u.prototype.includes = function(t, e, n) {
          return -1 !== this.indexOf(t, e, n);
        }),
        (u.prototype.indexOf = function(t, e, n) {
          return y(this, t, e, n, !0);
        }),
        (u.prototype.lastIndexOf = function(t, e, n) {
          return y(this, t, e, n, !1);
        }),
        (u.prototype.write = function(t, e, n, r) {
          if (void 0 === e) (r = "utf8"), (n = this.length), (e = 0);
          else if (void 0 === n && "string" == typeof e)
            (r = e), (n = this.length), (e = 0);
          else {
            if (!isFinite(e))
              throw new Error(
                "Buffer.write(string, encoding, offset[, length]) is no longer supported"
              );
            (e |= 0),
              isFinite(n)
                ? ((n |= 0), void 0 === r && (r = "utf8"))
                : ((r = n), (n = void 0));
          }
          var i = this.length - e;
          if (
            ((void 0 === n || n > i) && (n = i),
            (t.length > 0 && (n < 0 || e < 0)) || e > this.length)
          )
            throw new RangeError("Attempt to write outside buffer bounds");
          r || (r = "utf8");
          for (var o = !1; ; )
            switch (r) {
              case "hex":
                return v(this, t, e, n);
              case "utf8":
              case "utf-8":
                return b(this, t, e, n);
              case "ascii":
                return w(this, t, e, n);
              case "latin1":
              case "binary":
                return _(this, t, e, n);
              case "base64":
                return S(this, t, e, n);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return x(this, t, e, n);
              default:
                if (o) throw new TypeError("Unknown encoding: " + r);
                (r = ("" + r).toLowerCase()), (o = !0);
            }
        }),
        (u.prototype.toJSON = function() {
          return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0)
          };
        });
      var k = 4096;
      function E(t, e, n) {
        var r = "";
        n = Math.min(t.length, n);
        for (var i = e; i < n; ++i) r += String.fromCharCode(127 & t[i]);
        return r;
      }
      function N(t, e, n) {
        var r = "";
        n = Math.min(t.length, n);
        for (var i = e; i < n; ++i) r += String.fromCharCode(t[i]);
        return r;
      }
      function O(t, e, n) {
        var r = t.length;
        (!e || e < 0) && (e = 0), (!n || n < 0 || n > r) && (n = r);
        for (var i = "", o = e; o < n; ++o) i += j(t[o]);
        return i;
      }
      function C(t, e, n) {
        for (var r = t.slice(e, n), i = "", o = 0; o < r.length; o += 2)
          i += String.fromCharCode(r[o] + 256 * r[o + 1]);
        return i;
      }
      function I(t, e, n) {
        if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
        if (t + e > n)
          throw new RangeError("Trying to access beyond buffer length");
      }
      function M(t, e, n, r, i, o) {
        if (!u.isBuffer(t))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (e > i || e < o)
          throw new RangeError('"value" argument is out of bounds');
        if (n + r > t.length) throw new RangeError("Index out of range");
      }
      function P(t, e, n, r) {
        e < 0 && (e = 65535 + e + 1);
        for (var i = 0, o = Math.min(t.length - n, 2); i < o; ++i)
          t[n + i] =
            (e & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
      }
      function R(t, e, n, r) {
        e < 0 && (e = 4294967295 + e + 1);
        for (var i = 0, o = Math.min(t.length - n, 4); i < o; ++i)
          t[n + i] = (e >>> (8 * (r ? i : 3 - i))) & 255;
      }
      function D(t, e, n, r, i, o) {
        if (n + r > t.length) throw new RangeError("Index out of range");
        if (n < 0) throw new RangeError("Index out of range");
      }
      function F(t, e, n, r, o) {
        return o || D(t, 0, n, 4), i.write(t, e, n, r, 23, 4), n + 4;
      }
      function z(t, e, n, r, o) {
        return o || D(t, 0, n, 8), i.write(t, e, n, r, 52, 8), n + 8;
      }
      (u.prototype.slice = function(t, e) {
        var n,
          r = this.length;
        if (
          ((t = ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
          (e = void 0 === e ? r : ~~e) < 0
            ? (e += r) < 0 && (e = 0)
            : e > r && (e = r),
          e < t && (e = t),
          u.TYPED_ARRAY_SUPPORT)
        )
          (n = this.subarray(t, e)).__proto__ = u.prototype;
        else {
          var i = e - t;
          n = new u(i, void 0);
          for (var o = 0; o < i; ++o) n[o] = this[o + t];
        }
        return n;
      }),
        (u.prototype.readUIntLE = function(t, e, n) {
          (t |= 0), (e |= 0), n || I(t, e, this.length);
          for (var r = this[t], i = 1, o = 0; ++o < e && (i *= 256); )
            r += this[t + o] * i;
          return r;
        }),
        (u.prototype.readUIntBE = function(t, e, n) {
          (t |= 0), (e |= 0), n || I(t, e, this.length);
          for (var r = this[t + --e], i = 1; e > 0 && (i *= 256); )
            r += this[t + --e] * i;
          return r;
        }),
        (u.prototype.readUInt8 = function(t, e) {
          return e || I(t, 1, this.length), this[t];
        }),
        (u.prototype.readUInt16LE = function(t, e) {
          return e || I(t, 2, this.length), this[t] | (this[t + 1] << 8);
        }),
        (u.prototype.readUInt16BE = function(t, e) {
          return e || I(t, 2, this.length), (this[t] << 8) | this[t + 1];
        }),
        (u.prototype.readUInt32LE = function(t, e) {
          return (
            e || I(t, 4, this.length),
            (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
              16777216 * this[t + 3]
          );
        }),
        (u.prototype.readUInt32BE = function(t, e) {
          return (
            e || I(t, 4, this.length),
            16777216 * this[t] +
              ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
          );
        }),
        (u.prototype.readIntLE = function(t, e, n) {
          (t |= 0), (e |= 0), n || I(t, e, this.length);
          for (var r = this[t], i = 1, o = 0; ++o < e && (i *= 256); )
            r += this[t + o] * i;
          return r >= (i *= 128) && (r -= Math.pow(2, 8 * e)), r;
        }),
        (u.prototype.readIntBE = function(t, e, n) {
          (t |= 0), (e |= 0), n || I(t, e, this.length);
          for (var r = e, i = 1, o = this[t + --r]; r > 0 && (i *= 256); )
            o += this[t + --r] * i;
          return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o;
        }),
        (u.prototype.readInt8 = function(t, e) {
          return (
            e || I(t, 1, this.length),
            128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
          );
        }),
        (u.prototype.readInt16LE = function(t, e) {
          e || I(t, 2, this.length);
          var n = this[t] | (this[t + 1] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt16BE = function(t, e) {
          e || I(t, 2, this.length);
          var n = this[t + 1] | (this[t] << 8);
          return 32768 & n ? 4294901760 | n : n;
        }),
        (u.prototype.readInt32LE = function(t, e) {
          return (
            e || I(t, 4, this.length),
            this[t] |
              (this[t + 1] << 8) |
              (this[t + 2] << 16) |
              (this[t + 3] << 24)
          );
        }),
        (u.prototype.readInt32BE = function(t, e) {
          return (
            e || I(t, 4, this.length),
            (this[t] << 24) |
              (this[t + 1] << 16) |
              (this[t + 2] << 8) |
              this[t + 3]
          );
        }),
        (u.prototype.readFloatLE = function(t, e) {
          return e || I(t, 4, this.length), i.read(this, t, !0, 23, 4);
        }),
        (u.prototype.readFloatBE = function(t, e) {
          return e || I(t, 4, this.length), i.read(this, t, !1, 23, 4);
        }),
        (u.prototype.readDoubleLE = function(t, e) {
          return e || I(t, 8, this.length), i.read(this, t, !0, 52, 8);
        }),
        (u.prototype.readDoubleBE = function(t, e) {
          return e || I(t, 8, this.length), i.read(this, t, !1, 52, 8);
        }),
        (u.prototype.writeUIntLE = function(t, e, n, r) {
          ((t = +t), (e |= 0), (n |= 0), r) ||
            M(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
          var i = 1,
            o = 0;
          for (this[e] = 255 & t; ++o < n && (i *= 256); )
            this[e + o] = (t / i) & 255;
          return e + n;
        }),
        (u.prototype.writeUIntBE = function(t, e, n, r) {
          ((t = +t), (e |= 0), (n |= 0), r) ||
            M(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
          var i = n - 1,
            o = 1;
          for (this[e + i] = 255 & t; --i >= 0 && (o *= 256); )
            this[e + i] = (t / o) & 255;
          return e + n;
        }),
        (u.prototype.writeUInt8 = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 1, 255, 0),
            u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            (this[e] = 255 & t),
            e + 1
          );
        }),
        (u.prototype.writeUInt16LE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
              : P(this, t, e, !0),
            e + 2
          );
        }),
        (u.prototype.writeUInt16BE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
              : P(this, t, e, !1),
            e + 2
          );
        }),
        (u.prototype.writeUInt32LE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e + 3] = t >>> 24),
                (this[e + 2] = t >>> 16),
                (this[e + 1] = t >>> 8),
                (this[e] = 255 & t))
              : R(this, t, e, !0),
            e + 4
          );
        }),
        (u.prototype.writeUInt32BE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 24),
                (this[e + 1] = t >>> 16),
                (this[e + 2] = t >>> 8),
                (this[e + 3] = 255 & t))
              : R(this, t, e, !1),
            e + 4
          );
        }),
        (u.prototype.writeIntLE = function(t, e, n, r) {
          if (((t = +t), (e |= 0), !r)) {
            var i = Math.pow(2, 8 * n - 1);
            M(this, t, e, n, i - 1, -i);
          }
          var o = 0,
            a = 1,
            s = 0;
          for (this[e] = 255 & t; ++o < n && (a *= 256); )
            t < 0 && 0 === s && 0 !== this[e + o - 1] && (s = 1),
              (this[e + o] = (((t / a) >> 0) - s) & 255);
          return e + n;
        }),
        (u.prototype.writeIntBE = function(t, e, n, r) {
          if (((t = +t), (e |= 0), !r)) {
            var i = Math.pow(2, 8 * n - 1);
            M(this, t, e, n, i - 1, -i);
          }
          var o = n - 1,
            a = 1,
            s = 0;
          for (this[e + o] = 255 & t; --o >= 0 && (a *= 256); )
            t < 0 && 0 === s && 0 !== this[e + o + 1] && (s = 1),
              (this[e + o] = (((t / a) >> 0) - s) & 255);
          return e + n;
        }),
        (u.prototype.writeInt8 = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 1, 127, -128),
            u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            t < 0 && (t = 255 + t + 1),
            (this[e] = 255 & t),
            e + 1
          );
        }),
        (u.prototype.writeInt16LE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
              : P(this, t, e, !0),
            e + 2
          );
        }),
        (u.prototype.writeInt16BE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
              : P(this, t, e, !1),
            e + 2
          );
        }),
        (u.prototype.writeInt32LE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 4, 2147483647, -2147483648),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = 255 & t),
                (this[e + 1] = t >>> 8),
                (this[e + 2] = t >>> 16),
                (this[e + 3] = t >>> 24))
              : R(this, t, e, !0),
            e + 4
          );
        }),
        (u.prototype.writeInt32BE = function(t, e, n) {
          return (
            (t = +t),
            (e |= 0),
            n || M(this, t, e, 4, 2147483647, -2147483648),
            t < 0 && (t = 4294967295 + t + 1),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[e] = t >>> 24),
                (this[e + 1] = t >>> 16),
                (this[e + 2] = t >>> 8),
                (this[e + 3] = 255 & t))
              : R(this, t, e, !1),
            e + 4
          );
        }),
        (u.prototype.writeFloatLE = function(t, e, n) {
          return F(this, t, e, !0, n);
        }),
        (u.prototype.writeFloatBE = function(t, e, n) {
          return F(this, t, e, !1, n);
        }),
        (u.prototype.writeDoubleLE = function(t, e, n) {
          return z(this, t, e, !0, n);
        }),
        (u.prototype.writeDoubleBE = function(t, e, n) {
          return z(this, t, e, !1, n);
        }),
        (u.prototype.copy = function(t, e, n, r) {
          if (
            (n || (n = 0),
            r || 0 === r || (r = this.length),
            e >= t.length && (e = t.length),
            e || (e = 0),
            r > 0 && r < n && (r = n),
            r === n)
          )
            return 0;
          if (0 === t.length || 0 === this.length) return 0;
          if (e < 0) throw new RangeError("targetStart out of bounds");
          if (n < 0 || n >= this.length)
            throw new RangeError("sourceStart out of bounds");
          if (r < 0) throw new RangeError("sourceEnd out of bounds");
          r > this.length && (r = this.length),
            t.length - e < r - n && (r = t.length - e + n);
          var i,
            o = r - n;
          if (this === t && n < e && e < r)
            for (i = o - 1; i >= 0; --i) t[i + e] = this[i + n];
          else if (o < 1e3 || !u.TYPED_ARRAY_SUPPORT)
            for (i = 0; i < o; ++i) t[i + e] = this[i + n];
          else Uint8Array.prototype.set.call(t, this.subarray(n, n + o), e);
          return o;
        }),
        (u.prototype.fill = function(t, e, n, r) {
          if ("string" == typeof t) {
            if (
              ("string" == typeof e
                ? ((r = e), (e = 0), (n = this.length))
                : "string" == typeof n && ((r = n), (n = this.length)),
              1 === t.length)
            ) {
              var i = t.charCodeAt(0);
              i < 256 && (t = i);
            }
            if (void 0 !== r && "string" != typeof r)
              throw new TypeError("encoding must be a string");
            if ("string" == typeof r && !u.isEncoding(r))
              throw new TypeError("Unknown encoding: " + r);
          } else "number" == typeof t && (t &= 255);
          if (e < 0 || this.length < e || this.length < n)
            throw new RangeError("Out of range index");
          if (n <= e) return this;
          var o;
          if (
            ((e >>>= 0),
            (n = void 0 === n ? this.length : n >>> 0),
            t || (t = 0),
            "number" == typeof t)
          )
            for (o = e; o < n; ++o) this[o] = t;
          else {
            var a = u.isBuffer(t) ? t : B(new u(t, r).toString()),
              s = a.length;
            for (o = 0; o < n - e; ++o) this[o + e] = a[o % s];
          }
          return this;
        });
      var L = /[^+\/0-9A-Za-z-_]/g;
      function j(t) {
        return t < 16 ? "0" + t.toString(16) : t.toString(16);
      }
      function B(t, e) {
        var n;
        e = e || 1 / 0;
        for (var r = t.length, i = null, o = [], a = 0; a < r; ++a) {
          if ((n = t.charCodeAt(a)) > 55295 && n < 57344) {
            if (!i) {
              if (n > 56319) {
                (e -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }
              if (a + 1 === r) {
                (e -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }
              i = n;
              continue;
            }
            if (n < 56320) {
              (e -= 3) > -1 && o.push(239, 191, 189), (i = n);
              continue;
            }
            n = 65536 + (((i - 55296) << 10) | (n - 56320));
          } else i && (e -= 3) > -1 && o.push(239, 191, 189);
          if (((i = null), n < 128)) {
            if ((e -= 1) < 0) break;
            o.push(n);
          } else if (n < 2048) {
            if ((e -= 2) < 0) break;
            o.push((n >> 6) | 192, (63 & n) | 128);
          } else if (n < 65536) {
            if ((e -= 3) < 0) break;
            o.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
          } else {
            if (!(n < 1114112)) throw new Error("Invalid code point");
            if ((e -= 4) < 0) break;
            o.push(
              (n >> 18) | 240,
              ((n >> 12) & 63) | 128,
              ((n >> 6) & 63) | 128,
              (63 & n) | 128
            );
          }
        }
        return o;
      }
      function q(t) {
        return r.toByteArray(
          (function(t) {
            if (
              (t = (function(t) {
                return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");
              })(t).replace(L, "")).length < 2
            )
              return "";
            for (; t.length % 4 != 0; ) t += "=";
            return t;
          })(t)
        );
      }
      function U(t, e, n, r) {
        for (var i = 0; i < r && !(i + n >= e.length || i >= t.length); ++i)
          e[i + n] = t[i];
        return i;
      }
    }.call(this, n(5)));
  },
  function(t, e, n) {
    (function(t) {
      !(function(t, e) {
        "use strict";
        function r(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }
        function i(t, e) {
          t.super_ = e;
          var n = function() {};
          (n.prototype = e.prototype),
            (t.prototype = new n()),
            (t.prototype.constructor = t);
        }
        function o(t, e, n) {
          if (o.isBN(t)) return t;
          (this.negative = 0),
            (this.words = null),
            (this.length = 0),
            (this.red = null),
            null !== t &&
              (("le" !== e && "be" !== e) || ((n = e), (e = 10)),
              this._init(t || 0, e || 10, n || "be"));
        }
        var a;
        "object" == typeof t ? (t.exports = o) : (e.BN = o),
          (o.BN = o),
          (o.wordSize = 26);
        try {
          a = n(144).Buffer;
        } catch (t) {}
        function s(t, e, n) {
          for (var r = 0, i = Math.min(t.length, n), o = e; o < i; o++) {
            var a = t.charCodeAt(o) - 48;
            (r <<= 4),
              (r |=
                a >= 49 && a <= 54
                  ? a - 49 + 10
                  : a >= 17 && a <= 22
                  ? a - 17 + 10
                  : 15 & a);
          }
          return r;
        }
        function u(t, e, n, r) {
          for (var i = 0, o = Math.min(t.length, n), a = e; a < o; a++) {
            var s = t.charCodeAt(a) - 48;
            (i *= r), (i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s);
          }
          return i;
        }
        (o.isBN = function(t) {
          return (
            t instanceof o ||
            (null !== t &&
              "object" == typeof t &&
              t.constructor.wordSize === o.wordSize &&
              Array.isArray(t.words))
          );
        }),
          (o.max = function(t, e) {
            return t.cmp(e) > 0 ? t : e;
          }),
          (o.min = function(t, e) {
            return t.cmp(e) < 0 ? t : e;
          }),
          (o.prototype._init = function(t, e, n) {
            if ("number" == typeof t) return this._initNumber(t, e, n);
            if ("object" == typeof t) return this._initArray(t, e, n);
            "hex" === e && (e = 16), r(e === (0 | e) && e >= 2 && e <= 36);
            var i = 0;
            "-" === (t = t.toString().replace(/\s+/g, ""))[0] && i++,
              16 === e ? this._parseHex(t, i) : this._parseBase(t, e, i),
              "-" === t[0] && (this.negative = 1),
              this.strip(),
              "le" === n && this._initArray(this.toArray(), e, n);
          }),
          (o.prototype._initNumber = function(t, e, n) {
            t < 0 && ((this.negative = 1), (t = -t)),
              t < 67108864
                ? ((this.words = [67108863 & t]), (this.length = 1))
                : t < 4503599627370496
                ? ((this.words = [67108863 & t, (t / 67108864) & 67108863]),
                  (this.length = 2))
                : (r(t < 9007199254740992),
                  (this.words = [67108863 & t, (t / 67108864) & 67108863, 1]),
                  (this.length = 3)),
              "le" === n && this._initArray(this.toArray(), e, n);
          }),
          (o.prototype._initArray = function(t, e, n) {
            if ((r("number" == typeof t.length), t.length <= 0))
              return (this.words = [0]), (this.length = 1), this;
            (this.length = Math.ceil(t.length / 3)),
              (this.words = new Array(this.length));
            for (var i = 0; i < this.length; i++) this.words[i] = 0;
            var o,
              a,
              s = 0;
            if ("be" === n)
              for (i = t.length - 1, o = 0; i >= 0; i -= 3)
                (a = t[i] | (t[i - 1] << 8) | (t[i - 2] << 16)),
                  (this.words[o] |= (a << s) & 67108863),
                  (this.words[o + 1] = (a >>> (26 - s)) & 67108863),
                  (s += 24) >= 26 && ((s -= 26), o++);
            else if ("le" === n)
              for (i = 0, o = 0; i < t.length; i += 3)
                (a = t[i] | (t[i + 1] << 8) | (t[i + 2] << 16)),
                  (this.words[o] |= (a << s) & 67108863),
                  (this.words[o + 1] = (a >>> (26 - s)) & 67108863),
                  (s += 24) >= 26 && ((s -= 26), o++);
            return this.strip();
          }),
          (o.prototype._parseHex = function(t, e) {
            (this.length = Math.ceil((t.length - e) / 6)),
              (this.words = new Array(this.length));
            for (var n = 0; n < this.length; n++) this.words[n] = 0;
            var r,
              i,
              o = 0;
            for (n = t.length - 6, r = 0; n >= e; n -= 6)
              (i = s(t, n, n + 6)),
                (this.words[r] |= (i << o) & 67108863),
                (this.words[r + 1] |= (i >>> (26 - o)) & 4194303),
                (o += 24) >= 26 && ((o -= 26), r++);
            n + 6 !== e &&
              ((i = s(t, e, n + 6)),
              (this.words[r] |= (i << o) & 67108863),
              (this.words[r + 1] |= (i >>> (26 - o)) & 4194303)),
              this.strip();
          }),
          (o.prototype._parseBase = function(t, e, n) {
            (this.words = [0]), (this.length = 1);
            for (var r = 0, i = 1; i <= 67108863; i *= e) r++;
            r--, (i = (i / e) | 0);
            for (
              var o = t.length - n,
                a = o % r,
                s = Math.min(o, o - a) + n,
                c = 0,
                l = n;
              l < s;
              l += r
            )
              (c = u(t, l, l + r, e)),
                this.imuln(i),
                this.words[0] + c < 67108864
                  ? (this.words[0] += c)
                  : this._iaddn(c);
            if (0 !== a) {
              var h = 1;
              for (c = u(t, l, t.length, e), l = 0; l < a; l++) h *= e;
              this.imuln(h),
                this.words[0] + c < 67108864
                  ? (this.words[0] += c)
                  : this._iaddn(c);
            }
          }),
          (o.prototype.copy = function(t) {
            t.words = new Array(this.length);
            for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
            (t.length = this.length),
              (t.negative = this.negative),
              (t.red = this.red);
          }),
          (o.prototype.clone = function() {
            var t = new o(null);
            return this.copy(t), t;
          }),
          (o.prototype._expand = function(t) {
            for (; this.length < t; ) this.words[this.length++] = 0;
            return this;
          }),
          (o.prototype.strip = function() {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; )
              this.length--;
            return this._normSign();
          }),
          (o.prototype._normSign = function() {
            return (
              1 === this.length && 0 === this.words[0] && (this.negative = 0),
              this
            );
          }),
          (o.prototype.inspect = function() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          });
        var c = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000"
          ],
          l = [
            0,
            0,
            25,
            16,
            12,
            11,
            10,
            9,
            8,
            8,
            7,
            7,
            7,
            7,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5
          ],
          h = [
            0,
            0,
            33554432,
            43046721,
            16777216,
            48828125,
            60466176,
            40353607,
            16777216,
            43046721,
            1e7,
            19487171,
            35831808,
            62748517,
            7529536,
            11390625,
            16777216,
            24137569,
            34012224,
            47045881,
            64e6,
            4084101,
            5153632,
            6436343,
            7962624,
            9765625,
            11881376,
            14348907,
            17210368,
            20511149,
            243e5,
            28629151,
            33554432,
            39135393,
            45435424,
            52521875,
            60466176
          ];
        function f(t, e, n) {
          n.negative = e.negative ^ t.negative;
          var r = (t.length + e.length) | 0;
          (n.length = r), (r = (r - 1) | 0);
          var i = 0 | t.words[0],
            o = 0 | e.words[0],
            a = i * o,
            s = 67108863 & a,
            u = (a / 67108864) | 0;
          n.words[0] = s;
          for (var c = 1; c < r; c++) {
            for (
              var l = u >>> 26,
                h = 67108863 & u,
                f = Math.min(c, e.length - 1),
                p = Math.max(0, c - t.length + 1);
              p <= f;
              p++
            ) {
              var d = (c - p) | 0;
              (l +=
                ((a = (i = 0 | t.words[d]) * (o = 0 | e.words[p]) + h) /
                  67108864) |
                0),
                (h = 67108863 & a);
            }
            (n.words[c] = 0 | h), (u = 0 | l);
          }
          return 0 !== u ? (n.words[c] = 0 | u) : n.length--, n.strip();
        }
        (o.prototype.toString = function(t, e) {
          var n;
          if (((e = 0 | e || 1), 16 === (t = t || 10) || "hex" === t)) {
            n = "";
            for (var i = 0, o = 0, a = 0; a < this.length; a++) {
              var s = this.words[a],
                u = (16777215 & ((s << i) | o)).toString(16);
              (n =
                0 !== (o = (s >>> (24 - i)) & 16777215) || a !== this.length - 1
                  ? c[6 - u.length] + u + n
                  : u + n),
                (i += 2) >= 26 && ((i -= 26), a--);
            }
            for (0 !== o && (n = o.toString(16) + n); n.length % e != 0; )
              n = "0" + n;
            return 0 !== this.negative && (n = "-" + n), n;
          }
          if (t === (0 | t) && t >= 2 && t <= 36) {
            var f = l[t],
              p = h[t];
            n = "";
            var d = this.clone();
            for (d.negative = 0; !d.isZero(); ) {
              var m = d.modn(p).toString(t);
              n = (d = d.idivn(p)).isZero() ? m + n : c[f - m.length] + m + n;
            }
            for (this.isZero() && (n = "0" + n); n.length % e != 0; )
              n = "0" + n;
            return 0 !== this.negative && (n = "-" + n), n;
          }
          r(!1, "Base should be between 2 and 36");
        }),
          (o.prototype.toNumber = function() {
            var t = this.words[0];
            return (
              2 === this.length
                ? (t += 67108864 * this.words[1])
                : 3 === this.length && 1 === this.words[2]
                ? (t += 4503599627370496 + 67108864 * this.words[1])
                : this.length > 2 &&
                  r(!1, "Number can only safely store up to 53 bits"),
              0 !== this.negative ? -t : t
            );
          }),
          (o.prototype.toJSON = function() {
            return this.toString(16);
          }),
          (o.prototype.toBuffer = function(t, e) {
            return r(void 0 !== a), this.toArrayLike(a, t, e);
          }),
          (o.prototype.toArray = function(t, e) {
            return this.toArrayLike(Array, t, e);
          }),
          (o.prototype.toArrayLike = function(t, e, n) {
            var i = this.byteLength(),
              o = n || Math.max(1, i);
            r(i <= o, "byte array longer than desired length"),
              r(o > 0, "Requested array length <= 0"),
              this.strip();
            var a,
              s,
              u = "le" === e,
              c = new t(o),
              l = this.clone();
            if (u) {
              for (s = 0; !l.isZero(); s++)
                (a = l.andln(255)), l.iushrn(8), (c[s] = a);
              for (; s < o; s++) c[s] = 0;
            } else {
              for (s = 0; s < o - i; s++) c[s] = 0;
              for (s = 0; !l.isZero(); s++)
                (a = l.andln(255)), l.iushrn(8), (c[o - s - 1] = a);
            }
            return c;
          }),
          Math.clz32
            ? (o.prototype._countBits = function(t) {
                return 32 - Math.clz32(t);
              })
            : (o.prototype._countBits = function(t) {
                var e = t,
                  n = 0;
                return (
                  e >= 4096 && ((n += 13), (e >>>= 13)),
                  e >= 64 && ((n += 7), (e >>>= 7)),
                  e >= 8 && ((n += 4), (e >>>= 4)),
                  e >= 2 && ((n += 2), (e >>>= 2)),
                  n + e
                );
              }),
          (o.prototype._zeroBits = function(t) {
            if (0 === t) return 26;
            var e = t,
              n = 0;
            return (
              0 == (8191 & e) && ((n += 13), (e >>>= 13)),
              0 == (127 & e) && ((n += 7), (e >>>= 7)),
              0 == (15 & e) && ((n += 4), (e >>>= 4)),
              0 == (3 & e) && ((n += 2), (e >>>= 2)),
              0 == (1 & e) && n++,
              n
            );
          }),
          (o.prototype.bitLength = function() {
            var t = this.words[this.length - 1],
              e = this._countBits(t);
            return 26 * (this.length - 1) + e;
          }),
          (o.prototype.zeroBits = function() {
            if (this.isZero()) return 0;
            for (var t = 0, e = 0; e < this.length; e++) {
              var n = this._zeroBits(this.words[e]);
              if (((t += n), 26 !== n)) break;
            }
            return t;
          }),
          (o.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }),
          (o.prototype.toTwos = function(t) {
            return 0 !== this.negative
              ? this.abs()
                  .inotn(t)
                  .iaddn(1)
              : this.clone();
          }),
          (o.prototype.fromTwos = function(t) {
            return this.testn(t - 1)
              ? this.notn(t)
                  .iaddn(1)
                  .ineg()
              : this.clone();
          }),
          (o.prototype.isNeg = function() {
            return 0 !== this.negative;
          }),
          (o.prototype.neg = function() {
            return this.clone().ineg();
          }),
          (o.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }),
          (o.prototype.iuor = function(t) {
            for (; this.length < t.length; ) this.words[this.length++] = 0;
            for (var e = 0; e < t.length; e++)
              this.words[e] = this.words[e] | t.words[e];
            return this.strip();
          }),
          (o.prototype.ior = function(t) {
            return r(0 == (this.negative | t.negative)), this.iuor(t);
          }),
          (o.prototype.or = function(t) {
            return this.length > t.length
              ? this.clone().ior(t)
              : t.clone().ior(this);
          }),
          (o.prototype.uor = function(t) {
            return this.length > t.length
              ? this.clone().iuor(t)
              : t.clone().iuor(this);
          }),
          (o.prototype.iuand = function(t) {
            var e;
            e = this.length > t.length ? t : this;
            for (var n = 0; n < e.length; n++)
              this.words[n] = this.words[n] & t.words[n];
            return (this.length = e.length), this.strip();
          }),
          (o.prototype.iand = function(t) {
            return r(0 == (this.negative | t.negative)), this.iuand(t);
          }),
          (o.prototype.and = function(t) {
            return this.length > t.length
              ? this.clone().iand(t)
              : t.clone().iand(this);
          }),
          (o.prototype.uand = function(t) {
            return this.length > t.length
              ? this.clone().iuand(t)
              : t.clone().iuand(this);
          }),
          (o.prototype.iuxor = function(t) {
            var e, n;
            this.length > t.length
              ? ((e = this), (n = t))
              : ((e = t), (n = this));
            for (var r = 0; r < n.length; r++)
              this.words[r] = e.words[r] ^ n.words[r];
            if (this !== e)
              for (; r < e.length; r++) this.words[r] = e.words[r];
            return (this.length = e.length), this.strip();
          }),
          (o.prototype.ixor = function(t) {
            return r(0 == (this.negative | t.negative)), this.iuxor(t);
          }),
          (o.prototype.xor = function(t) {
            return this.length > t.length
              ? this.clone().ixor(t)
              : t.clone().ixor(this);
          }),
          (o.prototype.uxor = function(t) {
            return this.length > t.length
              ? this.clone().iuxor(t)
              : t.clone().iuxor(this);
          }),
          (o.prototype.inotn = function(t) {
            r("number" == typeof t && t >= 0);
            var e = 0 | Math.ceil(t / 26),
              n = t % 26;
            this._expand(e), n > 0 && e--;
            for (var i = 0; i < e; i++)
              this.words[i] = 67108863 & ~this.words[i];
            return (
              n > 0 &&
                (this.words[i] = ~this.words[i] & (67108863 >> (26 - n))),
              this.strip()
            );
          }),
          (o.prototype.notn = function(t) {
            return this.clone().inotn(t);
          }),
          (o.prototype.setn = function(t, e) {
            r("number" == typeof t && t >= 0);
            var n = (t / 26) | 0,
              i = t % 26;
            return (
              this._expand(n + 1),
              (this.words[n] = e
                ? this.words[n] | (1 << i)
                : this.words[n] & ~(1 << i)),
              this.strip()
            );
          }),
          (o.prototype.iadd = function(t) {
            var e, n, r;
            if (0 !== this.negative && 0 === t.negative)
              return (
                (this.negative = 0),
                (e = this.isub(t)),
                (this.negative ^= 1),
                this._normSign()
              );
            if (0 === this.negative && 0 !== t.negative)
              return (
                (t.negative = 0),
                (e = this.isub(t)),
                (t.negative = 1),
                e._normSign()
              );
            this.length > t.length
              ? ((n = this), (r = t))
              : ((n = t), (r = this));
            for (var i = 0, o = 0; o < r.length; o++)
              (e = (0 | n.words[o]) + (0 | r.words[o]) + i),
                (this.words[o] = 67108863 & e),
                (i = e >>> 26);
            for (; 0 !== i && o < n.length; o++)
              (e = (0 | n.words[o]) + i),
                (this.words[o] = 67108863 & e),
                (i = e >>> 26);
            if (((this.length = n.length), 0 !== i))
              (this.words[this.length] = i), this.length++;
            else if (n !== this)
              for (; o < n.length; o++) this.words[o] = n.words[o];
            return this;
          }),
          (o.prototype.add = function(t) {
            var e;
            return 0 !== t.negative && 0 === this.negative
              ? ((t.negative = 0), (e = this.sub(t)), (t.negative ^= 1), e)
              : 0 === t.negative && 0 !== this.negative
              ? ((this.negative = 0), (e = t.sub(this)), (this.negative = 1), e)
              : this.length > t.length
              ? this.clone().iadd(t)
              : t.clone().iadd(this);
          }),
          (o.prototype.isub = function(t) {
            if (0 !== t.negative) {
              t.negative = 0;
              var e = this.iadd(t);
              return (t.negative = 1), e._normSign();
            }
            if (0 !== this.negative)
              return (
                (this.negative = 0),
                this.iadd(t),
                (this.negative = 1),
                this._normSign()
              );
            var n,
              r,
              i = this.cmp(t);
            if (0 === i)
              return (
                (this.negative = 0),
                (this.length = 1),
                (this.words[0] = 0),
                this
              );
            i > 0 ? ((n = this), (r = t)) : ((n = t), (r = this));
            for (var o = 0, a = 0; a < r.length; a++)
              (o = (e = (0 | n.words[a]) - (0 | r.words[a]) + o) >> 26),
                (this.words[a] = 67108863 & e);
            for (; 0 !== o && a < n.length; a++)
              (o = (e = (0 | n.words[a]) + o) >> 26),
                (this.words[a] = 67108863 & e);
            if (0 === o && a < n.length && n !== this)
              for (; a < n.length; a++) this.words[a] = n.words[a];
            return (
              (this.length = Math.max(this.length, a)),
              n !== this && (this.negative = 1),
              this.strip()
            );
          }),
          (o.prototype.sub = function(t) {
            return this.clone().isub(t);
          });
        var p = function(t, e, n) {
          var r,
            i,
            o,
            a = t.words,
            s = e.words,
            u = n.words,
            c = 0,
            l = 0 | a[0],
            h = 8191 & l,
            f = l >>> 13,
            p = 0 | a[1],
            d = 8191 & p,
            m = p >>> 13,
            y = 0 | a[2],
            g = 8191 & y,
            v = y >>> 13,
            b = 0 | a[3],
            w = 8191 & b,
            _ = b >>> 13,
            S = 0 | a[4],
            x = 8191 & S,
            T = S >>> 13,
            A = 0 | a[5],
            k = 8191 & A,
            E = A >>> 13,
            N = 0 | a[6],
            O = 8191 & N,
            C = N >>> 13,
            I = 0 | a[7],
            M = 8191 & I,
            P = I >>> 13,
            R = 0 | a[8],
            D = 8191 & R,
            F = R >>> 13,
            z = 0 | a[9],
            L = 8191 & z,
            j = z >>> 13,
            B = 0 | s[0],
            q = 8191 & B,
            U = B >>> 13,
            V = 0 | s[1],
            W = 8191 & V,
            G = V >>> 13,
            H = 0 | s[2],
            K = 8191 & H,
            Q = H >>> 13,
            X = 0 | s[3],
            $ = 8191 & X,
            Y = X >>> 13,
            J = 0 | s[4],
            Z = 8191 & J,
            tt = J >>> 13,
            et = 0 | s[5],
            nt = 8191 & et,
            rt = et >>> 13,
            it = 0 | s[6],
            ot = 8191 & it,
            at = it >>> 13,
            st = 0 | s[7],
            ut = 8191 & st,
            ct = st >>> 13,
            lt = 0 | s[8],
            ht = 8191 & lt,
            ft = lt >>> 13,
            pt = 0 | s[9],
            dt = 8191 & pt,
            mt = pt >>> 13;
          (n.negative = t.negative ^ e.negative), (n.length = 19);
          var yt =
            (((c + (r = Math.imul(h, q))) | 0) +
              ((8191 & (i = ((i = Math.imul(h, U)) + Math.imul(f, q)) | 0)) <<
                13)) |
            0;
          (c = ((((o = Math.imul(f, U)) + (i >>> 13)) | 0) + (yt >>> 26)) | 0),
            (yt &= 67108863),
            (r = Math.imul(d, q)),
            (i = ((i = Math.imul(d, U)) + Math.imul(m, q)) | 0),
            (o = Math.imul(m, U));
          var gt =
            (((c + (r = (r + Math.imul(h, W)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, G)) | 0) + Math.imul(f, W)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, G)) | 0) + (i >>> 13)) | 0) +
              (gt >>> 26)) |
            0),
            (gt &= 67108863),
            (r = Math.imul(g, q)),
            (i = ((i = Math.imul(g, U)) + Math.imul(v, q)) | 0),
            (o = Math.imul(v, U)),
            (r = (r + Math.imul(d, W)) | 0),
            (i = ((i = (i + Math.imul(d, G)) | 0) + Math.imul(m, W)) | 0),
            (o = (o + Math.imul(m, G)) | 0);
          var vt =
            (((c + (r = (r + Math.imul(h, K)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, Q)) | 0) + Math.imul(f, K)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, Q)) | 0) + (i >>> 13)) | 0) +
              (vt >>> 26)) |
            0),
            (vt &= 67108863),
            (r = Math.imul(w, q)),
            (i = ((i = Math.imul(w, U)) + Math.imul(_, q)) | 0),
            (o = Math.imul(_, U)),
            (r = (r + Math.imul(g, W)) | 0),
            (i = ((i = (i + Math.imul(g, G)) | 0) + Math.imul(v, W)) | 0),
            (o = (o + Math.imul(v, G)) | 0),
            (r = (r + Math.imul(d, K)) | 0),
            (i = ((i = (i + Math.imul(d, Q)) | 0) + Math.imul(m, K)) | 0),
            (o = (o + Math.imul(m, Q)) | 0);
          var bt =
            (((c + (r = (r + Math.imul(h, $)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, Y)) | 0) + Math.imul(f, $)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, Y)) | 0) + (i >>> 13)) | 0) +
              (bt >>> 26)) |
            0),
            (bt &= 67108863),
            (r = Math.imul(x, q)),
            (i = ((i = Math.imul(x, U)) + Math.imul(T, q)) | 0),
            (o = Math.imul(T, U)),
            (r = (r + Math.imul(w, W)) | 0),
            (i = ((i = (i + Math.imul(w, G)) | 0) + Math.imul(_, W)) | 0),
            (o = (o + Math.imul(_, G)) | 0),
            (r = (r + Math.imul(g, K)) | 0),
            (i = ((i = (i + Math.imul(g, Q)) | 0) + Math.imul(v, K)) | 0),
            (o = (o + Math.imul(v, Q)) | 0),
            (r = (r + Math.imul(d, $)) | 0),
            (i = ((i = (i + Math.imul(d, Y)) | 0) + Math.imul(m, $)) | 0),
            (o = (o + Math.imul(m, Y)) | 0);
          var wt =
            (((c + (r = (r + Math.imul(h, Z)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, tt)) | 0) + Math.imul(f, Z)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, tt)) | 0) + (i >>> 13)) | 0) +
              (wt >>> 26)) |
            0),
            (wt &= 67108863),
            (r = Math.imul(k, q)),
            (i = ((i = Math.imul(k, U)) + Math.imul(E, q)) | 0),
            (o = Math.imul(E, U)),
            (r = (r + Math.imul(x, W)) | 0),
            (i = ((i = (i + Math.imul(x, G)) | 0) + Math.imul(T, W)) | 0),
            (o = (o + Math.imul(T, G)) | 0),
            (r = (r + Math.imul(w, K)) | 0),
            (i = ((i = (i + Math.imul(w, Q)) | 0) + Math.imul(_, K)) | 0),
            (o = (o + Math.imul(_, Q)) | 0),
            (r = (r + Math.imul(g, $)) | 0),
            (i = ((i = (i + Math.imul(g, Y)) | 0) + Math.imul(v, $)) | 0),
            (o = (o + Math.imul(v, Y)) | 0),
            (r = (r + Math.imul(d, Z)) | 0),
            (i = ((i = (i + Math.imul(d, tt)) | 0) + Math.imul(m, Z)) | 0),
            (o = (o + Math.imul(m, tt)) | 0);
          var _t =
            (((c + (r = (r + Math.imul(h, nt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, rt)) | 0) + Math.imul(f, nt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, rt)) | 0) + (i >>> 13)) | 0) +
              (_t >>> 26)) |
            0),
            (_t &= 67108863),
            (r = Math.imul(O, q)),
            (i = ((i = Math.imul(O, U)) + Math.imul(C, q)) | 0),
            (o = Math.imul(C, U)),
            (r = (r + Math.imul(k, W)) | 0),
            (i = ((i = (i + Math.imul(k, G)) | 0) + Math.imul(E, W)) | 0),
            (o = (o + Math.imul(E, G)) | 0),
            (r = (r + Math.imul(x, K)) | 0),
            (i = ((i = (i + Math.imul(x, Q)) | 0) + Math.imul(T, K)) | 0),
            (o = (o + Math.imul(T, Q)) | 0),
            (r = (r + Math.imul(w, $)) | 0),
            (i = ((i = (i + Math.imul(w, Y)) | 0) + Math.imul(_, $)) | 0),
            (o = (o + Math.imul(_, Y)) | 0),
            (r = (r + Math.imul(g, Z)) | 0),
            (i = ((i = (i + Math.imul(g, tt)) | 0) + Math.imul(v, Z)) | 0),
            (o = (o + Math.imul(v, tt)) | 0),
            (r = (r + Math.imul(d, nt)) | 0),
            (i = ((i = (i + Math.imul(d, rt)) | 0) + Math.imul(m, nt)) | 0),
            (o = (o + Math.imul(m, rt)) | 0);
          var St =
            (((c + (r = (r + Math.imul(h, ot)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, at)) | 0) + Math.imul(f, ot)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, at)) | 0) + (i >>> 13)) | 0) +
              (St >>> 26)) |
            0),
            (St &= 67108863),
            (r = Math.imul(M, q)),
            (i = ((i = Math.imul(M, U)) + Math.imul(P, q)) | 0),
            (o = Math.imul(P, U)),
            (r = (r + Math.imul(O, W)) | 0),
            (i = ((i = (i + Math.imul(O, G)) | 0) + Math.imul(C, W)) | 0),
            (o = (o + Math.imul(C, G)) | 0),
            (r = (r + Math.imul(k, K)) | 0),
            (i = ((i = (i + Math.imul(k, Q)) | 0) + Math.imul(E, K)) | 0),
            (o = (o + Math.imul(E, Q)) | 0),
            (r = (r + Math.imul(x, $)) | 0),
            (i = ((i = (i + Math.imul(x, Y)) | 0) + Math.imul(T, $)) | 0),
            (o = (o + Math.imul(T, Y)) | 0),
            (r = (r + Math.imul(w, Z)) | 0),
            (i = ((i = (i + Math.imul(w, tt)) | 0) + Math.imul(_, Z)) | 0),
            (o = (o + Math.imul(_, tt)) | 0),
            (r = (r + Math.imul(g, nt)) | 0),
            (i = ((i = (i + Math.imul(g, rt)) | 0) + Math.imul(v, nt)) | 0),
            (o = (o + Math.imul(v, rt)) | 0),
            (r = (r + Math.imul(d, ot)) | 0),
            (i = ((i = (i + Math.imul(d, at)) | 0) + Math.imul(m, ot)) | 0),
            (o = (o + Math.imul(m, at)) | 0);
          var xt =
            (((c + (r = (r + Math.imul(h, ut)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, ct)) | 0) + Math.imul(f, ut)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, ct)) | 0) + (i >>> 13)) | 0) +
              (xt >>> 26)) |
            0),
            (xt &= 67108863),
            (r = Math.imul(D, q)),
            (i = ((i = Math.imul(D, U)) + Math.imul(F, q)) | 0),
            (o = Math.imul(F, U)),
            (r = (r + Math.imul(M, W)) | 0),
            (i = ((i = (i + Math.imul(M, G)) | 0) + Math.imul(P, W)) | 0),
            (o = (o + Math.imul(P, G)) | 0),
            (r = (r + Math.imul(O, K)) | 0),
            (i = ((i = (i + Math.imul(O, Q)) | 0) + Math.imul(C, K)) | 0),
            (o = (o + Math.imul(C, Q)) | 0),
            (r = (r + Math.imul(k, $)) | 0),
            (i = ((i = (i + Math.imul(k, Y)) | 0) + Math.imul(E, $)) | 0),
            (o = (o + Math.imul(E, Y)) | 0),
            (r = (r + Math.imul(x, Z)) | 0),
            (i = ((i = (i + Math.imul(x, tt)) | 0) + Math.imul(T, Z)) | 0),
            (o = (o + Math.imul(T, tt)) | 0),
            (r = (r + Math.imul(w, nt)) | 0),
            (i = ((i = (i + Math.imul(w, rt)) | 0) + Math.imul(_, nt)) | 0),
            (o = (o + Math.imul(_, rt)) | 0),
            (r = (r + Math.imul(g, ot)) | 0),
            (i = ((i = (i + Math.imul(g, at)) | 0) + Math.imul(v, ot)) | 0),
            (o = (o + Math.imul(v, at)) | 0),
            (r = (r + Math.imul(d, ut)) | 0),
            (i = ((i = (i + Math.imul(d, ct)) | 0) + Math.imul(m, ut)) | 0),
            (o = (o + Math.imul(m, ct)) | 0);
          var Tt =
            (((c + (r = (r + Math.imul(h, ht)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, ft)) | 0) + Math.imul(f, ht)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, ft)) | 0) + (i >>> 13)) | 0) +
              (Tt >>> 26)) |
            0),
            (Tt &= 67108863),
            (r = Math.imul(L, q)),
            (i = ((i = Math.imul(L, U)) + Math.imul(j, q)) | 0),
            (o = Math.imul(j, U)),
            (r = (r + Math.imul(D, W)) | 0),
            (i = ((i = (i + Math.imul(D, G)) | 0) + Math.imul(F, W)) | 0),
            (o = (o + Math.imul(F, G)) | 0),
            (r = (r + Math.imul(M, K)) | 0),
            (i = ((i = (i + Math.imul(M, Q)) | 0) + Math.imul(P, K)) | 0),
            (o = (o + Math.imul(P, Q)) | 0),
            (r = (r + Math.imul(O, $)) | 0),
            (i = ((i = (i + Math.imul(O, Y)) | 0) + Math.imul(C, $)) | 0),
            (o = (o + Math.imul(C, Y)) | 0),
            (r = (r + Math.imul(k, Z)) | 0),
            (i = ((i = (i + Math.imul(k, tt)) | 0) + Math.imul(E, Z)) | 0),
            (o = (o + Math.imul(E, tt)) | 0),
            (r = (r + Math.imul(x, nt)) | 0),
            (i = ((i = (i + Math.imul(x, rt)) | 0) + Math.imul(T, nt)) | 0),
            (o = (o + Math.imul(T, rt)) | 0),
            (r = (r + Math.imul(w, ot)) | 0),
            (i = ((i = (i + Math.imul(w, at)) | 0) + Math.imul(_, ot)) | 0),
            (o = (o + Math.imul(_, at)) | 0),
            (r = (r + Math.imul(g, ut)) | 0),
            (i = ((i = (i + Math.imul(g, ct)) | 0) + Math.imul(v, ut)) | 0),
            (o = (o + Math.imul(v, ct)) | 0),
            (r = (r + Math.imul(d, ht)) | 0),
            (i = ((i = (i + Math.imul(d, ft)) | 0) + Math.imul(m, ht)) | 0),
            (o = (o + Math.imul(m, ft)) | 0);
          var At =
            (((c + (r = (r + Math.imul(h, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(h, mt)) | 0) + Math.imul(f, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(f, mt)) | 0) + (i >>> 13)) | 0) +
              (At >>> 26)) |
            0),
            (At &= 67108863),
            (r = Math.imul(L, W)),
            (i = ((i = Math.imul(L, G)) + Math.imul(j, W)) | 0),
            (o = Math.imul(j, G)),
            (r = (r + Math.imul(D, K)) | 0),
            (i = ((i = (i + Math.imul(D, Q)) | 0) + Math.imul(F, K)) | 0),
            (o = (o + Math.imul(F, Q)) | 0),
            (r = (r + Math.imul(M, $)) | 0),
            (i = ((i = (i + Math.imul(M, Y)) | 0) + Math.imul(P, $)) | 0),
            (o = (o + Math.imul(P, Y)) | 0),
            (r = (r + Math.imul(O, Z)) | 0),
            (i = ((i = (i + Math.imul(O, tt)) | 0) + Math.imul(C, Z)) | 0),
            (o = (o + Math.imul(C, tt)) | 0),
            (r = (r + Math.imul(k, nt)) | 0),
            (i = ((i = (i + Math.imul(k, rt)) | 0) + Math.imul(E, nt)) | 0),
            (o = (o + Math.imul(E, rt)) | 0),
            (r = (r + Math.imul(x, ot)) | 0),
            (i = ((i = (i + Math.imul(x, at)) | 0) + Math.imul(T, ot)) | 0),
            (o = (o + Math.imul(T, at)) | 0),
            (r = (r + Math.imul(w, ut)) | 0),
            (i = ((i = (i + Math.imul(w, ct)) | 0) + Math.imul(_, ut)) | 0),
            (o = (o + Math.imul(_, ct)) | 0),
            (r = (r + Math.imul(g, ht)) | 0),
            (i = ((i = (i + Math.imul(g, ft)) | 0) + Math.imul(v, ht)) | 0),
            (o = (o + Math.imul(v, ft)) | 0);
          var kt =
            (((c + (r = (r + Math.imul(d, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(d, mt)) | 0) + Math.imul(m, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(m, mt)) | 0) + (i >>> 13)) | 0) +
              (kt >>> 26)) |
            0),
            (kt &= 67108863),
            (r = Math.imul(L, K)),
            (i = ((i = Math.imul(L, Q)) + Math.imul(j, K)) | 0),
            (o = Math.imul(j, Q)),
            (r = (r + Math.imul(D, $)) | 0),
            (i = ((i = (i + Math.imul(D, Y)) | 0) + Math.imul(F, $)) | 0),
            (o = (o + Math.imul(F, Y)) | 0),
            (r = (r + Math.imul(M, Z)) | 0),
            (i = ((i = (i + Math.imul(M, tt)) | 0) + Math.imul(P, Z)) | 0),
            (o = (o + Math.imul(P, tt)) | 0),
            (r = (r + Math.imul(O, nt)) | 0),
            (i = ((i = (i + Math.imul(O, rt)) | 0) + Math.imul(C, nt)) | 0),
            (o = (o + Math.imul(C, rt)) | 0),
            (r = (r + Math.imul(k, ot)) | 0),
            (i = ((i = (i + Math.imul(k, at)) | 0) + Math.imul(E, ot)) | 0),
            (o = (o + Math.imul(E, at)) | 0),
            (r = (r + Math.imul(x, ut)) | 0),
            (i = ((i = (i + Math.imul(x, ct)) | 0) + Math.imul(T, ut)) | 0),
            (o = (o + Math.imul(T, ct)) | 0),
            (r = (r + Math.imul(w, ht)) | 0),
            (i = ((i = (i + Math.imul(w, ft)) | 0) + Math.imul(_, ht)) | 0),
            (o = (o + Math.imul(_, ft)) | 0);
          var Et =
            (((c + (r = (r + Math.imul(g, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(g, mt)) | 0) + Math.imul(v, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(v, mt)) | 0) + (i >>> 13)) | 0) +
              (Et >>> 26)) |
            0),
            (Et &= 67108863),
            (r = Math.imul(L, $)),
            (i = ((i = Math.imul(L, Y)) + Math.imul(j, $)) | 0),
            (o = Math.imul(j, Y)),
            (r = (r + Math.imul(D, Z)) | 0),
            (i = ((i = (i + Math.imul(D, tt)) | 0) + Math.imul(F, Z)) | 0),
            (o = (o + Math.imul(F, tt)) | 0),
            (r = (r + Math.imul(M, nt)) | 0),
            (i = ((i = (i + Math.imul(M, rt)) | 0) + Math.imul(P, nt)) | 0),
            (o = (o + Math.imul(P, rt)) | 0),
            (r = (r + Math.imul(O, ot)) | 0),
            (i = ((i = (i + Math.imul(O, at)) | 0) + Math.imul(C, ot)) | 0),
            (o = (o + Math.imul(C, at)) | 0),
            (r = (r + Math.imul(k, ut)) | 0),
            (i = ((i = (i + Math.imul(k, ct)) | 0) + Math.imul(E, ut)) | 0),
            (o = (o + Math.imul(E, ct)) | 0),
            (r = (r + Math.imul(x, ht)) | 0),
            (i = ((i = (i + Math.imul(x, ft)) | 0) + Math.imul(T, ht)) | 0),
            (o = (o + Math.imul(T, ft)) | 0);
          var Nt =
            (((c + (r = (r + Math.imul(w, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(w, mt)) | 0) + Math.imul(_, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(_, mt)) | 0) + (i >>> 13)) | 0) +
              (Nt >>> 26)) |
            0),
            (Nt &= 67108863),
            (r = Math.imul(L, Z)),
            (i = ((i = Math.imul(L, tt)) + Math.imul(j, Z)) | 0),
            (o = Math.imul(j, tt)),
            (r = (r + Math.imul(D, nt)) | 0),
            (i = ((i = (i + Math.imul(D, rt)) | 0) + Math.imul(F, nt)) | 0),
            (o = (o + Math.imul(F, rt)) | 0),
            (r = (r + Math.imul(M, ot)) | 0),
            (i = ((i = (i + Math.imul(M, at)) | 0) + Math.imul(P, ot)) | 0),
            (o = (o + Math.imul(P, at)) | 0),
            (r = (r + Math.imul(O, ut)) | 0),
            (i = ((i = (i + Math.imul(O, ct)) | 0) + Math.imul(C, ut)) | 0),
            (o = (o + Math.imul(C, ct)) | 0),
            (r = (r + Math.imul(k, ht)) | 0),
            (i = ((i = (i + Math.imul(k, ft)) | 0) + Math.imul(E, ht)) | 0),
            (o = (o + Math.imul(E, ft)) | 0);
          var Ot =
            (((c + (r = (r + Math.imul(x, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(x, mt)) | 0) + Math.imul(T, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(T, mt)) | 0) + (i >>> 13)) | 0) +
              (Ot >>> 26)) |
            0),
            (Ot &= 67108863),
            (r = Math.imul(L, nt)),
            (i = ((i = Math.imul(L, rt)) + Math.imul(j, nt)) | 0),
            (o = Math.imul(j, rt)),
            (r = (r + Math.imul(D, ot)) | 0),
            (i = ((i = (i + Math.imul(D, at)) | 0) + Math.imul(F, ot)) | 0),
            (o = (o + Math.imul(F, at)) | 0),
            (r = (r + Math.imul(M, ut)) | 0),
            (i = ((i = (i + Math.imul(M, ct)) | 0) + Math.imul(P, ut)) | 0),
            (o = (o + Math.imul(P, ct)) | 0),
            (r = (r + Math.imul(O, ht)) | 0),
            (i = ((i = (i + Math.imul(O, ft)) | 0) + Math.imul(C, ht)) | 0),
            (o = (o + Math.imul(C, ft)) | 0);
          var Ct =
            (((c + (r = (r + Math.imul(k, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(k, mt)) | 0) + Math.imul(E, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(E, mt)) | 0) + (i >>> 13)) | 0) +
              (Ct >>> 26)) |
            0),
            (Ct &= 67108863),
            (r = Math.imul(L, ot)),
            (i = ((i = Math.imul(L, at)) + Math.imul(j, ot)) | 0),
            (o = Math.imul(j, at)),
            (r = (r + Math.imul(D, ut)) | 0),
            (i = ((i = (i + Math.imul(D, ct)) | 0) + Math.imul(F, ut)) | 0),
            (o = (o + Math.imul(F, ct)) | 0),
            (r = (r + Math.imul(M, ht)) | 0),
            (i = ((i = (i + Math.imul(M, ft)) | 0) + Math.imul(P, ht)) | 0),
            (o = (o + Math.imul(P, ft)) | 0);
          var It =
            (((c + (r = (r + Math.imul(O, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(O, mt)) | 0) + Math.imul(C, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(C, mt)) | 0) + (i >>> 13)) | 0) +
              (It >>> 26)) |
            0),
            (It &= 67108863),
            (r = Math.imul(L, ut)),
            (i = ((i = Math.imul(L, ct)) + Math.imul(j, ut)) | 0),
            (o = Math.imul(j, ct)),
            (r = (r + Math.imul(D, ht)) | 0),
            (i = ((i = (i + Math.imul(D, ft)) | 0) + Math.imul(F, ht)) | 0),
            (o = (o + Math.imul(F, ft)) | 0);
          var Mt =
            (((c + (r = (r + Math.imul(M, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(M, mt)) | 0) + Math.imul(P, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(P, mt)) | 0) + (i >>> 13)) | 0) +
              (Mt >>> 26)) |
            0),
            (Mt &= 67108863),
            (r = Math.imul(L, ht)),
            (i = ((i = Math.imul(L, ft)) + Math.imul(j, ht)) | 0),
            (o = Math.imul(j, ft));
          var Pt =
            (((c + (r = (r + Math.imul(D, dt)) | 0)) | 0) +
              ((8191 &
                (i =
                  ((i = (i + Math.imul(D, mt)) | 0) + Math.imul(F, dt)) | 0)) <<
                13)) |
            0;
          (c =
            ((((o = (o + Math.imul(F, mt)) | 0) + (i >>> 13)) | 0) +
              (Pt >>> 26)) |
            0),
            (Pt &= 67108863);
          var Rt =
            (((c + (r = Math.imul(L, dt))) | 0) +
              ((8191 & (i = ((i = Math.imul(L, mt)) + Math.imul(j, dt)) | 0)) <<
                13)) |
            0;
          return (
            (c =
              ((((o = Math.imul(j, mt)) + (i >>> 13)) | 0) + (Rt >>> 26)) | 0),
            (Rt &= 67108863),
            (u[0] = yt),
            (u[1] = gt),
            (u[2] = vt),
            (u[3] = bt),
            (u[4] = wt),
            (u[5] = _t),
            (u[6] = St),
            (u[7] = xt),
            (u[8] = Tt),
            (u[9] = At),
            (u[10] = kt),
            (u[11] = Et),
            (u[12] = Nt),
            (u[13] = Ot),
            (u[14] = Ct),
            (u[15] = It),
            (u[16] = Mt),
            (u[17] = Pt),
            (u[18] = Rt),
            0 !== c && ((u[19] = c), n.length++),
            n
          );
        };
        function d(t, e, n) {
          return new m().mulp(t, e, n);
        }
        function m(t, e) {
          (this.x = t), (this.y = e);
        }
        Math.imul || (p = f),
          (o.prototype.mulTo = function(t, e) {
            var n = this.length + t.length;
            return 10 === this.length && 10 === t.length
              ? p(this, t, e)
              : n < 63
              ? f(this, t, e)
              : n < 1024
              ? (function(t, e, n) {
                  (n.negative = e.negative ^ t.negative),
                    (n.length = t.length + e.length);
                  for (var r = 0, i = 0, o = 0; o < n.length - 1; o++) {
                    var a = i;
                    i = 0;
                    for (
                      var s = 67108863 & r,
                        u = Math.min(o, e.length - 1),
                        c = Math.max(0, o - t.length + 1);
                      c <= u;
                      c++
                    ) {
                      var l = o - c,
                        h = (0 | t.words[l]) * (0 | e.words[c]),
                        f = 67108863 & h;
                      (s = 67108863 & (f = (f + s) | 0)),
                        (i +=
                          (a =
                            ((a = (a + ((h / 67108864) | 0)) | 0) +
                              (f >>> 26)) |
                            0) >>> 26),
                        (a &= 67108863);
                    }
                    (n.words[o] = s), (r = a), (a = i);
                  }
                  return 0 !== r ? (n.words[o] = r) : n.length--, n.strip();
                })(this, t, e)
              : d(this, t, e);
          }),
          (m.prototype.makeRBT = function(t) {
            for (
              var e = new Array(t), n = o.prototype._countBits(t) - 1, r = 0;
              r < t;
              r++
            )
              e[r] = this.revBin(r, n, t);
            return e;
          }),
          (m.prototype.revBin = function(t, e, n) {
            if (0 === t || t === n - 1) return t;
            for (var r = 0, i = 0; i < e; i++)
              (r |= (1 & t) << (e - i - 1)), (t >>= 1);
            return r;
          }),
          (m.prototype.permute = function(t, e, n, r, i, o) {
            for (var a = 0; a < o; a++) (r[a] = e[t[a]]), (i[a] = n[t[a]]);
          }),
          (m.prototype.transform = function(t, e, n, r, i, o) {
            this.permute(o, t, e, n, r, i);
            for (var a = 1; a < i; a <<= 1)
              for (
                var s = a << 1,
                  u = Math.cos((2 * Math.PI) / s),
                  c = Math.sin((2 * Math.PI) / s),
                  l = 0;
                l < i;
                l += s
              )
                for (var h = u, f = c, p = 0; p < a; p++) {
                  var d = n[l + p],
                    m = r[l + p],
                    y = n[l + p + a],
                    g = r[l + p + a],
                    v = h * y - f * g;
                  (g = h * g + f * y),
                    (y = v),
                    (n[l + p] = d + y),
                    (r[l + p] = m + g),
                    (n[l + p + a] = d - y),
                    (r[l + p + a] = m - g),
                    p !== s &&
                      ((v = u * h - c * f), (f = u * f + c * h), (h = v));
                }
          }),
          (m.prototype.guessLen13b = function(t, e) {
            var n = 1 | Math.max(e, t),
              r = 1 & n,
              i = 0;
            for (n = (n / 2) | 0; n; n >>>= 1) i++;
            return 1 << (i + 1 + r);
          }),
          (m.prototype.conjugate = function(t, e, n) {
            if (!(n <= 1))
              for (var r = 0; r < n / 2; r++) {
                var i = t[r];
                (t[r] = t[n - r - 1]),
                  (t[n - r - 1] = i),
                  (i = e[r]),
                  (e[r] = -e[n - r - 1]),
                  (e[n - r - 1] = -i);
              }
          }),
          (m.prototype.normalize13b = function(t, e) {
            for (var n = 0, r = 0; r < e / 2; r++) {
              var i =
                8192 * Math.round(t[2 * r + 1] / e) +
                Math.round(t[2 * r] / e) +
                n;
              (t[r] = 67108863 & i),
                (n = i < 67108864 ? 0 : (i / 67108864) | 0);
            }
            return t;
          }),
          (m.prototype.convert13b = function(t, e, n, i) {
            for (var o = 0, a = 0; a < e; a++)
              (o += 0 | t[a]),
                (n[2 * a] = 8191 & o),
                (o >>>= 13),
                (n[2 * a + 1] = 8191 & o),
                (o >>>= 13);
            for (a = 2 * e; a < i; ++a) n[a] = 0;
            r(0 === o), r(0 == (-8192 & o));
          }),
          (m.prototype.stub = function(t) {
            for (var e = new Array(t), n = 0; n < t; n++) e[n] = 0;
            return e;
          }),
          (m.prototype.mulp = function(t, e, n) {
            var r = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(r),
              o = this.stub(r),
              a = new Array(r),
              s = new Array(r),
              u = new Array(r),
              c = new Array(r),
              l = new Array(r),
              h = new Array(r),
              f = n.words;
            (f.length = r),
              this.convert13b(t.words, t.length, a, r),
              this.convert13b(e.words, e.length, c, r),
              this.transform(a, o, s, u, r, i),
              this.transform(c, o, l, h, r, i);
            for (var p = 0; p < r; p++) {
              var d = s[p] * l[p] - u[p] * h[p];
              (u[p] = s[p] * h[p] + u[p] * l[p]), (s[p] = d);
            }
            return (
              this.conjugate(s, u, r),
              this.transform(s, u, f, o, r, i),
              this.conjugate(f, o, r),
              this.normalize13b(f, r),
              (n.negative = t.negative ^ e.negative),
              (n.length = t.length + e.length),
              n.strip()
            );
          }),
          (o.prototype.mul = function(t) {
            var e = new o(null);
            return (
              (e.words = new Array(this.length + t.length)), this.mulTo(t, e)
            );
          }),
          (o.prototype.mulf = function(t) {
            var e = new o(null);
            return (e.words = new Array(this.length + t.length)), d(this, t, e);
          }),
          (o.prototype.imul = function(t) {
            return this.clone().mulTo(t, this);
          }),
          (o.prototype.imuln = function(t) {
            r("number" == typeof t), r(t < 67108864);
            for (var e = 0, n = 0; n < this.length; n++) {
              var i = (0 | this.words[n]) * t,
                o = (67108863 & i) + (67108863 & e);
              (e >>= 26),
                (e += (i / 67108864) | 0),
                (e += o >>> 26),
                (this.words[n] = 67108863 & o);
            }
            return 0 !== e && ((this.words[n] = e), this.length++), this;
          }),
          (o.prototype.muln = function(t) {
            return this.clone().imuln(t);
          }),
          (o.prototype.sqr = function() {
            return this.mul(this);
          }),
          (o.prototype.isqr = function() {
            return this.imul(this.clone());
          }),
          (o.prototype.pow = function(t) {
            var e = (function(t) {
              for (var e = new Array(t.bitLength()), n = 0; n < e.length; n++) {
                var r = (n / 26) | 0,
                  i = n % 26;
                e[n] = (t.words[r] & (1 << i)) >>> i;
              }
              return e;
            })(t);
            if (0 === e.length) return new o(1);
            for (
              var n = this, r = 0;
              r < e.length && 0 === e[r];
              r++, n = n.sqr()
            );
            if (++r < e.length)
              for (var i = n.sqr(); r < e.length; r++, i = i.sqr())
                0 !== e[r] && (n = n.mul(i));
            return n;
          }),
          (o.prototype.iushln = function(t) {
            r("number" == typeof t && t >= 0);
            var e,
              n = t % 26,
              i = (t - n) / 26,
              o = (67108863 >>> (26 - n)) << (26 - n);
            if (0 !== n) {
              var a = 0;
              for (e = 0; e < this.length; e++) {
                var s = this.words[e] & o,
                  u = ((0 | this.words[e]) - s) << n;
                (this.words[e] = u | a), (a = s >>> (26 - n));
              }
              a && ((this.words[e] = a), this.length++);
            }
            if (0 !== i) {
              for (e = this.length - 1; e >= 0; e--)
                this.words[e + i] = this.words[e];
              for (e = 0; e < i; e++) this.words[e] = 0;
              this.length += i;
            }
            return this.strip();
          }),
          (o.prototype.ishln = function(t) {
            return r(0 === this.negative), this.iushln(t);
          }),
          (o.prototype.iushrn = function(t, e, n) {
            var i;
            r("number" == typeof t && t >= 0),
              (i = e ? (e - (e % 26)) / 26 : 0);
            var o = t % 26,
              a = Math.min((t - o) / 26, this.length),
              s = 67108863 ^ ((67108863 >>> o) << o),
              u = n;
            if (((i -= a), (i = Math.max(0, i)), u)) {
              for (var c = 0; c < a; c++) u.words[c] = this.words[c];
              u.length = a;
            }
            if (0 === a);
            else if (this.length > a)
              for (this.length -= a, c = 0; c < this.length; c++)
                this.words[c] = this.words[c + a];
            else (this.words[0] = 0), (this.length = 1);
            var l = 0;
            for (c = this.length - 1; c >= 0 && (0 !== l || c >= i); c--) {
              var h = 0 | this.words[c];
              (this.words[c] = (l << (26 - o)) | (h >>> o)), (l = h & s);
            }
            return (
              u && 0 !== l && (u.words[u.length++] = l),
              0 === this.length && ((this.words[0] = 0), (this.length = 1)),
              this.strip()
            );
          }),
          (o.prototype.ishrn = function(t, e, n) {
            return r(0 === this.negative), this.iushrn(t, e, n);
          }),
          (o.prototype.shln = function(t) {
            return this.clone().ishln(t);
          }),
          (o.prototype.ushln = function(t) {
            return this.clone().iushln(t);
          }),
          (o.prototype.shrn = function(t) {
            return this.clone().ishrn(t);
          }),
          (o.prototype.ushrn = function(t) {
            return this.clone().iushrn(t);
          }),
          (o.prototype.testn = function(t) {
            r("number" == typeof t && t >= 0);
            var e = t % 26,
              n = (t - e) / 26,
              i = 1 << e;
            return !(this.length <= n) && !!(this.words[n] & i);
          }),
          (o.prototype.imaskn = function(t) {
            r("number" == typeof t && t >= 0);
            var e = t % 26,
              n = (t - e) / 26;
            if (
              (r(
                0 === this.negative,
                "imaskn works only with positive numbers"
              ),
              this.length <= n)
            )
              return this;
            if (
              (0 !== e && n++,
              (this.length = Math.min(n, this.length)),
              0 !== e)
            ) {
              var i = 67108863 ^ ((67108863 >>> e) << e);
              this.words[this.length - 1] &= i;
            }
            return this.strip();
          }),
          (o.prototype.maskn = function(t) {
            return this.clone().imaskn(t);
          }),
          (o.prototype.iaddn = function(t) {
            return (
              r("number" == typeof t),
              r(t < 67108864),
              t < 0
                ? this.isubn(-t)
                : 0 !== this.negative
                ? 1 === this.length && (0 | this.words[0]) < t
                  ? ((this.words[0] = t - (0 | this.words[0])),
                    (this.negative = 0),
                    this)
                  : ((this.negative = 0),
                    this.isubn(t),
                    (this.negative = 1),
                    this)
                : this._iaddn(t)
            );
          }),
          (o.prototype._iaddn = function(t) {
            this.words[0] += t;
            for (var e = 0; e < this.length && this.words[e] >= 67108864; e++)
              (this.words[e] -= 67108864),
                e === this.length - 1
                  ? (this.words[e + 1] = 1)
                  : this.words[e + 1]++;
            return (this.length = Math.max(this.length, e + 1)), this;
          }),
          (o.prototype.isubn = function(t) {
            if ((r("number" == typeof t), r(t < 67108864), t < 0))
              return this.iaddn(-t);
            if (0 !== this.negative)
              return (
                (this.negative = 0), this.iaddn(t), (this.negative = 1), this
              );
            if (((this.words[0] -= t), 1 === this.length && this.words[0] < 0))
              (this.words[0] = -this.words[0]), (this.negative = 1);
            else
              for (var e = 0; e < this.length && this.words[e] < 0; e++)
                (this.words[e] += 67108864), (this.words[e + 1] -= 1);
            return this.strip();
          }),
          (o.prototype.addn = function(t) {
            return this.clone().iaddn(t);
          }),
          (o.prototype.subn = function(t) {
            return this.clone().isubn(t);
          }),
          (o.prototype.iabs = function() {
            return (this.negative = 0), this;
          }),
          (o.prototype.abs = function() {
            return this.clone().iabs();
          }),
          (o.prototype._ishlnsubmul = function(t, e, n) {
            var i,
              o,
              a = t.length + n;
            this._expand(a);
            var s = 0;
            for (i = 0; i < t.length; i++) {
              o = (0 | this.words[i + n]) + s;
              var u = (0 | t.words[i]) * e;
              (s = ((o -= 67108863 & u) >> 26) - ((u / 67108864) | 0)),
                (this.words[i + n] = 67108863 & o);
            }
            for (; i < this.length - n; i++)
              (s = (o = (0 | this.words[i + n]) + s) >> 26),
                (this.words[i + n] = 67108863 & o);
            if (0 === s) return this.strip();
            for (r(-1 === s), s = 0, i = 0; i < this.length; i++)
              (s = (o = -(0 | this.words[i]) + s) >> 26),
                (this.words[i] = 67108863 & o);
            return (this.negative = 1), this.strip();
          }),
          (o.prototype._wordDiv = function(t, e) {
            var n = (this.length, t.length),
              r = this.clone(),
              i = t,
              a = 0 | i.words[i.length - 1];
            0 !== (n = 26 - this._countBits(a)) &&
              ((i = i.ushln(n)), r.iushln(n), (a = 0 | i.words[i.length - 1]));
            var s,
              u = r.length - i.length;
            if ("mod" !== e) {
              ((s = new o(null)).length = u + 1),
                (s.words = new Array(s.length));
              for (var c = 0; c < s.length; c++) s.words[c] = 0;
            }
            var l = r.clone()._ishlnsubmul(i, 1, u);
            0 === l.negative && ((r = l), s && (s.words[u] = 1));
            for (var h = u - 1; h >= 0; h--) {
              var f =
                67108864 * (0 | r.words[i.length + h]) +
                (0 | r.words[i.length + h - 1]);
              for (
                f = Math.min((f / a) | 0, 67108863), r._ishlnsubmul(i, f, h);
                0 !== r.negative;

              )
                f--,
                  (r.negative = 0),
                  r._ishlnsubmul(i, 1, h),
                  r.isZero() || (r.negative ^= 1);
              s && (s.words[h] = f);
            }
            return (
              s && s.strip(),
              r.strip(),
              "div" !== e && 0 !== n && r.iushrn(n),
              { div: s || null, mod: r }
            );
          }),
          (o.prototype.divmod = function(t, e, n) {
            return (
              r(!t.isZero()),
              this.isZero()
                ? { div: new o(0), mod: new o(0) }
                : 0 !== this.negative && 0 === t.negative
                ? ((s = this.neg().divmod(t, e)),
                  "mod" !== e && (i = s.div.neg()),
                  "div" !== e &&
                    ((a = s.mod.neg()), n && 0 !== a.negative && a.iadd(t)),
                  { div: i, mod: a })
                : 0 === this.negative && 0 !== t.negative
                ? ((s = this.divmod(t.neg(), e)),
                  "mod" !== e && (i = s.div.neg()),
                  { div: i, mod: s.mod })
                : 0 != (this.negative & t.negative)
                ? ((s = this.neg().divmod(t.neg(), e)),
                  "div" !== e &&
                    ((a = s.mod.neg()), n && 0 !== a.negative && a.isub(t)),
                  { div: s.div, mod: a })
                : t.length > this.length || this.cmp(t) < 0
                ? { div: new o(0), mod: this }
                : 1 === t.length
                ? "div" === e
                  ? { div: this.divn(t.words[0]), mod: null }
                  : "mod" === e
                  ? { div: null, mod: new o(this.modn(t.words[0])) }
                  : {
                      div: this.divn(t.words[0]),
                      mod: new o(this.modn(t.words[0]))
                    }
                : this._wordDiv(t, e)
            );
            var i, a, s;
          }),
          (o.prototype.div = function(t) {
            return this.divmod(t, "div", !1).div;
          }),
          (o.prototype.mod = function(t) {
            return this.divmod(t, "mod", !1).mod;
          }),
          (o.prototype.umod = function(t) {
            return this.divmod(t, "mod", !0).mod;
          }),
          (o.prototype.divRound = function(t) {
            var e = this.divmod(t);
            if (e.mod.isZero()) return e.div;
            var n = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              r = t.ushrn(1),
              i = t.andln(1),
              o = n.cmp(r);
            return o < 0 || (1 === i && 0 === o)
              ? e.div
              : 0 !== e.div.negative
              ? e.div.isubn(1)
              : e.div.iaddn(1);
          }),
          (o.prototype.modn = function(t) {
            r(t <= 67108863);
            for (var e = (1 << 26) % t, n = 0, i = this.length - 1; i >= 0; i--)
              n = (e * n + (0 | this.words[i])) % t;
            return n;
          }),
          (o.prototype.idivn = function(t) {
            r(t <= 67108863);
            for (var e = 0, n = this.length - 1; n >= 0; n--) {
              var i = (0 | this.words[n]) + 67108864 * e;
              (this.words[n] = (i / t) | 0), (e = i % t);
            }
            return this.strip();
          }),
          (o.prototype.divn = function(t) {
            return this.clone().idivn(t);
          }),
          (o.prototype.egcd = function(t) {
            r(0 === t.negative), r(!t.isZero());
            var e = this,
              n = t.clone();
            e = 0 !== e.negative ? e.umod(t) : e.clone();
            for (
              var i = new o(1), a = new o(0), s = new o(0), u = new o(1), c = 0;
              e.isEven() && n.isEven();

            )
              e.iushrn(1), n.iushrn(1), ++c;
            for (var l = n.clone(), h = e.clone(); !e.isZero(); ) {
              for (
                var f = 0, p = 1;
                0 == (e.words[0] & p) && f < 26;
                ++f, p <<= 1
              );
              if (f > 0)
                for (e.iushrn(f); f-- > 0; )
                  (i.isOdd() || a.isOdd()) && (i.iadd(l), a.isub(h)),
                    i.iushrn(1),
                    a.iushrn(1);
              for (
                var d = 0, m = 1;
                0 == (n.words[0] & m) && d < 26;
                ++d, m <<= 1
              );
              if (d > 0)
                for (n.iushrn(d); d-- > 0; )
                  (s.isOdd() || u.isOdd()) && (s.iadd(l), u.isub(h)),
                    s.iushrn(1),
                    u.iushrn(1);
              e.cmp(n) >= 0
                ? (e.isub(n), i.isub(s), a.isub(u))
                : (n.isub(e), s.isub(i), u.isub(a));
            }
            return { a: s, b: u, gcd: n.iushln(c) };
          }),
          (o.prototype._invmp = function(t) {
            r(0 === t.negative), r(!t.isZero());
            var e = this,
              n = t.clone();
            e = 0 !== e.negative ? e.umod(t) : e.clone();
            for (
              var i, a = new o(1), s = new o(0), u = n.clone();
              e.cmpn(1) > 0 && n.cmpn(1) > 0;

            ) {
              for (
                var c = 0, l = 1;
                0 == (e.words[0] & l) && c < 26;
                ++c, l <<= 1
              );
              if (c > 0)
                for (e.iushrn(c); c-- > 0; )
                  a.isOdd() && a.iadd(u), a.iushrn(1);
              for (
                var h = 0, f = 1;
                0 == (n.words[0] & f) && h < 26;
                ++h, f <<= 1
              );
              if (h > 0)
                for (n.iushrn(h); h-- > 0; )
                  s.isOdd() && s.iadd(u), s.iushrn(1);
              e.cmp(n) >= 0 ? (e.isub(n), a.isub(s)) : (n.isub(e), s.isub(a));
            }
            return (i = 0 === e.cmpn(1) ? a : s).cmpn(0) < 0 && i.iadd(t), i;
          }),
          (o.prototype.gcd = function(t) {
            if (this.isZero()) return t.abs();
            if (t.isZero()) return this.abs();
            var e = this.clone(),
              n = t.clone();
            (e.negative = 0), (n.negative = 0);
            for (var r = 0; e.isEven() && n.isEven(); r++)
              e.iushrn(1), n.iushrn(1);
            for (;;) {
              for (; e.isEven(); ) e.iushrn(1);
              for (; n.isEven(); ) n.iushrn(1);
              var i = e.cmp(n);
              if (i < 0) {
                var o = e;
                (e = n), (n = o);
              } else if (0 === i || 0 === n.cmpn(1)) break;
              e.isub(n);
            }
            return n.iushln(r);
          }),
          (o.prototype.invm = function(t) {
            return this.egcd(t).a.umod(t);
          }),
          (o.prototype.isEven = function() {
            return 0 == (1 & this.words[0]);
          }),
          (o.prototype.isOdd = function() {
            return 1 == (1 & this.words[0]);
          }),
          (o.prototype.andln = function(t) {
            return this.words[0] & t;
          }),
          (o.prototype.bincn = function(t) {
            r("number" == typeof t);
            var e = t % 26,
              n = (t - e) / 26,
              i = 1 << e;
            if (this.length <= n)
              return this._expand(n + 1), (this.words[n] |= i), this;
            for (var o = i, a = n; 0 !== o && a < this.length; a++) {
              var s = 0 | this.words[a];
              (o = (s += o) >>> 26), (s &= 67108863), (this.words[a] = s);
            }
            return 0 !== o && ((this.words[a] = o), this.length++), this;
          }),
          (o.prototype.isZero = function() {
            return 1 === this.length && 0 === this.words[0];
          }),
          (o.prototype.cmpn = function(t) {
            var e,
              n = t < 0;
            if (0 !== this.negative && !n) return -1;
            if (0 === this.negative && n) return 1;
            if ((this.strip(), this.length > 1)) e = 1;
            else {
              n && (t = -t), r(t <= 67108863, "Number is too big");
              var i = 0 | this.words[0];
              e = i === t ? 0 : i < t ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -e : e;
          }),
          (o.prototype.cmp = function(t) {
            if (0 !== this.negative && 0 === t.negative) return -1;
            if (0 === this.negative && 0 !== t.negative) return 1;
            var e = this.ucmp(t);
            return 0 !== this.negative ? 0 | -e : e;
          }),
          (o.prototype.ucmp = function(t) {
            if (this.length > t.length) return 1;
            if (this.length < t.length) return -1;
            for (var e = 0, n = this.length - 1; n >= 0; n--) {
              var r = 0 | this.words[n],
                i = 0 | t.words[n];
              if (r !== i) {
                r < i ? (e = -1) : r > i && (e = 1);
                break;
              }
            }
            return e;
          }),
          (o.prototype.gtn = function(t) {
            return 1 === this.cmpn(t);
          }),
          (o.prototype.gt = function(t) {
            return 1 === this.cmp(t);
          }),
          (o.prototype.gten = function(t) {
            return this.cmpn(t) >= 0;
          }),
          (o.prototype.gte = function(t) {
            return this.cmp(t) >= 0;
          }),
          (o.prototype.ltn = function(t) {
            return -1 === this.cmpn(t);
          }),
          (o.prototype.lt = function(t) {
            return -1 === this.cmp(t);
          }),
          (o.prototype.lten = function(t) {
            return this.cmpn(t) <= 0;
          }),
          (o.prototype.lte = function(t) {
            return this.cmp(t) <= 0;
          }),
          (o.prototype.eqn = function(t) {
            return 0 === this.cmpn(t);
          }),
          (o.prototype.eq = function(t) {
            return 0 === this.cmp(t);
          }),
          (o.red = function(t) {
            return new S(t);
          }),
          (o.prototype.toRed = function(t) {
            return (
              r(!this.red, "Already a number in reduction context"),
              r(0 === this.negative, "red works only with positives"),
              t.convertTo(this)._forceRed(t)
            );
          }),
          (o.prototype.fromRed = function() {
            return (
              r(
                this.red,
                "fromRed works only with numbers in reduction context"
              ),
              this.red.convertFrom(this)
            );
          }),
          (o.prototype._forceRed = function(t) {
            return (this.red = t), this;
          }),
          (o.prototype.forceRed = function(t) {
            return (
              r(!this.red, "Already a number in reduction context"),
              this._forceRed(t)
            );
          }),
          (o.prototype.redAdd = function(t) {
            return (
              r(this.red, "redAdd works only with red numbers"),
              this.red.add(this, t)
            );
          }),
          (o.prototype.redIAdd = function(t) {
            return (
              r(this.red, "redIAdd works only with red numbers"),
              this.red.iadd(this, t)
            );
          }),
          (o.prototype.redSub = function(t) {
            return (
              r(this.red, "redSub works only with red numbers"),
              this.red.sub(this, t)
            );
          }),
          (o.prototype.redISub = function(t) {
            return (
              r(this.red, "redISub works only with red numbers"),
              this.red.isub(this, t)
            );
          }),
          (o.prototype.redShl = function(t) {
            return (
              r(this.red, "redShl works only with red numbers"),
              this.red.shl(this, t)
            );
          }),
          (o.prototype.redMul = function(t) {
            return (
              r(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, t),
              this.red.mul(this, t)
            );
          }),
          (o.prototype.redIMul = function(t) {
            return (
              r(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, t),
              this.red.imul(this, t)
            );
          }),
          (o.prototype.redSqr = function() {
            return (
              r(this.red, "redSqr works only with red numbers"),
              this.red._verify1(this),
              this.red.sqr(this)
            );
          }),
          (o.prototype.redISqr = function() {
            return (
              r(this.red, "redISqr works only with red numbers"),
              this.red._verify1(this),
              this.red.isqr(this)
            );
          }),
          (o.prototype.redSqrt = function() {
            return (
              r(this.red, "redSqrt works only with red numbers"),
              this.red._verify1(this),
              this.red.sqrt(this)
            );
          }),
          (o.prototype.redInvm = function() {
            return (
              r(this.red, "redInvm works only with red numbers"),
              this.red._verify1(this),
              this.red.invm(this)
            );
          }),
          (o.prototype.redNeg = function() {
            return (
              r(this.red, "redNeg works only with red numbers"),
              this.red._verify1(this),
              this.red.neg(this)
            );
          }),
          (o.prototype.redPow = function(t) {
            return (
              r(this.red && !t.red, "redPow(normalNum)"),
              this.red._verify1(this),
              this.red.pow(this, t)
            );
          });
        var y = { k256: null, p224: null, p192: null, p25519: null };
        function g(t, e) {
          (this.name = t),
            (this.p = new o(e, 16)),
            (this.n = this.p.bitLength()),
            (this.k = new o(1).iushln(this.n).isub(this.p)),
            (this.tmp = this._tmp());
        }
        function v() {
          g.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        function b() {
          g.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        function w() {
          g.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        function _() {
          g.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        function S(t) {
          if ("string" == typeof t) {
            var e = o._prime(t);
            (this.m = e.p), (this.prime = e);
          } else
            r(t.gtn(1), "modulus must be greater than 1"),
              (this.m = t),
              (this.prime = null);
        }
        function x(t) {
          S.call(this, t),
            (this.shift = this.m.bitLength()),
            this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
            (this.r = new o(1).iushln(this.shift)),
            (this.r2 = this.imod(this.r.sqr())),
            (this.rinv = this.r._invmp(this.m)),
            (this.minv = this.rinv
              .mul(this.r)
              .isubn(1)
              .div(this.m)),
            (this.minv = this.minv.umod(this.r)),
            (this.minv = this.r.sub(this.minv));
        }
        (g.prototype._tmp = function() {
          var t = new o(null);
          return (t.words = new Array(Math.ceil(this.n / 13))), t;
        }),
          (g.prototype.ireduce = function(t) {
            var e,
              n = t;
            do {
              this.split(n, this.tmp),
                (e = (n = (n = this.imulK(n)).iadd(this.tmp)).bitLength());
            } while (e > this.n);
            var r = e < this.n ? -1 : n.ucmp(this.p);
            return (
              0 === r
                ? ((n.words[0] = 0), (n.length = 1))
                : r > 0
                ? n.isub(this.p)
                : n.strip(),
              n
            );
          }),
          (g.prototype.split = function(t, e) {
            t.iushrn(this.n, 0, e);
          }),
          (g.prototype.imulK = function(t) {
            return t.imul(this.k);
          }),
          i(v, g),
          (v.prototype.split = function(t, e) {
            for (var n = Math.min(t.length, 9), r = 0; r < n; r++)
              e.words[r] = t.words[r];
            if (((e.length = n), t.length <= 9))
              return (t.words[0] = 0), void (t.length = 1);
            var i = t.words[9];
            for (e.words[e.length++] = 4194303 & i, r = 10; r < t.length; r++) {
              var o = 0 | t.words[r];
              (t.words[r - 10] = ((4194303 & o) << 4) | (i >>> 22)), (i = o);
            }
            (i >>>= 22),
              (t.words[r - 10] = i),
              0 === i && t.length > 10 ? (t.length -= 10) : (t.length -= 9);
          }),
          (v.prototype.imulK = function(t) {
            (t.words[t.length] = 0),
              (t.words[t.length + 1] = 0),
              (t.length += 2);
            for (var e = 0, n = 0; n < t.length; n++) {
              var r = 0 | t.words[n];
              (e += 977 * r),
                (t.words[n] = 67108863 & e),
                (e = 64 * r + ((e / 67108864) | 0));
            }
            return (
              0 === t.words[t.length - 1] &&
                (t.length--, 0 === t.words[t.length - 1] && t.length--),
              t
            );
          }),
          i(b, g),
          i(w, g),
          i(_, g),
          (_.prototype.imulK = function(t) {
            for (var e = 0, n = 0; n < t.length; n++) {
              var r = 19 * (0 | t.words[n]) + e,
                i = 67108863 & r;
              (r >>>= 26), (t.words[n] = i), (e = r);
            }
            return 0 !== e && (t.words[t.length++] = e), t;
          }),
          (o._prime = function(t) {
            if (y[t]) return y[t];
            var e;
            if ("k256" === t) e = new v();
            else if ("p224" === t) e = new b();
            else if ("p192" === t) e = new w();
            else {
              if ("p25519" !== t) throw new Error("Unknown prime " + t);
              e = new _();
            }
            return (y[t] = e), e;
          }),
          (S.prototype._verify1 = function(t) {
            r(0 === t.negative, "red works only with positives"),
              r(t.red, "red works only with red numbers");
          }),
          (S.prototype._verify2 = function(t, e) {
            r(0 == (t.negative | e.negative), "red works only with positives"),
              r(t.red && t.red === e.red, "red works only with red numbers");
          }),
          (S.prototype.imod = function(t) {
            return this.prime
              ? this.prime.ireduce(t)._forceRed(this)
              : t.umod(this.m)._forceRed(this);
          }),
          (S.prototype.neg = function(t) {
            return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
          }),
          (S.prototype.add = function(t, e) {
            this._verify2(t, e);
            var n = t.add(e);
            return n.cmp(this.m) >= 0 && n.isub(this.m), n._forceRed(this);
          }),
          (S.prototype.iadd = function(t, e) {
            this._verify2(t, e);
            var n = t.iadd(e);
            return n.cmp(this.m) >= 0 && n.isub(this.m), n;
          }),
          (S.prototype.sub = function(t, e) {
            this._verify2(t, e);
            var n = t.sub(e);
            return n.cmpn(0) < 0 && n.iadd(this.m), n._forceRed(this);
          }),
          (S.prototype.isub = function(t, e) {
            this._verify2(t, e);
            var n = t.isub(e);
            return n.cmpn(0) < 0 && n.iadd(this.m), n;
          }),
          (S.prototype.shl = function(t, e) {
            return this._verify1(t), this.imod(t.ushln(e));
          }),
          (S.prototype.imul = function(t, e) {
            return this._verify2(t, e), this.imod(t.imul(e));
          }),
          (S.prototype.mul = function(t, e) {
            return this._verify2(t, e), this.imod(t.mul(e));
          }),
          (S.prototype.isqr = function(t) {
            return this.imul(t, t.clone());
          }),
          (S.prototype.sqr = function(t) {
            return this.mul(t, t);
          }),
          (S.prototype.sqrt = function(t) {
            if (t.isZero()) return t.clone();
            var e = this.m.andln(3);
            if ((r(e % 2 == 1), 3 === e)) {
              var n = this.m.add(new o(1)).iushrn(2);
              return this.pow(t, n);
            }
            for (
              var i = this.m.subn(1), a = 0;
              !i.isZero() && 0 === i.andln(1);

            )
              a++, i.iushrn(1);
            r(!i.isZero());
            var s = new o(1).toRed(this),
              u = s.redNeg(),
              c = this.m.subn(1).iushrn(1),
              l = this.m.bitLength();
            for (
              l = new o(2 * l * l).toRed(this);
              0 !== this.pow(l, c).cmp(u);

            )
              l.redIAdd(u);
            for (
              var h = this.pow(l, i),
                f = this.pow(t, i.addn(1).iushrn(1)),
                p = this.pow(t, i),
                d = a;
              0 !== p.cmp(s);

            ) {
              for (var m = p, y = 0; 0 !== m.cmp(s); y++) m = m.redSqr();
              r(y < d);
              var g = this.pow(h, new o(1).iushln(d - y - 1));
              (f = f.redMul(g)), (h = g.redSqr()), (p = p.redMul(h)), (d = y);
            }
            return f;
          }),
          (S.prototype.invm = function(t) {
            var e = t._invmp(this.m);
            return 0 !== e.negative
              ? ((e.negative = 0), this.imod(e).redNeg())
              : this.imod(e);
          }),
          (S.prototype.pow = function(t, e) {
            if (e.isZero()) return new o(1).toRed(this);
            if (0 === e.cmpn(1)) return t.clone();
            var n = new Array(16);
            (n[0] = new o(1).toRed(this)), (n[1] = t);
            for (var r = 2; r < n.length; r++) n[r] = this.mul(n[r - 1], t);
            var i = n[0],
              a = 0,
              s = 0,
              u = e.bitLength() % 26;
            for (0 === u && (u = 26), r = e.length - 1; r >= 0; r--) {
              for (var c = e.words[r], l = u - 1; l >= 0; l--) {
                var h = (c >> l) & 1;
                i !== n[0] && (i = this.sqr(i)),
                  0 !== h || 0 !== a
                    ? ((a <<= 1),
                      (a |= h),
                      (4 === ++s || (0 === r && 0 === l)) &&
                        ((i = this.mul(i, n[a])), (s = 0), (a = 0)))
                    : (s = 0);
              }
              u = 26;
            }
            return i;
          }),
          (S.prototype.convertTo = function(t) {
            var e = t.umod(this.m);
            return e === t ? e.clone() : e;
          }),
          (S.prototype.convertFrom = function(t) {
            var e = t.clone();
            return (e.red = null), e;
          }),
          (o.mont = function(t) {
            return new x(t);
          }),
          i(x, S),
          (x.prototype.convertTo = function(t) {
            return this.imod(t.ushln(this.shift));
          }),
          (x.prototype.convertFrom = function(t) {
            var e = this.imod(t.mul(this.rinv));
            return (e.red = null), e;
          }),
          (x.prototype.imul = function(t, e) {
            if (t.isZero() || e.isZero())
              return (t.words[0] = 0), (t.length = 1), t;
            var n = t.imul(e),
              r = n
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              i = n.isub(r).iushrn(this.shift),
              o = i;
            return (
              i.cmp(this.m) >= 0
                ? (o = i.isub(this.m))
                : i.cmpn(0) < 0 && (o = i.iadd(this.m)),
              o._forceRed(this)
            );
          }),
          (x.prototype.mul = function(t, e) {
            if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
            var n = t.mul(e),
              r = n
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              i = n.isub(r).iushrn(this.shift),
              a = i;
            return (
              i.cmp(this.m) >= 0
                ? (a = i.isub(this.m))
                : i.cmpn(0) < 0 && (a = i.iadd(this.m)),
              a._forceRed(this)
            );
          }),
          (x.prototype.invm = function(t) {
            return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
          });
      })(t, this);
    }.call(this, n(79)(t)));
  },
  function(t, e) {
    var n;
    n = (function() {
      return this;
    })();
    try {
      n = n || new Function("return this")();
    } catch (t) {
      "object" == typeof window && (n = window);
    }
    t.exports = n;
  },
  function(t, e, n) {
    "use strict";
    var r = e;
    (r.version = n(150).version),
      (r.utils = n(151)),
      (r.rand = n(81)),
      (r.curve = n(30)),
      (r.curves = n(156)),
      (r.ec = n(164)),
      (r.eddsa = n(168));
  },
  function(t, e, n) {
    "use strict";
    n.r(e);
    var r = n(0),
      i = function(t, e) {
        return (i =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function(t, e) {
              t.__proto__ = e;
            }) ||
          function(t, e) {
            for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
          })(t, e);
      };
    /**
     * @license
     * Copyright 2019 Google LLC. All Rights Reserved.
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     * =============================================================================
     */ function o(t, e) {
      function n() {
        this.constructor = t;
      }
      i(t, e),
        (t.prototype =
          null === e
            ? Object.create(e)
            : ((n.prototype = e.prototype), new n()));
    }
    var a,
      s = function() {
        return (s =
          Object.assign ||
          function(t) {
            for (var e, n = 1, r = arguments.length; n < r; n++)
              for (var i in (e = arguments[n]))
                Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t;
          }).apply(this, arguments);
      };
    function u(t, e, n, r) {
      return new (n || (n = Promise))(function(i, o) {
        function a(t) {
          try {
            u(r.next(t));
          } catch (t) {
            o(t);
          }
        }
        function s(t) {
          try {
            u(r.throw(t));
          } catch (t) {
            o(t);
          }
        }
        function u(t) {
          t.done
            ? i(t.value)
            : new n(function(e) {
                e(t.value);
              }).then(a, s);
        }
        u((r = r.apply(t, e || [])).next());
      });
    }
    function c(t, e) {
      var n,
        r,
        i,
        o,
        a = {
          label: 0,
          sent: function() {
            if (1 & i[0]) throw i[1];
            return i[1];
          },
          trys: [],
          ops: []
        };
      return (
        (o = { next: s(0), throw: s(1), return: s(2) }),
        "function" == typeof Symbol &&
          (o[Symbol.iterator] = function() {
            return this;
          }),
        o
      );
      function s(o) {
        return function(s) {
          return (function(o) {
            if (n) throw new TypeError("Generator is already executing.");
            for (; a; )
              try {
                if (
                  ((n = 1),
                  r &&
                    (i =
                      2 & o[0]
                        ? r.return
                        : o[0]
                        ? r.throw || ((i = r.return) && i.call(r), 0)
                        : r.next) &&
                    !(i = i.call(r, o[1])).done)
                )
                  return i;
                switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                  case 0:
                  case 1:
                    i = o;
                    break;
                  case 4:
                    return a.label++, { value: o[1], done: !1 };
                  case 5:
                    a.label++, (r = o[1]), (o = [0]);
                    continue;
                  case 7:
                    (o = a.ops.pop()), a.trys.pop();
                    continue;
                  default:
                    if (
                      !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                      (6 === o[0] || 2 === o[0])
                    ) {
                      a = 0;
                      continue;
                    }
                    if (3 === o[0] && (!i || (o[1] > i[0] && o[1] < i[3]))) {
                      a.label = o[1];
                      break;
                    }
                    if (6 === o[0] && a.label < i[1]) {
                      (a.label = i[1]), (i = o);
                      break;
                    }
                    if (i && a.label < i[2]) {
                      (a.label = i[2]), a.ops.push(o);
                      break;
                    }
                    i[2] && a.ops.pop(), a.trys.pop();
                    continue;
                }
                o = e.call(t, a);
              } catch (t) {
                (o = [6, t]), (r = 0);
              } finally {
                n = i = 0;
              }
            if (5 & o[0]) throw o[1];
            return { value: o[0] ? o[1] : void 0, done: !0 };
          })([o, s]);
        };
      }
    }
    function l() {
      return null == a && (a = Object(r.backend)().epsilon()), a;
    }
    var h = (function(t) {
        function e(n) {
          var r = t.call(this, n) || this;
          return Object.setPrototypeOf(r, e.prototype), r;
        }
        return o(e, t), e;
      })(Error),
      f = (function(t) {
        function e(n) {
          var r = t.call(this, n) || this;
          return Object.setPrototypeOf(r, e.prototype), r;
        }
        return o(e, t), e;
      })(Error),
      p = (function(t) {
        function e(n) {
          var r = t.call(this, n) || this;
          return Object.setPrototypeOf(r, e.prototype), r;
        }
        return o(e, t), e;
      })(Error),
      d = (function(t) {
        function e(n) {
          var r = t.call(this, n) || this;
          return Object.setPrototypeOf(r, e.prototype), r;
        }
        return o(e, t), e;
      })(Error),
      m = (function(t) {
        function e(n) {
          var r = t.call(this, n) || this;
          return Object.setPrototypeOf(r, e.prototype), r;
        }
        return o(e, t), e;
      })(Error);
    !(function(t) {
      function e(n) {
        var r = t.call(this, n) || this;
        return Object.setPrototypeOf(r, e.prototype), r;
      }
      o(e, t);
    })(Error);
    function y(t, e) {
      if (Array.isArray(t)) {
        for (var n = [], r = 0; r < e; r++) n = n.concat(t);
        return n;
      }
      return (n = new Array(e)).fill(t), n;
    }
    function g(t, e) {
      if (!t) throw new m(e);
    }
    function v(t, e) {
      for (var n = 0, r = 0, i = t; r < i.length; r++) i[r] === e && n++;
      return n;
    }
    function b(t) {
      return 1 === t.length ? t[0] : t;
    }
    function w(t) {
      return Array.isArray(t) ? t : [t];
    }
    function _(t) {
      var e = t
        .replace(/(.)([A-Z][a-z0-9]+)/g, "$1_$2")
        .replace(/([a-z])([A-Z])/g, "$1_$2")
        .toLowerCase();
      return "_" !== e[0] ? e : "private" + e;
    }
    function S(t) {
      return t.length <= 1
        ? t
        : -1 === t.indexOf("_")
        ? t
        : t.replace(/[_]+(\w|$)/g, function(t, e) {
            return e.toUpperCase();
          });
    }
    var x = {};
    function T(t) {
      if (null == t) return null;
      var e = {};
      return (e.className = t.getClassName()), (e.config = t.getConfig()), e;
    }
    function A(t, e, n, r, i) {
      var o, a, u;
      if (
        (void 0 === e && (e = {}),
        void 0 === n && (n = {}),
        void 0 === r && (r = "object"),
        void 0 === i && (i = !1),
        "string" == typeof t)
      ) {
        var c = t,
          l = void 0;
        if (c in n) l = n[c];
        else if (c in x) l = x[c];
        else if (null == (l = e[c]))
          throw new p(
            "Unknown " +
              r +
              ": " +
              t +
              ". This may be due to one of the following reasons:\n1. The " +
              r +
              " is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom " +
              r +
              " is defined in JavaScript, but is not registered properly with tf.serialization.registerClass()."
          );
        return l;
      }
      var h = t;
      if (null == h.className || null == h.config)
        throw new p(
          r +
            ": Improper config format: " +
            JSON.stringify(h) +
            ".\n'className' and 'config' must set."
        );
      var f = h.className,
        d = void 0,
        m = void 0;
      if (
        (f in n
          ? ((d = (o = n[f])[0]), (m = o[1]))
          : f in x
          ? ((d = (a = x.className)[0]), (m = a[1]))
          : f in e && ((d = (u = e[f])[0]), (m = u[1])),
        null == d)
      )
        throw new p(
          "Unknown " +
            r +
            ": " +
            f +
            ". This may be due to one of the following reasons:\n1. The " +
            r +
            " is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom " +
            r +
            " is defined in JavaScript, but is not registered properly with tf.serialization.registerClass()."
        );
      if (null != m) {
        for (var y = {}, g = 0, v = Object.keys(x); g < v.length; g++)
          y[(A = v[g])] = x[A];
        for (var b = 0, w = Object.keys(n); b < w.length; b++)
          y[(A = w[b])] = n[A];
        h.config.customObjects = y;
        for (var _ = s({}, x), S = 0, T = Object.keys(n); S < T.length; S++) {
          var A = T[S];
          x[A] = n[A];
        }
        !(function t(e) {
          if (null != e && "object" == typeof e)
            if (Array.isArray(e))
              e.forEach(function(e) {
                return t(e);
              });
            else
              for (var n = 0, r = Object.keys(e); n < r.length; n++) {
                var i = r[n],
                  o = e[i];
                null != o &&
                  "object" == typeof o &&
                  (Array.isArray(o) ||
                  "ndarray" !== o.type ||
                  "number" != typeof o.value
                    ? t(o)
                    : (e[i] = o.value));
              }
        })(h.config);
        var k = m(d, h.config, n, i);
        return (x = s({}, _)), k;
      }
      _ = s({}, x);
      for (var E = 0, N = Object.keys(n); E < N.length; E++)
        (A = N[E]), (x[A] = n[A]);
      return (k = new d(h.config)), (x = s({}, _)), k;
    }
    function k(t, e) {
      return (
        -1 *
        (function(t, e) {
          return t < e ? -1 : t > e ? 1 : 0;
        })(t, e)
      );
    }
    function E(t) {
      if (null == t) return t;
      for (var e = [], n = 0, r = t; n < r.length; n++) {
        var i = r[n];
        -1 === e.indexOf(i) && e.push(i);
      }
      return e;
    }
    function N(t) {
      if (null == t) throw new p("Invalid value in obj: " + JSON.stringify(t));
      for (var e in t) if (t.hasOwnProperty(e)) return !1;
      return !0;
    }
    function O(t, e, n) {
      if (null != n && t.indexOf(n) < 0)
        throw new p(
          n +
            " is not a valid " +
            e +
            ".  Valid values are " +
            t +
            " or null/undefined."
        );
    }
    function C(t, e, n, r) {
      return (
        void 0 === n && (n = 0),
        void 0 === r && (r = 1 / 0),
        g(n >= 0),
        g(r >= n),
        Array.isArray(t) &&
          t.length >= n &&
          t.length <= r &&
          t.every(function(t) {
            return typeof t === e;
          })
      );
    }
    function I(t, e) {
      Array.isArray(t)
        ? (r.util.assert(t.length > 0, function() {
            return e + " is unexpectedly an empty array.";
          }),
          t.forEach(function(t, n) {
            return I(t, "element " + (n + 1) + " of " + e);
          }))
        : r.util.assert(Number.isInteger(t) && t > 0, function() {
            return (
              "Expected " +
              e +
              " to be a positive integer, but got " +
              (function t(e) {
                return null === e
                  ? "null"
                  : Array.isArray(e)
                  ? "[" +
                    e
                      .map(function(e) {
                        return t(e);
                      })
                      .join(",") +
                    "]"
                  : "string" == typeof e
                  ? '"' + e + '"'
                  : "" + e;
              })(t) +
              "."
            );
          });
    }
    function M(t, e) {
      return Object(r.tidy)(function() {
        return Object(r.sqrt)(Object(r.sum)(Object(r.mulStrict)(t, t), e, !0));
      });
    }
    var P = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.getConfig = function() {
            return {};
          }),
          e
        );
      })(r.serialization.Serializable),
      R = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.defaultMaxValue = 2),
            (n.defaultAxis = 0),
            (n.maxValue = null != e.maxValue ? e.maxValue : n.defaultMaxValue),
            (n.axis = null != e.axis ? e.axis : n.defaultAxis),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.apply = function(t) {
            var e = this;
            return Object(r.tidy)(function() {
              var n = M(t, e.axis),
                i = Object(r.clipByValue)(n, 0, e.maxValue);
              return Object(r.mul)(t, Object(r.div)(i, Object(r.add)(l(), n)));
            });
          }),
          (e.prototype.getConfig = function() {
            return { maxValue: this.maxValue, axis: this.axis };
          }),
          (e.className = "MaxNorm"),
          e
        );
      })(P);
    r.serialization.registerClass(R);
    var D = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        return (
          (n.defaultAxis = 0),
          (n.axis = null != e.axis ? e.axis : n.defaultAxis),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          var e = this;
          return Object(r.tidy)(function() {
            return Object(r.div)(t, Object(r.add)(l(), M(t, e.axis)));
          });
        }),
        (e.prototype.getConfig = function() {
          return { axis: this.axis };
        }),
        (e.className = "UnitNorm"),
        e
      );
    })(P);
    r.serialization.registerClass(D);
    var F = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.relu)(t);
        }),
        (e.className = "NonNeg"),
        e
      );
    })(P);
    r.serialization.registerClass(F);
    var z = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        return (
          (n.defaultMinValue = 0),
          (n.defaultMaxValue = 1),
          (n.defaultRate = 1),
          (n.defaultAxis = 0),
          (n.minValue = null != e.minValue ? e.minValue : n.defaultMinValue),
          (n.maxValue = null != e.maxValue ? e.maxValue : n.defaultMaxValue),
          (n.rate = null != e.rate ? e.rate : n.defaultRate),
          (n.axis = null != e.axis ? e.axis : n.defaultAxis),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          var e = this;
          return Object(r.tidy)(function() {
            var n = M(t, e.axis),
              i = Object(r.add)(
                Object(r.mul)(
                  e.rate,
                  Object(r.clipByValue)(n, e.minValue, e.maxValue)
                ),
                Object(r.mul)(1 - e.rate, n)
              );
            return Object(r.mul)(t, Object(r.div)(i, Object(r.add)(l(), n)));
          });
        }),
        (e.prototype.getConfig = function() {
          return {
            minValue: this.minValue,
            maxValue: this.maxValue,
            rate: this.rate,
            axis: this.axis
          };
        }),
        (e.className = "MinMaxNorm"),
        e
      );
    })(P);
    r.serialization.registerClass(z);
    var L = {
      maxNorm: "MaxNorm",
      minMaxNorm: "MinMaxNorm",
      nonNeg: "NonNeg",
      unitNorm: "UnitNorm"
    };
    function j(t) {
      return T(t);
    }
    function B(t, e) {
      return (
        void 0 === e && (e = {}),
        A(
          t,
          r.serialization.SerializationMap.getMap().classNameMap,
          e,
          "constraint"
        )
      );
    }
    function q(t) {
      return null == t
        ? null
        : "string" == typeof t
        ? B({ className: t in L ? L[t] : t, config: {} })
        : t instanceof P
        ? t
        : B(t);
    }
    var U = Object.freeze({
        maxNorm: function(t) {
          return new R(t);
        },
        unitNorm: function(t) {
          return new D(t);
        },
        nonNeg: function() {
          return new F();
        },
        minMaxNorm: function(t) {
          return new z(t);
        }
      }),
      V = ["channelsFirst", "channelsLast"],
      W = ["valid", "same", "causal"],
      G = ["max", "avg"],
      H = ["sum", "mul", "concat", "ave"],
      K = new Map();
    function Q(t) {
      O(V, "DataFormat", t);
    }
    function X(t) {
      O(W, "PaddingMode", t);
    }
    var $ = [],
      Y = "/";
    function J(t, e) {
      $.push(t);
      try {
        var n = e();
        return $.pop(), n;
      } catch (t) {
        throw ($.pop(), t);
      }
    }
    function Z(t) {
      if (!nt(t)) throw new Error("Not a valid tensor name: '" + t + "'");
      return (0 === $.length ? "" : $.join(Y) + Y) + t;
    }
    function tt(t) {
      if (!nt(t)) throw new Error("Not a valid tensor name: '" + t + "'");
      K.has(t) || K.set(t, 0);
      var e = K.get(t);
      if ((K.set(t, K.get(t) + 1), e > 0)) {
        var n = t + "_" + e;
        return K.set(n, 1), n;
      }
      return t;
    }
    var et = new RegExp(/^[A-Za-z][-A-Za-z0-9\._\/]*$/);
    function nt(t) {
      return !!t.match(et);
    }
    function rt(t) {
      return t === parseInt(t.toString(), 10);
    }
    function it(t, e, n) {
      null == e && (e = 0), null == n && (n = t.length);
      for (var r = 1, i = e; i < n; ++i) r *= t[i];
      return r;
    }
    function ot(t) {
      return (
        (t = Array.isArray(t) ? new Float32Array(t) : t), Object(r.tensor1d)(t)
      );
    }
    function at(t) {
      return Object(r.min)(ot(t)).dataSync()[0];
    }
    function st(t) {
      return Object(r.max)(ot(t)).dataSync()[0];
    }
    function ut(t, e) {
      if (e < t)
        throw new p("end (" + e + ") < begin (" + t + ") is forbidden.");
      for (var n = [], r = t; r < e; ++r) n.push(r);
      return n;
    }
    function ct(t, e) {
      return t.asType(e);
    }
    function lt(t, e) {
      void 0 === e && (e = -1);
      var n = t.shape.slice();
      return e < 0 && (e = n.length + e + 1), n.splice(e, 0, 1), t.reshape(n);
    }
    function ht(t, e, n) {
      return Object(r.tidy)(function() {
        switch (t.rank) {
          case 1:
            return Object(r.slice1d)(t, e, n);
          case 2:
            return Object(r.slice2d)(t, [e, 0], [n, t.shape[1]]);
          case 3:
            return Object(r.slice3d)(t, [e, 0, 0], [n, t.shape[1], t.shape[2]]);
          case 4:
            return Object(
              r.slice4d
            )(t, [e, 0, 0, 0], [n, t.shape[1], t.shape[2], t.shape[3]]);
          default:
            throw new p(
              "sliceAlongFirstAxis() received an unsupported tensor rank: " +
                t.rank
            );
        }
      });
    }
    function ft(t, e, n) {
      return Object(r.tidy)(function() {
        switch (t.rank) {
          case 1:
            return Object(r.slice1d)(t, e, n);
          case 2:
            return Object(r.slice2d)(t, [0, e], [t.shape[0], n]);
          case 3:
            return Object(r.slice3d)(t, [0, 0, e], [t.shape[0], t.shape[1], n]);
          case 4:
            return Object(
              r.slice4d
            )(t, [0, 0, 0, e], [t.shape[0], t.shape[1], t.shape[2], n]);
          default:
            throw new p(
              "sliceAlongLastAxis() received an unsupported tensor rank: " +
                t.rank
            );
        }
      });
    }
    function pt(t, e, n, i) {
      return Object(r.tidy)(function() {
        switch (t.rank) {
          case 1:
            return Object(r.slice1d)(t, e, n);
          case 2:
            switch (i) {
              case 1:
                return ht(t, e, n);
              case 2:
                return ft(t, e, n);
              default:
                throw new p(
                  "The axis is not within the rank of the tensor " + i
                );
            }
          case 3:
            switch (i) {
              case 1:
                return ht(t, e, n);
              case 2:
                return Object(
                  r.slice3d
                )(t, [0, e, 0], [t.shape[0], n, t.shape[2]]);
              case 3:
                return ft(t, e, n);
              default:
                throw new p(
                  "The axis is not within the rank of the tensor " + i
                );
            }
          case 4:
            switch (i) {
              case 1:
                return ht(t, e, n);
              case 2:
                return Object(
                  r.slice4d
                )(t, [0, e, 0, 0], [t.shape[0], n, t.shape[2], t.shape[3]]);
              case 3:
                return Object(
                  r.slice4d
                )(t, [0, 0, e, 0], [t.shape[0], t.shape[1], n, t.shape[3]]);
              case 4:
                return ft(t, e, n);
              default:
                throw new p(
                  "The axis is not within the rank of the tensor " + i
                );
            }
          default:
            throw new p(
              "sliceAlongLastAxis() received an unsupported tensor rank: " +
                t.rank
            );
        }
      });
    }
    function dt(t, e) {
      var n;
      return (
        void 0 === e && (e = -1),
        e < 0 && (e = 0 !== (n = t[0].rank) ? n : 0),
        e === t[0].rank && (e = -1),
        Object(r.concat)(t, e)
      );
    }
    function mt(t, e) {
      switch (t.rank) {
        case 1:
          return Object(r.concat1d)([t, e]);
        case 2:
          return Object(r.concat2d)([t, e], 0);
        case 3:
          return Object(r.concat3d)([t, e], 0);
        case 4:
          return Object(r.concat4d)([t, e], 0);
        default:
          throw new p(
            "concatAlongFirstAxis() received an unsupported tensor rank: " +
              t.rank
          );
      }
    }
    function yt(t, e) {
      if ((Array.isArray(e) || (e = [e]), t.rank !== e.length))
        throw new p(
          "The length of input n (" +
            e.length +
            ") does not match the number of dimensions in input x (" +
            t.rank +
            ")"
        );
      return Object(r.tile)(t, e);
    }
    function gt(t, e, n, i, o) {
      return (
        void 0 === e && (e = 0),
        void 0 === n && (n = 1),
        Object(r.randomNormal)(t, e, n, i, o)
      );
    }
    function vt(t, e, n, i) {
      if (t.rank < 2 || e.rank < 2)
        throw new d(
          "dot requires both inputs to be rank >= 2 but got x shape = " +
            t.shape +
            " and y shape = " +
            e.shape
        );
      if (
        e.rank >= 3 &&
        (u = t.shape.slice(-1)[0]) !== (h = e.shape.slice(-2)[0])
      )
        throw new d(
          "If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = " +
            t.shape +
            " and  y shape = " +
            e.shape
        );
      if (2 === t.rank && 2 === e.rank) {
        var o = !1,
          a = !1;
        return r.fused.matMul(
          t,
          e,
          o,
          a,
          i ? _t(t.rank, i, "channelsLast") : null,
          n
        );
      }
      var s = t.shape.slice(),
        u = s.pop();
      t = t.reshape([-1, u]);
      var c = e.shape.slice(),
        l = c.pop(),
        h = c.pop(),
        f = c.concat([l]),
        p = Array.from({ length: e.rank }, function(t, n) {
          return 0 === n ? e.rank - 2 : n <= e.rank - 2 ? n - 1 : n;
        });
      e = e.transpose(p).reshape([h, -1]);
      var m = s.concat(f);
      return (
        (o = !1),
        (a = !1),
        r.fused
          .matMul(t, e, o, a, i ? _t(t.rank, i, "channelsLast") : null, n)
          .reshape(m)
      );
    }
    function bt(t, e, n) {
      return Object(r.tidy)(function() {
        return (
          (e = Array.isArray(e) ? Object(r.tensor1d)(e, "int32") : e.toInt()),
          Object(r.gather)(t, e, n)
        );
      });
    }
    function wt(t) {
      return Object(r.mulStrict)(t, t);
    }
    function _t(t, e, n) {
      var r = e.shape;
      if (1 !== e.rank && e.rank !== t)
        throw new p(
          "Unexpected bias dimensions: " +
            e.rank +
            "; expected it to be 1 or " +
            t
        );
      if (5 === t) {
        if ("channelsFirst" === n)
          return 1 === r.length
            ? e.reshape([1, r[0], 1, 1, 1])
            : e.reshape([1, r[3], r[0], r[1], r[2]]);
        if ("channelsLast" === n)
          return 1 === r.length
            ? e.reshape([1, 1, 1, 1, r[0]])
            : e.reshape([1].concat(r));
      } else if (4 === t) {
        if ("channelsFirst" === n)
          return 1 === r.length
            ? e.reshape([1, r[0], 1, 1])
            : e.reshape([1, r[2], r[0], r[1]]);
        if ("channelsLast" === n)
          return 1 === r.length
            ? e.reshape([1, 1, 1, r[0]])
            : e.reshape([1].concat(r));
      } else if (3 === t) {
        if ("channelsFirst" === n)
          return 1 === r.length
            ? e.reshape([1, r[0], 1])
            : e.reshape([1, r[1], r[0]]);
        if ("channelsLast" === n)
          return 1 === r.length
            ? e.reshape([1, 1, r[0]])
            : e.reshape([1].concat(r));
      } else if (t < 3) return e;
      throw new p("Unsupported input rank by biasAdd: " + e.rank);
    }
    function St(t, e, n) {
      return Object(r.tidy)(function() {
        return null == n && (n = "channelsLast"), Q(n), t.add(_t(t.rank, e, n));
      });
    }
    function xt(t, e, n, i) {
      return Object(r.tidy)(function() {
        return Object(r.dropout)(t, e, n, i);
      });
    }
    function Tt(t, e, n) {
      return void 0 === n && (n = !1), n ? t() : e();
    }
    var At = ["fanIn", "fanOut", "fanAvg"],
      kt = ["normal", "uniform", "truncatedNormal"];
    var Et = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.fromConfigUsesCustomObjects = function() {
            return !1;
          }),
          (e.prototype.getConfig = function() {
            return {};
          }),
          e
        );
      })(r.serialization.Serializable),
      Nt = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.apply = function(t, e) {
            return Object(r.zeros)(t, e);
          }),
          (e.className = "Zeros"),
          e
        );
      })(Et);
    r.serialization.registerClass(Nt);
    var Ot = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          return Object(r.ones)(t, e);
        }),
        (e.className = "Ones"),
        e
      );
    })(Et);
    r.serialization.registerClass(Ot);
    var Ct = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        if ("object" != typeof e)
          throw new p("Expected argument of type ConstantConfig but got " + e);
        if (void 0 === e.value)
          throw new p("config must have value set but got " + e);
        return (n.value = e.value), n;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            return Object(
              r.mul
            )(Object(r.scalar)(n.value), Object(r.ones)(t, e));
          });
        }),
        (e.prototype.getConfig = function() {
          return { value: this.value };
        }),
        (e.className = "Constant"),
        e
      );
    })(Et);
    r.serialization.registerClass(Ct);
    var It = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        return (
          (n.DEFAULT_MINVAL = -0.05),
          (n.DEFAULT_MAXVAL = 0.05),
          (n.minval = e.minval || n.DEFAULT_MINVAL),
          (n.maxval = e.maxval || n.DEFAULT_MAXVAL),
          (n.seed = e.seed),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          return Object(r.randomUniform)(t, this.minval, this.maxval, e);
        }),
        (e.prototype.getConfig = function() {
          return { minval: this.minval, maxval: this.maxval, seed: this.seed };
        }),
        (e.className = "RandomUniform"),
        e
      );
    })(Et);
    r.serialization.registerClass(It);
    var Mt = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        return (
          (n.DEFAULT_MEAN = 0),
          (n.DEFAULT_STDDEV = 0.05),
          (n.mean = e.mean || n.DEFAULT_MEAN),
          (n.stddev = e.stddev || n.DEFAULT_STDDEV),
          (n.seed = e.seed),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          if ("float32" !== (e = e || "float32") && "int32" !== e)
            throw new d("randomNormal does not support dType " + e + ".");
          return gt(t, this.mean, this.stddev, e, this.seed);
        }),
        (e.prototype.getConfig = function() {
          return { mean: this.mean, stddev: this.stddev, seed: this.seed };
        }),
        (e.className = "RandomNormal"),
        e
      );
    })(Et);
    r.serialization.registerClass(Mt);
    var Pt = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        return (
          (n.DEFAULT_MEAN = 0),
          (n.DEFAULT_STDDEV = 0.05),
          (n.mean = e.mean || n.DEFAULT_MEAN),
          (n.stddev = e.stddev || n.DEFAULT_STDDEV),
          (n.seed = e.seed),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          if ("float32" !== (e = e || "float32") && "int32" !== e)
            throw new d("truncatedNormal does not support dType " + e + ".");
          return Object(r.truncatedNormal)(
            t,
            this.mean,
            this.stddev,
            e,
            this.seed
          );
        }),
        (e.prototype.getConfig = function() {
          return { mean: this.mean, stddev: this.stddev, seed: this.seed };
        }),
        (e.className = "TruncatedNormal"),
        e
      );
    })(Et);
    r.serialization.registerClass(Pt);
    var Rt = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        return (n.gain = null != e.gain ? e.gain : 1), n;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            if (2 !== t.length || t[0] !== t[1])
              throw new p(
                "Identity matrix initializer can only be used for 2D square matrices."
              );
            return Object(r.mul)(n.gain, Object(r.eye)(t[0]));
          });
        }),
        (e.prototype.getConfig = function() {
          return { gain: this.gain };
        }),
        (e.className = "Identity"),
        e
      );
    })(Et);
    r.serialization.registerClass(Rt);
    var Dt = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        if (e.scale < 0)
          throw new p("scale must be a positive float. Got: " + e.scale);
        return (
          (n.scale = null == e.scale ? 1 : e.scale),
          (n.mode = null == e.mode ? "fanIn" : e.mode),
          (function(t) {
            O(At, "FanMode", t);
          })(n.mode),
          (n.distribution = null == e.distribution ? "normal" : e.distribution),
          (function(t) {
            O(kt, "Distribution", t);
          })(n.distribution),
          (n.seed = e.seed),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          var n = (function(t, e) {
              var n, r;
              if ((void 0 === e && (e = "channelsLast"), Q(e), 2 === t.length))
                (n = t[0]), (r = t[1]);
              else if (-1 !== [3, 4, 5].indexOf(t.length))
                if ("channelsFirst" === e) {
                  var i = it(t, 2);
                  (n = t[1] * i), (r = t[0] * i);
                } else
                  "channelsLast" === e &&
                    ((i = it(t, 0, t.length - 2)),
                    (n = t[t.length - 2] * i),
                    (r = t[t.length - 1] * i));
              else {
                var o = it(t);
                (n = Math.sqrt(o)), (r = Math.sqrt(o));
              }
              return [n, r];
            })(t),
            i = n[0],
            o = n[1],
            a = this.scale;
          if (
            ("fanIn" === this.mode
              ? (a /= Math.max(1, i))
              : "fanOut" === this.mode
              ? (a /= Math.max(1, o))
              : (a /= Math.max(1, (i + o) / 2)),
            "normal" === this.distribution)
          ) {
            var s = Math.sqrt(a);
            if ("float32" !== (e = e || "float32") && "int32" !== e)
              throw new d(
                this.getClassName() + " does not support dType " + e + "."
              );
            return Object(r.truncatedNormal)(t, 0, s, e, this.seed);
          }
          var u = Math.sqrt(3 * a);
          return Object(r.randomUniform)(t, -u, u, e);
        }),
        (e.prototype.getConfig = function() {
          return {
            scale: this.scale,
            mode: this.mode,
            distribution: this.distribution,
            seed: this.seed
          };
        }),
        (e.className = "VarianceScaling"),
        e
      );
    })(Et);
    r.serialization.registerClass(Dt);
    var Ft = (function(t) {
      function e(e) {
        return (
          t.call(this, {
            scale: 1,
            mode: "fanAvg",
            distribution: "uniform",
            seed: null == e ? null : e.seed
          }) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.getClassName = function() {
          return Dt.className;
        }),
        (e.className = "GlorotUniform"),
        e
      );
    })(Dt);
    r.serialization.registerClass(Ft);
    var zt = (function(t) {
      function e(e) {
        return (
          t.call(this, {
            scale: 1,
            mode: "fanAvg",
            distribution: "normal",
            seed: null == e ? null : e.seed
          }) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.getClassName = function() {
          return Dt.className;
        }),
        (e.className = "GlorotNormal"),
        e
      );
    })(Dt);
    r.serialization.registerClass(zt);
    var Lt = (function(t) {
      function e(e) {
        return (
          t.call(this, {
            scale: 2,
            mode: "fanIn",
            distribution: "normal",
            seed: null == e ? null : e.seed
          }) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.getClassName = function() {
          return Dt.className;
        }),
        (e.className = "HeNormal"),
        e
      );
    })(Dt);
    r.serialization.registerClass(Lt);
    var jt = (function(t) {
      function e(e) {
        return (
          t.call(this, {
            scale: 2,
            mode: "fanIn",
            distribution: "uniform",
            seed: null == e ? null : e.seed
          }) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.getClassName = function() {
          return Dt.className;
        }),
        (e.className = "HeUniform"),
        e
      );
    })(Dt);
    r.serialization.registerClass(jt);
    var Bt = (function(t) {
      function e(e) {
        return (
          t.call(this, {
            scale: 1,
            mode: "fanIn",
            distribution: "normal",
            seed: null == e ? null : e.seed
          }) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.getClassName = function() {
          return Dt.className;
        }),
        (e.className = "LeCunNormal"),
        e
      );
    })(Dt);
    r.serialization.registerClass(Bt);
    var qt = (function(t) {
      function e(e) {
        return (
          t.call(this, {
            scale: 1,
            mode: "fanIn",
            distribution: "uniform",
            seed: null == e ? null : e.seed
          }) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.getClassName = function() {
          return Dt.className;
        }),
        (e.className = "LeCunNormal"),
        e
      );
    })(Dt);
    r.serialization.registerClass(qt);
    var Ut = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        if (
          ((n.DEFAULT_GAIN = 1),
          (n.gain = null == e.gain ? n.DEFAULT_GAIN : e.gain),
          (n.seed = e.seed),
          null != n.seed)
        )
          throw new d(
            "Random seed is not implemented for Orthogonal Initializer yet."
          );
        return n;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            if (2 !== t.length)
              throw new d(
                "The Orthogonal Initializer does not support non-2D shapes yet."
              );
            t[0] * t[1] > 2e3 &&
              console.warn(
                "Orthogonal initializer is being called on a matrix with more than 2000 (" +
                  t[0] * t[1] +
                  ") elements: Slowness may result."
              );
            var e = gt(t[0] > t[1] ? [t[1], t[0]] : t, 0, 1, "float32"),
              i = r.linalg.gramSchmidt(e);
            return t[0] > t[1] && (i = i.transpose()), Object(r.mul)(n.gain, i);
          });
        }),
        (e.prototype.getConfig = function() {
          return { gain: this.gain, seed: this.seed };
        }),
        (e.className = "Orthogonal"),
        e
      );
    })(Et);
    r.serialization.registerClass(Ut);
    var Vt = {
      constant: "Constant",
      glorotNormal: "GlorotNormal",
      glorotUniform: "GlorotUniform",
      heNormal: "HeNormal",
      heUniform: "HeUniform",
      identity: "Identity",
      leCunNormal: "LeCunNormal",
      leCunUniform: "LeCunUniform",
      ones: "Ones",
      orthogonal: "Orthogonal",
      randomNormal: "RandomNormal",
      randomUniform: "RandomUniform",
      truncatedNormal: "TruncatedNormal",
      varianceScaling: "VarianceScaling",
      zeros: "Zeros"
    };
    function Wt(t, e) {
      return (
        void 0 === e && (e = {}),
        A(
          t,
          r.serialization.SerializationMap.getMap().classNameMap,
          e,
          "initializer"
        )
      );
    }
    function Gt(t) {
      return T(t);
    }
    function Ht(t) {
      if ("string" == typeof t) {
        var e = t in Vt ? Vt[t] : t;
        if ("GlorotNormal" === e) return new zt();
        if ("GlorotUniform" === e) return new Ft();
        if ("HeNormal" === e) return new Lt();
        if ("HeUniform" === e) return new jt();
        if ("LeCunNormal" === e) return new Bt();
        if ("LeCunUniform" === e) return new qt();
        var n = {};
        return (n.className = e), (n.config = {}), Wt(n);
      }
      return t instanceof Et ? t : Wt(t);
    }
    var Kt = Object.freeze({
        zeros: function() {
          return new Nt();
        },
        ones: function() {
          return new Ot();
        },
        constant: function(t) {
          return new Ct(t);
        },
        randomUniform: function(t) {
          return new It(t);
        },
        randomNormal: function(t) {
          return new Mt(t);
        },
        truncatedNormal: function(t) {
          return new Pt(t);
        },
        identity: function(t) {
          return new Rt(t);
        },
        varianceScaling: function(t) {
          return new Dt(t);
        },
        glorotUniform: function(t) {
          return new Ft(t);
        },
        glorotNormal: function(t) {
          return new zt(t);
        },
        heNormal: function(t) {
          return new Lt(t);
        },
        heUniform: function(t) {
          return new jt(t);
        },
        leCunNormal: function(t) {
          return new Bt(t);
        },
        leCunUniform: function(t) {
          return new qt(t);
        },
        orthogonal: function(t) {
          return new Ut(t);
        }
      }),
      Qt = 0;
    function Xt() {
      return Qt++;
    }
    var $t = {};
    function Yt(t) {
      return (
        void 0 === t && (t = ""),
        t in $t || ($t[t] = 0),
        ($t[t] += 1),
        t + $t[t].toString()
      );
    }
    function Jt(t) {
      return Array.isArray(t) && Array.isArray(t[0]);
    }
    function Zt(t) {
      return 0 === t.length ? [] : Array.isArray(t[0]) ? t : [t];
    }
    function te(t) {
      var e;
      if (Array.isArray(t)) {
        if (1 !== t.length)
          throw new p("Expected Tensor length to be 1; got " + t.length);
        e = t[0];
      } else e = t;
      return e;
    }
    function ee(t) {
      if (Array.isArray(t) && Array.isArray(t[0])) {
        if (1 === t.length) return (t = t)[0];
        throw new p("Expected exactly 1 Shape; got " + t.length);
      }
      return t;
    }
    function ne(t) {
      for (var e = 0, n = 0, r = t; n < r.length; n++) {
        var i = r[n];
        0 === i.shape.length
          ? (e += 1)
          : (e += i.shape.reduce(function(t, e) {
              return t * e;
            }));
      }
      return e;
    }
    var re = "Variable",
      ie = (function() {
        function t(t, e, n, i, o) {
          void 0 === e && (e = "float32"),
            void 0 === n && (n = re),
            void 0 === i && (i = !0),
            void 0 === o && (o = null),
            (this.dtype = null == e ? "float32" : e),
            (this.shape = t.shape),
            (this.id = Xt()),
            (n = null == n ? re : n),
            (this.originalName = Z(n)),
            (this.name = tt(this.originalName)),
            (this.trainable_ = i),
            (this.constraint = o),
            (this.val = Object(r.variable)(
              t,
              this.trainable_,
              this.name,
              this.dtype
            ));
        }
        return (
          (t.prototype.read = function() {
            return this.assertNotDisposed(), this.val;
          }),
          (t.prototype.write = function(t) {
            return (
              this.assertNotDisposed(),
              (function(t, e) {
                if (t.shape.toString() !== e.shape.toString())
                  throw new Error(
                    "Shape mismatch: " +
                      JSON.stringify(t.shape) +
                      " vs. " +
                      JSON.stringify(e.shape)
                  );
              })(this.val, t),
              this.val.id !== t.id &&
                (this.val.assign(t),
                null != this.constraint &&
                  this.val.assign(this.constraint.apply(this.val))),
              this
            );
          }),
          (t.prototype.dispose = function() {
            this.assertNotDisposed(), this.val.dispose();
          }),
          (t.prototype.assertNotDisposed = function() {
            if (this.val.isDisposed)
              throw new Error(
                "LayersVariable " + this.name + " is already disposed."
              );
          }),
          Object.defineProperty(t.prototype, "trainable", {
            get: function() {
              return this.trainable_;
            },
            set: function(t) {
              (this.trainable_ = t), (this.val.trainable = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          t
        );
      })();
    function oe(t) {
      return t.map(function(t) {
        return t.read();
      });
    }
    function ae(t) {
      t.forEach(function(t) {
        t[0].write(t[1]);
      });
    }
    var se = function(t) {
        (this.dtype = t.dtype),
          (this.shape = t.shape),
          null != t.shape ? (this.ndim = t.shape.length) : (this.ndim = t.ndim),
          (this.maxNDim = t.maxNDim),
          (this.minNDim = t.minNDim),
          (this.axes = t.axes || {});
      },
      ue = function(t, e, n, r, i, o, a) {
        (this.dtype = t),
          (this.shape = e),
          (this.sourceLayer = n),
          (this.inputs = r),
          (this.callArgs = i),
          (this.outputTensorIndex = a),
          (this.id = Xt()),
          null != o &&
            ((this.originalName = Z(o)), (this.name = tt(this.originalName))),
          (this.rank = e.length);
      },
      ce = 0,
      le = (function() {
        function t(t, e) {
          (this.callArgs = e),
            (this.id = ce++),
            (this.outboundLayer = t.outboundLayer),
            (this.inboundLayers = t.inboundLayers),
            (this.nodeIndices = t.nodeIndices),
            (this.tensorIndices = t.tensorIndices),
            (this.inputTensors = t.inputTensors),
            (this.outputTensors = t.outputTensors),
            (this.inputMasks = t.inputMasks),
            (this.outputMasks = t.outputMasks),
            (this.inputShapes = t.inputShapes),
            (this.outputShapes = t.outputShapes);
          for (var n = 0, r = t.inboundLayers; n < r.length; n++) {
            var i = r[n];
            null != i && i.outboundNodes.push(this);
          }
          t.outboundLayer.inboundNodes.push(this);
        }
        return (
          (t.prototype.getConfig = function() {
            for (var t = [], e = 0, n = this.inboundLayers; e < n.length; e++) {
              var r = n[e];
              null != r ? t.push(r.name) : t.push(null);
            }
            return {
              outboundLayer: this.outboundLayer
                ? this.outboundLayer.name
                : null,
              inboundLayers: t,
              nodeIndices: this.nodeIndices,
              tensorIndices: this.tensorIndices
            };
          }),
          t
        );
      })(),
      he = 0,
      fe = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          (n._callHook = null),
            (n._addedWeightNames = []),
            (n._stateful = !1),
            (n.id = he++),
            (n.activityRegularizer = null),
            (n.inputSpec = null),
            (n.supportsMasking = !1),
            (n._trainableWeights = []),
            (n._nonTrainableWeights = []),
            (n._losses = []),
            (n._updates = []),
            (n._built = !1),
            (n.inboundNodes = []),
            (n.outboundNodes = []);
          var r = e.name;
          if (!r) {
            var i = n.getClassName();
            r = _(i) + "_" + Yt(i);
          }
          if (
            ((n.name = r),
            (n.trainable_ = null == e.trainable || e.trainable),
            (n.updatable = null == e.updatable || e.updatable),
            null != e.inputShape || null != e.batchInputShape)
          ) {
            var o = void 0;
            if (null != e.batchInputShape) o = e.batchInputShape;
            else if (null != e.inputShape) {
              var a = null;
              null != e.batchSize && (a = e.batchSize),
                (o = [a].concat(e.inputShape));
            }
            n.batchInputShape = o;
            var s = e.dtype;
            null == s && (s = e.inputDType),
              null == s && (s = "float32"),
              (n.dtype = s);
          }
          return (
            null != e.weights
              ? (n.initialWeights = e.weights)
              : (n.initialWeights = null),
            (n._refCount = null),
            (n.fastWeightInitDuringBuild = !1),
            n
          );
        }
        return (
          o(e, t),
          (e.nodeKey = function(t, e) {
            return t.name + "_ib-" + e.toString();
          }),
          (e.prototype.getNodeAtIndex = function(t, e) {
            if (0 === this.inboundNodes.length)
              throw new f(
                "The layer has never been called and thus has no defined " +
                  e +
                  "."
              );
            if (this.inboundNodes.length <= t)
              throw new p(
                "Asked to get " +
                  e +
                  " at node " +
                  t +
                  ", but the layer has only " +
                  this.inboundNodes.length +
                  " inbound nodes."
              );
            return this.inboundNodes[t];
          }),
          (e.prototype.getInputAt = function(t) {
            return b(this.getNodeAtIndex(t, "input").inputTensors);
          }),
          (e.prototype.getOutputAt = function(t) {
            return b(this.getNodeAtIndex(t, "output").outputTensors);
          }),
          Object.defineProperty(e.prototype, "input", {
            get: function() {
              if (this.inboundNodes.length > 1)
                throw new h(
                  "Layer " +
                    this.name +
                    ' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.'
                );
              if (0 === this.inboundNodes.length)
                throw new h(
                  "Layer " +
                    this.name +
                    " is not connected, no input to return."
                );
              return b(this.getNodeAtIndex(0, "input").inputTensors);
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "output", {
            get: function() {
              if (0 === this.inboundNodes.length)
                throw new h("Layer " + this.name + " has no inbound nodes.");
              if (this.inboundNodes.length > 1)
                throw new h(
                  "Layer " +
                    this.name +
                    ' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.'
                );
              return b(this.getNodeAtIndex(0, "output").outputTensors);
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "losses", {
            get: function() {
              return this._losses;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.calculateLosses = function() {
            return this.losses.map(function(t) {
              return t();
            });
          }),
          Object.defineProperty(e.prototype, "updates", {
            get: function() {
              return this._updates;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "built", {
            get: function() {
              return this._built;
            },
            set: function(t) {
              this._built = t;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "trainable", {
            get: function() {
              return this.trainable_;
            },
            set: function(t) {
              this._trainableWeights.forEach(function(e) {
                return (e.trainable = t);
              }),
                (this.trainable_ = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              return this.trainable_
                ? this._trainableWeights.filter(function(t) {
                    return t.trainable;
                  })
                : [];
            },
            set: function(t) {
              this._trainableWeights = t;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              return this.trainable
                ? this._trainableWeights
                    .filter(function(t) {
                      return !t.trainable;
                    })
                    .concat(this._nonTrainableWeights)
                : this._trainableWeights.concat(this._nonTrainableWeights);
            },
            set: function(t) {
              this._nonTrainableWeights = t;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "weights", {
            get: function() {
              return this.trainableWeights.concat(this.nonTrainableWeights);
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "stateful", {
            get: function() {
              return this._stateful;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.resetStates = function() {
            if (!this.stateful)
              throw new Error(
                "Cannot call the resetStates() method of a non-stateful Layer object."
              );
          }),
          (e.prototype.assertInputCompatibility = function(t) {
            if (
              ((t = w(t)),
              null != this.inputSpec && 0 !== this.inputSpec.length)
            ) {
              var e = w(this.inputSpec);
              if (t.length !== e.length)
                throw new p(
                  "Layer " +
                    this.name +
                    " expects " +
                    e.length +
                    " inputs, but it received " +
                    t.length +
                    " input tensors. Input received: " +
                    t
                );
              for (var n = 0; n < t.length; n++) {
                var r = t[n],
                  i = e[n];
                if (null != i) {
                  var o = r.rank;
                  if (null != i.ndim && o !== i.ndim)
                    throw new p(
                      "Input " +
                        n +
                        " is incompatible with layer " +
                        this.name +
                        ": expected ndim=" +
                        i.ndim +
                        ", found ndim=" +
                        o
                    );
                  if (null != i.maxNDim && o > i.maxNDim)
                    throw new p(
                      "Input " +
                        n +
                        " is incompatible with layer " +
                        this.name +
                        ": expected max_ndim=" +
                        i.maxNDim +
                        ", found ndim=" +
                        o
                    );
                  if (null != i.minNDim && o < i.minNDim)
                    throw new p(
                      "Input " +
                        n +
                        " is incompatible with layer " +
                        this.name +
                        ": expected min_ndim=" +
                        i.minNDim +
                        ", found ndim=" +
                        o +
                        "."
                    );
                  if (null != i.dtype && r.dtype !== i.dtype)
                    throw new p(
                      "Input " +
                        n +
                        " is incompatible with layer " +
                        this.name +
                        " : expected dtype=" +
                        i.dtype +
                        ", found dtype=" +
                        r.dtype +
                        "."
                    );
                  if (i.axes) {
                    var a = r.shape;
                    for (var s in i.axes) {
                      var u = Number(s),
                        c = i.axes[s],
                        l = u >= 0 ? a[u] : a[a.length + u];
                      if (null != c && -1 === [c, null].indexOf(l))
                        throw new p(
                          "Input " +
                            n +
                            " is incompatible with layer " +
                            this.name +
                            ": expected axis " +
                            u +
                            " of input shape to have value " +
                            c +
                            " but got shape " +
                            a +
                            "."
                        );
                    }
                  }
                  if (null != i.shape)
                    for (var h = 0; h < i.shape.length; ++h) {
                      var f = i.shape[h],
                        d = r.shape[h];
                      if (null != f && null != d && f !== d)
                        throw new p(
                          "Input " +
                            n +
                            " is incompatible with layer " +
                            this.name +
                            ": expected shape=" +
                            i.shape +
                            ", found shape=" +
                            r.shape +
                            "."
                        );
                    }
                }
              }
            }
          }),
          (e.prototype.call = function(t, e) {
            return t;
          }),
          (e.prototype.invokeCallHook = function(t, e) {
            null != this._callHook && this._callHook(t, e);
          }),
          (e.prototype.setCallHook = function(t) {
            this._callHook = t;
          }),
          (e.prototype.clearCallHook = function() {
            this._callHook = null;
          }),
          (e.prototype.apply = function(t, e) {
            var n = this;
            (e = e || {}), this.assertNotDisposed();
            for (var r = w(t), i = !0, o = 0, a = r; o < a.length; o++)
              if (!(a[o] instanceof ue)) {
                i = !1;
                break;
              }
            for (var s = !0, u = 0, c = r; u < c.length; u++)
              if (c[u] instanceof ue) {
                s = !1;
                break;
              }
            if (i === s)
              throw new p(
                "Arguments to apply() must be all SymbolicTensors or all Tensors"
              );
            return J(this.name, function() {
              if (!n.built) {
                n.assertInputCompatibility(t);
                for (var i = [], o = 0, a = w(t); o < a.length; o++) {
                  var u = a[o];
                  i.push(u.shape);
                }
                n.build(b(i)),
                  (n.built = !0),
                  n.initialWeights && n.setWeights(n.initialWeights),
                  null === n._refCount && s && (n._refCount = 1);
              }
              if ((n.assertInputCompatibility(t), s)) {
                for (
                  var c = [], l = 0, h = w((y = n.call(t, e)));
                  l < h.length;
                  l++
                ) {
                  var f = h[l];
                  -1 !== r.indexOf(f) && (f = f.clone()), c.push(f);
                }
                if (((y = b(c)), null != n.activityRegularizer))
                  throw new d(
                    "Layer invocation in the presence of activity regularizer(s) is not supported yet."
                  );
                return y;
              }
              var p = (function(t) {
                  for (var e = [], n = 0, r = (t = w(t)); n < r.length; n++) {
                    var i = r[n];
                    e.push(i.shape);
                  }
                  return b(e);
                })(t),
                m = n.computeOutputShape(p),
                y = void 0,
                g = "float32";
              if (
                (n.warnOnIncompatibleInputShape(Array.isArray(t) ? p[0] : p),
                (y =
                  null != m && m.length > 0 && Array.isArray(m[0])
                    ? m.map(function(r, i) {
                        return new ue(g, r, n, w(t), e, n.name, i);
                      })
                    : new ue(g, m, n, w(t), e, n.name)),
                n.addInboundNode(t, y, null, null, p, m, e),
                n._refCount++,
                null != n.activityRegularizer)
              )
                throw new d(
                  "Layer invocation in the presence of activity regularizer(s) is not supported yet."
                );
              return y;
            });
          }),
          (e.prototype.warnOnIncompatibleInputShape = function(t) {
            if (null != this.batchInputShape)
              if (t.length !== this.batchInputShape.length)
                console.warn(
                  "The rank of the input tensor provided (shape: " +
                    JSON.stringify(t) +
                    ") does not match that of the batchInputShape (" +
                    JSON.stringify(this.batchInputShape) +
                    ") of the layer " +
                    this.name
                );
              else {
                var e = !1;
                this.batchInputShape.forEach(function(n, r) {
                  null != n && null != t[r] && t[r] !== n && (e = !0);
                }),
                  e &&
                    console.warn(
                      "The shape of the input tensor (" +
                        JSON.stringify(t) +
                        ") does not match the expectation of layer " +
                        this.name +
                        ": " +
                        JSON.stringify(this.batchInputShape)
                    );
              }
          }),
          Object.defineProperty(e.prototype, "outputShape", {
            get: function() {
              if (null == this.inboundNodes || 0 === this.inboundNodes.length)
                throw new h(
                  "The layer " +
                    this.name +
                    " has never been called and thus has no defined output shape."
                );
              for (
                var t = [], e = 0, n = this.inboundNodes;
                e < n.length;
                e++
              ) {
                var r = n[e],
                  i = JSON.stringify(r.outputShapes);
                -1 === t.indexOf(i) && t.push(i);
              }
              if (1 === t.length) {
                var o = this.inboundNodes[0].outputShapes;
                return Array.isArray(o) && Array.isArray(o[0]) && 1 === o.length
                  ? o[0]
                  : o;
              }
              throw new h(
                "The layer " +
                  this.name +
                  ' has multiple inbound nodes with different output shapes. Hence the notion of "outut shape" is ill-defined for the layer.'
              );
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.countParams = function() {
            if (!this.built)
              throw new f(
                "You tried to call countParams() on " +
                  this.name +
                  ", but the layer is not built yet. Build it first by calling build(batchInputShape)."
              );
            return ne(this.weights);
          }),
          (e.prototype.build = function(t) {
            this.built = !0;
          }),
          (e.prototype.getWeights = function(t) {
            return (
              void 0 === t && (t = !1),
              oe(t ? this.trainableWeights : this.weights)
            );
          }),
          (e.prototype.setWeights = function(t) {
            var e = this;
            Object(r.tidy)(function() {
              var n = e.weights;
              if (n.length !== t.length)
                throw new p(
                  'You called setWeights(weights) on layer "' +
                    e.name +
                    '" with a weight list of length ' +
                    t.length +
                    ", but the layer was expecting " +
                    n.length +
                    " weights. Provided weights: " +
                    t +
                    "..."
                );
              if (0 !== n.length) {
                for (var i = [], o = oe(n), a = 0; a < o.length; ++a) {
                  var s = o[a],
                    u = n[a],
                    c = t[a];
                  if (!r.util.arraysEqual(s.shape, c.shape))
                    throw new p(
                      "Layer weight shape " +
                        s.shape +
                        " not compatible with provided weight shape " +
                        c.shape
                    );
                  i.push([u, c]);
                }
                ae(i);
              }
            });
          }),
          (e.prototype.addWeight = function(t, e, n, r, i, o, a) {
            if (-1 !== this._addedWeightNames.indexOf(t))
              throw new p(
                "Duplicate weight name " + t + " for layer " + this.name
              );
            this._addedWeightNames.push(t),
              null == n && (n = "float32"),
              this.fastWeightInitDuringBuild && (r = Ht("zeros"));
            var s = r.apply(e, n),
              u = new ie(s, n, t, o, a);
            return (
              s.dispose(),
              null != i &&
                this.addLoss(function() {
                  return i.apply(u.read());
                }),
              null == o && (o = !0),
              o
                ? this._trainableWeights.push(u)
                : this._nonTrainableWeights.push(u),
              u
            );
          }),
          (e.prototype.setFastWeightInitDuringBuild = function(t) {
            this.fastWeightInitDuringBuild = t;
          }),
          (e.prototype.addLoss = function(t) {
            var e;
            null == t ||
              (Array.isArray(t) && 0 === t.length) ||
              ((t = w(t)),
              void 0 !== this._losses &&
                null !== this._losses &&
                (e = this.losses).push.apply(e, t));
          }),
          (e.prototype.computeOutputShape = function(t) {
            return t;
          }),
          (e.prototype.computeMask = function(t, e) {
            var n = this;
            if (!this.supportsMasking) {
              if (null != e) {
                if (!Array.isArray(e))
                  throw new TypeError(
                    "Layer " +
                      this.name +
                      " does not support masking, but was passed an inputMask."
                  );
                e.forEach(function(t) {
                  if (null != t)
                    throw new TypeError(
                      "Layer " +
                        n.name +
                        " does not support masking, but was passed an inputMask."
                    );
                });
              }
              return null;
            }
            return e;
          }),
          (e.prototype.addInboundNode = function(t, e, n, r, i, o, a) {
            void 0 === a && (a = null);
            var s = w(t);
            (e = w(e)), (n = w(n)), (r = w(r)), (i = Zt(i)), (o = Zt(o));
            for (var u = [], c = [], l = [], h = 0, f = s; h < f.length; h++) {
              var p = f[h];
              u.push(p.sourceLayer), c.push(p.nodeIndex), l.push(p.tensorIndex);
            }
            new le(
              {
                outboundLayer: this,
                inboundLayers: u,
                nodeIndices: c,
                tensorIndices: l,
                inputTensors: s,
                outputTensors: e,
                inputMasks: n,
                outputMasks: r,
                inputShapes: i,
                outputShapes: o
              },
              a
            );
            for (var d = 0; d < e.length; d++)
              (e[d].sourceLayer = this),
                (e[d].nodeIndex = this.inboundNodes.length - 1),
                (e[d].tensorIndex = d);
          }),
          (e.prototype.getConfig = function() {
            var t = { name: this.name, trainable: this.trainable };
            return (
              null != this.batchInputShape &&
                (t.batchInputShape = this.batchInputShape),
              null != this.dtype && (t.dtype = this.dtype),
              t
            );
          }),
          (e.prototype.disposeWeights = function() {
            return (
              this.weights.forEach(function(t) {
                return t.dispose();
              }),
              this.weights.length
            );
          }),
          (e.prototype.assertNotDisposed = function() {
            if (0 === this._refCount)
              throw new Error("Layer '" + this.name + "' is already disposed.");
          }),
          (e.prototype.dispose = function() {
            if (!this.built)
              throw new Error(
                "Cannot dispose Layer " +
                  this.name +
                  " because it has not been built yet."
              );
            if (null === this._refCount)
              throw new Error(
                "Cannot dispose Layer " +
                  this.name +
                  " because it has not been used yet."
              );
            this.assertNotDisposed();
            var t = 0;
            return (
              0 == --this._refCount && (t = this.disposeWeights()),
              { refCountAfterDispose: this._refCount, numDisposedVariables: t }
            );
          }),
          e
        );
      })(r.serialization.Serializable);
    var pe,
      de,
      me = (function(t) {
        function e(e) {
          var n =
            t.call(this, {
              dtype: e.dtype,
              name: null != e.name ? e.name : Yt("input").toString()
            }) || this;
          if (
            (null == e.batchSize && (e.batchSize = null),
            null == e.sparse && (e.sparse = !1),
            (n.trainable = !1),
            (n.built = !0),
            (n.sparse = e.sparse),
            null != e.inputShape && null != e.batchInputShape)
          )
            throw new p(
              "Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time."
            );
          var r = e.batchInputShape;
          if (null == r) {
            if (null == e.inputShape)
              throw new p(
                "An InputLayer should be passed either a `batchInputShape` or an `inputShape`."
              );
            r = [e.batchSize].concat(e.inputShape);
          } else if (null != e.batchSize)
            throw new p(
              "Cannot specify batchSize if batchInputShape is specified when creating an InputLayer."
            );
          var i = e.dtype || "float32";
          (n.batchInputShape = r),
            (n.dtype = i),
            (n.inputSpec = [{ shape: r }]);
          var o = new ue(n.dtype, n.batchInputShape, n, [], {}, n.name);
          return (
            (o.nodeIndex = 0),
            (o.tensorIndex = 0),
            new le({
              outboundLayer: n,
              inboundLayers: [],
              nodeIndices: [],
              tensorIndices: [],
              inputTensors: [o],
              outputTensors: [o],
              inputMasks: [null],
              outputMasks: [null],
              inputShapes: [r],
              outputShapes: [r]
            }),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.apply = function(t, e) {
            throw new p(
              "Cannot pass any input to an InputLayer's apply() method. InputLayer name: " +
                this.name
            );
          }),
          (e.prototype.dispose = function() {
            return {
              refCountAfterDispose: this._refCount,
              numDisposedVariables: 0
            };
          }),
          (e.prototype.getConfig = function() {
            return {
              batchInputShape: this.batchInputShape,
              dtype: this.dtype,
              sparse: this.sparse,
              name: this.name
            };
          }),
          (e.className = "InputLayer"),
          e
        );
      })(fe);
    function ye(t) {
      if (null == t.batchShape && null == t.shape)
        throw new Error(
          "Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension."
        );
      if (null != t.batchShape && null != t.shape)
        throw new p(
          "Please provide either a `shape` or `batchShape` argument to Input, but not both."
        );
      var e = t.batchShape;
      null != t.shape && null == e && (e = [null].concat(t.shape));
      var n = t.dtype;
      return (
        null == n && (n = "float32"),
        new me({ batchInputShape: e, name: t.name, dtype: n, sparse: t.sparse })
          .inboundNodes[0].outputTensors[0]
      );
    }
    function ge(t) {
      return u(this, void 0, void 0, function() {
        var e, n, i, o, a, s, u, l;
        return c(this, function(c) {
          switch (c.label) {
            case 0:
              if (null == t) return [2];
              for (o in ((e = []), (n = []), (i = []), t))
                "number" != typeof (a = t[o]) &&
                  ((s = a), e.push(s.data()), n.push(o), i.push(s));
              return e.length > 0 ? [4, Promise.all(e)] : [3, 2];
            case 1:
              for (u = c.sent(), l = 0; l < u.length; ++l) t[n[l]] = u[l][0];
              Object(r.dispose)(i), (c.label = 2);
            case 2:
              return [2];
          }
        });
      });
    }
    function ve(t) {
      if (null != t)
        for (var e in t) {
          var n = t[e];
          "number" != typeof n && n.dispose();
        }
    }
    r.serialization.registerClass(me),
      ((de = pe || (pe = {}))[(de.SILENT = 0)] = "SILENT"),
      (de[(de.VERBOSE = 1)] = "VERBOSE");
    var be = 125,
      we = (function() {
        function t() {
          this.validationData = null;
        }
        return (
          (t.prototype.setParams = function(t) {
            this.params = t;
          }),
          (t.prototype.onEpochBegin = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return [2];
              });
            });
          }),
          (t.prototype.onEpochEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return [2];
              });
            });
          }),
          (t.prototype.onBatchBegin = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return [2];
              });
            });
          }),
          (t.prototype.onBatchEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return [2];
              });
            });
          }),
          (t.prototype.onTrainBegin = function(t) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return [2];
              });
            });
          }),
          (t.prototype.onTrainEnd = function(t) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return [2];
              });
            });
          }),
          (t.prototype.setModel = function(t) {}),
          t
        );
      })(),
      _e = (function() {
        function t(t, e) {
          void 0 === e && (e = 10),
            null == t && (t = []),
            (this.callbacks = t),
            (this.queueLength = e);
        }
        return (
          (t.prototype.append = function(t) {
            this.callbacks.push(t);
          }),
          (t.prototype.setParams = function(t) {
            for (var e = 0, n = this.callbacks; e < n.length; e++)
              n[e].setParams(t);
          }),
          (t.prototype.setModel = function(t) {
            for (var e = 0, n = this.callbacks; e < n.length; e++)
              n[e].setModel(t);
          }),
          (t.prototype.onEpochBegin = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n, r;
              return c(this, function(i) {
                switch (i.label) {
                  case 0:
                    null == e && (e = {}),
                      (n = 0),
                      (r = this.callbacks),
                      (i.label = 1);
                  case 1:
                    return n < r.length ? [4, r[n].onEpochBegin(t, e)] : [3, 4];
                  case 2:
                    i.sent(), (i.label = 3);
                  case 3:
                    return n++, [3, 1];
                  case 4:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.onEpochEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n, r;
              return c(this, function(i) {
                switch (i.label) {
                  case 0:
                    null == e && (e = {}),
                      (n = 0),
                      (r = this.callbacks),
                      (i.label = 1);
                  case 1:
                    return n < r.length ? [4, r[n].onEpochEnd(t, e)] : [3, 4];
                  case 2:
                    i.sent(), (i.label = 3);
                  case 3:
                    return n++, [3, 1];
                  case 4:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.onBatchBegin = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n, r;
              return c(this, function(i) {
                switch (i.label) {
                  case 0:
                    null == e && (e = {}),
                      (n = 0),
                      (r = this.callbacks),
                      (i.label = 1);
                  case 1:
                    return n < r.length ? [4, r[n].onBatchBegin(t, e)] : [3, 4];
                  case 2:
                    i.sent(), (i.label = 3);
                  case 3:
                    return n++, [3, 1];
                  case 4:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.onBatchEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n, r;
              return c(this, function(i) {
                switch (i.label) {
                  case 0:
                    null == e && (e = {}),
                      (n = 0),
                      (r = this.callbacks),
                      (i.label = 1);
                  case 1:
                    return n < r.length ? [4, r[n].onBatchEnd(t, e)] : [3, 4];
                  case 2:
                    i.sent(), (i.label = 3);
                  case 3:
                    return n++, [3, 1];
                  case 4:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.onTrainBegin = function(t) {
            return u(this, void 0, void 0, function() {
              var e, n;
              return c(this, function(r) {
                switch (r.label) {
                  case 0:
                    null == t && (t = {}),
                      (e = 0),
                      (n = this.callbacks),
                      (r.label = 1);
                  case 1:
                    return e < n.length ? [4, n[e].onTrainBegin(t)] : [3, 4];
                  case 2:
                    r.sent(), (r.label = 3);
                  case 3:
                    return e++, [3, 1];
                  case 4:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.onTrainEnd = function(t) {
            return u(this, void 0, void 0, function() {
              var e, n;
              return c(this, function(r) {
                switch (r.label) {
                  case 0:
                    null == t && (t = {}),
                      (e = 0),
                      (n = this.callbacks),
                      (r.label = 1);
                  case 1:
                    return e < n.length ? [4, n[e].onTrainEnd(t)] : [3, 4];
                  case 2:
                    r.sent(), (r.label = 3);
                  case 3:
                    return e++, [3, 1];
                  case 4:
                    return [2];
                }
              });
            });
          }),
          t
        );
      })(),
      Se = (function(t) {
        function e() {
          return t.call(this) || this;
        }
        return (
          o(e, t),
          (e.prototype.onEpochBegin = function(t) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return (this.seen = 0), (this.totals = {}), [2];
              });
            });
          }),
          (e.prototype.onBatchEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var t,
                n,
                i,
                o,
                a = this;
              return c(this, function(s) {
                for (o in (null == e && (e = {}),
                (t = null == e.size ? 0 : e.size),
                (this.seen += t),
                (n = function(n) {
                  var o = e[n];
                  if ("number" == typeof o)
                    i.totals.hasOwnProperty(n) || (i.totals[n] = 0),
                      (i.totals[n] = i.totals[n] + o * t);
                  else {
                    var s = void 0;
                    n in i.totals ? (s = i.totals[n]) : (i.totals[n] = 0),
                      (i.totals[n] = Object(r.tidy)(function() {
                        return Object(r.add)(a.totals[n], Object(r.mul)(o, t));
                      })),
                      null != s && s.dispose();
                  }
                }),
                (i = this),
                e))
                  n(o);
                return [2];
              });
            });
          }),
          (e.prototype.onEpochEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var t,
                n,
                i,
                o,
                a,
                s = this;
              return c(this, function(u) {
                if (null != e)
                  for (
                    t = function(t) {
                      if (null == n.totals[t]) return "continue";
                      "number" == typeof n.totals[t]
                        ? (e[t] = n.totals[t] / n.seen)
                        : Object(r.tidy)(function() {
                            (e[t] = Object(r.mul)(
                              Object(r.div)(1, s.seen),
                              s.totals[t]
                            )),
                              s.totals[t].dispose(),
                              Object(r.keep)(e[t]);
                          });
                    },
                      n = this,
                      i = 0,
                      o = this.params.metrics;
                    i < o.length;
                    i++
                  )
                    (a = o[i]), t(a);
                return [2];
              });
            });
          }),
          e
        );
      })(we),
      xe = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.onTrainBegin = function(t) {
            return u(this, void 0, void 0, function() {
              return c(this, function(t) {
                return (this.epoch = []), (this.history = {}), [2];
              });
            });
          }),
          (e.prototype.onEpochEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n;
              return c(this, function(r) {
                for (n in (null == e && (e = {}), this.epoch.push(t), e))
                  null == this.history[n] && (this.history[n] = []),
                    this.history[n].push(e[n]);
                return [2];
              });
            });
          }),
          (e.prototype.syncData = function() {
            return u(this, void 0, void 0, function() {
              var t, e, n, r, i, o, a, s, u;
              return c(this, function(c) {
                switch (c.label) {
                  case 0:
                    for (r in ((t = []), (e = []), (n = []), this.history))
                      for (i = this.history[r], o = 0; o < i.length; ++o)
                        "number" != typeof i[o] &&
                          ((a = i[o]), t.push(a.data()), e.push(r), n.push(o));
                    return [4, Promise.all(t)];
                  case 1:
                    for (s = c.sent(), u = 0; u < s.length; ++u)
                      this.history[e[u]][n[u]].dispose(),
                        (this.history[e[u]][n[u]] = s[u][0]);
                    return [2];
                }
              });
            });
          }),
          e
        );
      })(we),
      Te = (function(t) {
        function e(e, n) {
          var i = t.call(this) || this;
          if (
            ((i.currentEpoch = 0),
            (i.yieldEvery = n || "auto"),
            "auto" === i.yieldEvery && (i.yieldEvery = be),
            "never" === i.yieldEvery && null != e.onYield)
          )
            throw new Error(
              "yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback"
            );
          return (
            r.util.isNumber(i.yieldEvery) &&
              (i.maybeWait = (function(t, e) {
                var n,
                  i = r.util.now();
                return function() {
                  for (var o = [], a = 0; a < arguments.length; a++)
                    o[a] = arguments[a];
                  var s = r.util.now();
                  return s - i < e ? n : ((i = s), (n = t.apply(void 0, o)));
                };
              })(i.maybeWait.bind(i), i.yieldEvery)),
            (i.trainBegin = e.onTrainBegin),
            (i.trainEnd = e.onTrainEnd),
            (i.epochBegin = e.onEpochBegin),
            (i.epochEnd = e.onEpochEnd),
            (i.batchBegin = e.onBatchBegin),
            (i.batchEnd = e.onBatchEnd),
            (i.yield = e.onYield),
            i
          );
        }
        return (
          o(e, t),
          (e.prototype.maybeWait = function(t, e, n) {
            return u(this, void 0, void 0, function() {
              var i;
              return c(this, function(o) {
                switch (o.label) {
                  case 0:
                    return (i = []), null == this.yield ? [3, 2] : [4, ge(n)];
                  case 1:
                    o.sent(), i.push(this.yield(t, e, n)), (o.label = 2);
                  case 2:
                    return i.push(Object(r.nextFrame)()), [4, Promise.all(i)];
                  case 3:
                    return o.sent(), [2];
                }
              });
            });
          }),
          (e.prototype.onEpochBegin = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                switch (n.label) {
                  case 0:
                    return (
                      (this.currentEpoch = t),
                      null == this.epochBegin ? [3, 3] : [4, ge(e)]
                    );
                  case 1:
                    return n.sent(), [4, this.epochBegin(t, e)];
                  case 2:
                    n.sent(), (n.label = 3);
                  case 3:
                    return [2];
                }
              });
            });
          }),
          (e.prototype.onEpochEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n;
              return c(this, function(i) {
                switch (i.label) {
                  case 0:
                    return (
                      (n = []), null == this.epochEnd ? [3, 2] : [4, ge(e)]
                    );
                  case 1:
                    i.sent(), n.push(this.epochEnd(t, e)), (i.label = 2);
                  case 2:
                    return (
                      "epoch" === this.yieldEvery &&
                        n.push(Object(r.nextFrame)()),
                      [4, Promise.all(n)]
                    );
                  case 3:
                    return i.sent(), [2];
                }
              });
            });
          }),
          (e.prototype.onBatchBegin = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                switch (n.label) {
                  case 0:
                    return null == this.batchBegin ? [3, 3] : [4, ge(e)];
                  case 1:
                    return n.sent(), [4, this.batchBegin(t, e)];
                  case 2:
                    n.sent(), (n.label = 3);
                  case 3:
                    return [2];
                }
              });
            });
          }),
          (e.prototype.onBatchEnd = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n;
              return c(this, function(i) {
                switch (i.label) {
                  case 0:
                    return (
                      (n = []), null == this.batchEnd ? [3, 2] : [4, ge(e)]
                    );
                  case 1:
                    i.sent(), n.push(this.batchEnd(t, e)), (i.label = 2);
                  case 2:
                    return (
                      "batch" === this.yieldEvery
                        ? n.push(Object(r.nextFrame)())
                        : r.util.isNumber(this.yieldEvery) &&
                          n.push(this.maybeWait(this.currentEpoch, t, e)),
                      [4, Promise.all(n)]
                    );
                  case 3:
                    return i.sent(), [2];
                }
              });
            });
          }),
          (e.prototype.onTrainBegin = function(t) {
            return u(this, void 0, void 0, function() {
              return c(this, function(e) {
                switch (e.label) {
                  case 0:
                    return null == this.trainBegin ? [3, 3] : [4, ge(t)];
                  case 1:
                    return e.sent(), [4, this.trainBegin(t)];
                  case 2:
                    e.sent(), (e.label = 3);
                  case 3:
                    return [2];
                }
              });
            });
          }),
          (e.prototype.onTrainEnd = function(t) {
            return u(this, void 0, void 0, function() {
              return c(this, function(e) {
                switch (e.label) {
                  case 0:
                    return null == this.trainEnd ? [3, 3] : [4, ge(t)];
                  case 1:
                    return e.sent(), [4, this.trainEnd(t)];
                  case 2:
                    e.sent(), (e.label = 3);
                  case 3:
                    return [2];
                }
              });
            });
          }),
          e
        );
      })(we);
    function Ae(t, e) {
      return (
        null == t && (t = {}),
        t instanceof we
          ? [t]
          : Array.isArray(t) && t[0] instanceof we
          ? t
          : w(t).map(function(t) {
              return new Te(t, e);
            })
      );
    }
    var ke = (function() {
      function t() {}
      return (
        (t.registerCallbackConstructor = function(e, n) {
          r.util.assert(e >= 0 && Number.isInteger(e), function() {
            return (
              "Verbosity level is expected to be an integer >= 0, but got " + e
            );
          }),
            t.checkForDuplicate(n),
            null == t.constructors[e] && (t.constructors[e] = []),
            t.constructors[e].push(n);
        }),
        (t.checkForDuplicate = function(e) {
          for (var n in t.constructors)
            t.constructors[+n].forEach(function(t) {
              if (t === e) throw new p("Duplicate callback constructor.");
            });
        }),
        (t.clear = function() {
          t.constructors = {};
        }),
        (t.createCallbacks = function(e) {
          var n = [];
          for (var r in t.constructors) {
            var i = +r;
            e >= i && n.push.apply(n, t.constructors[i]);
          }
          return n.map(function(t) {
            return new t();
          });
        }),
        (t.constructors = {}),
        t
      );
    })();
    function Ee(t, e, n, r, i, o, a, s, u) {
      var c = new xe(),
        l = [new Se()].concat(ke.createCallbacks(e));
      null != t && l.push.apply(l, t), l.push(c);
      var h = new _e(l);
      return (
        h.setParams({
          epochs: n,
          initialEpoch: r,
          samples: i,
          steps: o,
          batchSize: a,
          verbose: e,
          doValidation: s,
          metrics: u
        }),
        { callbackList: h, history: c }
      );
    }
    function Ne(t, e) {
      return Object(r.tidy)(function() {
        "float32" !== t.dtype && (t = t.asType("float32"));
        var n = Object(r.sum)(wt(t), e, !0),
          i = Object(r.fill)(n.shape, l()),
          o = Object(r.sqrt)(Object(r.maximum)(n, i));
        return Object(r.div)(t, o);
      });
    }
    function Oe(t, e) {
      return Object(r.tidy)(function() {
        return Object(r.mean)(wt(Object(r.sub)(e, t)), -1);
      });
    }
    function Ce(t, e) {
      return Object(r.tidy)(function() {
        return Object(r.mean)(Object(r.abs)(Object(r.sub)(e, t)), -1);
      });
    }
    function Ie(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.sub)(t, e),
          i = Object(r.clipByValue)(Object(r.abs)(t), l(), Number.MAX_VALUE),
          o = Object(r.abs)(Object(r.div)(n, i));
        return Object(r.mul)(100, Object(r.mean)(o, -1));
      });
    }
    function Me(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.clipByValue)(e, l(), Number.MAX_VALUE),
          i = Object(r.log)(Object(r.add)(1, n)),
          o = Object(r.clipByValue)(t, l(), Number.MAX_VALUE),
          a = Object(r.log)(Object(r.add)(1, o));
        return Object(r.mean)(wt(Object(r.sub)(i, a)), -1);
      });
    }
    function Pe(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.maximum)(0, Object(r.sub)(1, Object(r.mul)(t, e)));
        return Object(r.mean)(wt(n), -1);
      });
    }
    function Re(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.maximum)(0, Object(r.sub)(1, Object(r.mul)(t, e)));
        return Object(r.mean)(n, -1);
      });
    }
    function De(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.sum)(Object(r.mul)(t, e), -1),
          i = Object(r.max)(Object(r.mul)(Object(r.sub)(1, t), e), -1);
        return Object(r.maximum)(0, Object(r.add)(1, Object(r.sub)(i, n)));
      });
    }
    function Fe(t, e) {
      return Object(r.tidy)(function() {
        var n = Math.log(2),
          i = Object(r.sub)(e, t),
          o = Object(r.sub)(
            Object(r.add)(i, Object(r.softplus)(Object(r.mul)(-2, i))),
            n
          );
        return Object(r.mean)(o, -1);
      });
    }
    function ze(t, e, n) {
      return (
        void 0 === n && (n = !1),
        Object(r.tidy)(function() {
          if (n) e = Object(r.softmax)(e);
          else {
            var i = Object(r.sum)(e, e.shape.length - 1, !0);
            e = Object(r.div)(e, i);
          }
          return (
            (e = Object(r.clipByValue)(e, l(), 1 - l())),
            Object(r.neg)(
              Object(r.sum)(
                Object(r.mul)(t.toFloat(), Object(r.log)(e)),
                e.shape.length - 1
              )
            )
          );
        })
      );
    }
    function Le(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.floor)(
            (function(t) {
              var e = [it(t.shape)];
              return t.reshape(e);
            })(t)
          ).toInt(),
          i = (e = Object(r.clipByValue)(e, l(), 1 - l())).shape;
        return ze(Object(r.oneHot)(n, i[i.length - 1]).reshape(i), e, !1);
      });
    }
    function je(t, e) {
      return Object(r.tidy)(function() {
        var n;
        return (
          (n = Object(r.clipByValue)(e, l(), 1 - l())),
          (n = Object(r.log)(Object(r.div)(n, Object(r.sub)(1, n)))),
          Object(r.mean)(
            (function(t, e) {
              if (!r.util.arraysEqual(t.shape, e.shape))
                throw new p(
                  "logits and labels must have the same shape, but got shapes " +
                    JSON.stringify(t.shape) +
                    " and " +
                    JSON.stringify(e.shape)
                );
              return Object(r.tidy)(function() {
                var n = e.relu(),
                  r = e.abs().neg();
                return n.sub(e.mul(t)).add(r.exp().log1p());
              });
            })(t, n),
            -1
          )
        );
      });
    }
    function Be(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.clipByValue)(t, l(), 1),
          i = Object(r.clipByValue)(e, l(), 1);
        return Object(
          r.sum
        )(Object(r.mul)(t, Object(r.log)(Object(r.div)(n, i))), -1);
      });
    }
    function qe(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.log)(Object(r.add)(l(), e));
        return Object(r.mean)(Object(r.sub)(e, Object(r.mul)(t, n)), -1);
      });
    }
    function Ue(t, e) {
      return Object(r.tidy)(function() {
        var n = Ne(t, -1),
          i = Ne(e, -1),
          o = Object(r.mul)(n, i);
        return Object(r.neg)(Object(r.sum)(o, -1));
      });
    }
    function Ve(t) {
      var e = {
        meanSquaredError: Oe,
        meanAbsoluteError: Ce,
        meanAbsolutePercentageError: Ie,
        meanSquaredLogarithmicError: Me,
        squaredHinge: Pe,
        hinge: Re,
        categoricalHinge: De,
        logcosh: Fe,
        categoricalCrossentropy: ze,
        sparseCategoricalCrossentropy: Le,
        binaryCrossentropy: je,
        kullbackLeiblerDivergence: Be,
        poisson: qe,
        cosineProximity: Ue
      };
      if ("string" == typeof t) {
        if (t in e) return e[t];
        var n = "Unknown loss " + t;
        throw (t.toLowerCase().includes("softmaxcrossentropy") &&
          (n =
            "Unknown loss " +
            t +
            '. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),
        new p(n));
      }
      return t;
    }
    function We(t, e) {
      return Object(r.tidy)(function() {
        var n = Object(r.mul)(0.5, Object(r.onesLike)(e)),
          i = ct(Object(r.greater)(e, n), t.dtype);
        return Object(r.mean)(Object(r.equal)(t, i), -1);
      });
    }
    function Ge(t, e) {
      return Object(r.tidy)(function() {
        return ct(
          Object(r.equal)(Object(r.argMax)(t, -1), Object(r.argMax)(e, -1)),
          "float32"
        );
      });
    }
    function He(t, e) {
      return Object(r.tidy)(function() {
        return Object(r.logicalAnd)(t.equal(1), e.equal(1))
          .sum()
          .cast("float32");
      });
    }
    function Ke(t, e) {
      return Object(r.tidy)(function() {
        var n = He(t, e),
          i = (function(t, e) {
            return Object(r.tidy)(function() {
              return Object(r.logicalAnd)(t.equal(0), e.equal(1))
                .sum()
                .cast("float32");
            });
          })(t, e),
          o = n.add(i);
        return Object(r.where)(Object(r.greater)(o, 0), n.div(o), 0).cast(
          "float32"
        );
      });
    }
    function Qe(t, e) {
      return Object(r.tidy)(function() {
        var n = He(t, e),
          i = (function(t, e) {
            return Object(r.tidy)(function() {
              return Object(r.logicalAnd)(t.equal(1), e.equal(0))
                .sum()
                .cast("float32");
            });
          })(t, e),
          o = n.add(i);
        return Object(r.where)(Object(r.greater)(o, 0), n.div(o), 0).cast(
          "float32"
        );
      });
    }
    function Xe(t, e) {
      return je(t, e);
    }
    function $e(t, e) {
      return (
        t.rank === e.rank && (t = t.squeeze([t.rank - 1])),
        (e = e.argMax(-1)).dtype !== t.dtype && (e = e.asType(t.dtype)),
        Object(r.equal)(t, e).asType("float32")
      );
    }
    var Ye = Oe,
      Je = Oe,
      Ze = Ce,
      tn = Ce,
      en = Ie,
      nn = Ie,
      rn = ze,
      on = Ue,
      an = Le;
    function sn(t, e, n, r) {
      void 0 === r && (r = console.log);
      var i,
        o = (function(t) {
          var e = !0,
            n = [],
            r = [];
          for (var i in t.nodesByDepth) n.push(t.nodesByDepth[i]);
          for (var o = 0, a = n; o < a.length; o++) {
            var s = a[o];
            if (
              s.length > 1 ||
              (1 === s.length && s[0].inboundLayers.length > 1)
            ) {
              e = !1;
              break;
            }
            r.push.apply(r, s);
          }
          if (e)
            for (var u = 0, c = t.layers; u < c.length; u++) {
              for (
                var l = !1, h = 0, f = c[u].inboundNodes;
                h < f.length;
                h++
              ) {
                var p = f[h];
                if (-1 !== r.indexOf(p)) {
                  if (l) {
                    e = !1;
                    break;
                  }
                  l = !0;
                }
              }
              if (!e) break;
            }
          return e;
        })(t),
        a = ["Layer (type)", "Output shape", "Param #"];
      if (
        (o
          ? ((e = e || 65), (n = n || [0.45, 0.85, 1]))
          : ((e = e || 98), (n = n || [0.33, 0.55, 0.67, 1])),
        n[n.length - 1] <= 1 &&
          (n = n.map(function(t) {
            return Math.floor(e * t);
          })),
        !o)
      )
        for (var s in (a.push("Receives inputs"), (i = []), t.nodesByDepth))
          i.push.apply(i, t.nodesByDepth[s]);
      r("_".repeat(e)), un(a, n, r), r("=".repeat(e));
      for (var u = t.layers, c = 0; c < u.length; ++c)
        o ? cn(u[c], n, r) : ln(u[c], n, i, r),
          r((c === u.length - 1 ? "=" : "_").repeat(e));
      t.checkTrainableWeightsConsistency();
      var l = (function(t) {
          return null != t.collectedTrainableWeights
            ? ne(t.collectedTrainableWeights)
            : ne(t.trainableWeights);
        })(t),
        h = ne(t.nonTrainableWeights);
      r("Total params: " + (l + h)),
        r("Trainable params: " + l),
        r("Non-trainable params: " + h),
        r("_".repeat(e));
    }
    function un(t, e, n) {
      void 0 === n && (n = console.log);
      for (var r = "", i = 0; i < t.length; ++i)
        i > 0 && (r = r.slice(0, r.length - 1) + " "),
          (r = (r += t[i]).slice(0, e[i])),
          (r += " ".repeat(e[i] - r.length));
      n(r);
    }
    function cn(t, e, n) {
      var r;
      try {
        r = JSON.stringify(t.outputShape);
      } catch (t) {
        r = "multiple";
      }
      un(
        [t.name + " (" + t.getClassName() + ")", r, t.countParams().toString()],
        e,
        n
      );
    }
    function ln(t, e, n, r) {
      var i;
      try {
        i = JSON.stringify(t.outputShape);
      } catch (t) {
        i = "multiple";
      }
      for (var o = [], a = 0, s = t.inboundNodes; a < s.length; a++) {
        var u = s[a];
        if (!(null != n && n.length > 0 && -1 === n.indexOf(u)))
          for (var c = 0; c < u.inboundLayers.length; ++c) {
            var l = u.inboundLayers[c].name,
              h = u.nodeIndices[c],
              f = u.tensorIndices[c];
            o.push(l + "[" + h + "][" + f + "]");
          }
      }
      var p = t.name,
        d = t.getClassName(),
        m = 0 === o.length ? "" : o[0];
      for (
        un([p + " (" + d + ")", i, t.countParams().toString(), m], e, r), c = 1;
        c < o.length;
        ++c
      )
        un(["", "", "", o[c]], e, r);
    }
    function hn(t, e, n) {
      return (
        void 0 === e && (e = {}),
        void 0 === n && (n = !1),
        A(
          t,
          r.serialization.SerializationMap.getMap().classNameMap,
          e,
          "layer",
          n
        )
      );
    }
    function fn(t, e, n) {
      return (
        ("inboundNodes" === t || "outputLayers" === t || "inputLayers" === t) &&
        0 === e &&
        "string" == typeof n
      );
    }
    function pn(t, e) {
      if (null === t) return null;
      if ("string" == typeof t) return S(t);
      if ("number" == typeof t || "boolean" == typeof t) return t;
      if (t instanceof Array) {
        for (var n = [], r = t.length, i = 0; i < r; ++i) {
          var o = t[i];
          fn(e, i, o) ? n.push(o) : n.push(pn(o, e));
        }
        return n;
      }
      for (var a = {}, s = 0, u = Object.keys(t); s < u.length; s++) {
        var c = u[s],
          l = t[c];
        if ("name" === c && "string" == typeof l) a[c] = l;
        else {
          var h = S(c);
          a[h] = pn(l, h);
        }
      }
      return a;
    }
    var dn = (function() {
        function t(e) {
          if (
            ((this.id2Value = {}),
            (this.id2Mask = {}),
            (this.name2Id = {}),
            e instanceof t)
          )
            for (var n in e.id2Value)
              (this.id2Value[n] = e.id2Value[n]),
                n in e.id2Mask && (this.id2Mask[n] = e.id2Mask[n]);
          else {
            if (null == e) return;
            for (var r = 0, i = e; r < i.length; r++) {
              var o = i[r];
              this.add(o.key, o.value);
            }
          }
        }
        return (
          (t.prototype.add = function(t, e, n) {
            if (null != this.id2Value[t.id])
              throw new p("Duplicate key: name=" + t.name + ", id=" + t.id);
            return (
              (this.id2Value[t.id] = (function(t, e) {
                if (null == t.dtype || t.dtype === e.dtype) return e;
                try {
                  return Object(r.cast)(e, t.dtype);
                } catch (n) {
                  throw new p(
                    "The dtype of the feed (" +
                      e.dtype +
                      ") can not be cast to the dtype of the key '" +
                      t.name +
                      "' (" +
                      t.dtype +
                      ")."
                  );
                }
              })(t, e)),
              (this.name2Id[t.name] = t.id),
              null != n && (this.id2Mask[t.id] = n),
              this
            );
          }),
          (t.prototype.addFeed = function(t) {
            this.add(t.key, t.value);
          }),
          (t.prototype.hasKey = function(t) {
            return null != this.id2Value[t.id];
          }),
          (t.prototype.names = function() {
            return Object.keys(this.name2Id);
          }),
          (t.prototype.getValue = function(t) {
            if (t instanceof ue) {
              if (null == this.id2Value[t.id])
                throw new p("Nonexistent key: " + t.name);
              return this.id2Value[t.id];
            }
            var e = this.name2Id[t];
            if (null == e)
              throw new p("Feed dict has no SymbolicTensor name: " + t);
            return this.id2Value[e];
          }),
          (t.prototype.getMask = function(t) {
            if (t instanceof ue) {
              if (null == this.id2Value[t.id])
                throw new p("Nonexistent key: " + t.name);
              return this.id2Mask[t.id];
            }
            var e = this.name2Id[t];
            if (null == e)
              throw new p("Feed dict has no SymbolicTensor name: " + t);
            return this.id2Mask[e];
          }),
          (t.prototype.disposeMasks = function() {
            null != this.id2Mask && Object(r.dispose)(this.id2Mask);
          }),
          t
        );
      })(),
      mn = {},
      yn = {};
    function gn(t, e, n, i) {
      for (
        var o = null != n && n.training,
          a = Array.isArray(t),
          s = a ? t : [t],
          u = s.map(function(t) {
            return t.name;
          }),
          c = [],
          l = e.names(),
          h = 0,
          f = u;
        h < f.length;
        h++
      ) {
        var p = f[h];
        -1 !== l.indexOf(p) ? c.push(e.getValue(p)) : c.push(null);
      }
      null != i && ((i.maxNumTensors = -1 / 0), (i.minNumTensors = 1 / 0));
      var d,
        m,
        y = u.join(",") + "|" + e.names().join(",");
      if (null == mn[y]) {
        var g = (function(t, e) {
          r.util.assert(null != t && t.length > 0, function() {
            return "Expected at least one fetch, got none";
          });
          var n = [],
            i = {};
          if (1 === t.length) {
            var o = bn(t[0], e);
            (n = o.sorted), (i = o.recipientMap);
          } else
            for (var a = new Set(), s = 0, u = t; s < u.length; s++) {
              for (
                var c = bn(u[s], e),
                  l = c.sorted,
                  h = c.recipientMap,
                  f = 0,
                  p = l;
                f < p.length;
                f++
              ) {
                var d = p[f];
                a.has(d.name) || (n.push(d), a.add(d.name));
              }
              var m = function(t) {
                null == i[t] && (i[t] = new Set()),
                  h[t].forEach(function(e) {
                    return i[t].add(e);
                  });
              };
              for (var y in h) m(y);
            }
          return { sorted: n, recipientCounts: vn(i) };
        })(s, e);
        (d = g.sorted), (m = g.recipientCounts), (mn[y] = d), (yn[y] = m);
      }
      (d = mn[y]), (m = {}), o || Object.assign(m, yn[y]);
      for (var v = new dn(e), b = 0; b < d.length; ++b) {
        if (null != i) {
          var _ = Object(r.memory)().numTensors;
          _ > i.maxNumTensors && (i.maxNumTensors = _),
            _ < i.minNumTensors && (i.minNumTensors = _);
        }
        var S = d[b],
          x = S.sourceLayer;
        if (!(x instanceof me)) {
          for (
            var T = [], A = [], k = [], E = !1, N = 0, O = S.inputs;
            N < O.length;
            N++
          ) {
            var C = O[N],
              I = v.getValue(C),
              M = v.getMask(C);
            T.push(I),
              A.push(M),
              null != M && (E = !0),
              o ||
                (m[C.name]--,
                0 !== m[C.name] ||
                  e.hasKey(C) ||
                  -1 !== u.indexOf(C.name) ||
                  I.isDisposed ||
                  !0 === C.sourceLayer.stateful ||
                  k.push(I));
          }
          E && ((n = n || {}).mask = A[0]);
          var P = w(x.apply(T, n)),
            R = null;
          x.supportsMasking && (R = x.computeMask(T, A));
          for (
            var D = wn(S), F = Array.isArray(D) ? D : [D], z = 0;
            z < F.length;
            ++z
          ) {
            v.hasKey(F[z]) || v.add(F[z], P[z], Array.isArray(R) ? R[0] : R);
            var L = u.indexOf(F[z].name);
            -1 !== L && (c[L] = P[z]);
          }
          o || Object(r.dispose)(k);
        }
      }
      return v.disposeMasks(), a ? c : c[0];
    }
    function vn(t) {
      var e = {};
      for (var n in t) e[n] = t[n].size;
      return e;
    }
    function bn(t, e) {
      for (
        var n = new Set(), r = [], i = {}, o = 0, a = e.names();
        o < a.length;
        o++
      ) {
        var s = a[o];
        n.add(s);
      }
      var u = [],
        c = [];
      for (u.push(t); u.length > 0; ) {
        var l = u[u.length - 1];
        if (n.has(l.name)) u.pop();
        else {
          var h = c[c.length - 1] === u.length - 1;
          if (0 === l.inputs.length || h)
            u.pop(), r.push(l), n.add(l.name), h && c.pop();
          else {
            c.push(u.length - 1);
            for (var f = 0, p = l.inputs; f < p.length; f++) {
              var d = p[f];
              null == i[d.name] && (i[d.name] = new Set()),
                i[d.name].add(l.name),
                n.has(d.name) || u.push(d);
            }
          }
        }
      }
      return { sorted: r, recipientMap: i };
    }
    function wn(t) {
      var e;
      if (1 === t.sourceLayer.inboundNodes.length) e = t.sourceLayer.output;
      else {
        for (var n = null, r = 0; r < t.sourceLayer.inboundNodes.length; ++r)
          for (
            var i = 0, o = t.sourceLayer.inboundNodes[r].outputTensors;
            i < o.length;
            i++
          )
            if (o[i].id === t.id) {
              n = r;
              break;
            }
        e = t.sourceLayer.getOutputAt(n);
      }
      return e;
    }
    var _n = (function(t) {
        function e(n) {
          var r = t.call(this, {}) || this;
          if (
            ((r.containerNodes = new Set()), (r.name = n.name), null == r.name)
          ) {
            var i = r.getClassName().toLowerCase();
            r.name = Yt(i);
          }
          if (
            ((r.supportsMasking = !1),
            (r.trainable_ = !0),
            (r.updatable = !0),
            Array.isArray(n.inputs)
              ? (r.inputs = n.inputs.slice())
              : (r.inputs = [n.inputs]),
            Array.isArray(n.outputs)
              ? (r.outputs = n.outputs.slice())
              : (r.outputs = [n.outputs]),
            E(r.inputs).length !== r.inputs.length)
          )
            throw new p(
              "The list of inputs passed to the model is redundant. All inputs should only appear once. Found: " +
                r.inputs.map(function(t) {
                  return t.name;
                })
            );
          E(r.outputs).length !== r.outputs.length &&
            console.warn(
              "The list of outputs passed to the model is redundant. All outputs should only appear once. Found: " +
                r.outputs.map(function(t) {
                  return t.name;
                })
            ),
            (r.inputLayers = []),
            (r.inputLayersNodeIndices = []),
            (r.inputLayersTensorIndices = []),
            (r.outputLayers = []),
            (r.outputLayersNodeIndices = []),
            (r.outputLayersTensorIndices = []),
            (r.layers = []);
          for (var o = 0, a = r.outputs; o < a.length; o++) {
            var s = (I = a[o]).sourceLayer,
              u = I.nodeIndex,
              c = I.tensorIndex;
            r.outputLayers.push(s),
              r.outputLayersNodeIndices.push(u),
              r.outputLayersTensorIndices.push(c);
          }
          for (var l = 0, h = r.inputs; l < h.length; l++)
            (s = (I = h[l]).sourceLayer),
              (u = I.nodeIndex),
              (c = I.tensorIndex),
              g(0 === u, "input layer has >1 nodes"),
              g(0 === c, "input layer has >1 tensors"),
              r.inputLayers.push(s),
              r.inputLayersNodeIndices.push(u),
              r.inputLayersTensorIndices.push(c);
          (r.inputNames = []),
            (r.outputNames = []),
            (r.feedInputShapes = []),
            (r.feedInputNames = []),
            (r.feedOutputNames = []);
          for (var d = 0; d < r.inputLayers.length; d++) {
            if (!((s = r.inputLayers[d]) instanceof me))
              throw new TypeError(
                "Input layers to a LayersModel must be InputLayer objects. Received inputs: " +
                  n.inputs +
                  ". Input " +
                  d +
                  " (0-based) originates from layer type " +
                  s.getClassName() +
                  "."
              );
            r.inputNames.push(s.name),
              r.feedInputShapes.push(s.batchInputShape),
              r.feedInputNames.push(s.name);
          }
          for (var m = 0, y = r.outputLayers; m < y.length; m++)
            (s = y[m]), r.outputNames.push(s.name);
          (r.internalInputShapes = r.inputs.map(function(t) {
            return t.shape;
          })),
            (r.internalOutputShapes = r.outputs.map(function(t) {
              return t.shape;
            }));
          for (
            var v = {},
              b = {},
              w = {},
              _ = {},
              S = {},
              x = [],
              T = function(t, n, i, o, a, s) {
                (null != o && null != a && null != s) ||
                  ((o = t.sourceLayer), (a = t.nodeIndex), (s = t.tensorIndex));
                var u = o.inboundNodes[a];
                if (-1 !== i.indexOf(u))
                  throw new f(
                    "The tensor " +
                      t.name +
                      ' at layer "' +
                      o.name +
                      '" is part of a cycle.'
                  );
                if (-1 === n.indexOf(u)) {
                  r.containerNodes.add(e.nodeKey(o, a)),
                    (o.id in S) || (S[o.id] = Object.keys(S).length),
                    -1 === i.indexOf(u) && i.push(u);
                  for (var c = u.inboundLayers.length, l = 0; l < c; l++) {
                    var h = u.inputTensors[l],
                      p = u.inboundLayers[l],
                      d = u.nodeIndices[l],
                      m = u.tensorIndices[l];
                    T(h, n, i, p, d, m);
                  }
                  for (n.push(u); i.indexOf(u) >= 0; )
                    i.splice(i.indexOf(u), 1);
                  x.push(u);
                }
              },
              A = [],
              N = [],
              O = 0,
              C = r.outputs;
            O < C.length;
            O++
          ) {
            var I = C[O];
            T(I, A, N);
          }
          for (var M = 0, P = x.slice().reverse(); M < P.length; M++) {
            (b[(et = P[M]).id] = et), et.id in v || (v[et.id] = 0);
            var R = v[et.id],
              D = null == w[et.outboundLayer.id] ? 0 : w[et.outboundLayer.id];
            for (
              R = Math.max(R, D),
                w[et.outboundLayer.id] = R,
                _[et.outboundLayer.id] = et.outboundLayer,
                v[et.id] = R,
                d = 0;
              d < et.inboundLayers.length;
              d++
            ) {
              var F = et.inboundLayers[d],
                z = ((u = et.nodeIndices[d]), F.inboundNodes[u]),
                L = null == v[z.id] ? 0 : v[z.id];
              (v[z.id] = Math.max(R + 1, L)), (b[z.id] = z);
            }
          }
          var j = {};
          for (var B in v) (R = v[B]) in j || (j[R] = []), j[R].push(b[B]);
          var q = {};
          for (var U in w) (R = w[U]) in q || (q[R] = []), q[R].push(_[U]);
          var V = Object.keys(q)
            .map(function(t) {
              return parseInt(t, 10);
            })
            .sort(k);
          r.layers = [];
          for (var W = 0, G = V; W < G.length; W++) {
            var H = q[(R = G[W])];
            H.sort(function(t, e) {
              var n = S[t.id],
                r = S[e.id];
              return n < r ? -1 : n > r ? 1 : 0;
            });
            for (var K = 0, Q = H; K < Q.length; K++)
              (s = Q[K]), r.layers.push(s);
          }
          (r.layersByDepth = q),
            (V = Object.keys(j)
              .map(function(t) {
                return parseInt(t, 10);
              })
              .sort(k));
          for (
            var X = r.inputs.slice(), $ = [], Y = 0, J = V;
            Y < J.length;
            Y++
          )
            for (var Z = 0, tt = j[(R = J[Y])]; Z < tt.length; Z++) {
              var et;
              if (null != (s = (et = tt[Z]).outboundLayer)) {
                for (var nt = 0, rt = et.inputTensors; nt < rt.length; nt++)
                  if (((I = rt[nt]), -1 === X.indexOf(I)))
                    throw new f(
                      "Graph disconnected: cannot obtain value for tensor " +
                        I +
                        ' at layer "' +
                        s.name +
                        '". The following previous layers were accessed without issue: ' +
                        $
                    );
                for (var it = 0, ot = et.outputTensors; it < ot.length; it++)
                  (I = ot[it]), X.push(I);
                $.push(s.name);
              }
            }
          r.nodesByDepth = j;
          for (
            var at = r.layers.map(function(t) {
                return t.name;
              }),
              st = function(t) {
                var e = at.filter(function(e) {
                  return e === t;
                }).length;
                if (1 !== e)
                  throw new f(
                    'The name "' +
                      t +
                      '" is used ' +
                      e +
                      " times in the model. All layer names should be unique. Layer names: " +
                      JSON.stringify(at)
                  );
              },
              ut = 0,
              ct = at;
            ut < ct.length;
            ut++
          )
            st(ct[ut]);
          return (
            (r.outboundNodes = []),
            (r.inboundNodes = []),
            new le({
              outboundLayer: r,
              inboundLayers: [],
              nodeIndices: [],
              tensorIndices: [],
              inputTensors: r.inputs,
              outputTensors: r.outputs,
              inputMasks: r.inputs.map(function(t) {
                return null;
              }),
              outputMasks: r.outputs.map(function(t) {
                return null;
              }),
              inputShapes: r.inputs.map(function(t) {
                return t.shape;
              }),
              outputShapes: r.outputs.map(function(t) {
                return t.shape;
              })
            }),
            (r.built = !0),
            (r._refCount = 1),
            r
          );
        }
        return (
          o(e, t),
          (e.prototype.assertNotDisposed = function() {
            if (0 === this._refCount)
              throw new Error(
                "Container '" + this.name + "' is already disposed."
              );
          }),
          (e.prototype.dispose = function() {
            this.assertNotDisposed();
            var t = { refCountAfterDispose: null, numDisposedVariables: 0 };
            if (0 == --this._refCount)
              for (var e = 0, n = this.layers; e < n.length; e++) {
                var r = n[e];
                t.numDisposedVariables += r.dispose().numDisposedVariables;
              }
            return (t.refCountAfterDispose = this._refCount), t;
          }),
          Object.defineProperty(e.prototype, "trainable", {
            get: function() {
              return this.trainable_;
            },
            set: function(t) {
              this.layers.forEach(function(e) {
                e._trainableWeights.forEach(function(e) {
                  return (e.trainable = t);
                });
              }),
                (this.trainable_ = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              if (this._trainableWeights.length > 0)
                throw new p(
                  "Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array."
                );
              if (!this.trainable) return [];
              for (var t = [], e = 0, n = this.layers; e < n.length; e++) {
                var r = n[e];
                t = t.concat(r.trainableWeights);
              }
              return t;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              for (var t = [], e = 0, n = this.layers; e < n.length; e++) {
                var r = n[e];
                t.push.apply(t, r.nonTrainableWeights);
              }
              if (!this.trainable) {
                for (var i = [], o = 0, a = this.layers; o < a.length; o++)
                  (r = a[o]), i.push.apply(i, r.trainableWeights);
                return i.concat(t);
              }
              return t;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "weights", {
            get: function() {
              return this.trainableWeights.concat(this.nonTrainableWeights);
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.loadWeights = function(t, e) {
            void 0 === e && (e = !0);
            for (var n = {}, r = 0, i = 0, o = this.layers; i < o.length; i++)
              for (var a = 0, s = o[i].weights; a < s.length; a++) {
                var u = s[a];
                if (null != n[u.originalName])
                  throw new p("Duplicate weight name: " + u.originalName);
                (n[u.originalName] = u), r++;
              }
            var c = [];
            for (var l in t) {
              if (null != n[l]) c.push([n[l], t[l]]);
              else if (e)
                throw new p(
                  "Provided weight data has no target variable: " + l
                );
              delete n[l];
            }
            if (e) {
              var h = [];
              for (var f in n) h.push(f);
              if (h.length > 0)
                throw new p(
                  h.length + " of " + r + " weights are not set: " + h
                );
            }
            ae(c);
          }),
          (e.prototype.updatedConfig = function() {
            var t = this.getConfig(),
              e = {};
            return (
              (e.className = this.getClassName()),
              (e.config = t),
              (e.kerasVersion = "tfjs-layers 1.2.1"),
              (e.backend = "TensorFlow.js"),
              e
            );
          }),
          (e.prototype.toJSON = function(t, e) {
            void 0 === e && (e = !0);
            var n = (function t(e, n) {
              if (null == e) return null;
              if ("string" == typeof e) return _(e);
              if ("number" == typeof e || "boolean" == typeof e) return e;
              if (e instanceof Array) {
                for (var r = [], i = e.length, o = 0; o < i; ++o) {
                  var a = e[o];
                  fn(n, o, a) ? r.push(a) : r.push(t(a, n));
                }
                return r;
              }
              for (var s = {}, u = 0, c = Object.keys(e); u < c.length; u++) {
                var l = c[u],
                  h = e[l];
                s[_(l)] =
                  ("name" !== l && "className" !== l) || "string" != typeof h
                    ? t(h, l)
                    : h;
              }
              return s;
            })(this.updatedConfig());
            return e ? JSON.stringify(n) : n;
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              t = w(t);
              for (var r = new dn(), i = 0; i < n.inputs.length; ++i)
                r.add(n.inputs[i], t[i]);
              return gn(n.outputs, r, e);
            });
          }),
          (e.prototype.computeMask = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              var r;
              return (
                (t = w(t)),
                (r = null == e ? y(null, t.length) : w(e)),
                n.runInternalGraph(t, r)[1]
              );
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e = Zt(t);
            if (e.length !== this.inputLayers.length)
              throw new p(
                "Invalid inputShape argument " +
                  t +
                  ": model has " +
                  this.inputLayers.length +
                  " tensor inputs."
              );
            for (var n = {}, r = 0; r < e.length; r++) {
              var i = this.inputLayers[r],
                o = e[r];
              n[(E = i.name + "_0_0")] = o;
            }
            var a = Object.keys(this.nodesByDepth)
              .map(function(t) {
                return parseInt(t, 10);
              })
              .sort(k);
            if (a.length > 1)
              for (var s = 0, u = a; s < u.length; s++)
                for (
                  var c = u[s], l = 0, h = this.nodesByDepth[c];
                  l < h.length;
                  l++
                ) {
                  var f = h[l];
                  if (
                    ((i = f.outboundLayer),
                    -1 ===
                      this.inputLayers
                        .map(function(t) {
                          return t.id;
                        })
                        .indexOf(i.id))
                  ) {
                    for (var d = [], m = 0; m < f.inboundLayers.length; m++) {
                      var y = f.inboundLayers[m],
                        v = f.nodeIndices[m],
                        w = f.tensorIndices[m],
                        _ = n[(E = y.name + "_" + v + "_" + w)];
                      d.push(_);
                    }
                    var S = Zt(i.computeOutputShape(b(d))),
                      x = i.inboundNodes.indexOf(f);
                    for (m = 0; m < S.length; m++)
                      n[(E = i.name + "_" + x + "_" + m)] = S[m];
                  }
                }
            var T = [],
              A = [];
            for (r = 0; r < this.outputLayers.length; r++) {
              (i = this.outputLayers[r]),
                (x = this.outputLayersNodeIndices[r]),
                (w = this.outputLayersTensorIndices[r]);
              var E = i.name + "_" + x + "_" + w;
              A.push(E);
            }
            for (r = 0; r < A.length; r++) {
              var N = A[r];
              g(N in n), T.push(n[N]);
            }
            return b(T);
          }),
          (e.prototype.runInternalGraph = function(t, e) {
            null == e && (e = y(null, t.length));
            for (var n = {}, r = 0; r < this.inputs.length; ++r) {
              var i = this.inputs[r],
                o = t[r],
                a = e[r];
              n[i.id] = [o, a];
            }
            for (
              var s = 0,
                u = Object.keys(this.nodesByDepth)
                  .map(function(t) {
                    return parseInt(t, 10);
                  })
                  .sort(k);
              s < u.length;
              s++
            )
              for (
                var c = u[s], l = 0, h = this.nodesByDepth[c];
                l < h.length;
                l++
              ) {
                for (
                  var f = h[l],
                    p = f.outboundLayer,
                    m = f.inputTensors,
                    v = f.outputTensors,
                    b = new Array(),
                    _ = 0,
                    S = m;
                  _ < S.length;
                  _++
                )
                  (i = S[_]).id in n && b.push(n[i.id]);
                if (b.length === m.length) {
                  var x = {},
                    T = void 0,
                    A = void 0,
                    E = void 0,
                    N = void 0;
                  if (
                    (null != f.callArgs && (x = f.callArgs), 1 === b.length)
                  ) {
                    var O = b[0],
                      C = O[0],
                      I = O[1];
                    null == x.mask && (x.mask = I),
                      (E = w(p.call(C, x))),
                      (N = w(p.computeMask(C, I))),
                      (T = [C]),
                      (A = [I]);
                  } else
                    (T = b.map(function(t) {
                      return t[0];
                    })),
                      (A = b.map(function(t) {
                        return t[1];
                      })),
                      null == x.mask && (x.mask = A),
                      (E = w(p.call(T, x))),
                      (N = w(p.computeMask(T, A)));
                  if (p.activityRegularizer)
                    throw new d(
                      "LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet."
                    );
                  for (r = 0; r < v.length; ++r)
                    (i = v[r]), (o = E[r]), (a = N[r]), (n[i.id] = [o, a]);
                }
              }
            for (
              var M = [], P = [], R = [], D = 0, F = this.outputs;
              D < F.length;
              D++
            ) {
              g(
                (i = F[D]).id in n,
                "Could not compute output " + i.name + " : " + i.id
              );
              var z = n[i.id],
                L = z[0];
              (a = z[1]), R.push(L.shape), M.push(L), P.push(a);
            }
            return [M, P, R];
          }),
          (e.prototype.buildNodeConversionMap = function(t) {
            for (var n, r = {}, i = 0, o = this.layers; i < o.length; i++) {
              var a = o[i];
              n = a instanceof e ? 1 : 0;
              for (var s = 0; s < a.inboundNodes.length; s++) {
                var u = e.nodeKey(a, s);
                this.containerNodes.has(u) && ((r[u] = n), (n += 1));
              }
            }
            return r;
          }),
          (e.prototype.getLayer = function(t, e) {
            if (null != e) {
              if (this.layers.length <= e)
                throw new p(
                  "Was asked to retrieve layer at index " +
                    e +
                    ", but model only has " +
                    this.layers.length +
                    " layer(s)."
                );
              return this.layers[e];
            }
            if (null == t)
              throw new p("Provide either a layer name or layer index");
            for (var n = 0, r = this.layers; n < r.length; n++) {
              var i = r[n];
              if (i.name === t) return i;
            }
            throw new p("No such layer: " + t);
          }),
          (e.prototype.calculateLosses = function() {
            var t = this;
            return Object(r.tidy)(function() {
              for (var n = [], r = 0, i = t.layers; r < i.length; r++)
                for (var o = i[r], a = 0; a < o.inboundNodes.length; ++a) {
                  var s = e.nodeKey(o, a);
                  t.containerNodes.has(s) &&
                    n.push.apply(n, o.calculateLosses());
                }
              return n;
            });
          }),
          (e.prototype.getConfig = function() {
            for (
              var t = { name: this.name },
                n = this.buildNodeConversionMap(this.layers),
                r = [],
                i = 0,
                o = this.layers;
              i < o.length;
              i++
            ) {
              for (
                var a = (w = o[i]).getClassName(),
                  s = w.getConfig(),
                  u = [],
                  c = 0;
                c < w.inboundNodes.length;
                c++
              ) {
                var l = w.inboundNodes[c],
                  h = e.nodeKey(w, c),
                  f = {};
                if (this.containerNodes.has(h)) {
                  if (l.callArgs)
                    try {
                      JSON.stringify(l.callArgs), (f = l.callArgs);
                    } catch (t) {
                      console.warn(
                        "Layer " +
                          w.name +
                          " was passed non-serializable keyword arguments: " +
                          l.callArgs +
                          ". They will not be included in the serialized model (and thus will be missing at deserialization time)."
                      ),
                        (f = {});
                    }
                  if (l.inboundLayers.length > 0) {
                    for (var p = [], d = 0; d < l.inboundLayers.length; d++) {
                      var m = l.inboundLayers[d],
                        y = l.nodeIndices[d],
                        g = l.tensorIndices[d];
                      null == (S = n[e.nodeKey(m, y)]) && (S = 0),
                        p.push([m.name, S, g, f]);
                    }
                    u.push(p);
                  }
                }
              }
              var v = {};
              (v.name = w.name),
                (v.className = a),
                (v.config = s),
                (v.inboundNodes = u),
                r.push(v);
            }
            t.layers = r;
            var b = [];
            for (d = 0; d < this.inputLayers.length; d++) {
              var w = this.inputLayers[d];
              (y = this.inputLayersNodeIndices[d]),
                (h = e.nodeKey(w, y)),
                this.containerNodes.has(h) &&
                  ((null !== (S = n[h]) && void 0 !== S) || (S = 0),
                  (g = this.inputLayersTensorIndices[d]),
                  b.push([w.name, S, g]));
            }
            t.inputLayers = b;
            var _ = [];
            for (d = 0; d < this.outputLayers.length; d++) {
              var S;
              if (
                ((w = this.outputLayers[d]),
                (y = this.outputLayersNodeIndices[d]),
                (h = e.nodeKey(w, y)),
                this.containerNodes.has(h))
              )
                (null !== (S = n[h]) && void 0 !== S) || (S = 0),
                  (g = this.outputLayersTensorIndices[d]),
                  _.push([w.name, S, g]);
            }
            return (t.outputLayers = _), t;
          }),
          (e.fromConfig = function(t, e, n, r) {
            void 0 === n && (n = {}), void 0 === r && (r = !1);
            var i = {},
              o = {};
            function a(t, e) {
              t.name in o ? o[t.name].push(e) : (o[t.name] = [e]);
            }
            function s(t, e) {
              for (var n, r = [], o = 0, s = e; o < s.length; o++) {
                var u = s[o],
                  c = u[0],
                  l = u[1],
                  h = u[2];
                if (((n = null == u[3] ? {} : u[3]), !(c in i)))
                  return void a(t, e);
                var f = i[c];
                if (f.inboundNodes.length <= l) return void a(t, e);
                var p = f.inboundNodes[l];
                r.push(p.outputTensors[h]);
              }
              r.length > 0 && t.apply(b(r), n);
            }
            function u(t) {
              var n = t.name,
                o = hn(t, null != e.customObjects ? e.customObjects : {});
              o.setFastWeightInitDuringBuild(r),
                (i[n] = o),
                t.inboundNodes.forEach(function(t) {
                  if (!(t instanceof Array))
                    throw new p(
                      "Corrupted configuration, expected array for nodeData: " +
                        t
                    );
                  a(o, t);
                });
            }
            for (var c = e.name, l = e.layers, h = 0, f = l; h < f.length; h++)
              u((y = f[h]));
            for (; !N(o); )
              for (var d = 0, m = l; d < m.length; d++) {
                var y = m[d];
                if ((P = i[y.name]).name in o) {
                  var v = o[P.name];
                  delete o[P.name];
                  for (var w = 0, _ = v; w < _.length; w++) s(P, _[w]);
                }
              }
            for (
              var S = [], x = [], T = 0, A = e.inputLayers;
              T < A.length;
              T++
            ) {
              var k = (y = A[T])[0],
                E = y[1],
                O = y[2];
              g(k in i);
              var C = (P = i[k]).inboundNodes[E].outputTensors;
              S.push(C[O]);
            }
            for (var I = 0, M = e.outputLayers; I < M.length; I++) {
              var P;
              (k = (y = M[I])[0]),
                (E = y[1]),
                (O = y[2]),
                g(k in i),
                (C = (P = i[k]).inboundNodes[E].outputTensors),
                x.push(C[O]);
            }
            return new t({ inputs: S, outputs: x, name: c });
          }),
          Object.defineProperty(e.prototype, "stateful", {
            get: function() {
              if (this._stateful)
                throw new p(
                  "Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false."
                );
              for (var t = 0, e = this.layers; t < e.length; t++)
                if (e[t].stateful) return !0;
              return !1;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.resetStates = function() {
            var t = this;
            Object(r.tidy)(function() {
              t.layers.forEach(function(t) {
                t.stateful && t.resetStates();
              });
            });
          }),
          e
        );
      })(fe),
      Sn = 32;
    function xn(t, e) {
      var n,
        i,
        o = e;
      (n = o.xs),
        (i = o.ys),
        r.util.assert(null != n && null != i, function() {
          return (
            "A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates " +
            e
          );
        });
      var a = Tn("input", t.inputNames, n),
        s = Tn("output", t.outputNames, i),
        u = a[0].shape[0];
      r.util.assert(a.length === t.inputs.length, function() {
        return (
          "LayersModel has " +
          t.inputs.length +
          " inputs, but the dataset provides " +
          a.length +
          " inputs.  (Expected input keys: " +
          JSON.stringify(t.inputNames) +
          ")"
        );
      }),
        r.util.assert(s.length === t.outputs.length, function() {
          return (
            "LayersModel has " +
            t.outputs.length +
            " outputs, but the dataset provides " +
            s.length +
            " outputs.  (Expected output keys: " +
            JSON.stringify(t.outputNames) +
            ")"
          );
        });
      var c = function(e) {
        r.util.assert(a[e].shape[0] === u, function() {
          return (
            "Batch size mismatch: input " +
            t.inputNames[e] +
            " has " +
            a[e].shape[0] +
            "; expected  " +
            u +
            " based on input " +
            t.inputNames[0] +
            "."
          );
        });
      };
      for (var l in a) c(l);
      var h = function(e) {
        r.util.assert(s[e].shape[0] === u, function() {
          return (
            "Batch size mismatch: output " +
            t.outputNames[e] +
            " has " +
            s[e].shape[0] +
            "; expected  " +
            u +
            " based on input " +
            t.inputNames[0] +
            "."
          );
        });
      };
      for (var f in s) h(f);
      return a.concat(s);
    }
    function Tn(t, e, n) {
      if (n instanceof r.Tensor) return [n];
      if (Array.isArray(n))
        return (
          r.util.assert(n.length === e.length, function() {
            return (
              "Received an array of " +
              n.length +
              " Tensors, but expected " +
              e.length +
              " to match the " +
              t +
              " keys " +
              e +
              "."
            );
          }),
          n
        );
      for (var i = [], o = 0, a = e; o < a.length; o++) {
        var s = a[o];
        if (null == n[s])
          throw new p(
            "The feature data generated by the dataset lacks the required " +
              t +
              " key '" +
              s +
              "'."
          );
        i.push(n[s]);
      }
      return i;
    }
    function An(t, e, n) {
      return u(this, void 0, void 0, function() {
        var i,
          o,
          a,
          s,
          u,
          l,
          h,
          f,
          p,
          m,
          y,
          g,
          v,
          b,
          _,
          S,
          x,
          T,
          A,
          k,
          E,
          N,
          O,
          C,
          I,
          M,
          P;
        return c(this, function(c) {
          switch (c.label) {
            case 0:
              if (
                ((i = null != n.batchesPerEpoch),
                r.util.assert(null != t.optimizer, function() {
                  return "You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).";
                }),
                r.util.assert(null != n, function() {
                  return "For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.";
                }),
                r.util.assert(
                  null != n.epochs &&
                    n.epochs > 0 &&
                    Number.isInteger(n.epochs),
                  function() {
                    return (
                      "For fitDataset(), config.epochs is expected to be a positive integer, but got " +
                      n.epochs
                    );
                  }
                ),
                r.util.assert(
                  !i ||
                    (n.batchesPerEpoch > 0 &&
                      Number.isInteger(n.batchesPerEpoch)),
                  function() {
                    return (
                      "For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got " +
                      n.batchesPerEpoch
                    );
                  }
                ),
                r.util.assert(null == n.validationSplit, function() {
                  return "`validationSplit` is not supported by `fitDataset()`. Use validationData instead.";
                }),
                t.isTraining)
              )
                throw new Error(
                  "Cannot start training because another fit() call is ongoing."
                );
              (t.isTraining = !0), (c.label = 1);
            case 1:
              return (
                c.trys.push([1, , 22, 23]),
                (o = null != n.validationData),
                (a = void 0),
                (s = void 0),
                o &&
                  (kn(n.validationData)
                    ? r.util.assert(
                        null == n.validationBatches ||
                          (n.validationBatches > 0 &&
                            Number.isInteger(n.validationBatches)),
                        function() {
                          return (
                            "For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got " +
                            n.validationBatches
                          );
                        }
                      )
                    : ((u = (function(t) {
                        if (3 === t.length)
                          throw new d(
                            "Validation with sample weights is not implemented yet."
                          );
                        return { xs: t[0], ys: t[1] };
                      })(n.validationData)),
                      (a = u.xs),
                      (s = u.ys))),
                (l = t.makeTrainFunction()),
                (h = t.getDedupedMetricsNames()),
                void 0,
                (f = o
                  ? h.slice().concat(
                      h.map(function(t) {
                        return "val_" + t;
                      })
                    )
                  : h.slice()),
                (p = Ae(n.callbacks, n.yieldEvery)),
                (m = null == n.verbose ? 1 : n.verbose),
                (y = Ee(
                  p,
                  m,
                  n.epochs,
                  null,
                  null,
                  (function(t, e) {
                    var n = null;
                    return (
                      null != e.batchesPerEpoch
                        ? (n = e.batchesPerEpoch)
                        : Number.isFinite(t.size) && (n = t.size),
                      n
                    );
                  })(e, n),
                  null,
                  o,
                  f
                )),
                (g = y.callbackList),
                (v = y.history),
                g.setModel(t),
                (t.history = v),
                [4, g.onTrainBegin()]
              );
            case 2:
              return (
                c.sent(),
                (t.stopTraining_ = !1),
                (b = null == n.initialEpoch ? 0 : n.initialEpoch),
                [4, e.iterator()]
              );
            case 3:
              (_ = c.sent()), (c.label = 4);
            case 4:
              return b < n.epochs
                ? ((S = {}), [4, g.onEpochBegin(b)])
                : [3, 19];
            case 5:
              return c.sent(), (x = 0), (T = 0), i ? [3, 7] : [4, e.iterator()];
            case 6:
              (_ = c.sent()), (c.label = 7);
            case 7:
              return !i || x < n.batchesPerEpoch ? [4, _.next()] : [3, 17];
            case 8:
              return (
                (A = c.sent()),
                i && A.done
                  ? (console.warn(
                      "You provided `batchesPerEpoch` as " +
                        n.batchesPerEpoch +
                        ", but your dataset iterator ran out of data after " +
                        x +
                        " batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, " +
                        n.batchesPerEpoch * n.epochs +
                        " batches). You may need to use the repeat() function when building your dataset."
                    ),
                    [3, 17])
                  : null == A.value
                  ? [3, 11]
                  : ((k = xn(t, A.value)),
                    ((E = {}).batch = T),
                    (E.size = k[0].shape[0]),
                    [4, g.onBatchBegin(T, E)])
              );
            case 9:
              for (
                c.sent(), N = l(k), Object(r.dispose)(k), P = 0;
                P < h.length;
                ++P
              )
                (O = h[P]), (C = N[P]), (E[O] = C), Object(r.keep)(C);
              return [4, g.onBatchEnd(T, E)];
            case 10:
              c.sent(), ve(E), T++, x++, (c.label = 11);
            case 11:
              return (i
              ? x >= n.batchesPerEpoch
              : A.done)
                ? o
                  ? ((I = void 0),
                    kn(n.validationData)
                      ? ((M = w),
                        [
                          4,
                          t.evaluateDataset(n.validationData, {
                            batches: n.validationBatches
                          })
                        ])
                      : [3, 13])
                  : [3, 15]
                : [3, 16];
            case 12:
              return (I = M.apply(void 0, [c.sent()])), [3, 14];
            case 13:
              (I = w(
                t.evaluate(a, s, {
                  batchSize:
                    null == n.validationBatchSize ? Sn : n.validationBatchSize,
                  verbose: 0
                })
              )),
                (c.label = 14);
            case 14:
              for (P = 0; P < t.metricsNames.length; ++P)
                S["val_" + t.metricsNames[P]] = I[P];
              c.label = 15;
            case 15:
              return [3, 17];
            case 16:
              return t.stopTraining_ ? [3, 17] : [3, 7];
            case 17:
              return [4, g.onEpochEnd(b, S)];
            case 18:
              return c.sent(), b++, t.stopTraining_ ? [3, 19] : [3, 4];
            case 19:
              return [4, g.onTrainEnd()];
            case 20:
              return c.sent(), [4, t.history.syncData()];
            case 21:
              return c.sent(), [2, t.history];
            case 22:
              return (t.isTraining = !1), [7];
            case 23:
              return [2];
          }
        });
      });
    }
    function kn(t) {
      return "function" == typeof t.iterator;
    }
    function En(t, e, n) {
      return u(this, void 0, void 0, function() {
        var i, o, a, s, u, l, h, f, p, m;
        return c(this, function(y) {
          switch (y.label) {
            case 0:
              if (
                ((i = null != (n = n || {}).batches),
                (o = t.testFunction),
                (a = []),
                n.verbose > 0)
              )
                throw new d("Verbose mode is not implemented yet.");
              return (
                r.util.assert(
                  !i || (n.batches > 0 && Number.isInteger(n.batches)),
                  function() {
                    return (
                      "Test loop expects `batches` to be a positive integer, but received " +
                      JSON.stringify(n.batches)
                    );
                  }
                ),
                (function(t) {
                  return "function" == typeof t.next;
                })(e)
                  ? ((u = e), [3, 3])
                  : [3, 1]
              );
            case 1:
              return [4, e.iterator()];
            case 2:
              (u = y.sent()), (y.label = 3);
            case 3:
              (s = u),
                (l = 0),
                (h = 0),
                (f = function() {
                  var e;
                  return c(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return [4, s.next()];
                      case 1:
                        return (
                          (e = u.sent()),
                          (a = Object(r.tidy)(function() {
                            if (e.value) {
                              var n = xn(t, e.value),
                                i = Object(r.tidy)(function() {
                                  return o(n);
                                });
                              if ((Object(r.dispose)(n), 0 === h))
                                for (var s = 0; s < i.length; ++s)
                                  a.push(Object(r.scalar)(0));
                              var u = n[0].shape[0],
                                c = function(t) {
                                  var e = i[t],
                                    n = a[t];
                                  (a[t] = Object(r.tidy)(function() {
                                    return Object(
                                      r.add
                                    )(a[t], Object(r.mul)(u, e));
                                  })),
                                    h > 0 && Object(r.dispose)(n);
                                };
                              for (s = 0; s < i.length; ++s) c(s);
                              Object(r.dispose)(i), (l += u), ++h;
                            }
                            return a;
                          })),
                          e.done
                            ? (i &&
                                console.warn(
                                  "Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` batches (in this case, " +
                                    n.batches +
                                    " batches). You may need to use the repeat() function when building your dataset."
                                ),
                              [2, "break"])
                            : [2]
                        );
                    }
                  });
                }),
                (y.label = 4);
            case 4:
              return !i || h < n.batches ? [5, f()] : [3, 6];
            case 5:
              return "break" === y.sent() ? [3, 6] : [3, 4];
            case 6:
              for (p = 0; p < a.length; ++p)
                (m = a[p]),
                  (a[p] = Object(r.div)(a[p], l)),
                  Object(r.dispose)(m);
              return [2, b(a)];
          }
        });
      });
    }
    function Nn(t) {
      r.util.assert(t > 0 && Number.isInteger(t), function() {
        return "batchSize is required to be a positive integer, but got " + t;
      });
    }
    function On(t, e, n) {
      return null == t
        ? [null]
        : Array.isArray(t)
        ? t.map(function(t) {
            return ht(t, e, n - e);
          })
        : ht(t, e, n - e);
    }
    function Cn(t, e) {
      return Object(r.tidy)(function() {
        return null == t
          ? null
          : Array.isArray(t)
          ? t.map(function(t) {
              return Cn(t, e);
            })
          : bt(t, "int32" === e.dtype ? e : e.toInt());
      });
    }
    function In(t, e) {
      for (var n = [], r = 0, i = null; r < t; )
        (i = r + e) >= t && (i = t), n.push([r, i]), (r = i);
      return n;
    }
    function Mn(t, e, n, i, o, a, s, l, h, f, m, y, g, v, b) {
      return u(this, void 0, void 0, function() {
        var u, w, _, S, x, T, A, k;
        return c(this, function(E) {
          switch (E.label) {
            case 0:
              if (
                (null == o && (o = 32),
                null == a && (a = 1),
                null == m && (m = !0),
                null == g && (g = 0),
                (u = !1),
                null != h && null != f && (u = !0),
                null != b && ((u = !0), null == v))
              )
                throw new p(
                  "Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set."
                );
              return (
                null != (w = t.checkNumSamples(n, o, v, "steps_per_epoch")) &&
                  (_ = ut(0, w)),
                null == s && (s = 1),
                (S = Ee(l, s, a, g, w, v, o, u, y)),
                (x = S.callbackList),
                (T = S.history),
                x.setModel(t),
                (t.history = T),
                [4, x.onTrainBegin()]
              );
            case 1:
              E.sent(),
                (t.stopTraining_ = !1),
                (A = function(a) {
                  var s, l, p, y, g;
                  return c(this, function(b) {
                    switch (b.label) {
                      case 0:
                        return [4, x.onEpochBegin(a)];
                      case 1:
                        if ((b.sent(), (s = {}), null == v)) return [3, 2];
                        throw new d(
                          "stepsPerEpoch mode is not implemented yet."
                        );
                      case 2:
                        if ("batch" === m)
                          throw new d("batch shuffling is not implemneted yet");
                        m && r.util.shuffle(_),
                          (l = Object(r.tensor1d)(_)),
                          (p = In(w, o)),
                          (y = function(a) {
                            var d;
                            return c(this, function(c) {
                              switch (c.label) {
                                case 0:
                                  return (d = {}), [4, x.onBatchBegin(a, d)];
                                case 1:
                                  return (
                                    c.sent(),
                                    Object(r.tidy)(function() {
                                      var c = p[a][0],
                                        m = p[a][1],
                                        y = ht(l, c, m - c);
                                      (d.batch = a), (d.size = m - c);
                                      for (
                                        var g = Cn(n, y), v = e(g), b = 0;
                                        b < i.length;
                                        ++b
                                      ) {
                                        var w = i[b],
                                          _ = v[b];
                                        (d[w] = _), Object(r.keep)(_);
                                      }
                                      if (a === p.length - 1 && u) {
                                        var S = t.testLoop(h, f, o);
                                        for (b = 0; b < i.length; ++b)
                                          (w = i[b]),
                                            (_ = S[b]),
                                            Object(r.keep)(_),
                                            (s["val_" + w] = _);
                                      }
                                    }),
                                    [4, x.onBatchEnd(a, d)]
                                  );
                                case 2:
                                  return (
                                    c.sent(),
                                    ve(d),
                                    t.stopTraining_ ? [2, "break"] : [2]
                                  );
                              }
                            });
                          }),
                          (g = 0),
                          (b.label = 3);
                      case 3:
                        return g < p.length ? [5, y(g)] : [3, 6];
                      case 4:
                        if ("break" === b.sent()) return [3, 6];
                        b.label = 5;
                      case 5:
                        return ++g, [3, 3];
                      case 6:
                        l.dispose(), (b.label = 7);
                      case 7:
                        return [4, x.onEpochEnd(a, s)];
                      case 8:
                        return b.sent(), t.stopTraining_ ? [2, "break"] : [2];
                    }
                  });
                }),
                (k = g),
                (E.label = 2);
            case 2:
              return k < a ? [5, A(k)] : [3, 5];
            case 3:
              if ("break" === E.sent()) return [3, 5];
              E.label = 4;
            case 4:
              return ++k, [3, 2];
            case 5:
              return [4, x.onTrainEnd()];
            case 6:
              return E.sent(), [4, t.history.syncData()];
            case 7:
              return E.sent(), [2, t.history];
          }
        });
      });
    }
    function Pn(t, e, n, r) {
      return (
        void 0 === r && (r = {}),
        u(this, void 0, void 0, function() {
          var i, o, a, s, u, l, h, f, m, y, g, v, b, w, _, S, x, T, A;
          return c(this, function(c) {
            switch (c.label) {
              case 0:
                if (t.isTraining)
                  throw new Error(
                    "Cannot start training because another fit() call is ongoing."
                  );
                (t.isTraining = !0), (c.label = 1);
              case 1:
                if (
                  (c.trys.push([1, , 3, 4]),
                  Nn((h = null == r.batchSize ? 32 : r.batchSize)),
                  (f = t.standardizeUserData(e, n, !1, h)),
                  (i = f[0]),
                  (o = f[1]),
                  (m = !1),
                  (y = void 0),
                  null != r.validationData && r.validationData.length > 0)
                ) {
                  if (((m = !0), 2 !== r.validationData.length))
                    throw 3 === r.validationData.length
                      ? new d(
                          "validationData including sample weights is not supported yet."
                        )
                      : new p(
                          "When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; " +
                            r.validationData +
                            " is invalid."
                        );
                  (a = r.validationData[0]),
                    (s = r.validationData[1]),
                    (g = t.standardizeUserData(a, s, !0, h)),
                    (u = g[0]),
                    (l = g[1]),
                    (y = u.concat(l));
                } else null != r.validationSplit && r.validationSplit > 0 && r.validationSplit < 1 ? ((m = !0), (v = Math.floor(i[0].shape[0] * (1 - r.validationSplit))), (b = i[0].shape[0]), (u = On(i, v, b)), (i = On(i, 0, v)), (l = On(o, v, b)), (o = On(o, 0, v)), (y = u.concat(l))) : null != r.validationSteps && (m = !0);
                return (
                  (w = i.concat(o)),
                  t.checkTrainableWeightsConsistency(),
                  (_ = t.makeTrainFunction()),
                  (S = t.getDedupedMetricsNames()),
                  (x = void 0),
                  (T = void 0),
                  m
                    ? (t.makeTestFunction(),
                      (x = t.testFunction),
                      (T = S.slice().concat(
                        S.map(function(t) {
                          return "val_" + t;
                        })
                      )))
                    : ((x = null), (y = []), (T = S.slice())),
                  (A = Ae(r.callbacks, r.yieldEvery)),
                  [
                    4,
                    Mn(
                      t,
                      _,
                      w,
                      S,
                      h,
                      r.epochs,
                      r.verbose,
                      A,
                      x,
                      y,
                      r.shuffle,
                      T,
                      r.initialEpoch,
                      null,
                      null
                    )
                  ]
                );
              case 2:
                return [2, c.sent()];
              case 3:
                return (
                  (t.isTraining = !1),
                  Dn(i, e),
                  Dn(o, n),
                  Dn(u, a),
                  Dn(l, s),
                  [7]
                );
              case 4:
                return [2];
            }
          });
        })
      );
    }
    function Rn(t) {
      var e = [];
      t instanceof r.Tensor && (t = [t]);
      for (var n = 0; n < t.length; ++n) {
        var i = t[n];
        if (1 === i.rank) e.push(lt(i, 1));
        else {
          if (0 === i.rank)
            throw new Error(
              "Expected tensor to be at least 1D, but received a 0D tensor (scalar)."
            );
          e.push(i);
        }
      }
      return e;
    }
    function Dn(t, e) {
      if (null != t) {
        var n = [];
        if (e instanceof r.Tensor) n.push(e.id);
        else if (Array.isArray(e))
          e.forEach(function(t) {
            return n.push(t.id);
          });
        else if (null != e)
          for (var i in e) {
            var o = e[i];
            n.push(o.id);
          }
        var a = [];
        if (t instanceof r.Tensor) -1 === n.indexOf(t.id) && a.push(t);
        else if (Array.isArray(t))
          t.forEach(function(t) {
            -1 === n.indexOf(t.id) && a.push(t);
          });
        else if (null != t)
          for (var s in t) {
            var u = t[s];
            -1 === n.indexOf(u.id) && a.push(u);
          }
        a.forEach(function(t) {
          t.isDisposed || t.dispose();
        });
      }
    }
    function Fn(t) {
      return Array.isArray(t);
    }
    function zn(t) {
      return (
        !(function(t) {
          return t instanceof r.Tensor;
        })(t) && !Fn(t)
      );
    }
    function Ln(t, e, n, r, i) {
      if (
        (void 0 === r && (r = !0),
        void 0 === i && (i = ""),
        null == e || 0 === e.length)
      ) {
        if (null != t) {
          var o = !1;
          if (Fn(t) && t.length > 0) o = !0;
          else if (zn(t)) {
            for (var a in t)
              if (t.hasOwnProperty(a)) {
                o = !0;
                break;
              }
          } else o = !0;
          if (o)
            throw new p(
              "Error when checking model " +
                i +
                " expected no data, but got " +
                t
            );
        }
        return [];
      }
      if (null == t)
        return e.map(function(t) {
          return null;
        });
      var s;
      if (zn(t)) {
        (t = t), (s = []);
        for (var u = 0, c = e; u < c.length; u++) {
          var l = c[u];
          if (null == t[l])
            throw new p(
              'No data provided for "' +
                l +
                '". Need data for each key in: ' +
                e
            );
          s.push(t[l]);
        }
      } else if (Fn(t)) {
        if ((t = t).length !== e.length)
          throw new p(
            "Error when checking model " +
              i +
              ": the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see " +
              e.length +
              " Tensor(s), but instead got the following list of Tensor(s): " +
              t
          );
        s = t;
      } else {
        if (((t = t), e.length > 1))
          throw new p(
            "The model " +
              i +
              " expects " +
              e.length +
              " Tensor(s), but only received one Tensor. Found: Tensor with shape " +
              t.shape
          );
        s = [t];
      }
      if (((s = Rn(s)), null != n))
        for (var h = 0; h < e.length; ++h)
          if (null != n[h]) {
            var f = s[h];
            if (f.shape.length !== n[h].length)
              throw new p(
                "Error when checking " +
                  i +
                  ": expected " +
                  e[h] +
                  " to have " +
                  n[h].length +
                  " dimension(s). but got array with shape " +
                  f.shape
              );
            for (var d = 0; d < n[h].length; ++d)
              if (0 !== d || r) {
                var m = f.shape[d],
                  y = n[h][d];
                if (null != y && y >= 0 && m !== y)
                  throw new p(
                    "Error when checking " +
                      i +
                      ": expected " +
                      e[h] +
                      " to have shape [" +
                      n[h] +
                      "], but got array with shape [" +
                      f.shape +
                      "]."
                  );
              }
          }
      return s;
    }
    function jn(t, e, n, r, i) {
      var o;
      if (
        (void 0 === r && (r = !0), void 0 === i && (i = ""), Array.isArray(t))
      ) {
        if (t.length !== e.length)
          throw new p(
            "Error when checking model " +
              i +
              ": the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see " +
              e.length +
              " Tensor(s), but instead got " +
              t.length +
              " Tensors(s)."
          );
        o = t;
      } else {
        if (e.length > 1)
          throw new p(
            "The model expects " +
              e.length +
              " " +
              i +
              " Tensors, but only received one Tensor. Found: array with shape " +
              JSON.stringify(t.shape) +
              "."
          );
        o = [t];
      }
      if (null != n)
        for (var a = 0; a < e.length; ++a)
          if (null != n[a]) {
            var s = o[a];
            if (s.shape.length !== n[a].length)
              throw new p(
                "Error when checking " +
                  i +
                  ": expected " +
                  e[a] +
                  " to have " +
                  n[a].length +
                  " dimension(s), but got array with shape " +
                  JSON.stringify(s.shape)
              );
            for (var u = 0; u < n[a].length; ++u)
              if (0 !== u || r) {
                var c = s.shape[u],
                  l = n[a][u];
                if (null != l && l !== c)
                  throw new p(
                    "Error when checking " +
                      i +
                      ": expected " +
                      e[a] +
                      " to have shape " +
                      JSON.stringify(n[a]) +
                      " but got array with shape " +
                      JSON.stringify(s.shape) +
                      "."
                  );
              }
          }
    }
    var Bn = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.isTraining = !1), n;
      }
      return (
        o(e, t),
        (e.prototype.summary = function(t, e, n) {
          if ((void 0 === n && (n = console.log), !this.built))
            throw new p(
              "This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data)."
            );
          sn(this, t, e, n);
        }),
        (e.prototype.compile = function(t) {
          var e = this;
          if (
            (null == t.loss && (t.loss = []),
            (this.loss = t.loss),
            "string" == typeof t.optimizer)
          )
            (this.optimizer_ = (function(t) {
              var e = {
                Adagrad: function() {
                  return r.train.adagrad(0.01);
                },
                Adadelta: function() {
                  return r.train.adadelta(1, 0.95, l());
                },
                Adam: function() {
                  return r.train.adam(0.001, 0.9, 0.999, l());
                },
                Adamax: function() {
                  return r.train.adamax(0.002, 0.9, 0.999, l(), 0);
                },
                RMSProp: function() {
                  return r.train.rmsprop(0.001, 0.9, 0, l());
                },
                SGD: function() {
                  return r.train.sgd(0.01);
                }
              };
              if (
                ((e.adagrad = e.Adagrad),
                (e.adadelta = e.Adadelta),
                (e.adam = e.Adam),
                (e.adamax = e.Adamax),
                (e.rmsprop = e.RMSProp),
                (e.sgd = e.SGD),
                t in e)
              )
                return e[t]();
              throw new p("Unknown Optimizer " + t);
            })(t.optimizer)),
              (this.isOptimizerOwned = !0);
          else {
            if (!(t.optimizer instanceof r.Optimizer))
              throw new p(
                "User-defined optimizer must be an instance of tf.Optimizer."
              );
            (this.optimizer_ = t.optimizer), (this.isOptimizerOwned = !1);
          }
          var n = [];
          if (
            Array.isArray(t.loss) ||
            "string" == typeof t.loss ||
            "function" == typeof t.loss
          )
            if (Array.isArray(t.loss)) {
              if (t.loss.length !== this.outputs.length)
                throw new p(
                  "When passing an Array as loss, it should have one entry per model output. The model has " +
                    this.outputs.length +
                    " output(s), but you passed loss=" +
                    t.loss +
                    "."
                );
              var i = t.loss;
              n = i.map(function(t) {
                return Ve(t);
              });
            } else {
              var o = Ve(t.loss);
              this.outputs.forEach(function(t) {
                n.push(o);
              });
            }
          else {
            for (var a in ((t.loss = t.loss), t.loss))
              if (-1 === this.outputNames.indexOf(a))
                throw new p(
                  'Unknown entry in loss dictionary: "' +
                    a +
                    '". Only expected the following keys: ' +
                    this.outputNames
                );
            for (var s = 0, u = this.outputNames; s < u.length; s++) {
              var c = u[s];
              null == t.loss[c] &&
                console.warn(
                  'Output "' +
                    c +
                    '" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ' +
                    c +
                    " during training"
                ),
                n.push(Ve(t.loss[c]));
            }
          }
          (this.lossFunctions = n),
            (this.feedOutputNames = []),
            (this.feedOutputShapes = []),
            (this.feedLossFns = []);
          for (var h = 0; h < this.outputs.length; ++h) {
            var f = this.internalOutputShapes[h],
              d = this.outputNames[h];
            this.feedOutputNames.push(d),
              this.feedOutputShapes.push(f),
              this.feedLossFns.push(this.lossFunctions[h]);
          }
          var m = [];
          (this.metrics = t.metrics),
            (this.metricsNames = ["loss"]),
            (this.metricsTensors = []),
            J("loss", function() {
              for (var t = 0; t < e.outputs.length; ++t)
                if (-1 === m.indexOf(t)) {
                  var n = e.lossFunctions[t];
                  e.outputs.length > 1 &&
                    (e.metricsTensors.push([n, t]),
                    e.metricsNames.push(e.outputNames[t] + "_loss"));
                }
            });
          var y = (function(t, e) {
            if (null == t || (Array.isArray(t) && 0 === t.length))
              return e.map(function(t) {
                return [];
              });
            if (Array.isArray(t))
              return e.map(function(e) {
                return t;
              });
            if (null != t) {
              for (var n = [], r = 0, i = e; r < i.length; r++) {
                var o = i[r],
                  a = t.hasOwnProperty(o) ? t[o] : [];
                Array.isArray(a) || (a = [a]), n.push(a);
              }
              return n;
            }
            throw new TypeError(
              "Type of metrics argument not understood. Expected an Array or Object, found: " +
                t
            );
          })(t.metrics, this.outputNames);
          J("metric", function() {
            for (
              var t = function(t) {
                  if (-1 !== m.indexOf(t)) return "continue";
                  !(function(n) {
                    for (
                      var r,
                        i,
                        o,
                        a = function(n) {
                          if (
                            -1 !==
                            ["accuracy", "acc", "crossentropy", "ce"].indexOf(n)
                          ) {
                            var a = e.internalOutputShapes[t];
                            1 === a[a.length - 1] || e.lossFunctions[t] === je
                              ? -1 !== ["accuracy", "acc"].indexOf(n)
                                ? (i = We)
                                : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                  (i = Xe)
                              : e.lossFunctions[t] === Le
                              ? -1 !== ["accuracy", "acc"].indexOf(n)
                                ? (i = $e)
                                : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                  (i = an)
                              : -1 !== ["accuracy", "acc"].indexOf(n)
                              ? (i = Ge)
                              : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                (i = rn);
                            var s = void 0;
                            -1 !== ["accuracy", "acc"].indexOf(n)
                              ? (s = "acc")
                              : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                (s = "ce"),
                              (o = i),
                              (r = "" + s);
                          } else {
                            var u = (function(t) {
                              var e = {
                                binaryAccuracy: We,
                                categoricalAccuracy: Ge,
                                precision: Ke,
                                categoricalCrossentropy: rn,
                                sparseCategoricalCrossentropy: an,
                                mse: Ye,
                                MSE: Je,
                                mae: Ze,
                                MAE: tn,
                                mape: en,
                                MAPE: nn,
                                cosine: on
                              };
                              if ("string" == typeof t && (t in e)) return e[t];
                              if ("string" != typeof t && null != t) return t;
                              throw new p("Unknown metric " + t);
                            })(n);
                            (o = u), (r = "" + n);
                          }
                          var c;
                          J(r, function() {
                            c = o;
                          }),
                            (function(t, n, r) {
                              e.outputNames.length > 1 &&
                                (n = e.outputNames[t] + "_" + n),
                                e.metricsNames.push(n),
                                e.metricsTensors.push([r, t]);
                            })(t, r, c);
                        },
                        s = 0,
                        u = y[t];
                      s < u.length;
                      s++
                    )
                      a(u[s]);
                  })();
                },
                n = 0;
              n < e.outputs.length;
              ++n
            )
              t(n);
          }),
            (this.collectedTrainableWeights = this.trainableWeights);
        }),
        (e.prototype.checkTrainableWeightsConsistency = function() {
          null != this.collectedTrainableWeights &&
            this.trainableWeights.length !==
              this.collectedTrainableWeights.length &&
            console.warn(
              "Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?"
            );
        }),
        (e.prototype.evaluate = function(t, e, n) {
          void 0 === n && (n = {});
          var r = null == n.batchSize ? 32 : n.batchSize;
          Nn(r);
          var i = this.standardizeUserData(t, e, !0, r);
          try {
            var o = i[0].concat(i[1]);
            this.makeTestFunction();
            var a = this.testFunction;
            return b(this.testLoop(a, o, r, n.verbose, n.steps));
          } finally {
            Dn(i[0], t), Dn(i[1], e);
          }
        }),
        (e.prototype.evaluateDataset = function(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              return this.makeTestFunction(), [2, En(this, t, e)];
            });
          });
        }),
        (e.prototype.checkNumSamples = function(t, e, n, r) {
          var i;
          if ((void 0 === r && (r = "steps"), null != n)) {
            if (((i = null), null != e))
              throw new p(
                "If " +
                  r +
                  " is set, batchSize must be null or undefined.Got batchSize = " +
                  e
              );
          } else {
            if (null == t)
              throw new p(
                "Either the input data should have a defined shape, or " +
                  r +
                  " shoud be specified."
              );
            i = Array.isArray(t) ? t[0].shape[0] : t.shape[0];
          }
          return i;
        }),
        (e.prototype.execute = function(t, e) {
          if (Array.isArray(e) && 0 === e.length)
            throw new p("`outputs` is an empty Array, which is not allowed.");
          var n = Array.isArray(e),
            i = n ? e : [e],
            o = this.retrieveSymbolicTensors(i),
            a = new dn();
          if ((t instanceof r.Tensor && (t = [t]), Array.isArray(t))) {
            if (t.length !== this.inputs.length)
              throw new p(
                "The number of inputs provided (" +
                  t.length +
                  ") does not match the number of inputs of this model (" +
                  this.inputs.length +
                  ")."
              );
            for (var s = 0; s < this.inputs.length; ++s)
              a.add(this.inputs[s], t[s]);
          } else
            for (var u = 0, c = this.inputs; u < c.length; u++) {
              var l = c[u],
                h = t[l.name];
              if (null == h)
                throw new p(
                  "No value is provided for the model's input " + l.name
                );
              a.add(l, h);
            }
          var f = gn(o, a);
          return n ? f : f[0];
        }),
        (e.prototype.retrieveSymbolicTensors = function(t) {
          for (
            var e = y(null, t.length), n = t.length, r = 0, i = this.layers;
            r < i.length;
            r++
          ) {
            for (
              var o = i[r],
                a = Array.isArray(o.output) ? o.output : [o.output],
                s = a.map(function(t) {
                  return t.name;
                }),
                u = 0;
              u < t.length;
              ++u
            ) {
              var c = s.indexOf(t[u]);
              if ((-1 !== c && ((e[u] = a[c]), n--), 0 === n)) break;
            }
            if (0 === n) break;
          }
          if (n > 0) {
            var l = [];
            throw (e.forEach(function(e, n) {
              null == e && l.push(t[n]);
            }),
            new p(
              "Cannot find SymbolicTensors for output name(s): " +
                JSON.stringify(l)
            ));
          }
          return e;
        }),
        (e.prototype.predictLoop = function(t, e, n) {
          var i = this;
          return (
            void 0 === e && (e = 32),
            void 0 === n && (n = !1),
            Object(r.tidy)(function() {
              var o = i.checkNumSamples(t);
              if (n)
                throw new d("Verbose predictLoop() is not implemented yet.");
              for (
                var a = In(o, e),
                  s = i.outputs.map(function(t) {
                    return [];
                  }),
                  u = function(e) {
                    Object(r.tidy)(function() {
                      var n = a[e][0],
                        r = a[e][1],
                        o = On(t, n, r),
                        s = [];
                      if (Array.isArray(o))
                        for (var u = 0; u < o.length; ++u)
                          s.push({ key: i.inputs[u], value: o[u] });
                      else s.push({ key: i.inputs[0], value: o });
                      var c = new dn(s);
                      return gn(i.outputs, c);
                    }).forEach(function(t, e) {
                      return s[e].push(t);
                    });
                  },
                  c = 0;
                c < a.length;
                ++c
              )
                u(c);
              return b(
                s.map(function(t) {
                  return Object(r.concat)(t, 0);
                })
              );
            })
          );
        }),
        (e.prototype.predict = function(t, e) {
          void 0 === e && (e = {});
          var n = Rn(t);
          jn(n, this.inputNames, this.feedInputShapes, !1);
          try {
            var r = null == e.batchSize ? 32 : e.batchSize;
            return Nn(r), this.predictLoop(n, r);
          } finally {
            Dn(n, t);
          }
        }),
        (e.prototype.predictOnBatch = function(t) {
          return (
            jn(t, this.inputNames, this.feedInputShapes, !0),
            this.predictLoop(t, t.shape[0])
          );
        }),
        (e.prototype.standardizeUserData = function(t, e, n, i) {
          if ((void 0 === n && (n = !0), null == this.optimizer_))
            throw new f(
              "You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs)."
            );
          for (var o = [], a = 0; a < this.feedOutputShapes.length; ++a) {
            var s = this.feedOutputShapes[a];
            this.feedLossFns[a] === Le
              ? o.push(s.slice(0, s.length - 1).concat([1]))
              : o.push(s);
          }
          if (
            ((function(t, e, n) {
              var i = E(
                t.map(function(t) {
                  return t.shape[0];
                })
              );
              i.sort();
              var o = E(
                e.map(function(t) {
                  return t.shape[0];
                })
              );
              if ((o.sort(), i.length > 1))
                throw new p(
                  "All input Tensors (x) should have the same number of samples. Got array shapes: " +
                    JSON.stringify(
                      t.map(function(t) {
                        return t.shape;
                      })
                    )
                );
              if (o.length > 1)
                throw new p(
                  "All target Tensors (y) should have the same number of samples. Got array shapes: " +
                    JSON.stringify(
                      e.map(function(t) {
                        return t.shape;
                      })
                    )
                );
              if (i.length > 0 && o.length > 0 && !r.util.arraysEqual(i, o))
                throw new p(
                  "Input Tensors should have the same number of samples as target Tensors. Found " +
                    i[0] +
                    " input sample(s) and " +
                    o[0] +
                    " target sample(s)."
                );
            })(
              (t = Ln(
                t,
                this.feedInputNames,
                this.feedInputShapes,
                !1,
                "input"
              )),
              (e = Ln(e, this.feedOutputNames, o, !1, "target"))
            ),
            (function(t, e, n) {
              for (var r = [Oe, je, ze], i = 0; i < t.length; ++i) {
                var o = t[i],
                  a = e[i],
                  s = n[i];
                if (null != a) {
                  if (a === ze && 1 === o.shape[o.shape.length - 1])
                    throw new p(
                      "You are passing a target array of shape " +
                        o.shape +
                        " while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes]."
                    );
                  if (-1 !== r.indexOf(a))
                    for (
                      var u = o.shape.slice(1), c = s.slice(1), l = 0;
                      l < u.length;
                      ++l
                    ) {
                      var h = u[l],
                        f = c[l];
                      if (null != f && h !== f)
                        throw new p(
                          "A target Tensor with shape " +
                            o.shape +
                            " was passed for an output of shape " +
                            s +
                            ", while using a loss function that expects targets to have the same shape as the output."
                        );
                    }
                }
              }
            })(e, this.feedLossFns, this.feedOutputShapes),
            this.stateful && null != i && i > 0 && t[0].shape[0] % i != 0)
          )
            throw new p(
              "In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size " +
                i +
                ". Found: " +
                t[0].shape[0] +
                " sample(s)."
            );
          return [t, e, null];
        }),
        (e.prototype.testLoop = function(t, e, n, i, o) {
          var a = this;
          return (
            void 0 === i && (i = 0),
            Object(r.tidy)(function() {
              var s = a.checkNumSamples(e, n, o, "steps"),
                u = [];
              if (i > 0) throw new d("Verbose mode is not implemented yet.");
              if (null != o)
                throw new d("steps mode in testLoop() is not implemented yet");
              for (
                var c = In(s, n), l = Object(r.tensor1d)(ut(0, s)), h = 0;
                h < c.length;
                ++h
              ) {
                var f = c[h][0],
                  p = c[h][1],
                  m = ht(l, f, p - f),
                  y = Cn(e, m),
                  g = t(y);
                if (0 === h)
                  for (var v = 0; v < g.length; ++v)
                    u.push(Object(r.scalar)(0));
                for (v = 0; v < g.length; ++v) {
                  var b = g[v];
                  u[v] = Object(r.add)(u[v], Object(r.mul)(p - f, b));
                }
              }
              for (v = 0; v < u.length; ++v) u[v] = Object(r.div)(u[v], s);
              return u;
            })
          );
        }),
        (e.prototype.getDedupedMetricsNames = function() {
          for (var t = this.metricsNames, e = [], n = 0; n < t.length; ++n) {
            var r = t[n],
              i = r;
            v(t, r) > 1 && (i += "_" + v(t.slice(0, n), r)), e.push(i);
          }
          return e;
        }),
        (e.prototype.makeTrainFunction = function() {
          var t = this;
          return function(e) {
            var n = e.slice(0, t.inputs.length),
              i = e.slice(t.inputs.length, t.inputs.length + t.outputs.length),
              o = [],
              a = t.collectedTrainableWeights.map(function(t) {
                return t.read();
              });
            return [
              t.optimizer_.minimize(
                function() {
                  for (var e = [], a = 0; a < t.inputs.length; ++a)
                    e.push({ key: t.inputs[a], value: n[a] });
                  var s,
                    u = new dn(e),
                    c = gn(t.outputs, u, { training: !0 });
                  for (a = 0; a < t.lossFunctions.length; ++a) {
                    var l = (0, t.lossFunctions[a])(i[a], c[a]);
                    Object(r.mean)(l), (s = 0 === a ? l : Object(r.add)(s, l));
                  }
                  for (a = 0; a < t.metricsTensors.length; ++a) {
                    var h = t.metricsTensors[a][0],
                      f = t.metricsTensors[a][1],
                      p = Object(r.mean)(h(i[f], c[f]));
                    Object(r.keep)(p), o.push(p);
                  }
                  return (
                    (s = Object(r.mean)(s)),
                    t.calculateLosses().forEach(function(t) {
                      s = Object(r.add)(s, t);
                    }),
                    s
                  );
                },
                !0,
                a
              )
            ].concat(o);
          };
        }),
        (e.prototype.makeTestFunction = function() {
          var t = this;
          this.testFunction = function(e) {
            return Object(r.tidy)(function() {
              for (
                var n,
                  i = [],
                  o = e.slice(0, t.inputs.length),
                  a = e.slice(
                    t.inputs.length,
                    t.inputs.length + t.outputs.length
                  ),
                  s = [],
                  u = 0;
                u < t.inputs.length;
                ++u
              )
                s.push({ key: t.inputs[u], value: o[u] });
              var c = new dn(s),
                l = gn(t.outputs, c);
              for (u = 0; u < t.lossFunctions.length; ++u) {
                var h = t.lossFunctions[u],
                  f = Object(r.mean)(h(a[u], l[u]));
                (n = 0 === u ? f : Object(r.add)(n, f)), i.push(n);
              }
              for (u = 0; u < t.metricsTensors.length; ++u) {
                var p = t.metricsTensors[u][0],
                  d = t.metricsTensors[u][1],
                  m = Object(r.mean)(p(a[d], l[d]));
                i.push(m);
              }
              return i;
            });
          };
        }),
        (e.prototype.fit = function(t, e, n) {
          return (
            void 0 === n && (n = {}),
            u(this, void 0, void 0, function() {
              return c(this, function(r) {
                return [2, Pn(this, t, e, n)];
              });
            })
          );
        }),
        (e.prototype.fitDataset = function(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              return [2, An(this, t, e)];
            });
          });
        }),
        (e.prototype.trainOnBatch = function(t, e) {
          return u(this, void 0, void 0, function() {
            var n, i, o, a, s, u, l, h, f;
            return c(this, function(c) {
              switch (c.label) {
                case 0:
                  (n = this.standardizeUserData(t, e)),
                    (i = n[0]),
                    (o = n[1]),
                    (a = this.makeTrainFunction()),
                    (s = a(i.concat(o))),
                    (u = []),
                    (l = 0),
                    (h = s),
                    (c.label = 1);
                case 1:
                  return l < h.length ? [4, h[l].data()] : [3, 4];
                case 2:
                  (f = c.sent()), u.push(f[0]), (c.label = 3);
                case 3:
                  return l++, [3, 1];
                case 4:
                  return Object(r.dispose)(s), [2, b(u)];
              }
            });
          });
        }),
        (e.prototype.getNamedWeights = function(t) {
          for (
            var e = {},
              n = null != t && t.trainableOnly,
              r = n ? this.trainableWeights : this.weights,
              i = this.getWeights(n),
              o = 0;
            o < r.length;
            ++o
          )
            (n && !r[o].trainable) || (e[r[o].originalName] = i[o]);
          return e;
        }),
        Object.defineProperty(e.prototype, "stopTraining", {
          get: function() {
            return this.stopTraining_;
          },
          set: function(t) {
            this.stopTraining_ = t;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "optimizer", {
          get: function() {
            return this.optimizer_;
          },
          set: function(t) {
            this.optimizer_ !== t &&
              ((this.optimizer_ = t), (this.isOptimizerOwned = !1));
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.dispose = function() {
          var e = t.prototype.dispose.call(this);
          if (
            0 === e.refCountAfterDispose &&
            null != this.optimizer &&
            this.isOptimizerOwned
          ) {
            var n = Object(r.memory)().numTensors;
            this.optimizer_.dispose(),
              (e.numDisposedVariables += n - Object(r.memory)().numTensors);
          }
          return e;
        }),
        (e.prototype.save = function(t, e) {
          return u(this, void 0, void 0, function() {
            var n, i, o;
            return c(this, function(a) {
              switch (a.label) {
                case 0:
                  if ("string" == typeof t) {
                    if (0 === (n = r.io.getSaveHandlers(t)).length)
                      throw new p(
                        "Cannot find any save handlers for URL '" + t + "'"
                      );
                    if (n.length > 1)
                      throw new p(
                        "Found more than one (" +
                          n.length +
                          ") save handlers for URL '" +
                          t +
                          "'"
                      );
                    t = n[0];
                  }
                  if (null == t.save)
                    throw new p(
                      "LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined."
                    );
                  return [4, r.io.encodeWeights(this.getNamedWeights(e))];
                case 1:
                  return (
                    (i = a.sent()),
                    !1,
                    null,
                    (o = this.toJSON(null, !1)),
                    [
                      2,
                      t.save({
                        modelTopology: o,
                        weightData: i.data,
                        weightSpecs: i.specs,
                        format: "layers-model",
                        generatedBy: "TensorFlow.js tfjs-layers v1.2.1",
                        convertedBy: null
                      })
                    ]
                  );
              }
            });
          });
        }),
        (e.className = "Model"),
        e
      );
    })(_n);
    function qn(t, e, n) {
      return u(this, void 0, void 0, function() {
        var i, o, a, s, u, l;
        return c(this, function(c) {
          switch (c.label) {
            case 0:
              if ((null == n && (n = {}), null == t.load))
                throw new p(
                  "Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented."
                );
              return [4, t.load()];
            case 1:
              if (
                ((i = c.sent()),
                null != (o = i.modelTopology).model_config &&
                  (o = o.model_config),
                (a = null == n.strict || n.strict),
                (s = null != i.weightData && null != i.weightSpecs && a),
                (u = hn(pn(o), e, s)),
                null != i.weightData)
              ) {
                if (null == i.weightSpecs)
                  throw new p(
                    "LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed."
                  );
                (l = r.io.decodeWeights(i.weightData, i.weightSpecs)),
                  u.loadWeights(l, a),
                  Object(r.dispose)(l);
              }
              return [2, u];
          }
        });
      });
    }
    r.serialization.registerClass(Bn);
    var Un = (function(t) {
      function e(e) {
        var n = t.call(this, { inputs: [], outputs: [] }) || this;
        if (
          ((e = e || {}),
          (n.trainable = !0),
          (n._updatable = !0),
          (n.built = !1),
          (n.name = null != e.name ? e.name : Yt("sequential_")),
          null != e.layers)
        )
          for (var r = 0, i = e.layers; r < i.length; r++) {
            var o = i[r];
            n.add(o);
          }
        return n;
      }
      return (
        o(e, t),
        (e.prototype.checkShape = function(t) {
          if (
            t.inboundNodes[0].outputTensors[0].shape.some(function(t) {
              return t < 0;
            })
          )
            throw new p(
              "Negative dimension size caused by adding layer " +
                t.name +
                " with input shape [" +
                t.inboundNodes[0].inputTensors[0].shape +
                "]"
            );
        }),
        (e.prototype.add = function(t) {
          var n,
            r = t instanceof e || t instanceof Bn;
          if (r) {
            if (1 !== (n = t).outputs.length)
              throw new p(
                "All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API."
              );
            if (1 !== n.inputs.length)
              throw new p(
                "All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API."
              );
          }
          if (0 === this.outputs.length) {
            if (0 === t.inboundNodes.length) {
              if (null == t.batchInputShape)
                throw new p(
                  "The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument."
                );
              var i = ye({
                batchShape: t.batchInputShape,
                dtype: t.dtype,
                name: t.name + "_input"
              });
              t.apply(i);
            }
            if (r) (this.outputs = n.outputs), (this.inputs = n.inputs);
            else {
              if (1 !== t.inboundNodes.length)
                throw new p(
                  "A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer " +
                    t.name +
                    " which has " +
                    t.inboundNodes.length +
                    " pre-existing inbound connections."
                );
              if (1 !== t.inboundNodes[0].outputTensors.length)
                throw new p(
                  "All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API."
                );
              this.checkShape(t),
                (this.outputs = [t.inboundNodes[0].outputTensors[0]]),
                (this.inputs = (function t(e, n, r) {
                  if (
                    ((null == n || (null != r && r > 0)) &&
                      ((n = e.sourceLayer), (r = e.nodeIndex)),
                    0 === n.inboundNodes.length)
                  )
                    return [e];
                  var i = n.inboundNodes[r];
                  if (0 === i.inboundLayers.length) return i.inputTensors;
                  for (var o = [], a = 0; a < i.inboundLayers.length; a++)
                    for (
                      var s = 0,
                        u = t(
                          i.inputTensors[a],
                          i.inboundLayers[a],
                          i.nodeIndices[a]
                        );
                      s < u.length;
                      s++
                    ) {
                      var c = u[s];
                      -1 === o.indexOf(c) && o.push(c);
                    }
                  return o;
                })(this.outputs[0]));
            }
            (this.inboundNodes = []),
              new le({
                outboundLayer: this,
                inboundLayers: [],
                nodeIndices: [],
                tensorIndices: [],
                inputTensors: this.inputs,
                outputTensors: this.outputs,
                inputMasks: y(null, this.inputs.length),
                outputMasks: [null],
                inputShapes: this.inputs.map(function(t) {
                  return t.shape;
                }),
                outputShapes: this.outputs[0].shape
              });
          } else {
            var o = t.apply(this.outputs[0]);
            if (Array.isArray(o))
              throw new TypeError(
                "All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API."
              );
            this.checkShape(t),
              (this.outputs = [o]),
              (this.inboundNodes[0].outputTensors = this.outputs),
              (this.inboundNodes[0].outputShapes = [this.outputs[0].shape]);
          }
          this.layers.push(t), (this.built = !1);
        }),
        (e.prototype.pop = function() {
          if (0 === this.layers.length)
            throw new TypeError("There are no layers in the model.");
          if ((this.layers.pop(), 0 === this.layers.length))
            (this.outputs = []),
              (this.inboundNodes = []),
              (this.outboundNodes = []);
          else {
            var t = this.layers.length - 1;
            (this.layers[t].outboundNodes = []),
              (this.outputs = [this.layers[t].output]),
              (this.inboundNodes[0].outputTensors = this.outputs),
              (this.inboundNodes[0].outputShapes = [this.outputs[0].shape]);
          }
        }),
        (e.prototype.call = function(t, e) {
          return null == this.model && this.build(), this.model.call(t, e);
        }),
        (e.prototype.build = function(t) {
          if ((ee(t), 0 === this.inputs.length || 0 === this.outputs.length))
            throw new TypeError(
              "Sequential model cannot be built: model is empty. Add some layers first."
            );
          (this.model = new Bn({
            inputs: this.inputs,
            outputs: this.outputs[0],
            name: this.name + "_model"
          })),
            (this.model.trainable = this.trainable),
            (this.model.updatable = this.updatable),
            (this.supportsMasking = this.model.supportsMasking),
            (this.inputLayers = this.model.inputLayers),
            (this.inputLayersNodeIndices = this.model.inputLayersNodeIndices),
            (this.inputLayersTensorIndices = this.model.inputLayersTensorIndices),
            (this.outputLayers = this.model.outputLayers),
            (this.outputLayersNodeIndices = this.model.outputLayersNodeIndices),
            (this.outputLayersTensorIndices = this.model.outputLayersTensorIndices),
            (this.nodesByDepth = this.model.nodesByDepth),
            (this.containerNodes = this.model.containerNodes),
            (this.outputNames = this.model.outputNames),
            (this.inputNames = this.model.inputNames),
            (this.built = !0);
        }),
        (e.prototype.countParams = function() {
          return this.built || this.build(), t.prototype.countParams.call(this);
        }),
        (e.prototype.summary = function(e, n, r) {
          void 0 === r && (r = console.log),
            this.built || this.build(),
            t.prototype.summary.call(this, e, n, r);
        }),
        (e.prototype.setWeights = function(t) {
          null == this.model && this.build(), this.model.setWeights(t);
        }),
        Object.defineProperty(e.prototype, "updatable", {
          get: function() {
            return this._updatable;
          },
          set: function(t) {
            this.built && (this.model.updatable = t), (this._updatable = t);
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.evaluate = function(t, e, n) {
          if ((void 0 === n && (n = {}), !this.built))
            throw new f("The model needs to be compiled before being used.");
          return this.model.evaluate(t, e, n);
        }),
        (e.prototype.evaluateDataset = function(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              if (!this.built)
                throw new f(
                  "The model needs to be compiled before being used."
                );
              return [2, this.model.evaluateDataset(t, e)];
            });
          });
        }),
        (e.prototype.predict = function(t, e) {
          return (
            void 0 === e && (e = {}),
            null == this.model && this.build(),
            this.model.predict(t, e)
          );
        }),
        (e.prototype.predictOnBatch = function(t) {
          return (
            null == this.model && this.build(), this.model.predictOnBatch(t)
          );
        }),
        (e.prototype.compile = function(t) {
          this.build(),
            this.model.compile(t),
            (this.optimizer_ = this.model.optimizer),
            (this.isOptimizerOwned = this.model.isOptimizerOwned),
            (this.loss = this.model.loss),
            (this.metrics = this.model.metrics),
            (this.metricsTensors = this.model.metricsTensors),
            (this.metricsNames = this.model.metricsNames);
        }),
        Object.defineProperty(e.prototype, "optimizer", {
          get: function() {
            return this.model.optimizer;
          },
          set: function(t) {
            this.model.optimizer = t;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.fit = function(t, e, n) {
          return (
            void 0 === n && (n = {}),
            u(this, void 0, void 0, function() {
              return c(this, function(r) {
                if (!this.built)
                  throw new f(
                    "The model needs to be compiled before being used."
                  );
                return [2, this.model.fit(t, e, n)];
              });
            })
          );
        }),
        (e.prototype.fitDataset = function(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              if (!this.built)
                throw new f(
                  "The model needs to be compiled before being used."
                );
              return [2, this.model.fitDataset(t, e)];
            });
          });
        }),
        (e.prototype.trainOnBatch = function(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              return [2, this.model.trainOnBatch(t, e)];
            });
          });
        }),
        (e.fromConfig = function(t, n, i, o) {
          var a;
          void 0 === i && (i = {}), void 0 === o && (o = !1);
          var s = {};
          if (n instanceof Array) {
            if (null == n[0].className || "Merge" === n[0].className)
              throw new p("Legacy serialization format not supported yet.");
            a = n;
          } else
            r.util.assert(null != n.layers, function() {
              return "When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.";
            }),
              (a = n.layers),
              delete n.layers,
              (s = n);
          var u = new t(s);
          if (!(u instanceof e))
            throw new d(
              "Sequential.fromConfig called on non-Sequential input: " + u
            );
          for (var c = 0, l = a; c < l.length; c++) {
            var h = hn(l[c], void 0, o);
            o && h.setFastWeightInitDuringBuild(!0), u.add(h);
          }
          return u;
        }),
        Object.defineProperty(e.prototype, "stopTraining", {
          get: function() {
            if (null == this.model)
              throw new p(
                "Cannot get the stopTraining property of a sequential model before it is compiled."
              );
            return this.model.stopTraining;
          },
          set: function(t) {
            if (null == this.model)
              throw new p(
                "Cannot set the stopTraining property of a sequential model before it is compiled."
              );
            this.model.stopTraining = t;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.getConfig = function() {
          for (var t = [], e = 0, n = this.layers; e < n.length; e++) {
            var r = n[e],
              i = {};
            (i.className = r.getClassName()),
              (i.config = r.getConfig()),
              t.push(i);
          }
          return t;
        }),
        (e.className = "Sequential"),
        e
      );
    })(Bn);
    function Vn(t) {
      return new Bn(t);
    }
    function Wn(t) {
      return new Un(t);
    }
    function Gn(t, e) {
      return (
        null == e && (e = {}),
        (function(t, e) {
          return u(this, void 0, void 0, function() {
            var n;
            return c(this, function(i) {
              if ((null == e && (e = {}), "string" == typeof t)) {
                if (0 === (n = r.io.getLoadHandlers(t)).length)
                  n.push(r.io.browserHTTPRequest(t, e));
                else if (n.length > 1)
                  throw new p(
                    "Found more than one (" +
                      n.length +
                      ") load handlers for URL '" +
                      t +
                      "'"
                  );
                t = n[0];
              }
              return [2, qn(t, void 0, e)];
            });
          });
        })(t, e)
      );
    }
    function Hn(t) {
      return ye(t);
    }
    function Kn(t, e) {
      ke.registerCallbackConstructor(t, e);
    }
    r.serialization.registerClass(Un);
    var Qn = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.getConfig = function() {
            return {};
          }),
          e
        );
      })(r.serialization.Serializable),
      Xn = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.apply = function(t, e) {
            return (
              void 0 === e && (e = 1),
              (function(t, e) {
                if ((void 0 === e && (e = 1), 1 !== e))
                  throw new d(
                    "Support for alpha values other than 1 (" +
                      e +
                      ") is not implemented yet."
                  );
                return Object(r.elu)(t);
              })(t, e)
            );
          }),
          (e.className = "elu"),
          e
        );
      })(Qn);
    r.serialization.registerClass(Xn);
    var $n = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.selu)(t);
        }),
        (e.className = "selu"),
        e
      );
    })(Qn);
    r.serialization.registerClass($n);
    var Yn = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.relu)(t);
        }),
        (e.className = "relu"),
        e
      );
    })(Qn);
    r.serialization.registerClass(Yn);
    var Jn = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.tidy)(function() {
            return Object(r.minimum)(6, Object(r.relu)(t));
          });
        }),
        (e.className = "relu6"),
        e
      );
    })(Qn);
    r.serialization.registerClass(Jn);
    var Zn = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return t;
        }),
        (e.className = "linear"),
        e
      );
    })(Qn);
    r.serialization.registerClass(Zn);
    var tr = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.sigmoid)(t);
        }),
        (e.className = "sigmoid"),
        e
      );
    })(Qn);
    r.serialization.registerClass(tr);
    var er = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return (function(t) {
            return Object(r.tidy)(function() {
              var e = Object(r.add)(0.5, Object(r.mul)(0.2, t));
              return Object(r.clipByValue)(e, 0, 1);
            });
          })(t);
        }),
        (e.className = "hardSigmoid"),
        e
      );
    })(Qn);
    r.serialization.registerClass(er);
    var nr = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.softplus)(t);
        }),
        (e.className = "softplus"),
        e
      );
    })(Qn);
    r.serialization.registerClass(nr);
    var rr = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return (function(t) {
            return Object(r.tidy)(function() {
              return Object(r.div)(t, Object(r.abs)(t).add(1));
            });
          })(t);
        }),
        (e.className = "softsign"),
        e
      );
    })(Qn);
    r.serialization.registerClass(rr);
    var ir = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t) {
          return Object(r.tanh)(t);
        }),
        (e.className = "tanh"),
        e
      );
    })(Qn);
    r.serialization.registerClass(ir);
    var or = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          return void 0 === e && (e = -1), Object(r.softmax)(t, e);
        }),
        (e.className = "softmax"),
        e
      );
    })(Qn);
    r.serialization.registerClass(or);
    var ar = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.apply = function(t, e) {
          return void 0 === e && (e = -1), Object(r.logSoftmax)(t, e);
        }),
        (e.className = "logSoftmax"),
        e
      );
    })(Qn);
    function sr(t) {
      return t.getClassName();
    }
    function ur(t, e) {
      return (
        void 0 === e && (e = {}),
        A(
          t,
          r.serialization.SerializationMap.getMap().classNameMap,
          e,
          "activation"
        )
      );
    }
    function cr(t) {
      var e;
      return null == t
        ? ur((e = { className: "linear", config: {} }))
        : "string" == typeof t
        ? (((e = {}).className = t), (e.config = {}), ur(e))
        : t instanceof Qn
        ? t
        : ur(t);
    }
    r.serialization.registerClass(ar);
    var lr = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return o(e, t), e;
      })(r.serialization.Serializable),
      hr = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.l1 = null == e || null == e.l1 ? 0.01 : e.l1),
            (n.l2 = null == e || null == e.l2 ? 0.01 : e.l2),
            (n.hasL1 = 0 !== n.l1),
            (n.hasL2 = 0 !== n.l2),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.apply = function(t) {
            var e = this;
            return Object(r.tidy)(function() {
              var n = Object(r.zeros)([1]);
              return (
                e.hasL1 &&
                  (n = Object(r.add)(
                    n,
                    Object(r.sum)(Object(r.mul)(e.l1, Object(r.abs)(t)))
                  )),
                e.hasL2 &&
                  (n = Object(r.add)(
                    n,
                    Object(r.sum)(Object(r.mul)(e.l2, wt(t)))
                  )),
                n.asScalar()
              );
            });
          }),
          (e.prototype.getConfig = function() {
            return { l1: this.l1, l2: this.l2 };
          }),
          (e.fromConfig = function(t, e) {
            return new t({ l1: e.l1, l2: e.l2 });
          }),
          (e.className = "L1L2"),
          e
        );
      })(lr);
    r.serialization.registerClass(hr);
    var fr = { l1l2: "L1L2" };
    function pr(t) {
      return T(t);
    }
    function dr(t, e) {
      return (
        void 0 === e && (e = {}),
        A(
          t,
          r.serialization.SerializationMap.getMap().classNameMap,
          e,
          "regularizer"
        )
      );
    }
    function mr(t) {
      return null == t
        ? null
        : "string" == typeof t
        ? dr({ className: t in fr ? fr[t] : t, config: {} })
        : t instanceof lr
        ? t
        : dr(t);
    }
    var yr = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        return (
          (n.supportsMasking = !0), null != e && (n.maxValue = e.maxValue), n
        );
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          t = te(t);
          var n = Object(r.relu)(t);
          return (
            null != this.maxValue &&
              (n = Object(r.clipByValue)(n, 0, this.maxValue)),
            n
          );
        }),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = { maxValue: this.maxValue },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "ReLU"),
        e
      );
    })(fe);
    r.serialization.registerClass(yr);
    var gr = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        return (
          (n.DEFAULT_ALPHA = 0.3),
          null == e && (e = {}),
          (n.alpha = null == e.alpha ? n.DEFAULT_ALPHA : e.alpha),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          var n = te(t);
          return Object(r.leakyRelu)(n, this.alpha);
        }),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = { alpha: this.alpha },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "LeakyReLU"),
        e
      );
    })(fe);
    r.serialization.registerClass(gr);
    var vr = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        if (
          ((n.DEFAULT_ALPHA_INITIALIZER = "zeros"),
          null == e && (e = {}),
          (n.supportsMasking = !0),
          (n.alphaInitializer = Ht(
            e.alphaInitializer || n.DEFAULT_ALPHA_INITIALIZER
          )),
          (n.alphaRegularizer = mr(e.alphaRegularizer)),
          (n.alphaConstraint = q(e.alphaConstraint)),
          null == e.sharedAxes)
        )
          n.sharedAxes = null;
        else if (Array.isArray(e.sharedAxes)) n.sharedAxes = e.sharedAxes;
        else {
          if ("number" != typeof e.sharedAxes)
            throw new p(
              "Expected sharedAxes to be a number or an array of numbers, but got " +
                e.sharedAxes
            );
          n.sharedAxes = [e.sharedAxes];
        }
        return n;
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          var e = (t = ee(t)).slice(1);
          if (null != this.sharedAxes)
            for (var n = 0, r = this.sharedAxes; n < r.length; n++)
              e[(o = r[n]) - 1] = 1;
          this.alpha = this.addWeight(
            "alpha",
            e,
            "float32",
            this.alphaInitializer,
            this.alphaRegularizer,
            !0,
            this.alphaConstraint
          );
          var i = {};
          if (null != this.sharedAxes)
            for (var o = 1; o < t.length; ++o) i[o] = t[o];
          (this.inputSpec = [new se({ ndim: t.length, axes: i })]),
            (this.built = !0);
        }),
        (e.prototype.call = function(t, e) {
          return (t = te(t)), Object(r.prelu)(t, this.alpha.read());
        }),
        (e.prototype.getConfig = function() {
          var e = {
              alphaInitializer: Gt(this.alphaInitializer),
              alphaRegularizer: pr(this.alphaRegularizer),
              alphaConstraint: j(this.alphaConstraint),
              sharedAxes: this.sharedAxes
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "PReLU"),
        e
      );
    })(fe);
    r.serialization.registerClass(vr);
    var br = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        if (
          ((n.DEFAULT_ALPHA = 1),
          null == e && (e = {}),
          null != e.alpha && e.alpha !== n.DEFAULT_ALPHA)
        )
          throw new d(
            "Non-default alpha value (" +
              e.alpha +
              ") is not supported by the ELU layer yet."
          );
        return (n.alpha = null == e.alpha ? n.DEFAULT_ALPHA : e.alpha), n;
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          var n = te(t);
          return Object(r.elu)(n);
        }),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = { alpha: this.alpha },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "ELU"),
        e
      );
    })(fe);
    r.serialization.registerClass(br);
    var wr = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        return (
          (n.DEFAULT_THETA = 1),
          null == e && (e = {}),
          (n.theta = null == e.theta ? n.DEFAULT_THETA : e.theta),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          var n = te(t);
          return n.mul(ct(n.greater(this.theta), "float32"));
        }),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = { theta: this.theta },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "ThresholdedReLU"),
        e
      );
    })(fe);
    r.serialization.registerClass(wr);
    var _r = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        return (
          (n.DEFAULT_AXIS = 1),
          null == e && (e = {}),
          (n.softmax = new or().apply),
          (n.axis = null == e.axis ? n.DEFAULT_AXIS : e.axis),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          var n = te(t);
          return this.softmax(n, this.axis);
        }),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = { axis: this.axis },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Softmax"),
        e
      );
    })(fe);
    function Sr(t, e, n) {
      if ("number" == typeof t) return y(t, e);
      if (t.length !== e)
        throw new p(
          "The " +
            n +
            " argument must be an integer or tuple of " +
            e +
            " integers. Received: " +
            t.length +
            " elements."
        );
      for (var r = 0; r < e; ++r) {
        var i = t[r];
        if (!rt(i))
          throw new p(
            "The " +
              n +
              " argument must be an integer or tuple of " +
              e +
              " integers. Received: " +
              JSON.stringify(t) +
              " including a non-integer number " +
              i
          );
      }
      return t;
    }
    function xr(t, e, n, r, i) {
      return (
        void 0 === i && (i = 1),
        null == t
          ? t
          : ((o = "same" === n ? t : t - (e + (e - 1) * (i - 1)) + 1),
            Math.floor((o + r - 1) / r))
      );
      var o;
    }
    function Tr(t, e, n, r) {
      if (null == t) return null;
      if ("valid" === r) t = t * e + st([n - e, 0]);
      else {
        if ("same" !== r) throw new p("Unsupport padding mode: " + r + ".");
        t *= e;
      }
      return t;
    }
    function Ar(t, e) {
      return Object(r.tidy)(function() {
        return (
          Q(e), "channelsFirst" === e ? Object(r.transpose)(t, [0, 2, 3, 1]) : t
        );
      });
    }
    function kr(t, e, n, i, o, a, s) {
      return (
        void 0 === i && (i = [1, 1, 1]),
        void 0 === o && (o = "valid"),
        Object(r.tidy)(function() {
          if (
            (null == a && (a = "channelsLast"),
            Q(a),
            4 !== t.rank && 5 !== t.rank)
          )
            throw new p(
              "conv3dWithBias expects input to be of rank 4 or 5, but received " +
                t.rank +
                "."
            );
          if (4 !== e.rank && 5 !== e.rank)
            throw new p(
              "conv3dWithBias expects kernel to be of rank 4 or 5, but received " +
                t.rank +
                "."
            );
          var u = (function(t, e) {
            return Object(r.tidy)(function() {
              return (
                Q(e),
                "channelsFirst" === e
                  ? Object(r.transpose)(t, [0, 2, 3, 4, 1])
                  : t
              );
            });
          })(t, a);
          if ("causal" === o)
            throw new d(
              "The support for CAUSAL padding mode in conv3dWithBias is not implemented yet."
            );
          return (
            (u = Object(r.conv3d)(
              u,
              e,
              i,
              "same" === o ? "same" : "valid",
              "NDHWC",
              s
            )),
            null != n && (u = St(u, n)),
            "channelsFirst" === a &&
              (u = Object(r.transpose)(u, [0, 4, 1, 2, 3])),
            u
          );
        })
      );
    }
    r.serialization.registerClass(_r);
    var Er = (function(t) {
        function e(n, r) {
          var i = t.call(this, r) || this;
          if (
            ((i.bias = null),
            (i.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
            (i.DEFAULT_BIAS_INITIALIZER = "zeros"),
            e.verifyArgs(r),
            (i.rank = n),
            I(i.rank, "rank"),
            1 !== i.rank && 2 !== i.rank && 3 !== i.rank)
          )
            throw new d(
              "Convolution layer for rank other than 1, 2, or 3 (" +
                i.rank +
                ") is not implemented yet."
            );
          if (
            ((i.kernelSize = Sr(r.kernelSize, n, "kernelSize")),
            (i.strides = Sr(null == r.strides ? 1 : r.strides, n, "strides")),
            (i.padding = null == r.padding ? "valid" : r.padding),
            X(i.padding),
            (i.dataFormat =
              null == r.dataFormat ? "channelsLast" : r.dataFormat),
            Q(i.dataFormat),
            (i.activation = cr(r.activation)),
            (i.useBias = null == r.useBias || r.useBias),
            (i.biasInitializer = Ht(
              r.biasInitializer || i.DEFAULT_BIAS_INITIALIZER
            )),
            (i.biasConstraint = q(r.biasConstraint)),
            (i.biasRegularizer = mr(r.biasRegularizer)),
            (i.activityRegularizer = mr(r.activityRegularizer)),
            (i.dilationRate = Sr(
              null == r.dilationRate ? 1 : r.dilationRate,
              n,
              "dilationRate"
            )),
            1 === i.rank &&
              Array.isArray(i.dilationRate) &&
              1 !== i.dilationRate.length)
          )
            throw new p(
              "dilationRate must be a number or an array of a single number for 1D convolution, but received " +
                JSON.stringify(i.dilationRate)
            );
          if (2 === i.rank) {
            if ("number" == typeof i.dilationRate)
              i.dilationRate = [i.dilationRate, i.dilationRate];
            else if (2 !== i.dilationRate.length)
              throw new p(
                "dilationRate must be a number or array of two numbers for 2D convolution, but received " +
                  JSON.stringify(i.dilationRate)
              );
          } else if (3 === i.rank)
            if ("number" == typeof i.dilationRate)
              i.dilationRate = [i.dilationRate, i.dilationRate, i.dilationRate];
            else if (3 !== i.dilationRate.length)
              throw new p(
                "dilationRate must be a number or array of three numbers for 3D convolution, but received " +
                  JSON.stringify(i.dilationRate)
              );
          return i;
        }
        return (
          o(e, t),
          (e.verifyArgs = function(t) {
            if (
              (g("kernelSize" in t, "required key 'kernelSize' not in config"),
              "number" != typeof t.kernelSize &&
                !C(t.kernelSize, "number", 1, 3))
            )
              throw new p(
                "BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received " +
                  JSON.stringify(t.kernelSize) +
                  "."
              );
          }),
          (e.prototype.getConfig = function() {
            var e = {
                kernelSize: this.kernelSize,
                strides: this.strides,
                padding: this.padding,
                dataFormat: this.dataFormat,
                dilationRate: this.dilationRate,
                activation: sr(this.activation),
                useBias: this.useBias,
                biasInitializer: Gt(this.biasInitializer),
                biasRegularizer: pr(this.biasRegularizer),
                activityRegularizer: pr(this.activityRegularizer),
                biasConstraint: j(this.biasConstraint)
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          e
        );
      })(fe),
      Nr = (function(t) {
        function e(n, r) {
          var i = t.call(this, n, r) || this;
          return (
            (i.kernel = null),
            e.verifyArgs(r),
            (i.filters = r.filters),
            I(i.filters, "filters"),
            (i.kernelInitializer = Ht(
              r.kernelInitializer || i.DEFAULT_KERNEL_INITIALIZER
            )),
            (i.kernelConstraint = q(r.kernelConstraint)),
            (i.kernelRegularizer = mr(r.kernelRegularizer)),
            i
          );
        }
        return (
          o(e, t),
          (e.prototype.build = function(t) {
            var e;
            t = ee(t);
            var n = "channelsFirst" === this.dataFormat ? 1 : t.length - 1;
            if (null == t[n])
              throw new p(
                "The channel dimension of the input should be defined. Found " +
                  t[n]
              );
            var r = t[n],
              i = this.kernelSize.concat([r, this.filters]);
            (this.kernel = this.addWeight(
              "kernel",
              i,
              null,
              this.kernelInitializer,
              this.kernelRegularizer,
              !0,
              this.kernelConstraint
            )),
              this.useBias &&
                (this.bias = this.addWeight(
                  "bias",
                  [this.filters],
                  null,
                  this.biasInitializer,
                  this.biasRegularizer,
                  !0,
                  this.biasConstraint
                )),
              (this.inputSpec = [
                { ndim: this.rank + 2, axes: ((e = {}), (e[n] = r), e) }
              ]),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              var e;
              t = te(t);
              var i = null == n.bias ? null : n.bias.read();
              if (1 === n.rank)
                e = (function(t, e, n, i, o, a, s) {
                  return (
                    void 0 === i && (i = 1),
                    void 0 === o && (o = "valid"),
                    void 0 === s && (s = 1),
                    Object(r.tidy)(function() {
                      if (
                        (null == a && (a = "channelsLast"),
                        Q(a),
                        3 !== t.shape.length)
                      )
                        throw new p(
                          "The input of a conv1dWithBias operation should be 3, but is " +
                            t.shape.length +
                            " instead."
                        );
                      if (3 !== e.shape.length)
                        throw new p(
                          "The kernel for a conv1dWithBias operation should be 3, but is " +
                            e.shape.length +
                            " instead"
                        );
                      if (null != n && 1 !== n.shape.length)
                        throw new p(
                          "The bias for a conv1dWithBias operation should be 1, but is " +
                            e.shape.length +
                            " instead"
                        );
                      if (
                        ("channelsFirst" === a &&
                          (t = Object(r.transpose)(t, [0, 2, 1])),
                        "causal" === o)
                      )
                        throw new d(
                          "The support for CAUSAL padding mode in conv1dWithBias is not implemented yet."
                        );
                      var u = Object(r.conv1d)(
                        t,
                        e,
                        i,
                        "same" === o ? "same" : "valid",
                        "NWC",
                        s
                      );
                      return null != n && (u = St(u, n)), u;
                    })
                  );
                })(
                  t,
                  n.kernel.read(),
                  i,
                  n.strides[0],
                  n.padding,
                  n.dataFormat,
                  n.dilationRate[0]
                );
              else if (2 === n.rank)
                e = (function(t, e, n, i, o, a, s) {
                  return (
                    void 0 === i && (i = [1, 1]),
                    void 0 === o && (o = "valid"),
                    Object(r.tidy)(function() {
                      if (
                        (null == a && (a = "channelsLast"),
                        Q(a),
                        3 !== t.rank && 4 !== t.rank)
                      )
                        throw new p(
                          "conv2dWithBias expects input to be of rank 3 or 4, but received " +
                            t.rank +
                            "."
                        );
                      if (3 !== e.rank && 4 !== e.rank)
                        throw new p(
                          "conv2dWithBias expects kernel to be of rank 3 or 4, but received " +
                            t.rank +
                            "."
                        );
                      var u = Ar(t, a);
                      if ("causal" === o)
                        throw new d(
                          "The support for CAUSAL padding mode in conv1dWithBias is not implemented yet."
                        );
                      return (
                        (u = Object(r.conv2d)(
                          u,
                          e,
                          i,
                          "same" === o ? "same" : "valid",
                          "NHWC",
                          s
                        )),
                        null != n && (u = St(u, n)),
                        "channelsFirst" === a &&
                          (u = Object(r.transpose)(u, [0, 3, 1, 2])),
                        u
                      );
                    })
                  );
                })(
                  t,
                  n.kernel.read(),
                  i,
                  n.strides,
                  n.padding,
                  n.dataFormat,
                  n.dilationRate
                );
              else {
                if (3 !== n.rank)
                  throw new d(
                    "convolutions greater than 3D are not implemented yet."
                  );
                e = kr(
                  t,
                  n.kernel.read(),
                  i,
                  n.strides,
                  n.padding,
                  n.dataFormat,
                  n.dilationRate
                );
              }
              return null != n.activation && (e = n.activation.apply(e)), e;
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            t = ee(t);
            for (
              var e = [],
                n =
                  "channelsLast" === this.dataFormat
                    ? t.slice(1, t.length - 1)
                    : t.slice(2),
                r = 0;
              r < n.length;
              ++r
            ) {
              var i = xr(
                n[r],
                this.kernelSize[r],
                this.padding,
                this.strides[r],
                "number" == typeof this.dilationRate
                  ? this.dilationRate
                  : this.dilationRate[r]
              );
              e.push(i);
            }
            var o = [t[0]];
            return (
              "channelsLast" === this.dataFormat
                ? (o = o.concat(e)).push(this.filters)
                : (o.push(this.filters), (o = o.concat(e))),
              o
            );
          }),
          (e.prototype.getConfig = function() {
            var e = {
                filters: this.filters,
                kernelInitializer: Gt(this.kernelInitializer),
                kernelRegularizer: pr(this.kernelRegularizer),
                kernelConstraint: j(this.kernelConstraint)
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.verifyArgs = function(t) {
            if (
              !("filters" in t) ||
              "number" != typeof t.filters ||
              t.filters < 1
            )
              throw new p(
                "Convolution layer expected config.filters to be a 'number' > 0 but got " +
                  JSON.stringify(t.filters)
              );
          }),
          e
        );
      })(Er),
      Or = (function(t) {
        function e(n) {
          var r = t.call(this, 2, n) || this;
          return e.verifyArgs(n), r;
        }
        return (
          o(e, t),
          (e.prototype.getConfig = function() {
            var e = t.prototype.getConfig.call(this);
            return delete e.rank, e;
          }),
          (e.verifyArgs = function(t) {
            if (
              "number" != typeof t.kernelSize &&
              !C(t.kernelSize, "number", 1, 2)
            )
              throw new p(
                "Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received " +
                  JSON.stringify(t.kernelSize) +
                  "."
              );
          }),
          (e.className = "Conv2D"),
          e
        );
      })(Nr);
    r.serialization.registerClass(Or);
    var Cr = (function(t) {
      function e(n) {
        var r = t.call(this, 3, n) || this;
        return e.verifyArgs(n), r;
      }
      return (
        o(e, t),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this);
          return delete e.rank, e;
        }),
        (e.verifyArgs = function(t) {
          if (
            "number" != typeof t.kernelSize &&
            (!Array.isArray(t.kernelSize) ||
              (1 !== t.kernelSize.length && 3 !== t.kernelSize.length))
          )
            throw new p(
              "Conv3D expects config.kernelSize to be number or [number, number, number], but received " +
                JSON.stringify(t.kernelSize) +
                "."
            );
        }),
        (e.className = "Conv3D"),
        e
      );
    })(Nr);
    r.serialization.registerClass(Cr);
    var Ir = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        if (
          ((n.inputSpec = [new se({ ndim: 4 })]),
          "same" !== n.padding && "valid" !== n.padding)
        )
          throw new p(
            "Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode " +
              n.padding
          );
        return n;
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          var e;
          if (4 !== (t = ee(t)).length)
            throw new p(
              "Input should have rank 4; Received input shape: " +
                JSON.stringify(t)
            );
          var n = "channelsFirst" === this.dataFormat ? 1 : t.length - 1;
          if (null == t[n])
            throw new p(
              "The channel dimension of the inputs should be defined. Found `None`."
            );
          var r = t[n],
            i = this.kernelSize.concat([this.filters, r]);
          (this.kernel = this.addWeight(
            "kernel",
            i,
            "float32",
            this.kernelInitializer,
            this.kernelRegularizer,
            !0,
            this.kernelConstraint
          )),
            this.useBias &&
              (this.bias = this.addWeight(
                "bias",
                [this.filters],
                "float32",
                this.biasInitializer,
                this.biasRegularizer,
                !0,
                this.biasConstraint
              )),
            (this.inputSpec = [
              new se({ ndim: 4, axes: ((e = {}), (e[n] = r), e) })
            ]),
            (this.built = !0);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var e = te(t);
            if (4 !== e.shape.length)
              throw new p(
                "Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-" +
                  e.shape.length
              );
            var i,
              o,
              a = e.shape,
              s = a[0];
            "channelsFirst" === n.dataFormat
              ? ((i = 2), (o = 3))
              : ((i = 1), (o = 2));
            var u = a[i],
              c = a[o],
              l = n.kernelSize[0],
              h = n.kernelSize[1],
              f = n.strides[0],
              d = n.strides[1],
              m = [
                s,
                Tr(u, f, l, n.padding),
                Tr(c, d, h, n.padding),
                n.filters
              ];
            "channelsLast" !== n.dataFormat &&
              (e = Object(r.transpose)(e, [0, 2, 3, 1]));
            var y = Object(r.conv2dTranspose)(
              e,
              n.kernel.read(),
              m,
              n.strides,
              n.padding
            );
            return (
              "channelsLast" !== n.dataFormat &&
                (y = Object(r.transpose)(y, [0, 3, 1, 2])),
              null != n.bias && (y = St(y, n.bias.read(), n.dataFormat)),
              null != n.activation && (y = n.activation.apply(y)),
              y
            );
          });
        }),
        (e.prototype.computeOutputShape = function(t) {
          var e,
            n,
            r,
            i = (t = ee(t)).slice();
          "channelsFirst" === this.dataFormat
            ? ((e = 1), (n = 2), (r = 3))
            : ((e = 3), (n = 1), (r = 2));
          var o = this.kernelSize[0],
            a = this.kernelSize[1],
            s = this.strides[0],
            u = this.strides[1];
          return (
            (i[e] = this.filters),
            (i[n] = Tr(i[n], s, o, this.padding)),
            (i[r] = Tr(i[r], u, a, this.padding)),
            i
          );
        }),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this);
          return delete e.dilationRate, e;
        }),
        (e.className = "Conv2DTranspose"),
        e
      );
    })(Or);
    r.serialization.registerClass(Ir);
    var Mr = (function(t) {
      function e(e) {
        return t.call(this, 2, e) || this;
      }
      return o(e, t), (e.className = "SeparableConv2D"), e;
    })(
      (function(t) {
        function e(e, n) {
          var r = t.call(this, e, n) || this;
          if (
            ((r.DEFAULT_DEPTHWISE_INITIALIZER = "glorotUniform"),
            (r.DEFAULT_POINTWISE_INITIALIZER = "glorotUniform"),
            (r.depthwiseKernel = null),
            (r.pointwiseKernel = null),
            null == n.filters)
          )
            throw new p(
              "The `filters` configuration field is required by SeparableConv, but is unspecified."
            );
          if (
            null != n.kernelInitializer ||
            null != n.kernelRegularizer ||
            null != n.kernelConstraint
          )
            throw new p(
              "Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead."
            );
          if (
            null != n.padding &&
            "same" !== n.padding &&
            "valid" !== n.padding
          )
            throw new p(
              "SeparableConv" +
                r.rank +
                "D supports only padding modes: 'same' and 'valid', but received " +
                JSON.stringify(n.padding)
            );
          return (
            (r.depthMultiplier =
              null == n.depthMultiplier ? 1 : n.depthMultiplier),
            (r.depthwiseInitializer = Ht(
              n.depthwiseInitializer || r.DEFAULT_DEPTHWISE_INITIALIZER
            )),
            (r.depthwiseRegularizer = mr(n.depthwiseRegularizer)),
            (r.depthwiseConstraint = q(n.depthwiseConstraint)),
            (r.pointwiseInitializer = Ht(
              n.depthwiseInitializer || r.DEFAULT_POINTWISE_INITIALIZER
            )),
            (r.pointwiseRegularizer = mr(n.pointwiseRegularizer)),
            (r.pointwiseConstraint = q(n.pointwiseConstraint)),
            r
          );
        }
        return (
          o(e, t),
          (e.prototype.build = function(t) {
            var e;
            if ((t = ee(t)).length < this.rank + 2)
              throw new p(
                "Inputs to SeparableConv" +
                  this.rank +
                  "D should have rank " +
                  (this.rank + 2) +
                  ", but received input shape: " +
                  JSON.stringify(t)
              );
            var n = "channelsFirst" === this.dataFormat ? 1 : t.length - 1;
            if (null == t[n] || t[n] < 0)
              throw new p(
                "The channel dimension of the inputs should be defined, but found " +
                  JSON.stringify(t[n])
              );
            for (
              var r = t[n],
                i = this.kernelSize.concat([r, this.depthMultiplier]),
                o = [],
                a = 0;
              a < this.rank;
              ++a
            )
              o.push(1);
            o.push(r * this.depthMultiplier, this.filters),
              (this.depthwiseKernel = this.addWeight(
                "depthwise_kernel",
                i,
                "float32",
                this.depthwiseInitializer,
                this.depthwiseRegularizer,
                !0,
                this.depthwiseConstraint
              )),
              (this.pointwiseKernel = this.addWeight(
                "pointwise_kernel",
                o,
                "float32",
                this.pointwiseInitializer,
                this.pointwiseRegularizer,
                !0,
                this.pointwiseConstraint
              )),
              this.useBias
                ? (this.bias = this.addWeight(
                    "bias",
                    [this.filters],
                    "float32",
                    this.biasInitializer,
                    this.biasRegularizer,
                    !0,
                    this.biasConstraint
                  ))
                : (this.bias = null),
              (this.inputSpec = [
                new se({ ndim: this.rank + 2, axes: ((e = {}), (e[n] = r), e) })
              ]),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              var e;
              if (((t = te(t)), 1 === n.rank))
                throw new d("1D separable convolution is not implemented yet.");
              return (
                2 === n.rank &&
                  ("channelsFirst" === n.dataFormat &&
                    (t = Object(r.transpose)(t, [0, 2, 3, 1])),
                  (e = Object(r.separableConv2d)(
                    t,
                    n.depthwiseKernel.read(),
                    n.pointwiseKernel.read(),
                    n.strides,
                    n.padding,
                    n.dilationRate,
                    "NHWC"
                  ))),
                n.useBias && (e = St(e, n.bias.read(), n.dataFormat)),
                null != n.activation && (e = n.activation.apply(e)),
                "channelsFirst" === n.dataFormat &&
                  (e = Object(r.transpose)(e, [0, 3, 1, 2])),
                e
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = t.prototype.getConfig.call(this);
            return (
              delete e.rank,
              delete e.kernelInitializer,
              delete e.kernelRegularizer,
              delete e.kernelConstraint,
              (e.depthwiseInitializer = Gt(this.depthwiseInitializer)),
              (e.pointwiseInitializer = Gt(this.pointwiseInitializer)),
              (e.depthwiseRegularizer = pr(this.depthwiseRegularizer)),
              (e.pointwiseRegularizer = pr(this.pointwiseRegularizer)),
              (e.depthwiseConstraint = j(this.depthwiseConstraint)),
              (e.pointwiseConstraint = j(this.pointwiseConstraint)),
              e
            );
          }),
          (e.className = "SeparableConv"),
          e
        );
      })(Nr)
    );
    r.serialization.registerClass(Mr);
    var Pr = (function(t) {
      function e(n) {
        var r = t.call(this, 1, n) || this;
        return e.verifyArgs(n), (r.inputSpec = [{ ndim: 3 }]), r;
      }
      return (
        o(e, t),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this);
          return delete e.rank, delete e.dataFormat, e;
        }),
        (e.verifyArgs = function(t) {
          if (
            "number" != typeof t.kernelSize &&
            !C(t.kernelSize, "number", 1, 1)
          )
            throw new p(
              "Conv1D expects config.kernelSize to be number or number[] with length 1, but received " +
                JSON.stringify(t.kernelSize) +
                "."
            );
        }),
        (e.className = "Conv1D"),
        e
      );
    })(Nr);
    r.serialization.registerClass(Pr);
    var Rr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          "number" == typeof e.cropping
            ? (n.cropping = [
                [e.cropping, e.cropping],
                [e.cropping, e.cropping]
              ])
            : "number" == typeof e.cropping[0]
            ? (n.cropping = [
                [e.cropping[0], e.cropping[0]],
                [e.cropping[1], e.cropping[1]]
              ])
            : (n.cropping = e.cropping),
          (n.dataFormat =
            void 0 === e.dataFormat ? "channelsLast" : e.dataFormat),
          (n.inputSpec = [{ ndim: 4 }]),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return "channelsFirst" === this.dataFormat
            ? [
                t[0],
                t[1],
                t[2] - this.cropping[0][0] - this.cropping[0][1],
                t[3] - this.cropping[1][0] - this.cropping[1][1]
              ]
            : [
                t[0],
                t[1] - this.cropping[0][0] - this.cropping[0][1],
                t[2] - this.cropping[1][0] - this.cropping[1][1],
                t[3]
              ];
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            return (
              (t = te(t)),
              "channelsLast" === n.dataFormat
                ? pt(
                    pt(
                      t,
                      n.cropping[0][0],
                      t.shape[1] - n.cropping[0][0] - n.cropping[0][1],
                      2
                    ),
                    n.cropping[1][0],
                    t.shape[2] - n.cropping[1][1] - n.cropping[1][0],
                    3
                  )
                : pt(
                    pt(
                      t,
                      n.cropping[0][0],
                      t.shape[2] - n.cropping[0][0] - n.cropping[0][1],
                      3
                    ),
                    n.cropping[1][0],
                    t.shape[3] - n.cropping[1][1] - n.cropping[1][0],
                    4
                  )
            );
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { cropping: this.cropping, dataFormat: this.dataFormat },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Cropping2D"),
        e
      );
    })(fe);
    r.serialization.registerClass(Rr);
    var Dr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.DEFAULT_SIZE = [2, 2]),
          (n.inputSpec = [{ ndim: 4 }]),
          (n.size = null == e.size ? n.DEFAULT_SIZE : e.size),
          (n.dataFormat = null == e.dataFormat ? "channelsLast" : e.dataFormat),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          if ("channelsFirst" === this.dataFormat) {
            var e = null == t[2] ? null : this.size[0] * t[2],
              n = null == t[3] ? null : this.size[1] * t[3];
            return [t[0], t[1], e, n];
          }
          return (
            (e = null == t[1] ? null : this.size[0] * t[1]),
            (n = null == t[2] ? null : this.size[1] * t[2]),
            [t[0], e, n, t[3]]
          );
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var e = te(t),
              i = e.shape;
            if ("channelsFirst" === n.dataFormat) {
              e = Object(r.transpose)(e, [0, 2, 3, 1]);
              var o = n.size[0] * i[2],
                a = n.size[1] * i[3],
                s = e.resizeNearestNeighbor([o, a]);
              return Object(r.transpose)(s, [0, 3, 1, 2]);
            }
            return (
              (o = n.size[0] * i[1]),
              (a = n.size[1] * i[2]),
              e.resizeNearestNeighbor([o, a])
            );
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { size: this.size, dataFormat: this.dataFormat },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "UpSampling2D"),
        e
      );
    })(fe);
    r.serialization.registerClass(Dr);
    var Fr = (function(t) {
      function e(e) {
        var n = t.call(this, 2, e) || this;
        return (
          (n.depthwiseKernel = null),
          (n.depthMultiplier =
            null == e.depthMultiplier ? 1 : e.depthMultiplier),
          (n.depthwiseInitializer = Ht(
            e.depthwiseInitializer || n.DEFAULT_KERNEL_INITIALIZER
          )),
          (n.depthwiseConstraint = q(e.depthwiseConstraint)),
          (n.depthwiseRegularizer = mr(e.depthwiseRegularizer)),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          if ((t = ee(t)).length < 4)
            throw new p(
              "Inputs to DepthwiseConv2D should have rank 4. Received input shape: " +
                JSON.stringify(t) +
                "."
            );
          var e = "channelsFirst" === this.dataFormat ? 1 : 3;
          if (null == t[e] || t[e] < 0)
            throw new p(
              "The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (" +
                t[e] +
                ")."
            );
          var n = t[e],
            r = [
              this.kernelSize[0],
              this.kernelSize[1],
              n,
              this.depthMultiplier
            ];
          (this.depthwiseKernel = this.addWeight(
            "depthwise_kernel",
            r,
            null,
            this.depthwiseInitializer,
            this.depthwiseRegularizer,
            !0,
            this.depthwiseConstraint
          )),
            this.useBias
              ? (this.bias = this.addWeight(
                  "bias",
                  [n * this.depthMultiplier],
                  null,
                  this.biasInitializer,
                  this.biasRegularizer,
                  !0,
                  this.biasConstraint
                ))
              : (this.bias = null),
            (this.built = !0);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var e = (function(t, e, n, i, o, a) {
              return (
                void 0 === n && (n = [1, 1]),
                void 0 === i && (i = "valid"),
                Object(r.tidy)(function() {
                  null == o && (o = "channelsLast"), Q(o);
                  var s = Ar(t, o);
                  if (4 !== t.rank)
                    throw new p(
                      "Input for depthwiseConv2d is required to be 4-D, but is instead " +
                        t.rank +
                        "-D"
                    );
                  if (4 !== e.rank)
                    throw new p(
                      "depthwiseKernel is required to be 4-D, but is instead " +
                        e.rank +
                        "-D"
                    );
                  return (
                    (s = Object(r.depthwiseConv2d)(
                      s,
                      e,
                      n,
                      "same" === i ? "same" : "valid",
                      "NHWC",
                      a
                    )),
                    "channelsFirst" === o &&
                      (s = Object(r.transpose)(s, [0, 3, 1, 2])),
                    s
                  );
                })
              );
            })(
              (t = te(t)),
              n.depthwiseKernel.read(),
              n.strides,
              n.padding,
              n.dataFormat,
              null
            );
            return (
              n.useBias && (e = St(e, n.bias.read(), n.dataFormat)),
              null != n.activation && (e = n.activation.apply(e)),
              e
            );
          });
        }),
        (e.prototype.computeOutputShape = function(t) {
          t = ee(t);
          var e = "channelsFirst" === this.dataFormat ? t[2] : t[1],
            n = "channelsFirst" === this.dataFormat ? t[3] : t[2],
            r =
              "channelsFirst" === this.dataFormat
                ? t[1] * this.depthMultiplier
                : t[3] * this.depthMultiplier,
            i = xr(e, this.kernelSize[0], this.padding, this.strides[0]),
            o = xr(n, this.kernelSize[1], this.padding, this.strides[1]);
          return "channelsFirst" === this.dataFormat
            ? [t[0], r, i, o]
            : [t[0], i, o, r];
        }),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this);
          return (
            (e.depthMultiplier = this.depthMultiplier),
            (e.depthwiseInitializer = Gt(this.depthwiseInitializer)),
            (e.depthwiseRegularizer = pr(this.depthwiseRegularizer)),
            (e.depthwiseConstraint = j(this.depthwiseRegularizer)),
            e
          );
        }),
        (e.className = "DepthwiseConv2D"),
        e
      );
    })(Er);
    r.serialization.registerClass(Fr);
    var zr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        if (
          ((n.rate = Math.max(Math.min(e.rate, 1), 0)),
          (n.noiseShape = e.noiseShape),
          (n.seed = e.seed),
          null != n.seed)
        )
          throw new d(
            "Non-default seed is not implemented in Dropout layer yet: " +
              n.seed
          );
        return (n.supportsMasking = !0), n;
      }
      return (
        o(e, t),
        (e.prototype.getNoiseShape = function(t) {
          if (null == this.noiseShape) return this.noiseShape;
          for (var e = t.shape, n = [], r = 0; r < this.noiseShape.length; ++r)
            n.push(null == this.noiseShape[r] ? e[r] : this.noiseShape[r]);
          return n;
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var i = te(t);
            if (
              null != n.noiseShape &&
              !r.util.arraysEqual(i.shape, n.noiseShape)
            )
              throw new d(
                "Non-default noise shape is not implemented in Dropout layer yet: " +
                  JSON.stringify(n.noiseShape)
              );
            if (0 < n.rate && n.rate < 1) {
              var o = null != e.training && e.training,
                a = n.getNoiseShape(i);
              return Tt(
                function() {
                  return xt(i, n.rate, a, n.seed);
                },
                function() {
                  return i;
                },
                o
              );
            }
            return t;
          });
        }),
        (e.prototype.getConfig = function() {
          var e = {
              rate: this.rate,
              noiseShape: this.noiseShape,
              seed: this.seed
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.prototype.dispose = function() {
          return t.prototype.dispose.call(this);
        }),
        (e.className = "Dropout"),
        e
      );
    })(fe);
    r.serialization.registerClass(zr);
    var Lr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        if (
          ((n.activation = null),
          (n.useBias = !0),
          (n.kernel = null),
          (n.bias = null),
          (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
          (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
          null == e.batchInputShape &&
            null == e.inputShape &&
            null != e.inputDim)
        ) {
          var r = null;
          null != e.batchSize && (r = e.batchSize),
            (n.batchInputShape = [r, e.inputDim]);
        }
        return (
          (n.units = e.units),
          I(n.units, "units"),
          (n.activation = cr(e.activation)),
          null != e.useBias && (n.useBias = e.useBias),
          (n.kernelInitializer = Ht(
            e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
          )),
          (n.biasInitializer = Ht(
            e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
          )),
          (n.kernelConstraint = q(e.kernelConstraint)),
          (n.biasConstraint = q(e.biasConstraint)),
          (n.kernelRegularizer = mr(e.kernelRegularizer)),
          (n.biasRegularizer = mr(e.biasRegularizer)),
          (n.activityRegularizer = mr(e.activityRegularizer)),
          (n.supportsMasking = !0),
          (n.inputSpec = [{ minNDim: 2 }]),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          var e,
            n = (t = ee(t))[t.length - 1];
          null == this.kernel &&
            ((this.kernel = this.addWeight(
              "kernel",
              [n, this.units],
              null,
              this.kernelInitializer,
              this.kernelRegularizer,
              !0,
              this.kernelConstraint
            )),
            this.useBias &&
              (this.bias = this.addWeight(
                "bias",
                [this.units],
                null,
                this.biasInitializer,
                this.biasRegularizer,
                !0,
                this.biasConstraint
              ))),
            (this.inputSpec = [
              { minNDim: 2, axes: ((e = {}), (e[-1] = n), e) }
            ]),
            (this.built = !0);
        }),
        (e.prototype.computeOutputShape = function(t) {
          var e = (t = ee(t)).slice();
          return (e[e.length - 1] = this.units), e;
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var r,
              i = te(t),
              o = (function(t) {
                return "relu" === t ? "relu" : "linear" === t ? "linear" : null;
              })(n.activation.getClassName());
            return (
              null != o
                ? (r = vt(i, n.kernel.read(), o, n.bias ? n.bias.read() : null))
                : ((r = vt(i, n.kernel.read())),
                  null != n.bias && (r = St(r, n.bias.read())),
                  null != n.activation && (r = n.activation.apply(r))),
              r
            );
          });
        }),
        (e.prototype.getConfig = function() {
          var e = {
              units: this.units,
              activation: sr(this.activation),
              useBias: this.useBias,
              kernelInitializer: Gt(this.kernelInitializer),
              biasInitializer: Gt(this.biasInitializer),
              kernelRegularizer: pr(this.kernelRegularizer),
              biasRegularizer: pr(this.biasRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              kernelConstraint: j(this.kernelConstraint),
              biasConstraint: j(this.biasConstraint)
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Dense"),
        e
      );
    })(fe);
    r.serialization.registerClass(Lr);
    var jr = (function(t) {
      function e(e) {
        var n = t.call(this, e || {}) || this;
        return (n.inputSpec = [{ minNDim: 3 }]), n;
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          for (var e = 0, n = (t = ee(t)).slice(1); e < n.length; e++)
            if (null == n[e])
              throw new p(
                'The shape of the input to "Flatten" is not fully defined (got ' +
                  t.slice(1) +
                  '). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.'
              );
          return [t[0], it(t, 1)];
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            return (
              n.invokeCallHook(t, e),
              (function(t) {
                if (t.rank <= 1)
                  throw new p(
                    "batchFlatten requires a minimum rank of 2. Got rank: " +
                      t.rank +
                      "."
                  );
                var e = [t.shape[0], it(t.shape, 1)];
                return t.reshape(e);
              })(te(t))
            );
          });
        }),
        (e.className = "Flatten"),
        e
      );
    })(fe);
    r.serialization.registerClass(jr);
    var Br = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.supportsMasking = !0), (n.activation = cr(e.activation)), n;
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var r = te(t);
            return n.activation.apply(r);
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { activation: sr(this.activation) },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Activation"),
        e
      );
    })(fe);
    r.serialization.registerClass(Br);
    var qr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.n = e.n), (n.inputSpec = [{ ndim: 2 }]), n;
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return [t[0], this.n, t[1]];
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            return (function(t, e) {
              return Object(r.tidy)(function() {
                if (2 !== t.shape.length)
                  throw new p(
                    "repeat() expects a rank-2 tensor, but received a rank-" +
                      t.shape.length +
                      " tensor."
                  );
                return yt(lt(t, 1), [1, e, 1]);
              });
            })((t = te(t)), n.n);
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { n: this.n },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "RepeatVector"),
        e
      );
    })(fe);
    r.serialization.registerClass(qr);
    var Ur = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        n.targetShape = e.targetShape;
        for (var r = 0; r < n.targetShape.length; ++r)
          n.isUnknown(n.targetShape[r]) && (n.targetShape[r] = null);
        return n;
      }
      return (
        o(e, t),
        (e.prototype.isUnknown = function(t) {
          return t < 0 || null == t;
        }),
        (e.prototype.fixUnknownDimension = function(t, e) {
          for (
            var n = "Total size of new array must be unchanged.",
              r = e.slice(),
              i = 1,
              o = null,
              a = 0;
            a < r.length;
            ++a
          ) {
            var s = r[a];
            if (this.isUnknown(s)) {
              if (null !== o)
                throw new p("Can only specifiy one unknown dimension.");
              o = a;
            } else i *= s;
          }
          var u = it(t);
          if (null !== o) {
            if (0 === i || u % i != 0) throw new p(n);
            r[o] = u / i;
          } else if (u !== i) throw new p(n);
          return r;
        }),
        (e.prototype.computeOutputShape = function(t) {
          for (var e = !1, n = 0; n < t.length; ++n)
            if (this.isUnknown(t[n])) {
              e = !0;
              break;
            }
          return e
            ? t.slice(0, 1).concat(this.targetShape)
            : t
                .slice(0, 1)
                .concat(this.fixUnknownDimension(t.slice(1), this.targetShape));
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var r = te(t),
              i = r.shape,
              o = i
                .slice(0, 1)
                .concat(n.fixUnknownDimension(i.slice(1), n.targetShape));
            return r.reshape(o);
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { targetShape: this.targetShape },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Reshape"),
        e
      );
    })(fe);
    r.serialization.registerClass(Ur);
    var Vr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        if (null == e.dims)
          throw new Error(
            "Required configuration field `dims` is missing during Permute constructor call."
          );
        if (!Array.isArray(e.dims))
          throw new Error(
            "Permute constructor requires `dims` to be an Array, but received " +
              e.dims +
              " instead."
          );
        var i = ut(1, e.dims.length + 1);
        if (!r.util.arraysEqual(e.dims.slice().sort(), i))
          throw new Error(
            "Invalid permutation `dims`: " +
              JSON.stringify(e.dims) +
              " `dims` must contain consecutive integers starting from 1."
          );
        return (
          (n.dims = e.dims),
          (n.dimsIncludingBatch = [0].concat(n.dims)),
          (n.inputSpec = [new se({ ndim: n.dims.length + 1 })]),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          var e = (t = ee(t)).slice();
          return (
            this.dims.forEach(function(n, r) {
              e[r + 1] = t[n];
            }),
            e
          );
        }),
        (e.prototype.call = function(t, e) {
          return Object(r.transpose)(te(t), this.dimsIncludingBatch);
        }),
        (e.prototype.getConfig = function() {
          var e = { dims: this.dims },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Permute"),
        e
      );
    })(fe);
    r.serialization.registerClass(Vr);
    var Wr = (function(t) {
      function e(e) {
        var n = t.call(this, null == e ? {} : e) || this;
        return (
          (n.supportsMasking = !0),
          (n.maskValue =
            null != e ? (null == e.maskValue ? 0 : e.maskValue) : 0),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this),
            n = { maskValue: this.maskValue };
          return Object.assign(n, e), n;
        }),
        (e.prototype.computeMask = function(t, e) {
          var n = te(t);
          return Object(r.any)(Object(r.notEqual)(n, this.maskValue), -1);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var i = te(t),
              o = Object(r.any)(Object(r.notEqual)(i, n.maskValue), -1, !0);
            return i.mul(o.asType(i.dtype));
          });
        }),
        (e.className = "Masking"),
        e
      );
    })(fe);
    r.serialization.registerClass(Wr);
    var Gr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        if (
          ((n.embeddings = null),
          (n.DEFAULT_EMBEDDINGS_INITIALIZER = "randomUniform"),
          null == e.batchInputShape && null == e.inputShape)
        ) {
          var r = null;
          null != e.batchSize && (r = e.batchSize),
            null == e.inputLength
              ? (n.batchInputShape = [r, null])
              : (n.batchInputShape = [r].concat(w(e.inputLength)));
        }
        return (
          (n.inputDim = e.inputDim),
          I(n.inputDim, "inputDim"),
          (n.outputDim = e.outputDim),
          I(n.outputDim, "outputDim"),
          (n.embeddingsInitializer = Ht(
            e.embeddingsInitializer || n.DEFAULT_EMBEDDINGS_INITIALIZER
          )),
          (n.embeddingsRegularizer = mr(e.embeddingsRegularizer)),
          (n.activityRegularizer = mr(e.activityRegularizer)),
          (n.embeddingsConstraint = q(e.embeddingsConstraint)),
          (n.maskZero = e.maskZero),
          (n.supportsMasking = e.maskZero),
          (n.inputLength = e.inputLength),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          (this.embeddings = this.addWeight(
            "embeddings",
            [this.inputDim, this.outputDim],
            this.dtype,
            this.embeddingsInitializer,
            this.embeddingsRegularizer,
            !0,
            this.embeddingsConstraint
          )),
            (this.built = !0);
        }),
        (e.prototype.warnOnIncompatibleInputShape = function(t) {}),
        (e.prototype.computeMask = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            return n.maskZero
              ? ((t = te(t)), Object(r.notEqual)(t, Object(r.zerosLike)(t)))
              : null;
          });
        }),
        (e.prototype.computeOutputShape = function(t) {
          if (((t = ee(t)), null == this.inputLength))
            return t.concat([this.outputDim]);
          var e = w(this.inputLength);
          if (e.length !== t.length - 1)
            throw new p(
              '"inputLength" is ' +
                this.inputLength +
                ", but received input shape has shape " +
                t
            );
          for (var n = 0, r = 0; r < e.length; ++r) {
            var i = e[r],
              o = t[r + 1];
            if (null != i && null != o && i !== o)
              throw new p(
                '"inputLength" is ' +
                  this.inputLength +
                  ", but received input shape has shape " +
                  t
              );
            null == i && (e[n] = o), n++;
          }
          return [t[0]].concat(e, [this.outputDim]);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var r = te(t);
            return (
              "int32" !== r.dtype && (r = ct(r, "int32")),
              bt(n.embeddings.read(), r.as1D()).reshape(
                ee(n.computeOutputShape(r.shape))
              )
            );
          });
        }),
        (e.prototype.getConfig = function() {
          var e = {
              inputDim: this.inputDim,
              outputDim: this.outputDim,
              embeddingsInitializer: Gt(this.embeddingsInitializer),
              embeddingsRegularizer: pr(this.embeddingsRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              embeddingsConstraint: j(this.embeddingsConstraint),
              maskZero: this.maskZero,
              inputLength: this.inputLength
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Embedding"),
        e
      );
    })(fe);
    r.serialization.registerClass(Gr);
    var Hr = (function(t) {
        function e(e) {
          var n = t.call(this, e || {}) || this;
          return (n.supportsMasking = !0), n;
        }
        return (
          o(e, t),
          (e.prototype.mergeFunction = function(t) {
            throw new d();
          }),
          (e.prototype.computeElementwiseOpOutputShape = function(t, e) {
            if (null == t || null == e) return null;
            if (t.length < e.length)
              return this.computeElementwiseOpOutputShape(e, t);
            if (0 === e.length) return t;
            for (
              var n = t.slice(0, t.length - e.length), r = 0;
              r < e.length;
              ++r
            ) {
              var i = t[t.length - e.length + r],
                o = e[r];
              if (null == i || null == o || i < 0 || o < 0) n.push(null);
              else if (1 === i) n.push(o);
              else if (1 === o) n.push(i);
              else {
                if (i !== o)
                  throw new p(
                    "Operands could not be broadcast together with shapes " +
                      JSON.stringify(t) +
                      " " +
                      JSON.stringify(e)
                  );
                n.push(i);
              }
            }
            return n;
          }),
          (e.prototype.build = function(t) {
            if (
              (Array.isArray(t) && !Array.isArray(t[0]) && (t = [ee(t)]),
              (t = t).length < 2)
            )
              throw new p(
                "A merge layer should be called on an Array of at least 2 inputs. Got " +
                  t.length +
                  " input(s)."
              );
            for (var e = [], n = 0, r = t; n < r.length; n++)
              null != (a = r[n]) && null !== a[0] && e.push(a[0]);
            if ((e = E(e)).length > 1)
              throw new p(
                "Can not merge tensors with different batch sizes. Got tensors with shapes: " +
                  JSON.stringify(t) +
                  "."
              );
            for (
              var i = null == t[0] ? null : t[0].slice(1), o = 1;
              o < t.length;
              ++o
            ) {
              var a = null == t[o] ? null : t[o].slice(1);
              i = this.computeElementwiseOpOutputShape(i, a);
            }
            var s = t.map(function(t) {
              return t.length;
            });
            -1 === t.indexOf(null) && 1 === E(s).length
              ? (this.reshapeRequired = !1)
              : (this.reshapeRequired = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              if (((t = t), n.reshapeRequired)) {
                var e = [],
                  i = t.map(function(t) {
                    return t.rank;
                  });
                if (-1 === i.indexOf(null)) {
                  for (var o = st(i), a = 0, s = t; a < s.length; a++) {
                    for (var u = (p = s[a]).rank, c = 0; c < o - u; ++c)
                      p = lt(p, 1);
                    e.push(p);
                  }
                  return n.mergeFunction(e);
                }
                for (var l = !1, h = 0, f = t; h < f.length; h++) {
                  var p;
                  if (null == (u = (p = f[h]).rank)) {
                    var d = p.shape,
                      m = d[0],
                      y = d.slice(1).concat([m]),
                      g = p.reshape([m].concat(it(d.slice(1))));
                    (g = (g = Object(r.transpose)(g, [1, 0])).reshape(y)),
                      e.push(g),
                      (l = !0);
                  } else if (u > 1) {
                    var v = ut(1, u).concat([0]);
                    e.push(Object(r.transpose)(p, v)), (l = !0);
                  } else e.push(p);
                }
                var b = n.mergeFunction(e),
                  w = b.rank;
                if (l)
                  if (null == w) {
                    var _ = b.shape;
                    (y = [(m = _[_.length - 1])].concat(
                      _.slice(0, _.length - 1)
                    )),
                      (b = Object(r.transpose)(b.reshape([-1, m]), [
                        1,
                        0
                      ]).reshape(y));
                  } else
                    w > 1 &&
                      ((v = [w - 1].concat(ut(0, w - 1))),
                      (b = Object(r.transpose)(b, v)));
                return b;
              }
              return n.mergeFunction(t);
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e;
            e = null == (t = t)[0] ? null : t[0].slice(1);
            for (var n = 1; n < t.length; ++n) {
              var r = null == t[n] ? null : t[n].slice(1);
              e = this.computeElementwiseOpOutputShape(e, r);
            }
            for (var i = [], o = 0, a = t; o < a.length; o++)
              null != (r = a[o]) && null !== r[0] && i.push(r[0]);
            return 1 === (i = E(i)).length ? i.concat(e) : [null].concat(e);
          }),
          (e.prototype.computeMask = function(t, e) {
            return Object(r.tidy)(function() {
              if (null == e) return null;
              if (!Array.isArray(e)) throw new p("`mask` should be an Array");
              if (!Array.isArray(t)) throw new p("`inputs` should be an Array");
              if (e.length !== t.length)
                throw new p(
                  "The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (" +
                    t.length +
                    " vs " +
                    e.length +
                    ")"
                );
              if (
                e.every(function(t) {
                  return null == t;
                })
              )
                return null;
              for (
                var n = (e = e.map(function(t) {
                    return null == t ? t : Object(r.expandDims)(t, 0);
                  }))[0],
                  i = 1;
                i < e.length - 1;
                ++i
              )
                n = Object(r.logicalAnd)(n, e[i]);
              return n;
            });
          }),
          e
        );
      })(fe),
      Kr = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          o(e, t),
          (e.prototype.mergeFunction = function(t) {
            return Object(r.tidy)(function() {
              for (var e = t[0].clone(), n = 1; n < t.length; ++n)
                e = Object(r.add)(e, t[n]);
              return e;
            });
          }),
          (e.className = "Add"),
          e
        );
      })(Hr);
    r.serialization.registerClass(Kr);
    var Qr = (function(t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.mergeFunction = function(t) {
          return Object(r.tidy)(function() {
            for (var e = t[0].clone(), n = 1; n < t.length; ++n)
              e = Object(r.mul)(e, t[n]);
            return e;
          });
        }),
        (e.className = "Multiply"),
        e
      );
    })(Hr);
    r.serialization.registerClass(Qr);
    var Xr = (function(t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.mergeFunction = function(t) {
          return Object(r.tidy)(function() {
            for (var e = t[0].clone(), n = 1; n < t.length; ++n)
              e = Object(r.add)(e, t[n]);
            return Object(r.mul)(1 / t.length, e);
          });
        }),
        (e.className = "Average"),
        e
      );
    })(Hr);
    r.serialization.registerClass(Xr);
    var $r = (function(t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.mergeFunction = function(t) {
          return Object(r.tidy)(function() {
            for (var e = t[0], n = 1; n < t.length; ++n)
              e = Object(r.maximum)(e, t[n]);
            return e;
          });
        }),
        (e.className = "Maximum"),
        e
      );
    })(Hr);
    r.serialization.registerClass($r);
    var Yr = (function(t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.mergeFunction = function(t) {
          return Object(r.tidy)(function() {
            for (var e = t[0], n = 1; n < t.length; ++n)
              e = Object(r.minimum)(e, t[n]);
            return e;
          });
        }),
        (e.className = "Minimum"),
        e
      );
    })(Hr);
    r.serialization.registerClass(Yr);
    var Jr = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.DEFAULT_AXIS = -1),
          null == e && (e = {}),
          (n.axis = null == e.axis ? n.DEFAULT_AXIS : e.axis),
          (n.supportsMasking = !0),
          (n.reshapeRequired = !1),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          if (!Array.isArray(t) || !Array.isArray(t[0]) || 1 === t.length)
            throw new p(
              "A `Concatenate` layer should be called on a list of at least 2 inputs"
            );
          for (var e = !0, n = 0, i = (t = t); n < i.length; n++)
            if (null != (h = i[n])) {
              e = !1;
              break;
            }
          if (!e) {
            for (var o = [], a = 0; a < t.length; ++a) {
              var s = t[a].slice();
              s.splice(this.axis, 1);
              for (var u = !1, c = 0, l = o; c < l.length; c++) {
                var h = l[c];
                if (r.util.arraysEqual(h, s)) {
                  u = !0;
                  break;
                }
              }
              u || o.push(s);
            }
            if (o.length > 1)
              throw new p(
                "A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: " +
                  JSON.stringify(t)
              );
          }
        }),
        (e.prototype.mergeFunction = function(t) {
          var e = this;
          return Object(r.tidy)(function() {
            return dt(t, e.axis);
          });
        }),
        (e.prototype.computeOutputShape = function(t) {
          if (!Array.isArray(t) || !Array.isArray(t[0]))
            throw new p(
              "A `Concatenate` layer should be called on a list of inputs."
            );
          for (
            var e = t,
              n = e[0].slice(),
              r = this.axis < 0 ? n.length + this.axis : this.axis,
              i = 0,
              o = e.slice(1);
            i < o.length;
            i++
          ) {
            var a = o[i];
            if (null == n[r] || null == a[r]) {
              n[r] = null;
              break;
            }
            n[r] += a[r];
          }
          return n;
        }),
        (e.prototype.computeMask = function(t, e) {
          var n = this;
          if (null == e) return null;
          if (!Array.isArray(e))
            throw new p("`mask` should be an array for Concatenate");
          if (!Array.isArray(t))
            throw new p("`inputs` should be an array for Concatenate");
          if (e.length !== t.length)
            throw new p(
              "Mismatch in the length of mask (" +
                e.length +
                ") and the legnth of inputs (" +
                t.length +
                ")"
            );
          return Object(r.tidy)(function() {
            var i = !0;
            if (
              (e.forEach(function(t) {
                null == t || (i = !1);
              }),
              i)
            )
              return null;
            for (var o = [], a = 0; a < t.length; ++a)
              null == e[a]
                ? o.push(Object(r.onesLike)(t[a]).asType("bool"))
                : e[a].rank < t[a].rank
                ? o.push(Object(r.expandDims)(e[a], -1))
                : o.push(e[a]);
            var s = Object(r.concat)(o, n.axis);
            return Object(r.all)(s, -1, !1);
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { axis: this.axis },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Concatenate"),
        e
      );
    })(Hr);
    function Zr(t, e) {
      for (; t < 0; ) t += e;
      return t;
    }
    r.serialization.registerClass(Jr);
    var ti = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.axes = e.axes),
          (n.normalize = null != e.normalize && e.normalize),
          (n.supportsMasking = !0),
          (n.reshapeRequired = !1),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          r.util.assert(
            Array.isArray(t) &&
              2 === t.length &&
              Array.isArray(t[0]) &&
              Array.isArray(t[1]),
            function() {
              return "A `Dot` layer should be called on a list of exactly 2 inputs.";
            }
          );
          var e = t[0],
            n = t[1];
          if (e.length > 3 || n.length > 3)
            throw new d(
              "Dot layer does not support tensors of 4D or higher rank yet."
            );
          var i = this.interpretAxes(e, n);
          if (e[i[0]] !== n[i[1]])
            throw new p(
              "Dimension incompatibility: " + e[i[0]] + " !== " + n[i[1]]
            );
        }),
        (e.prototype.mergeFunction = function(t) {
          if (2 !== t.length)
            throw new p(
              "A `Dot` layer must be called on exactly 2 inputs, but received " +
                t.length +
                " input(s)."
            );
          var e,
            n = t[0],
            i = t[1];
          return (
            (e = Array.isArray(this.axes)
              ? this.axes.map(function(e, n) {
                  return Zr(e, t[n].shape.length);
                })
              : [Zr(this.axes, n.shape.length), Zr(this.axes, i.shape.length)]),
            this.normalize && ((n = Ne(n, e[0])), (i = Ne(i, e[1]))),
            (function(t, e, n) {
              if (t.shape.length > 3 || e.shape.length > 3)
                throw new d(
                  "batchDot is not implemented for tensors of 4D or higher rank yet"
                );
              if (
                (r.util.assert(t.shape.length >= 2, function() {
                  return (
                    "batchDot requires the rank of x to be >= 2, but got " +
                    t.shape.length
                  );
                }),
                r.util.assert(t.shape.length >= 2, function() {
                  return (
                    "batchDot requires the rank of y to be >= 2, but got " +
                    e.shape.length
                  );
                }),
                "number" == typeof n && (n = [n, n]),
                "complex64" === t.dtype || "complex64" === e.dtype)
              )
                throw new d(
                  "batchDot is not implemented for complex64-type Tensors yet."
                );
              var i = t.shape.length,
                o = e.shape.length;
              null == n && (n = [i - 1, o - 2]);
              var a = n;
              return Object(r.tidy)(function() {
                var n, r;
                if (i > o) {
                  n = i - o;
                  for (var s = [], u = 0; u < n; ++u) s.push(1);
                  e = e.reshape(e.shape.concat(s));
                } else if (o > i) {
                  for (n = o - i, s = [], u = 0; u < n; ++u) s.push(1);
                  t = t.reshape(t.shape.concat(s));
                } else n = 0;
                if (2 === t.shape.length && 2 === e.shape.length)
                  r =
                    a[0] === a[1]
                      ? t.mulStrict(e).sum(a[0])
                      : t
                          .transpose([1, 0])
                          .mulStrict(e)
                          .sum(a[1]);
                else {
                  var c = a[0] !== t.shape.length - 1,
                    l = a[1] === e.shape.length - 1;
                  r = t.matMul(e, c, l);
                }
                if (n > 0) {
                  var h,
                    f = [];
                  for (u = h = i > o ? i + o - 3 : i - 1; u < h + n; ++u)
                    f.push(u);
                  r = r.squeeze(f);
                }
                return 1 === r.shape.length && (r = r.expandDims(1)), r;
              });
            })(n, i, e)
          );
        }),
        (e.prototype.interpretAxes = function(t, e) {
          return Array.isArray(this.axes)
            ? this.axes
            : [Zr(this.axes, t.length), Zr(this.axes, e.length)];
        }),
        (e.prototype.computeOutputShape = function(t) {
          r.util.assert(
            Array.isArray(t) &&
              2 === t.length &&
              Array.isArray(t[0]) &&
              Array.isArray(t[1]),
            function() {
              return "A `Dot` layer should be called on a list of exactly 2 inputs.";
            }
          );
          var e = t[0].slice(),
            n = t[1].slice();
          if (e.length > 3 || n.length > 3)
            throw new d(
              "Dot layer does not support tensors of 4D or higher rank yet."
            );
          var i = this.interpretAxes(e, n);
          e.splice(i[0], 1), n.splice(i[1], 1), n.splice(0, 1);
          var o = e.concat(n);
          return 1 === o.length && o.push(1), o;
        }),
        (e.prototype.computeMask = function(t, e) {
          return null;
        }),
        (e.prototype.getConfig = function() {
          var e = { axes: this.axes, normalize: this.normalize },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "Dot"),
        e
      );
    })(Hr);
    r.serialization.registerClass(ti);
    var ei = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.supportsMasking = !0), (n.stddev = e.stddev), n;
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this),
            n = { stddev: this.stddev };
          return Object.assign(n, e), n;
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var r = te(t);
            return Tt(
              function() {
                return gt(r.shape, 0, n.stddev).add(r);
              },
              function() {
                return r;
              },
              e.training || !1
            );
          });
        }),
        (e.className = "GaussianNoise"),
        e
      );
    })(fe);
    r.serialization.registerClass(ei);
    var ni = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.supportsMasking = !0), (n.rate = e.rate), n;
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this),
            n = { rate: this.rate };
          return Object.assign(n, e), n;
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            n.invokeCallHook(t, e);
            var r = te(t);
            return n.rate > 0 && n.rate < 1
              ? Tt(
                  function() {
                    var t = Math.sqrt(n.rate / (1 - n.rate));
                    return r.mul(gt(r.shape, 1, t));
                  },
                  function() {
                    return r;
                  },
                  e.training || !1
                )
              : r;
          });
        }),
        (e.className = "GaussianDropout"),
        e
      );
    })(fe);
    r.serialization.registerClass(ni);
    var ri = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.supportsMasking = !0),
          (n.rate = e.rate),
          (n.noiseShape = e.noiseShape),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype._getNoiseShape = function(t) {
          return this.noiseShape || te(t).shape;
        }),
        (e.prototype.computeOutputShape = function(t) {
          return t;
        }),
        (e.prototype.getConfig = function() {
          var e = t.prototype.getConfig.call(this),
            n = { rate: this.rate };
          return Object.assign(n, e), n;
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            if (n.rate < 1 && n.rate > 0) {
              var i = n._getNoiseShape(t);
              return Tt(
                function() {
                  var e = te(t),
                    o = -1.7580993408473766,
                    a = Object(r.greaterEqual)(
                      Object(r.randomUniform)(i),
                      n.rate
                    );
                  a = ct(a, "float32");
                  var s = Math.pow(
                      (1 - n.rate) * (1 + n.rate * Math.pow(o, 2)),
                      -0.5
                    ),
                    u = -s * o * n.rate;
                  return e
                    .mul(a)
                    .add(a.add(-1).mul(o))
                    .mul(s)
                    .add(u);
                },
                function() {
                  return te(t);
                },
                e.training || !1
              );
            }
            return t;
          });
        }),
        (e.className = "AlphaDropout"),
        e
      );
    })(fe);
    function ii(t, e, n, i, o, a) {
      var s;
      if ((void 0 === a && (a = 0.001), 2 === t.rank))
        s = Object(r.batchNorm2d)(t, e, n, i, o, a);
      else if (3 === t.rank) s = Object(r.batchNorm3d)(t, e, n, i, o, a);
      else {
        if (4 !== t.rank)
          throw new d(
            "batchNormalization is not implemented for array of rank " +
              t.rank +
              " yet"
          );
        s = Object(r.batchNorm4d)(t, e, n, i, o, a);
      }
      return s;
    }
    function oi(t, e, n, i, o) {
      return (
        void 0 === o && (o = 0.001),
        r.util.arraysEqual(i.slice().sort(), ut(0, t.rank - 1))
          ? (function(t, e, n, i, o) {
              return (
                void 0 === o && (o = 0.001),
                Object(r.tidy)(function() {
                  var a = Object(r.moments)(t, i),
                    s = a.mean,
                    u = a.variance;
                  return [ii(t, s, u, n, e, o), s, u];
                })
              );
            })(t, e, n, i, o)
          : (function(t, e, n, i, o) {
              return (
                void 0 === o && (o = 0.001),
                Object(r.tidy)(function() {
                  for (
                    var a = Object(r.moments)(t, i),
                      s = a.mean,
                      u = a.variance,
                      c = [],
                      l = 0,
                      h = ut(0, t.rank);
                    l < h.length;
                    l++
                  ) {
                    var f = h[l];
                    -1 !== i.indexOf(f) ? c.push(1) : c.push(t.shape[f]);
                  }
                  var p = s.reshape(c),
                    d = u.reshape(c),
                    m = null == e ? null : e.reshape(c),
                    y = null == n ? null : n.reshape(c);
                  return [ii(t, p, d, y, m, o), s, u];
                })
              );
            })(t, e, n, i, o)
      );
    }
    r.serialization.registerClass(ri);
    var ai = (function(t) {
      function e(e) {
        var n = this;
        return (
          null == e && (e = {}),
          ((n = t.call(this, e) || this).supportsMasking = !0),
          (n.axis = null == e.axis ? -1 : e.axis),
          (n.momentum = null == e.momentum ? 0.99 : e.momentum),
          (n.epsilon = null == e.epsilon ? 0.001 : e.epsilon),
          (n.center = null == e.center || e.center),
          (n.scale = null == e.scale || e.scale),
          (n.betaInitializer = Ht(e.betaInitializer || "zeros")),
          (n.gammaInitializer = Ht(e.gammaInitializer || "ones")),
          (n.movingMeanInitializer = Ht(e.movingMeanInitializer || "zeros")),
          (n.movingVarianceInitializer = Ht(
            e.movingVarianceInitializer || "ones"
          )),
          (n.betaConstraint = q(e.betaConstraint)),
          (n.gammaConstraint = q(e.gammaConstraint)),
          (n.betaRegularizer = mr(e.betaRegularizer)),
          (n.gammaRegularizer = mr(e.gammaRegularizer)),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          var e;
          t = ee(t);
          var n = this.axis >= 0 ? this.axis : this.axis + t.length,
            r = t[n];
          if (null == r)
            throw new p(
              "Axis " +
                n +
                " of input tensor should have a defined dimension but the layer received an input with shape " +
                JSON.stringify(t) +
                "."
            );
          this.inputSpec = [
            new se({ ndim: t.length, axes: ((e = {}), (e[n] = r), e) })
          ];
          var i = [r];
          this.scale &&
            (this.gamma = this.addWeight(
              "gamma",
              i,
              null,
              this.gammaInitializer,
              this.gammaRegularizer,
              !0,
              this.gammaConstraint
            )),
            this.center &&
              (this.beta = this.addWeight(
                "beta",
                i,
                null,
                this.betaInitializer,
                this.betaRegularizer,
                !0,
                this.betaConstraint
              )),
            (this.movingMean = this.addWeight(
              "moving_mean",
              i,
              null,
              this.movingMeanInitializer,
              null,
              !1
            )),
            (this.movingVariance = this.addWeight(
              "moving_variance",
              i,
              null,
              this.movingVarianceInitializer,
              null,
              !1
            )),
            (this.built = !0);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var i = null != e.training && e.training,
              o = te(t),
              a = o.shape,
              s = a.length,
              u = ut(0, s),
              c = n.axis >= 0 ? n.axis : n.axis + s;
            u.splice(c, 1);
            var l = y(1, s);
            l[c] = a[c];
            var h = u.slice();
            h.sort();
            var f = !r.util.arraysEqual(h, ut(0, s).slice(0, s - 1));
            if (!i)
              return (function() {
                if (f) {
                  var t = n.movingMean.read().reshape(l),
                    e = n.movingVariance.read().reshape(l),
                    r = n.center ? n.beta.read().reshape(l) : null,
                    i = n.scale ? n.gamma.read().reshape(l) : null;
                  return ii(o, t, e, r, i, n.epsilon);
                }
                return ii(
                  o,
                  n.movingMean.read(),
                  n.movingVariance.read(),
                  null == n.beta ? null : n.beta.read(),
                  null == n.gamma ? null : n.gamma.read(),
                  n.epsilon
                );
              })();
            var p = oi(o, n.gamma.read(), n.beta.read(), u, n.epsilon),
              d = p[0],
              m = p[1],
              g = p[2],
              v = function(t, e, n) {
                Object(r.tidy)(function() {
                  var r = 1 - n,
                    i = t.read(),
                    o = i.sub(e).mul(r);
                  t.write(i.sub(o));
                });
              };
            return (
              v(n.movingMean, m, n.momentum),
              v(n.movingVariance, g, n.momentum),
              d
            );
          });
        }),
        (e.prototype.getConfig = function() {
          var e = {
              axis: this.axis,
              momentum: this.momentum,
              epsilon: this.epsilon,
              center: this.center,
              scale: this.scale,
              betaInitializer: Gt(this.betaInitializer),
              gammaInitializer: Gt(this.gammaInitializer),
              movingMeanInitializer: Gt(this.movingMeanInitializer),
              movingVarianceInitializer: Gt(this.movingVarianceInitializer),
              betaRegularizer: pr(this.betaRegularizer),
              gammaRegularizer: pr(this.gammaRegularizer),
              betaConstraint: j(this.betaConstraint),
              gammaConstraint: j(this.gammaConstraint)
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "BatchNormalization"),
        e
      );
    })(fe);
    r.serialization.registerClass(ai);
    var si = (function(t) {
      function e(e) {
        var n = this;
        if (
          (null == e && (e = {}),
          ((n = t.call(this, e) || this).dataFormat =
            null == e.dataFormat ? "channelsLast" : e.dataFormat),
          null == e.padding)
        )
          n.padding = [[1, 1], [1, 1]];
        else if ("number" == typeof e.padding)
          n.padding = [[e.padding, e.padding], [e.padding, e.padding]];
        else {
          if (((e.padding = e.padding), 2 !== e.padding.length))
            throw new p(
              "ZeroPadding2D expects padding to be a length-2 array, but received a length-" +
                e.padding.length +
                " array."
            );
          var r = void 0,
            i = void 0;
          if ("number" == typeof e.padding[0])
            (r = [e.padding[0], e.padding[0]]),
              (i = [e.padding[1], e.padding[1]]);
          else {
            if (((e.padding = e.padding), 2 !== e.padding[0].length))
              throw new p(
                "ZeroPadding2D expects height padding to be a length-2 array, but received a length-" +
                  e.padding[0].length +
                  " array."
              );
            if (((r = e.padding[0]), 2 !== e.padding[1].length))
              throw new p(
                "ZeroPadding2D expects width padding to be a length-2 array, but received a length-" +
                  e.padding[1].length +
                  " array."
              );
            i = e.padding[1];
          }
          n.padding = [r, i];
        }
        return (n.inputSpec = [new se({ ndim: 4 })]), n;
      }
      return (
        o(e, t),
        (e.prototype.computeOutputShape = function(t) {
          var e, n;
          return (
            (t = ee(t)),
            "channelsFirst" === this.dataFormat
              ? ((e =
                  null != t[2] && t[2] >= 0
                    ? t[2] + this.padding[0][0] + this.padding[0][1]
                    : null),
                (n =
                  null != t[3] && t[3] >= 0
                    ? t[3] + this.padding[1][0] + this.padding[1][1]
                    : null),
                [t[0], t[1], e, n])
              : ((e =
                  null != t[1] && t[1] >= 0
                    ? t[1] + this.padding[0][0] + this.padding[0][1]
                    : null),
                (n =
                  null != t[2] && t[2] >= 0
                    ? t[2] + this.padding[1][0] + this.padding[1][1]
                    : null),
                [t[0], e, n, t[3]])
          );
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            return (function(t, e, n) {
              return Object(r.tidy)(function() {
                if (4 !== t.rank)
                  throw new p(
                    "temporalPadding expects input tensor to be 4-D, but received a " +
                      t.rank +
                      "-D tensor."
                  );
                if (
                  (null == e && (e = [[1, 1], [1, 1]]),
                  2 !== e.length || 2 !== e[0].length || 2 !== e[1].length)
                )
                  throw new p(
                    "spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers."
                  );
                if (
                  (null == n && (n = "channelsLast"),
                  "channelsLast" !== n && "channelsFirst" !== n)
                )
                  throw new p(
                    "Unknown data format: " +
                      n +
                      ". Supported data formats are 'channelsLast' and 'channelsFirst."
                  );
                var i;
                return (
                  (i =
                    "channelsFirst" === n
                      ? [[0, 0], [0, 0], e[0], e[1]]
                      : [[0, 0], e[0], e[1], [0, 0]]),
                  Object(r.pad)(t, i)
                );
              });
            })(te(t), n.padding, n.dataFormat);
          });
        }),
        (e.prototype.getConfig = function() {
          var e = { padding: this.padding, dataFormat: this.dataFormat },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "ZeroPadding2D"),
        e
      );
    })(fe);
    function ui(t, e, n, i, o, a) {
      return Object(r.tidy)(function() {
        var s;
        Q(o),
          (function(t) {
            O(G, "PoolMode", t);
          })(a),
          X(i),
          null == n && (n = [1, 1]),
          null == i && (i = "valid"),
          null == o && (o = "channelsLast"),
          null == a && (a = "max"),
          (t = Ar(t, o));
        var u = "same" === i ? "same" : "valid";
        return (
          (s =
            "max" === a
              ? Object(r.maxPool)(t, e, n, u)
              : Object(r.avgPool)(t, e, n, u)),
          "channelsFirst" === o && (s = Object(r.transpose)(s, [0, 3, 1, 2])),
          s
        );
      });
    }
    r.serialization.registerClass(si);
    var ci = (function(t) {
        function e(e) {
          var n = this;
          if (
            (null == e.poolSize && (e.poolSize = 2),
            (n = t.call(this, e) || this),
            "number" == typeof e.poolSize)
          )
            n.poolSize = [e.poolSize];
          else {
            if (
              !Array.isArray(e.poolSize) ||
              1 !== e.poolSize.length ||
              "number" != typeof e.poolSize[0]
            )
              throw new p(
                "poolSize for 1D convolutional layer must be a number or an Array of a single number, but received " +
                  JSON.stringify(e.poolSize)
              );
            n.poolSize = e.poolSize;
          }
          if ((I(n.poolSize, "poolSize"), null == e.strides))
            n.strides = n.poolSize;
          else if ("number" == typeof e.strides) n.strides = [e.strides];
          else {
            if (
              !Array.isArray(e.strides) ||
              1 !== e.strides.length ||
              "number" != typeof e.strides[0]
            )
              throw new p(
                "strides for 1D convolutional layer must be a number or an Array of a single number, but received " +
                  JSON.stringify(e.strides)
              );
            n.strides = e.strides;
          }
          return (
            I(n.strides, "strides"),
            (n.padding = null == e.padding ? "valid" : e.padding),
            X(n.padding),
            (n.inputSpec = [new se({ ndim: 3 })]),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.computeOutputShape = function(t) {
            var e = xr(
              (t = ee(t))[1],
              this.poolSize[0],
              this.padding,
              this.strides[0]
            );
            return [t[0], e, t[2]];
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              n.invokeCallHook(t, e), (t = lt(te(t), 2));
              var i = n.poolingFunction(
                te(t),
                [n.poolSize[0], 1],
                [n.strides[0], 1],
                n.padding,
                "channelsLast"
              );
              return Object(r.squeeze)(i, [2]);
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                poolSize: this.poolSize,
                padding: this.padding,
                strides: this.strides
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          e
        );
      })(fe),
      li = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          o(e, t),
          (e.prototype.poolingFunction = function(t, e, n, r, i) {
            return Q(i), X(r), ui(t, e, n, r, i, "max");
          }),
          (e.className = "MaxPooling1D"),
          e
        );
      })(ci);
    r.serialization.registerClass(li);
    var hi = (function(t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.poolingFunction = function(t, e, n, r, i) {
          return Q(i), X(r), ui(t, e, n, r, i, "avg");
        }),
        (e.className = "AveragePooling1D"),
        e
      );
    })(ci);
    r.serialization.registerClass(hi);
    var fi = (function(t) {
        function e(e) {
          var n = this;
          if (
            (null == e.poolSize && (e.poolSize = [2, 2]),
            ((n = t.call(this, e) || this).poolSize = Array.isArray(e.poolSize)
              ? e.poolSize
              : [e.poolSize, e.poolSize]),
            null == e.strides)
          )
            n.strides = n.poolSize;
          else if (Array.isArray(e.strides)) {
            if (2 !== e.strides.length)
              throw new p(
                "If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length " +
                  e.strides.length +
                  "."
              );
            n.strides = e.strides;
          } else n.strides = [e.strides, e.strides];
          return (
            I(n.poolSize, "poolSize"),
            I(n.strides, "strides"),
            (n.padding = null == e.padding ? "valid" : e.padding),
            (n.dataFormat =
              null == e.dataFormat ? "channelsLast" : e.dataFormat),
            Q(n.dataFormat),
            X(n.padding),
            (n.inputSpec = [new se({ ndim: 4 })]),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.computeOutputShape = function(t) {
            t = ee(t);
            var e = "channelsFirst" === this.dataFormat ? t[2] : t[1],
              n = "channelsFirst" === this.dataFormat ? t[3] : t[2];
            return (
              (e = xr(e, this.poolSize[0], this.padding, this.strides[0])),
              (n = xr(n, this.poolSize[1], this.padding, this.strides[1])),
              "channelsFirst" === this.dataFormat
                ? [t[0], t[1], e, n]
                : [t[0], e, n, t[3]]
            );
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              return (
                n.invokeCallHook(t, e),
                n.poolingFunction(
                  te(t),
                  n.poolSize,
                  n.strides,
                  n.padding,
                  n.dataFormat
                )
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                poolSize: this.poolSize,
                padding: this.padding,
                strides: this.strides,
                dataFormat: this.dataFormat
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          e
        );
      })(fe),
      pi = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          o(e, t),
          (e.prototype.poolingFunction = function(t, e, n, r, i) {
            return Q(i), X(r), ui(t, e, n, r, i, "max");
          }),
          (e.className = "MaxPooling2D"),
          e
        );
      })(fi);
    r.serialization.registerClass(pi);
    var di = (function(t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.poolingFunction = function(t, e, n, r, i) {
          return Q(i), X(r), ui(t, e, n, r, i, "avg");
        }),
        (e.className = "AveragePooling2D"),
        e
      );
    })(fi);
    r.serialization.registerClass(di);
    var mi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.inputSpec = [new se({ ndim: 3 })]), n;
        }
        return (
          o(e, t),
          (e.prototype.computeOutputShape = function(t) {
            return [t[0], t[2]];
          }),
          (e.prototype.call = function(t, e) {
            throw new d();
          }),
          e
        );
      })(fe),
      yi = (function(t) {
        function e(e) {
          return t.call(this, e || {}) || this;
        }
        return (
          o(e, t),
          (e.prototype.call = function(t, e) {
            return Object(r.tidy)(function() {
              var e = te(t);
              return Object(r.mean)(e, 1);
            });
          }),
          (e.className = "GlobalAveragePooling1D"),
          e
        );
      })(mi);
    r.serialization.registerClass(yi);
    var gi = (function(t) {
      function e(e) {
        return t.call(this, e || {}) || this;
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          return Object(r.tidy)(function() {
            var e = te(t);
            return Object(r.max)(e, 1);
          });
        }),
        (e.className = "GlobalMaxPooling1D"),
        e
      );
    })(mi);
    r.serialization.registerClass(gi);
    var vi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.dataFormat =
              null == e.dataFormat ? "channelsLast" : e.dataFormat),
            Q(n.dataFormat),
            (n.inputSpec = [new se({ ndim: 4 })]),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.computeOutputShape = function(t) {
            return (
              (t = t),
              "channelsLast" === this.dataFormat ? [t[0], t[3]] : [t[0], t[1]]
            );
          }),
          (e.prototype.call = function(t, e) {
            throw new d();
          }),
          (e.prototype.getConfig = function() {
            var e = { dataFormat: this.dataFormat },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          e
        );
      })(fe),
      bi = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          o(e, t),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              var e = te(t);
              return "channelsLast" === n.dataFormat
                ? Object(r.mean)(e, [1, 2])
                : Object(r.mean)(e, [2, 3]);
            });
          }),
          (e.className = "GlobalAveragePooling2D"),
          e
        );
      })(vi);
    r.serialization.registerClass(bi);
    var wi = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        o(e, t),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var e = te(t);
            return "channelsLast" === n.dataFormat
              ? Object(r.max)(e, [1, 2])
              : Object(r.max)(e, [2, 3]);
          });
        }),
        (e.className = "GlobalMaxPooling2D"),
        e
      );
    })(vi);
    function _i(t, e, n, r) {
      if (Array.isArray(t)) {
        if (null != e || null != n)
          throw new p(
            "When inputs is an array, neither initialState or constants should be provided"
          );
        null != r &&
          ((n = t.slice(t.length - r, t.length)),
          (t = t.slice(0, t.length - r))),
          t.length > 1 && (e = t.slice(1, t.length)),
          (t = t[0]);
      }
      function i(t) {
        return null == t || Array.isArray(t) ? t : [t];
      }
      return { inputs: t, initialState: (e = i(e)), constants: (n = i(n)) };
    }
    function Si(t, e, n, i, o, a, s, u) {
      return (
        void 0 === i && (i = !1),
        void 0 === s && (s = !1),
        void 0 === u && (u = !1),
        Object(r.tidy)(function() {
          var c = e.shape.length;
          if (c < 3)
            throw new p("Input should be at least 3D, but is " + c + "D.");
          var l = [1, 0].concat(ut(2, c));
          if (((e = Object(r.transpose)(e, l)), null != a))
            throw new d(
              "The rnn() functoin of the deeplearn.js backend does not support constants yet."
            );
          s &&
            console.warn(
              "Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."
            ),
            null != o &&
              ((o = o.asType("bool").asType("float32")).rank === c - 1 &&
                (o = Object(r.expandDims)(o, -1)),
              (o = Object(r.transpose)(o, l))),
            i &&
              ((e = Object(r.reverse)(e, 0)),
              null != o && (o = Object(r.reverse)(o, 0)));
          var h,
            f,
            m = [],
            y = n,
            g = e.shape[0],
            v = Object(r.unstack)(e);
          null != o && (f = Object(r.unstack)(o));
          for (
            var b,
              w = function(e) {
                var n = v[e],
                  i = Object(r.tidy)(function() {
                    return t(n, y);
                  });
                if (null == o) (h = i[0]), (y = i[1]);
                else {
                  var a = Object(r.tidy)(function() {
                    var t = f[e],
                      n = Object(r.onesLike)(t).sub(t);
                    return {
                      output: i[0].mul(t).addStrict(y[0].mul(n)),
                      newStates: y.map(function(e, r) {
                        return i[1][r].mul(t).addStrict(e.mul(n));
                      })
                    };
                  });
                  (h = a.output), (y = a.newStates);
                }
                u && m.push(h);
              },
              _ = 0;
            _ < g;
            ++_
          )
            w(_);
          return u && (b = Object(r.stack)(m, 1)), [h, b, y];
        })
      );
    }
    r.serialization.registerClass(wi);
    var xi = (function(t) {
      function e(e) {
        var n,
          r = t.call(this, e) || this;
        if (null == e.cell)
          throw new p("cell property is missing for the constructor of RNN.");
        if (
          null ==
          (n = Array.isArray(e.cell) ? new Ii({ cells: e.cell }) : e.cell)
            .stateSize
        )
          throw new p(
            "The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state)."
          );
        return (
          (r.cell = n),
          (r.returnSequences = null != e.returnSequences && e.returnSequences),
          (r.returnState = null != e.returnState && e.returnState),
          (r.goBackwards = null != e.goBackwards && e.goBackwards),
          (r._stateful = null != e.stateful && e.stateful),
          (r.unroll = null != e.unroll && e.unroll),
          (r.supportsMasking = !0),
          (r.inputSpec = [new se({ ndim: 3 })]),
          (r.stateSpec = null),
          (r.states_ = null),
          (r.numConstants = null),
          (r.keptStates = []),
          r
        );
      }
      return (
        o(e, t),
        (e.prototype.getStates = function() {
          return null == this.states_
            ? ut(
                0,
                Array.isArray(this.cell.stateSize)
                  ? this.cell.stateSize.length
                  : 1
              ).map(function(t) {
                return null;
              })
            : this.states_;
        }),
        (e.prototype.setStates = function(t) {
          this.states_ = t;
        }),
        (e.prototype.computeOutputShape = function(t) {
          Jt(t) && (t = t[0]), (t = t);
          var e = this.cell.stateSize;
          Array.isArray(e) || (e = [e]);
          var n,
            r = e[0];
          if (
            ((n = this.returnSequences ? [t[0], t[1], r] : [t[0], r]),
            this.returnState)
          ) {
            for (var i = [], o = 0, a = e; o < a.length; o++) {
              var s = a[o];
              i.push([t[0], s]);
            }
            return [n].concat(i);
          }
          return n;
        }),
        (e.prototype.computeMask = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            Array.isArray(e) && (e = e[0]);
            var t = n.returnSequences ? e : null;
            if (n.returnState) {
              var r = n.states.map(function(t) {
                return null;
              });
              return [t].concat(r);
            }
            return t;
          });
        }),
        Object.defineProperty(e.prototype, "states", {
          get: function() {
            if (null == this.states_) {
              for (
                var t = Array.isArray(this.cell.stateSize)
                    ? this.cell.stateSize.length
                    : 1,
                  e = [],
                  n = 0;
                n < t;
                ++n
              )
                e.push(null);
              return e;
            }
            return this.states_;
          },
          set: function(t) {
            this.states_ = t;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.build = function(t) {
          if (null != this.numConstants)
            throw new d("Constants support is not implemented in RNN yet.");
          Jt(t) && (t = t[0]), (t = t);
          var e = this.stateful ? t[0] : null,
            n = t[t.length - 1];
          this.inputSpec[0] = new se({ shape: [e, null, n] });
          var i,
            o = [t[0]].concat(t.slice(2));
          if (
            (this.cell.build(o),
            (i = Array.isArray(this.cell.stateSize)
              ? this.cell.stateSize
              : [this.cell.stateSize]),
            null != this.stateSpec)
          ) {
            if (
              !r.util.arraysEqual(
                this.stateSpec.map(function(t) {
                  return t.shape[t.shape.length - 1];
                }),
                i
              )
            )
              throw new p(
                "An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=" +
                  this.stateSpec +
                  "; However cell.stateSize is " +
                  this.cell.stateSize
              );
          } else
            this.stateSpec = i.map(function(t) {
              return new se({ shape: [null, t] });
            });
          this.stateful && this.resetStates();
        }),
        (e.prototype.resetStates = function(t, e) {
          var n = this;
          void 0 === e && (e = !1),
            Object(r.tidy)(function() {
              if (!n.stateful)
                throw new h(
                  "Cannot call resetStates() on an RNN Layer that is not stateful."
                );
              var i = n.inputSpec[0].shape[0];
              if (null == i)
                throw new p(
                  "If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer."
                );
              if (null == n.states_)
                Array.isArray(n.cell.stateSize)
                  ? (n.states_ = n.cell.stateSize.map(function(t) {
                      return Object(r.zeros)([i, t]);
                    }))
                  : (n.states_ = [Object(r.zeros)([i, n.cell.stateSize])]);
              else if (null == t)
                Object(r.dispose)(n.states_),
                  null != n.keptStates &&
                    (Object(r.dispose)(n.keptStates), (n.keptStates = [])),
                  Array.isArray(n.cell.stateSize)
                    ? (n.states_ = n.cell.stateSize.map(function(t) {
                        return Object(r.zeros)([i, t]);
                      }))
                    : (n.states_[0] = Object(r.zeros)([i, n.cell.stateSize]));
              else {
                if (
                  (Array.isArray(t) || (t = [t]), t.length !== n.states_.length)
                )
                  throw new p(
                    "Layer " +
                      n.name +
                      " expects " +
                      n.states_.length +
                      " state(s), but it received " +
                      t.length +
                      " state value(s). Input received: " +
                      t
                  );
                !0 === e
                  ? n.keptStates.push(n.states_.slice())
                  : Object(r.dispose)(n.states_);
                for (var o = 0; o < n.states_.length; ++o) {
                  var a = t[o],
                    s = Array.isArray(n.cell.stateSize)
                      ? n.cell.stateSize[o]
                      : n.cell.stateSize,
                    u = [i, s];
                  if (!r.util.arraysEqual(a.shape, u))
                    throw new p(
                      "State " +
                        o +
                        " is incompatible with layer " +
                        n.name +
                        ": expected shape=" +
                        u +
                        ", received shape=" +
                        a.shape
                    );
                  n.states_[o] = a;
                }
              }
              n.states_ = n.states_.map(function(t) {
                return Object(r.keep)(t.clone());
              });
            });
        }),
        (e.prototype.apply = function(e, n) {
          var r = null == n ? null : n.initialState,
            i = null == n ? null : n.constants;
          null == n && (n = {});
          var o = _i(e, r, i, this.numConstants);
          (e = o.inputs), (r = o.initialState), (i = o.constants);
          var a = [],
            s = [];
          if (null != r) {
            (n.initialState = r), (a = a.concat(r)), (this.stateSpec = []);
            for (var u = 0, c = r; u < c.length; u++) {
              var l = c[u];
              this.stateSpec.push(new se({ shape: l.shape }));
            }
            s = s.concat(this.stateSpec);
          }
          if (
            (null != i &&
              ((n.constants = i),
              (a = a.concat(i)),
              (this.numConstants = i.length)),
            a[0] instanceof ue)
          ) {
            var h = [e].concat(a),
              f = this.inputSpec.concat(s),
              p = this.inputSpec;
            this.inputSpec = f;
            var d = t.prototype.apply.call(this, h, n);
            return (this.inputSpec = p), d;
          }
          return t.prototype.apply.call(this, e, n);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var r = null == e ? null : e.mask,
              i = null == e ? null : e.training,
              o = null == e ? null : e.initialState;
            (t = te(t)),
              null == o && (o = n.stateful ? n.states_ : n.getInitialState(t));
            var a = Array.isArray(n.cell.stateSize)
              ? n.cell.stateSize.length
              : 1;
            if (o.length !== a)
              throw new p(
                "RNN Layer has " +
                  a +
                  " state(s) but was passed " +
                  o.length +
                  " initial state(s)."
              );
            n.unroll &&
              console.warn(
                "Ignoring unroll = true for RNN layer, due to imperative backend."
              );
            var s = { training: i },
              u = Si(
                function(t, e) {
                  var r = n.cell.call([t].concat(e), s);
                  return [r[0], r.slice(1)];
                },
                t,
                o,
                n.goBackwards,
                r,
                null,
                n.unroll,
                n.returnSequences
              ),
              c = u[0],
              l = u[1],
              h = u[2];
            n.stateful && n.resetStates(h, i);
            var f = n.returnSequences ? l : c;
            return n.returnState ? [f].concat(h) : f;
          });
        }),
        (e.prototype.getInitialState = function(t) {
          var e = this;
          return Object(r.tidy)(function() {
            var n = Object(r.zeros)(t.shape);
            return (
              (n = lt((n = Object(r.sum)(n, [1, 2])))),
              Array.isArray(e.cell.stateSize)
                ? e.cell.stateSize.map(function(t) {
                    return t > 1 ? yt(n, [1, t]) : n;
                  })
                : e.cell.stateSize > 1
                ? [yt(n, [1, e.cell.stateSize])]
                : [n]
            );
          });
        }),
        Object.defineProperty(e.prototype, "trainableWeights", {
          get: function() {
            return this.trainable ? this.cell.trainableWeights : [];
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "nonTrainableWeights", {
          get: function() {
            return this.trainable
              ? this.cell.nonTrainableWeights
              : this.cell.weights;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.setFastWeightInitDuringBuild = function(e) {
          t.prototype.setFastWeightInitDuringBuild.call(this, e),
            null != this.cell && this.cell.setFastWeightInitDuringBuild(e);
        }),
        (e.prototype.getConfig = function() {
          var e = {
            returnSequences: this.returnSequences,
            returnState: this.returnState,
            goBackwards: this.goBackwards,
            stateful: this.stateful,
            unroll: this.unroll
          };
          null != this.numConstants && (e.numConstants = this.numConstants);
          var n = this.cell.getConfig();
          e.cell = { className: this.cell.getClassName(), config: n };
          var r = t.prototype.getConfig.call(this);
          return Object.assign(e, r), e;
        }),
        (e.fromConfig = function(t, e, n) {
          void 0 === n && (n = {});
          var r = hn(e.cell, n);
          return new t(Object.assign(e, { cell: r }));
        }),
        (e.className = "RNN"),
        e
      );
    })(fe);
    r.serialization.registerClass(xi);
    var Ti = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return o(e, t), e;
      })(fe),
      Ai = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.DEFAULT_ACTIVATION = "tanh"),
            (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
            (n.DEFAULT_RECURRENT_INITIALIZER = "orthogonal"),
            (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
            (n.units = e.units),
            I(n.units, "units"),
            (n.activation = cr(
              null == e.activation ? n.DEFAULT_ACTIVATION : e.activation
            )),
            (n.useBias = null == e.useBias || e.useBias),
            (n.kernelInitializer = Ht(
              e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
            )),
            (n.recurrentInitializer = Ht(
              e.recurrentInitializer || n.DEFAULT_RECURRENT_INITIALIZER
            )),
            (n.biasInitializer = Ht(
              e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
            )),
            (n.kernelRegularizer = mr(e.kernelRegularizer)),
            (n.recurrentRegularizer = mr(e.recurrentRegularizer)),
            (n.biasRegularizer = mr(e.biasRegularizer)),
            (n.kernelConstraint = q(e.kernelConstraint)),
            (n.recurrentConstraint = q(e.recurrentConstraint)),
            (n.biasConstraint = q(e.biasConstraint)),
            (n.dropout = at([1, st([0, null == e.dropout ? 0 : e.dropout])])),
            (n.recurrentDropout = at([
              1,
              st([0, null == e.recurrentDropout ? 0 : e.recurrentDropout])
            ])),
            (n.stateSize = n.units),
            (n.dropoutMask = null),
            (n.recurrentDropoutMask = null),
            n
          );
        }
        return (
          o(e, t),
          (e.prototype.build = function(t) {
            (t = ee(t)),
              (this.kernel = this.addWeight(
                "kernel",
                [t[t.length - 1], this.units],
                null,
                this.kernelInitializer,
                this.kernelRegularizer,
                !0,
                this.kernelConstraint
              )),
              (this.recurrentKernel = this.addWeight(
                "recurrent_kernel",
                [this.units, this.units],
                null,
                this.recurrentInitializer,
                this.recurrentRegularizer,
                !0,
                this.recurrentConstraint
              )),
              this.useBias
                ? (this.bias = this.addWeight(
                    "bias",
                    [this.units],
                    null,
                    this.biasInitializer,
                    this.biasRegularizer,
                    !0,
                    this.biasConstraint
                  ))
                : (this.bias = null),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              if (2 !== (t = t).length)
                throw new p(
                  "SimpleRNNCell expects 2 input Tensors, got " + t.length + "."
                );
              var i = t[1];
              t = t[0];
              var o,
                a = null != e.training && e.training;
              0 < n.dropout &&
                n.dropout < 1 &&
                null == n.dropoutMask &&
                (n.dropoutMask = Mi(
                  function() {
                    return Object(r.onesLike)(t);
                  },
                  n.dropout,
                  a
                )),
                0 < n.recurrentDropout &&
                  n.recurrentDropout < 1 &&
                  null == n.recurrentDropoutMask &&
                  (n.recurrentDropoutMask = Mi(
                    function() {
                      return Object(r.onesLike)(i);
                    },
                    n.recurrentDropout,
                    a
                  ));
              var s = n.dropoutMask,
                u = n.recurrentDropoutMask;
              (o = vt(null != s ? Object(r.mul)(t, s) : t, n.kernel.read())),
                null != n.bias && (o = St(o, n.bias.read())),
                null != u && (i = Object(r.mul)(i, u));
              var c = Object(r.add)(o, vt(i, n.recurrentKernel.read()));
              return (
                null != n.activation && (c = n.activation.apply(c)), [c, c]
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: sr(this.activation),
                useBias: this.useBias,
                kernelInitializer: Gt(this.kernelInitializer),
                recurrentInitializer: Gt(this.recurrentInitializer),
                biasInitializer: Gt(this.biasInitializer),
                kernelRegularizer: pr(this.kernelRegularizer),
                recurrentRegularizer: pr(this.recurrentRegularizer),
                biasRegularizer: pr(this.biasRegularizer),
                activityRegularizer: pr(this.activityRegularizer),
                kernelConstraint: j(this.kernelConstraint),
                recurrentConstraint: j(this.recurrentConstraint),
                biasConstraint: j(this.biasConstraint),
                dropout: this.dropout,
                recurrentDropout: this.recurrentDropout
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "SimpleRNNCell"),
          e
        );
      })(Ti);
    r.serialization.registerClass(Ai);
    var ki = (function(t) {
      function e(e) {
        return (e.cell = new Ai(e)), t.call(this, e) || this;
      }
      return (
        o(e, t),
        (e.prototype.call = function(e, n) {
          var i = this;
          return Object(r.tidy)(function() {
            null != i.cell.dropoutMask &&
              (Object(r.dispose)(i.cell.dropoutMask),
              (i.cell.dropoutMask = null)),
              null != i.cell.recurrentDropoutMask &&
                (Object(r.dispose)(i.cell.recurrentDropoutMask),
                (i.cell.recurrentDropoutMask = null));
            var o = null == n ? null : n.mask,
              a = null == n ? null : n.training,
              s = null == n ? null : n.initialState;
            return t.prototype.call.call(i, e, {
              mask: o,
              training: a,
              initialState: s
            });
          });
        }),
        Object.defineProperty(e.prototype, "units", {
          get: function() {
            return this.cell.units;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "activation", {
          get: function() {
            return this.cell.activation;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "useBias", {
          get: function() {
            return this.cell.useBias;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelInitializer", {
          get: function() {
            return this.cell.kernelInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentInitializer", {
          get: function() {
            return this.cell.recurrentInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasInitializer", {
          get: function() {
            return this.cell.biasInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelRegularizer", {
          get: function() {
            return this.cell.kernelRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentRegularizer", {
          get: function() {
            return this.cell.recurrentRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasRegularizer", {
          get: function() {
            return this.cell.biasRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelConstraint", {
          get: function() {
            return this.cell.kernelConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentConstraint", {
          get: function() {
            return this.cell.recurrentConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasConstraint", {
          get: function() {
            return this.cell.biasConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "dropout", {
          get: function() {
            return this.cell.dropout;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentDropout", {
          get: function() {
            return this.cell.recurrentDropout;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.getConfig = function() {
          var e = {
              units: this.units,
              activation: sr(this.activation),
              useBias: this.useBias,
              kernelInitializer: Gt(this.kernelInitializer),
              recurrentInitializer: Gt(this.recurrentInitializer),
              biasInitializer: Gt(this.biasInitializer),
              kernelRegularizer: pr(this.kernelRegularizer),
              recurrentRegularizer: pr(this.recurrentRegularizer),
              biasRegularizer: pr(this.biasRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              kernelConstraint: j(this.kernelConstraint),
              recurrentConstraint: j(this.recurrentConstraint),
              biasConstraint: j(this.biasConstraint),
              dropout: this.dropout,
              recurrentDropout: this.recurrentDropout
            },
            n = t.prototype.getConfig.call(this);
          return delete n.cell, Object.assign(e, n), e;
        }),
        (e.fromConfig = function(t, e) {
          return new t(e);
        }),
        (e.className = "SimpleRNN"),
        e
      );
    })(xi);
    r.serialization.registerClass(ki);
    var Ei = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.DEFAULT_ACTIVATION = "tanh"),
          (n.DEFAULT_RECURRENT_ACTIVATION = "hardSigmoid"),
          (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
          (n.DEFAULT_RECURRENT_INITIALIZER = "orthogonal"),
          (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
          (n.units = e.units),
          I(n.units, "units"),
          (n.activation = cr(
            void 0 === e.activation ? n.DEFAULT_ACTIVATION : e.activation
          )),
          (n.recurrentActivation = cr(
            void 0 === e.recurrentActivation
              ? n.DEFAULT_RECURRENT_ACTIVATION
              : e.recurrentActivation
          )),
          (n.useBias = null == e.useBias || e.useBias),
          (n.kernelInitializer = Ht(
            e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
          )),
          (n.recurrentInitializer = Ht(
            e.recurrentInitializer || n.DEFAULT_RECURRENT_INITIALIZER
          )),
          (n.biasInitializer = Ht(
            e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
          )),
          (n.kernelRegularizer = mr(e.kernelRegularizer)),
          (n.recurrentRegularizer = mr(e.recurrentRegularizer)),
          (n.biasRegularizer = mr(e.biasRegularizer)),
          (n.kernelConstraint = q(e.kernelConstraint)),
          (n.recurrentConstraint = q(e.recurrentConstraint)),
          (n.biasConstraint = q(e.biasConstraint)),
          (n.dropout = at([1, st([0, null == e.dropout ? 0 : e.dropout])])),
          (n.recurrentDropout = at([
            1,
            st([0, null == e.recurrentDropout ? 0 : e.recurrentDropout])
          ])),
          (n.implementation = e.implementation),
          (n.stateSize = n.units),
          (n.dropoutMask = null),
          (n.recurrentDropoutMask = null),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          var e = (t = ee(t))[t.length - 1];
          (this.kernel = this.addWeight(
            "kernel",
            [e, 3 * this.units],
            null,
            this.kernelInitializer,
            this.kernelRegularizer,
            !0,
            this.kernelConstraint
          )),
            (this.recurrentKernel = this.addWeight(
              "recurrent_kernel",
              [this.units, 3 * this.units],
              null,
              this.recurrentInitializer,
              this.recurrentRegularizer,
              !0,
              this.recurrentConstraint
            )),
            this.useBias
              ? (this.bias = this.addWeight(
                  "bias",
                  [3 * this.units],
                  null,
                  this.biasInitializer,
                  this.biasRegularizer,
                  !0,
                  this.biasConstraint
                ))
              : (this.bias = null),
            (this.built = !0);
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            if (2 !== (t = t).length)
              throw new p(
                "GRUCell expects 2 input Tensors (inputs, h, c), got " +
                  t.length +
                  "."
              );
            var i = null != e.training && e.training,
              o = t[1];
            (t = t[0]),
              0 < n.dropout &&
                n.dropout < 1 &&
                null == n.dropoutMask &&
                (n.dropoutMask = Mi(
                  function() {
                    return Object(r.onesLike)(t);
                  },
                  n.dropout,
                  i,
                  3
                )),
              0 < n.recurrentDropout &&
                n.recurrentDropout < 1 &&
                null == n.recurrentDropoutMask &&
                (n.recurrentDropoutMask = Mi(
                  function() {
                    return Object(r.onesLike)(o);
                  },
                  n.recurrentDropout,
                  i,
                  3
                ));
            var a,
              s,
              u,
              c = n.dropoutMask,
              l = n.recurrentDropoutMask;
            0 < n.dropout && n.dropout < 1 && (t = Object(r.mul)(t, c[0]));
            var h = vt(t, n.kernel.read());
            n.useBias && (h = St(h, n.bias.read())),
              0 < n.recurrentDropout &&
                n.recurrentDropout < 1 &&
                (o = Object(r.mul)(o, l[0]));
            var f = n.recurrentKernel.read(),
              d = Object(r.split)(f, [2 * n.units, n.units], f.rank - 1),
              m = d[0],
              y = d[1],
              g = vt(o, m),
              v = Object(r.split)(h, 3, h.rank - 1),
              b = v[0],
              w = v[1],
              _ = v[2],
              S = Object(r.split)(g, 2, g.rank - 1),
              x = S[0],
              T = S[1];
            (a = n.recurrentActivation.apply(Object(r.add)(b, x))),
              (s = n.recurrentActivation.apply(Object(r.add)(w, T)));
            var A = vt(Object(r.mul)(s, o), y);
            u = n.activation.apply(Object(r.add)(_, A));
            var k = Object(r.add)(
              Object(r.mul)(a, o),
              Object(r.mul)(Object(r.add)(1, Object(r.neg)(a)), u)
            );
            return [k, k];
          });
        }),
        (e.prototype.getConfig = function() {
          var e = {
              units: this.units,
              activation: sr(this.activation),
              recurrentActivation: sr(this.recurrentActivation),
              useBias: this.useBias,
              kernelInitializer: Gt(this.kernelInitializer),
              recurrentInitializer: Gt(this.recurrentInitializer),
              biasInitializer: Gt(this.biasInitializer),
              kernelRegularizer: pr(this.kernelRegularizer),
              recurrentRegularizer: pr(this.recurrentRegularizer),
              biasRegularizer: pr(this.biasRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              kernelConstraint: j(this.kernelConstraint),
              recurrentConstraint: j(this.recurrentConstraint),
              biasConstraint: j(this.biasConstraint),
              dropout: this.dropout,
              recurrentDropout: this.recurrentDropout,
              implementation: this.implementation
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "GRUCell"),
        e
      );
    })(Ti);
    r.serialization.registerClass(Ei);
    var Ni = (function(t) {
      function e(e) {
        return (
          0 === e.implementation &&
            console.warn(
              "`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."
            ),
          (e.cell = new Ei(e)),
          t.call(this, e) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.call = function(e, n) {
          var i = this;
          return Object(r.tidy)(function() {
            null != i.cell.dropoutMask &&
              (Object(r.dispose)(i.cell.dropoutMask),
              (i.cell.dropoutMask = null)),
              null != i.cell.recurrentDropoutMask &&
                (Object(r.dispose)(i.cell.recurrentDropoutMask),
                (i.cell.recurrentDropoutMask = null));
            var o = null == n ? null : n.mask,
              a = null == n ? null : n.training,
              s = null == n ? null : n.initialState;
            return t.prototype.call.call(i, e, {
              mask: o,
              training: a,
              initialState: s
            });
          });
        }),
        Object.defineProperty(e.prototype, "units", {
          get: function() {
            return this.cell.units;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "activation", {
          get: function() {
            return this.cell.activation;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentActivation", {
          get: function() {
            return this.cell.recurrentActivation;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "useBias", {
          get: function() {
            return this.cell.useBias;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelInitializer", {
          get: function() {
            return this.cell.kernelInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentInitializer", {
          get: function() {
            return this.cell.recurrentInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasInitializer", {
          get: function() {
            return this.cell.biasInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelRegularizer", {
          get: function() {
            return this.cell.kernelRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentRegularizer", {
          get: function() {
            return this.cell.recurrentRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasRegularizer", {
          get: function() {
            return this.cell.biasRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelConstraint", {
          get: function() {
            return this.cell.kernelConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentConstraint", {
          get: function() {
            return this.cell.recurrentConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasConstraint", {
          get: function() {
            return this.cell.biasConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "dropout", {
          get: function() {
            return this.cell.dropout;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentDropout", {
          get: function() {
            return this.cell.recurrentDropout;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "implementation", {
          get: function() {
            return this.cell.implementation;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.getConfig = function() {
          var e = {
              units: this.units,
              activation: sr(this.activation),
              recurrentActivation: sr(this.recurrentActivation),
              useBias: this.useBias,
              kernelInitializer: Gt(this.kernelInitializer),
              recurrentInitializer: Gt(this.recurrentInitializer),
              biasInitializer: Gt(this.biasInitializer),
              kernelRegularizer: pr(this.kernelRegularizer),
              recurrentRegularizer: pr(this.recurrentRegularizer),
              biasRegularizer: pr(this.biasRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              kernelConstraint: j(this.kernelConstraint),
              recurrentConstraint: j(this.recurrentConstraint),
              biasConstraint: j(this.biasConstraint),
              dropout: this.dropout,
              recurrentDropout: this.recurrentDropout,
              implementation: this.implementation
            },
            n = t.prototype.getConfig.call(this);
          return delete n.cell, Object.assign(e, n), e;
        }),
        (e.fromConfig = function(t, e) {
          return 0 === e.implmentation && (e.implementation = 1), new t(e);
        }),
        (e.className = "GRU"),
        e
      );
    })(xi);
    r.serialization.registerClass(Ni);
    var Oi = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.DEFAULT_ACTIVATION = "tanh"),
          (n.DEFAULT_RECURRENT_ACTIVATION = "hardSigmoid"),
          (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
          (n.DEFAULT_RECURRENT_INITIALIZER = "orthogonal"),
          (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
          (n.units = e.units),
          I(n.units, "units"),
          (n.activation = cr(
            void 0 === e.activation ? n.DEFAULT_ACTIVATION : e.activation
          )),
          (n.recurrentActivation = cr(
            void 0 === e.recurrentActivation
              ? n.DEFAULT_RECURRENT_ACTIVATION
              : e.recurrentActivation
          )),
          (n.useBias = null == e.useBias || e.useBias),
          (n.kernelInitializer = Ht(
            e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
          )),
          (n.recurrentInitializer = Ht(
            e.recurrentInitializer || n.DEFAULT_RECURRENT_INITIALIZER
          )),
          (n.biasInitializer = Ht(
            e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
          )),
          (n.unitForgetBias = e.unitForgetBias),
          (n.kernelRegularizer = mr(e.kernelRegularizer)),
          (n.recurrentRegularizer = mr(e.recurrentRegularizer)),
          (n.biasRegularizer = mr(e.biasRegularizer)),
          (n.kernelConstraint = q(e.kernelConstraint)),
          (n.recurrentConstraint = q(e.recurrentConstraint)),
          (n.biasConstraint = q(e.biasConstraint)),
          (n.dropout = at([1, st([0, null == e.dropout ? 0 : e.dropout])])),
          (n.recurrentDropout = at([
            1,
            st([0, null == e.recurrentDropout ? 0 : e.recurrentDropout])
          ])),
          (n.implementation = e.implementation),
          (n.stateSize = [n.units, n.units]),
          (n.dropoutMask = null),
          (n.recurrentDropoutMask = null),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.build = function(t) {
          var e,
            n,
            r = (t = ee(t))[t.length - 1];
          if (
            ((this.kernel = this.addWeight(
              "kernel",
              [r, 4 * this.units],
              null,
              this.kernelInitializer,
              this.kernelRegularizer,
              !0,
              this.kernelConstraint
            )),
            (this.recurrentKernel = this.addWeight(
              "recurrent_kernel",
              [this.units, 4 * this.units],
              null,
              this.recurrentInitializer,
              this.recurrentRegularizer,
              !0,
              this.recurrentConstraint
            )),
            this.useBias)
          ) {
            if (this.unitForgetBias) {
              var i = this.biasInitializer,
                a = this.units;
              n = new (((e = (function(t) {
                function e() {
                  return (null !== t && t.apply(this, arguments)) || this;
                }
                return (
                  o(e, t),
                  (e.prototype.apply = function(t, e) {
                    var n = i.apply([a]),
                      r = new Ot().apply([a]),
                      o = i.apply([2 * a]);
                    return mt(mt(n, r), o);
                  }),
                  e
                );
              })(Et)).className = "CustomInit"),
              e)();
            } else n = this.biasInitializer;
            this.bias = this.addWeight(
              "bias",
              [4 * this.units],
              null,
              n,
              this.biasRegularizer,
              !0,
              this.biasConstraint
            );
          } else this.bias = null;
          this.built = !0;
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            var i = null != e.training && e.training;
            if (3 !== (t = t).length)
              throw new p(
                "LSTMCell expects 3 input Tensors (inputs, h, c), got " +
                  t.length +
                  "."
              );
            var o = t[1],
              a = t[2];
            (t = t[0]),
              0 < n.dropout &&
                n.dropout < 1 &&
                null == n.dropoutMask &&
                (n.dropoutMask = Mi(
                  function() {
                    return Object(r.onesLike)(t);
                  },
                  n.dropout,
                  i,
                  4
                )),
              0 < n.recurrentDropout &&
                n.recurrentDropout < 1 &&
                null == n.recurrentDropoutMask &&
                (n.recurrentDropoutMask = Mi(
                  function() {
                    return Object(r.onesLike)(o);
                  },
                  n.recurrentDropout,
                  i,
                  4
                ));
            var s,
              u,
              c,
              l,
              h = n.dropoutMask,
              f = n.recurrentDropoutMask;
            0 < n.dropout && n.dropout < 1 && (t = Object(r.mul)(t, h[0]));
            var d = vt(t, n.kernel.read());
            0 < n.recurrentDropout &&
              n.recurrentDropout < 1 &&
              (o = Object(r.mul)(o, f[0])),
              (d = Object(r.add)(d, vt(o, n.recurrentKernel.read()))),
              n.useBias && (d = St(d, n.bias.read()));
            var m = Object(r.split)(d, 4, d.rank - 1),
              y = m[0],
              g = m[1],
              v = m[2],
              b = m[3];
            (s = n.recurrentActivation.apply(y)),
              (u = n.recurrentActivation.apply(g)),
              (c = Object(r.add)(
                Object(r.mul)(u, a),
                Object(r.mul)(s, n.activation.apply(v))
              )),
              (l = n.recurrentActivation.apply(b));
            var w = Object(r.mul)(l, n.activation.apply(c));
            return [w, w, c];
          });
        }),
        (e.prototype.getConfig = function() {
          var e = {
              units: this.units,
              activation: sr(this.activation),
              recurrentActivation: sr(this.recurrentActivation),
              useBias: this.useBias,
              kernelInitializer: Gt(this.kernelInitializer),
              recurrentInitializer: Gt(this.recurrentInitializer),
              biasInitializer: Gt(this.biasInitializer),
              unitForgetBias: this.unitForgetBias,
              kernelRegularizer: pr(this.kernelRegularizer),
              recurrentRegularizer: pr(this.recurrentRegularizer),
              biasRegularizer: pr(this.biasRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              kernelConstraint: j(this.kernelConstraint),
              recurrentConstraint: j(this.recurrentConstraint),
              biasConstraint: j(this.biasConstraint),
              dropout: this.dropout,
              recurrentDropout: this.recurrentDropout,
              implementation: this.implementation
            },
            n = t.prototype.getConfig.call(this);
          return Object.assign(e, n), e;
        }),
        (e.className = "LSTMCell"),
        e
      );
    })(Ti);
    r.serialization.registerClass(Oi);
    var Ci = (function(t) {
      function e(e) {
        return (
          0 === e.implementation &&
            console.warn(
              "`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."
            ),
          (e.cell = new Oi(e)),
          t.call(this, e) || this
        );
      }
      return (
        o(e, t),
        (e.prototype.call = function(e, n) {
          var i = this;
          return Object(r.tidy)(function() {
            null != i.cell.dropoutMask &&
              (Object(r.dispose)(i.cell.dropoutMask),
              (i.cell.dropoutMask = null)),
              null != i.cell.recurrentDropoutMask &&
                (Object(r.dispose)(i.cell.recurrentDropoutMask),
                (i.cell.recurrentDropoutMask = null));
            var o = null == n ? null : n.mask,
              a = null == n ? null : n.training,
              s = null == n ? null : n.initialState;
            return t.prototype.call.call(i, e, {
              mask: o,
              training: a,
              initialState: s
            });
          });
        }),
        Object.defineProperty(e.prototype, "units", {
          get: function() {
            return this.cell.units;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "activation", {
          get: function() {
            return this.cell.activation;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentActivation", {
          get: function() {
            return this.cell.recurrentActivation;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "useBias", {
          get: function() {
            return this.cell.useBias;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelInitializer", {
          get: function() {
            return this.cell.kernelInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentInitializer", {
          get: function() {
            return this.cell.recurrentInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasInitializer", {
          get: function() {
            return this.cell.biasInitializer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "unitForgetBias", {
          get: function() {
            return this.cell.unitForgetBias;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelRegularizer", {
          get: function() {
            return this.cell.kernelRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentRegularizer", {
          get: function() {
            return this.cell.recurrentRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasRegularizer", {
          get: function() {
            return this.cell.biasRegularizer;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "kernelConstraint", {
          get: function() {
            return this.cell.kernelConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentConstraint", {
          get: function() {
            return this.cell.recurrentConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "biasConstraint", {
          get: function() {
            return this.cell.biasConstraint;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "dropout", {
          get: function() {
            return this.cell.dropout;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "recurrentDropout", {
          get: function() {
            return this.cell.recurrentDropout;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "implementation", {
          get: function() {
            return this.cell.implementation;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.getConfig = function() {
          var e = {
              units: this.units,
              activation: sr(this.activation),
              recurrentActivation: sr(this.recurrentActivation),
              useBias: this.useBias,
              kernelInitializer: Gt(this.kernelInitializer),
              recurrentInitializer: Gt(this.recurrentInitializer),
              biasInitializer: Gt(this.biasInitializer),
              unitForgetBias: this.unitForgetBias,
              kernelRegularizer: pr(this.kernelRegularizer),
              recurrentRegularizer: pr(this.recurrentRegularizer),
              biasRegularizer: pr(this.biasRegularizer),
              activityRegularizer: pr(this.activityRegularizer),
              kernelConstraint: j(this.kernelConstraint),
              recurrentConstraint: j(this.recurrentConstraint),
              biasConstraint: j(this.biasConstraint),
              dropout: this.dropout,
              recurrentDropout: this.recurrentDropout,
              implementation: this.implementation
            },
            n = t.prototype.getConfig.call(this);
          return delete n.cell, Object.assign(e, n), e;
        }),
        (e.fromConfig = function(t, e) {
          return 0 === e.implmentation && (e.implementation = 1), new t(e);
        }),
        (e.className = "LSTM"),
        e
      );
    })(xi);
    r.serialization.registerClass(Ci);
    var Ii = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.cells = e.cells), n;
      }
      return (
        o(e, t),
        Object.defineProperty(e.prototype, "stateSize", {
          get: function() {
            for (
              var t = [], e = 0, n = this.cells.slice().reverse();
              e < n.length;
              e++
            ) {
              var r = n[e];
              Array.isArray(r.stateSize)
                ? t.push.apply(t, r.stateSize)
                : t.push(r.stateSize);
            }
            return t;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.call = function(t, e) {
          var n = this;
          return Object(r.tidy)(function() {
            for (
              var r = (t = t).slice(1),
                i = [],
                o = 0,
                a = n.cells.slice().reverse();
              o < a.length;
              o++
            ) {
              var s = a[o];
              Array.isArray(s.stateSize)
                ? i.push(r.splice(0, s.stateSize.length))
                : i.push(r.splice(0, 1));
            }
            i.reverse();
            for (var u, c = [], l = 0; l < n.cells.length; ++l)
              (s = n.cells[l]),
                (r = i[l]),
                (u = 0 === l ? [t[0]].concat(r) : [u[0]].concat(r)),
                (u = s.call(u, e)),
                c.push(u.slice(1));
            r = [];
            for (var h = 0, f = c.slice().reverse(); h < f.length; h++) {
              var p = f[h];
              r.push.apply(r, p);
            }
            return [u[0]].concat(r);
          });
        }),
        (e.prototype.build = function(t) {
          var e;
          Jt(t) && (t = t[0]), (t = t);
          for (var n = 0, r = this.cells; n < r.length; n++) {
            var i = r[n];
            i.build(t),
              (e = Array.isArray(i.stateSize) ? i.stateSize[0] : i.stateSize),
              (t = [t[0], e]);
          }
          this.built = !0;
        }),
        (e.prototype.getConfig = function() {
          for (var e = [], n = 0, r = this.cells; n < r.length; n++) {
            var i = r[n];
            e.push({ className: i.getClassName(), config: i.getConfig() });
          }
          var o = { cells: e },
            a = t.prototype.getConfig.call(this);
          return Object.assign(o, a), o;
        }),
        (e.fromConfig = function(t, e, n) {
          void 0 === n && (n = {});
          for (var r = [], i = 0, o = e.cells; i < o.length; i++) {
            var a = o[i];
            r.push(hn(a, n));
          }
          return new t({ cells: r });
        }),
        Object.defineProperty(e.prototype, "trainableWeights", {
          get: function() {
            if (!this.trainable) return [];
            for (var t = [], e = 0, n = this.cells; e < n.length; e++) {
              var r = n[e];
              t.push.apply(t, r.trainableWeights);
            }
            return t;
          },
          enumerable: !0,
          configurable: !0
        }),
        Object.defineProperty(e.prototype, "nonTrainableWeights", {
          get: function() {
            for (var t = [], e = 0, n = this.cells; e < n.length; e++) {
              var r = n[e];
              t.push.apply(t, r.nonTrainableWeights);
            }
            if (!this.trainable) {
              for (var i = [], o = 0, a = this.cells; o < a.length; o++)
                (r = a[o]), i.push.apply(i, r.trainableWeights);
              return i.concat(t);
            }
            return t;
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.prototype.getWeights = function() {
          for (var t = [], e = 0, n = this.cells; e < n.length; e++) {
            var r = n[e];
            t.push.apply(t, r.weights);
          }
          return oe(t);
        }),
        (e.prototype.setWeights = function(t) {
          for (var e = [], n = 0, r = this.cells; n < r.length; n++)
            for (
              var i = r[n], o = i.weights.length, a = t.splice(o), s = 0;
              s < i.weights.length;
              ++s
            )
              e.push([i.weights[s], a[s]]);
          ae(e);
        }),
        (e.className = "StackedRNNCells"),
        e
      );
    })(Ti);
    function Mi(t, e, n, i) {
      function o() {
        return xt(t(), e);
      }
      if ((void 0 === n && (n = null), void 0 === i && (i = 1), i > 1)) {
        for (var a = [], s = 0; s < i; s++) a.push(Tt(o, t, n));
        return a.map(function(t) {
          return Object(r.keep)(t.clone());
        });
      }
      return Object(r.keep)(Tt(o, t, n).clone());
    }
    r.serialization.registerClass(Ii);
    var Pi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.layer = e.layer), n;
        }
        return (
          o(e, t),
          (e.prototype.build = function(t) {
            this.built = !0;
          }),
          Object.defineProperty(e.prototype, "trainable", {
            get: function() {
              return null != this.layer && this.layer.trainable;
            },
            set: function(t) {
              null != this.layer && (this.layer.trainable = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              return this.layer.trainableWeights;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              return this.layer.nonTrainableWeights;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "updates", {
            get: function() {
              return this.layer._updates;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "losses", {
            get: function() {
              return this.layer.losses;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getWeights = function() {
            return this.layer.getWeights();
          }),
          (e.prototype.setWeights = function(t) {
            this.layer.setWeights(t);
          }),
          (e.prototype.getConfig = function() {
            var e = {
                layer: {
                  className: this.layer.getClassName(),
                  config: this.layer.getConfig()
                }
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.prototype.setFastWeightInitDuringBuild = function(e) {
            t.prototype.setFastWeightInitDuringBuild.call(this, e),
              null != this.layer && this.layer.setFastWeightInitDuringBuild(e);
          }),
          (e.fromConfig = function(t, e, n) {
            void 0 === n && (n = {});
            var r = hn(e.layer, n);
            delete e.layer;
            var i = { layer: r };
            return Object.assign(i, e), new t(i);
          }),
          e
        );
      })(fe),
      Ri = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.supportsMasking = !0), n;
        }
        return (
          o(e, t),
          (e.prototype.build = function(e) {
            if ((e = ee(e)).length < 3)
              throw new p(
                "TimeDistributed layer expects an input shape >= 3D, but received input shape " +
                  JSON.stringify(e)
              );
            this.inputSpec = [{ shape: e }];
            var n = [e[0]].concat(e.slice(2));
            this.layer.built || (this.layer.build(n), (this.layer.built = !0)),
              t.prototype.build.call(this, e);
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e = [(t = ee(t))[0]].concat(t.slice(2)),
              n = this.layer.computeOutputShape(e),
              r = t[1];
            return [n[0], r].concat(n.slice(1));
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              return Si(
                function(t, r) {
                  return [te(n.layer.call(t, e)), []];
                },
                (t = te(t)),
                [],
                !1,
                null,
                null,
                !1,
                !0
              )[1];
            });
          }),
          (e.className = "TimeDistributed"),
          e
        );
      })(Pi);
    r.serialization.registerClass(Ri);
    var Di = "concat",
      Fi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this,
            r = e.layer.getConfig(),
            i = {};
          (i.className = e.layer.getClassName()),
            (i.config = r),
            (n.forwardLayer = hn(i)),
            (r.goBackwards = !0 !== r.goBackwards);
          var o = {};
          if (
            ((o.className = e.layer.getClassName()),
            (o.config = r),
            (n.backwardLayer = hn(o)),
            (n.forwardLayer.name = "forward_" + n.forwardLayer.name),
            (n.backwardLayer.name = "backward_" + n.backwardLayer.name),
            (n.mergeMode = void 0 === e.mergeMode ? Di : e.mergeMode),
            (function(t) {
              O(H, "BidirectionalMergeMode", t);
            })(n.mergeMode),
            e.weights)
          )
            throw new d(
              "weights support is not implemented for Bidirectional layer yet."
            );
          return (
            (n._stateful = e.layer.stateful),
            (n.returnSequences = e.layer.returnSequences),
            (n.returnState = e.layer.returnState),
            (n.supportsMasking = !0),
            (n._trainable = !0),
            (n.inputSpec = e.layer.inputSpec),
            (n.numConstants = null),
            n
          );
        }
        return (
          o(e, t),
          Object.defineProperty(e.prototype, "trainable", {
            get: function() {
              return this._trainable;
            },
            set: function(t) {
              (this._trainable = t),
                null != this.forwardLayer && (this.forwardLayer.trainable = t),
                null != this.backwardLayer &&
                  (this.backwardLayer.trainable = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getWeights = function() {
            return this.forwardLayer
              .getWeights()
              .concat(this.backwardLayer.getWeights());
          }),
          (e.prototype.setWeights = function(t) {
            var e = t.length,
              n = Math.floor(e / 2);
            this.forwardLayer.setWeights(t.slice(0, n)),
              this.backwardLayer.setWeights(t.slice(n));
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e,
              n,
              r,
              i = this.forwardLayer.computeOutputShape(t);
            return (
              (Array.isArray(i) && Array.isArray(i[0])) || (i = [i]),
              (i = i),
              this.returnState ? ((r = i.slice(1)), (e = i[0])) : (e = i[0]),
              (e = e),
              "concat" === this.mergeMode
                ? ((e[e.length - 1] *= 2), (n = [e]))
                : (n = null == this.mergeMode ? [e, e.slice()] : [e]),
              this.returnState
                ? null == this.mergeMode
                  ? n.concat(r).concat(r.slice())
                  : [e].concat(r).concat(r.slice())
                : b(n)
            );
          }),
          (e.prototype.apply = function(e, n) {
            var r = null == n ? null : n.initialState,
              i = null == n ? null : n.constants;
            null == n && (n = {});
            var o = _i(e, r, i, this.numConstants);
            if (
              ((e = o.inputs),
              (r = o.initialState),
              (i = o.constants),
              Array.isArray(e) && ((r = e.slice(1)), (e = e[0])),
              (null == r || 0 === r.length) && null == i)
            )
              return t.prototype.apply.call(this, e, n);
            var a = [],
              s = [];
            if (null != r) {
              var u = r.length;
              if (u % 2 > 0)
                throw new p(
                  "When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs."
                );
              (n.initialState = r), a.push.apply(a, r);
              var c = r.map(function(t) {
                return new se({ shape: t.shape });
              });
              (this.forwardLayer.stateSpec = c.slice(0, u / 2)),
                (this.backwardLayer.stateSpec = c.slice(u / 2)),
                s.push.apply(s, c);
            }
            if (null != i)
              throw new d(
                "Support for constants in Bidirectional layers is not implemented yet."
              );
            for (var l = a[0] instanceof ue, h = 0, f = a; h < f.length; h++)
              if (f[h] instanceof ue !== l)
                throw new p(
                  "The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors"
                );
            if (l) {
              var m = [e].concat(a),
                y = this.inputSpec.concat(s),
                g = this.inputSpec;
              this.inputSpec = y;
              var v = t.prototype.apply.call(this, m, n);
              return (this.inputSpec = g), v;
            }
            return t.prototype.apply.call(this, e, n);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r.tidy)(function() {
              if (null != e.mask)
                throw new d(
                  "The support for masking is not implemented for Bidirectional layers yet."
                );
              var i,
                o,
                a,
                s,
                u = e.initialState;
              if (null == u)
                (i = n.forwardLayer.call(t, e)),
                  (o = n.backwardLayer.call(t, e));
              else {
                var c = u.slice(0, u.length / 2),
                  l = u.slice(u.length / 2);
                (i = n.forwardLayer.call(
                  t,
                  Object.assign(e, { initialState: c })
                )),
                  (o = n.backwardLayer.call(
                    t,
                    Object.assign(e, { initialState: l })
                  ));
              }
              return (
                n.returnState &&
                  (Array.isArray(i) && (a = i.slice(1).concat(o.slice(1))),
                  (i = i[0]),
                  (o = o[0])),
                n.returnSequences && (o = Object(r.reverse)(o, 1)),
                "concat" === n.mergeMode
                  ? (s = dt([i, o]))
                  : "sum" === n.mergeMode
                  ? (s = Object(r.add)(i, o))
                  : "ave" === n.mergeMode
                  ? (s = Object(r.mul)(0.5, Object(r.add)(i, o)))
                  : "mul" === n.mergeMode
                  ? (s = Object(r.mul)(i, o))
                  : null == n.mergeMode && (s = [i, o]),
                n.returnState
                  ? null == n.mergeMode
                    ? s.concat(a)
                    : [s].concat(a)
                  : s
              );
            });
          }),
          (e.prototype.resetStates = function(t) {
            this.forwardLayer.resetStates(), this.backwardLayer.resetStates();
          }),
          (e.prototype.build = function(t) {
            var e = this;
            J(this.forwardLayer.name, function() {
              e.forwardLayer.build(t);
            }),
              J(this.backwardLayer.name, function() {
                e.backwardLayer.build(t);
              }),
              (this.built = !0);
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              return this.forwardLayer.trainableWeights.concat(
                this.backwardLayer.trainableWeights
              );
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              return this.forwardLayer.nonTrainableWeights.concat(
                this.backwardLayer.nonTrainableWeights
              );
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.setFastWeightInitDuringBuild = function(e) {
            t.prototype.setFastWeightInitDuringBuild.call(this, e),
              null != this.forwardLayer &&
                this.forwardLayer.setFastWeightInitDuringBuild(e),
              null != this.backwardLayer &&
                this.backwardLayer.setFastWeightInitDuringBuild(e);
          }),
          (e.prototype.getConfig = function() {
            var e = { mergeMode: this.mergeMode },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.fromConfig = function(t, e) {
            var n = hn(e.layer);
            if ((delete e.layer, null != e.numConstants))
              throw new d(
                "Deserialization of a Bidirectional layer with numConstants present is not supported yet."
              );
            var r = e;
            return (r.layer = n), new t(r);
          }),
          (e.className = "Bidirectional"),
          e
        );
      })(Pi);
    function zi(t) {
      return new hi(t);
    }
    function Li(t) {
      return new di(t);
    }
    function ji(t) {
      return new gi(t);
    }
    function Bi(t) {
      return new wi(t);
    }
    function qi(t) {
      return new li(t);
    }
    function Ui(t) {
      return new pi(t);
    }
    r.serialization.registerClass(Fi);
    var Vi = ji,
      Wi = Bi,
      Gi = qi,
      Hi = Ui;
    var Ki = Object.freeze({
      inputLayer: function(t) {
        return new me(t);
      },
      elu: function(t) {
        return new br(t);
      },
      reLU: function(t) {
        return new yr(t);
      },
      leakyReLU: function(t) {
        return new gr(t);
      },
      prelu: function(t) {
        return new vr(t);
      },
      softmax: function(t) {
        return new _r(t);
      },
      thresholdedReLU: function(t) {
        return new wr(t);
      },
      conv1d: function(t) {
        return new Pr(t);
      },
      conv2d: function(t) {
        return new Or(t);
      },
      conv2dTranspose: function(t) {
        return new Ir(t);
      },
      conv3d: function(t) {
        return new Cr(t);
      },
      separableConv2d: function(t) {
        return new Mr(t);
      },
      cropping2D: function(t) {
        return new Rr(t);
      },
      upSampling2d: function(t) {
        return new Dr(t);
      },
      depthwiseConv2d: function(t) {
        return new Fr(t);
      },
      activation: function(t) {
        return new Br(t);
      },
      dense: function(t) {
        return new Lr(t);
      },
      dropout: function(t) {
        return new zr(t);
      },
      flatten: function(t) {
        return new jr(t);
      },
      repeatVector: function(t) {
        return new qr(t);
      },
      reshape: function(t) {
        return new Ur(t);
      },
      permute: function(t) {
        return new Vr(t);
      },
      embedding: function(t) {
        return new Gr(t);
      },
      add: function(t) {
        return new Kr(t);
      },
      average: function(t) {
        return new Xr(t);
      },
      concatenate: function(t) {
        return new Jr(t);
      },
      maximum: function(t) {
        return new $r(t);
      },
      minimum: function(t) {
        return new Yr(t);
      },
      multiply: function(t) {
        return new Qr(t);
      },
      dot: function(t) {
        return new ti(t);
      },
      batchNormalization: function(t) {
        return new ai(t);
      },
      zeroPadding2d: function(t) {
        return new si(t);
      },
      averagePooling1d: zi,
      avgPool1d: function(t) {
        return zi(t);
      },
      avgPooling1d: function(t) {
        return zi(t);
      },
      averagePooling2d: Li,
      avgPool2d: function(t) {
        return Li(t);
      },
      avgPooling2d: function(t) {
        return Li(t);
      },
      globalAveragePooling1d: function(t) {
        return new yi(t);
      },
      globalAveragePooling2d: function(t) {
        return new bi(t);
      },
      globalMaxPooling1d: ji,
      globalMaxPooling2d: Bi,
      maxPooling1d: qi,
      maxPooling2d: Ui,
      gru: function(t) {
        return new Ni(t);
      },
      gruCell: function(t) {
        return new Ei(t);
      },
      lstm: function(t) {
        return new Ci(t);
      },
      lstmCell: function(t) {
        return new Oi(t);
      },
      simpleRNN: function(t) {
        return new ki(t);
      },
      simpleRNNCell: function(t) {
        return new Ai(t);
      },
      rnn: function(t) {
        return new xi(t);
      },
      stackedRNNCells: function(t) {
        return new Ii(t);
      },
      bidirectional: function(t) {
        return new Fi(t);
      },
      timeDistributed: function(t) {
        return new Ri(t);
      },
      globalMaxPool1d: Vi,
      globalMaxPool2d: Wi,
      maxPool1d: Gi,
      maxPool2d: Hi,
      Layer: fe,
      RNN: xi,
      RNNCell: Ti,
      input: Hn,
      gaussianNoise: function(t) {
        return new ei(t);
      },
      gaussianDropout: function(t) {
        return new ni(t);
      },
      alphaDropout: function(t) {
        return new ri(t);
      },
      masking: function(t) {
        return new Wr(t);
      }
    });
    var Qi = Object.freeze({
        binaryAccuracy: function(t, e) {
          return We(t, e);
        },
        binaryCrossentropy: function(t, e) {
          return Xe(t, e);
        },
        sparseCategoricalAccuracy: function(t, e) {
          return $e(t, e);
        },
        categoricalAccuracy: function(t, e) {
          return Ge(t, e);
        },
        categoricalCrossentropy: function(t, e) {
          return rn(t, e);
        },
        precision: function(t, e) {
          return Ke(t, e);
        },
        recall: function(t, e) {
          return Qe(t, e);
        },
        cosineProximity: function(t, e) {
          return Ue(t, e);
        },
        meanAbsoluteError: function(t, e) {
          return Ce(t, e);
        },
        meanAbsolutePercentageError: function(t, e) {
          return Ie(t, e);
        },
        MAPE: function(t, e) {
          return Ie(t, e);
        },
        mape: function(t, e) {
          return Ie(t, e);
        },
        meanSquaredError: function(t, e) {
          return Oe(t, e);
        },
        MSE: function(t, e) {
          return Oe(t, e);
        },
        mse: function(t, e) {
          return Oe(t, e);
        }
      }),
      Xi = Object.freeze({
        modelFromJSON: function(t, e) {
          return u(this, void 0, void 0, function() {
            var n, i, o, a, s, u, l, h;
            return c(this, function(c) {
              switch (c.label) {
                case 0:
                  return (
                    "modelTopology" in t || (t = { modelTopology: t }),
                    null != (n = (t = t).modelTopology).model_config &&
                      (n = n.model_config),
                    (i = pn(n)),
                    (o = hn(i, e)),
                    null == t.weightsManifest
                      ? [3, 2]
                      : [
                          4,
                          r.io.loadWeights(
                            t.weightsManifest,
                            t.pathPrefix,
                            o.weights.map(function(t) {
                              return t.originalName;
                            })
                          )
                        ]
                  );
                case 1:
                  for (
                    a = c.sent(), s = {}, u = 0, l = o.weights;
                    u < l.length;
                    u++
                  )
                    (h = l[u]), (s[h.originalName] = a[h.originalName]);
                  o.loadWeights(s), Object(r.dispose)(a), (c.label = 2);
                case 2:
                  return [2, o];
              }
            });
          });
        }
      });
    var $i = Object.freeze({
        l1l2: function(t) {
          return new hr(t);
        },
        l1: function(t) {
          return (function(t) {
            return new hr({ l1: null != t ? t.l1 : null, l2: 0 });
          })(t);
        },
        l2: function(t) {
          return (function(t) {
            return new hr({ l2: null != t ? t.l2 : null, l1: 0 });
          })(t);
        }
      }),
      Yi = (function(t) {
        function e() {
          var e = (null !== t && t.apply(this, arguments)) || this;
          return (e.model = null), e;
        }
        return (
          o(e, t),
          (e.prototype.setModel = function(t) {
            if (!(t instanceof Bn))
              throw new Error(
                "model must be a LayersModel, not some other Container"
              );
            this.model = t;
          }),
          e
        );
      })(we);
    function Ji(t, e) {
      return t < e;
    }
    function Zi(t, e) {
      return t > e;
    }
    var to = (function(t) {
      function e(e) {
        var n = t.call(this) || this;
        if ((null == e && (e = {}), e.restoreBestWeights))
          throw new d(
            "restoreBestWeights = True is not implemented in EarlyStopping yet."
          );
        return (
          (n.monitor = e.monitor || "val_loss"),
          (n.minDelta = Math.abs(e.minDelta || 0)),
          (n.patience = e.patience || 0),
          (n.verbose = e.verbose || 0),
          (n.mode = e.mode || "auto"),
          (n.baseline = e.baseline),
          -1 === ["auto", "min", "max"].indexOf(n.mode) &&
            (console.warn(
              "EarlyStopping mode '" +
                n.mode +
                "' is invalid. Falling back to mode 'auto'."
            ),
            (n.mode = "auto")),
          "min" === n.mode
            ? (n.monitorFunc = Ji)
            : "max" === n.mode
            ? (n.monitorFunc = Zi)
            : -1 !== n.monitor.indexOf("acc")
            ? (n.monitorFunc = Zi)
            : (n.monitorFunc = Ji),
          n.monitorFunc === Ji && (n.minDelta *= -1),
          n
        );
      }
      return (
        o(e, t),
        (e.prototype.onTrainBegin = function(t) {
          return u(this, void 0, void 0, function() {
            return c(this, function(t) {
              return (
                (this.wait = 0),
                (this.stoppedEpoch = 0),
                null != this.baseline
                  ? (this.best = this.baseline)
                  : (this.best = this.monitorFunc === Ji ? 1 / 0 : -1 / 0),
                [2]
              );
            });
          });
        }),
        (e.prototype.onEpochEnd = function(t, e) {
          return u(this, void 0, void 0, function() {
            var n;
            return c(this, function(r) {
              switch (r.label) {
                case 0:
                  return [4, ge(e)];
                case 1:
                  return (
                    r.sent(),
                    null == (n = this.getMonitorValue(e))
                      ? [2]
                      : (this.monitorFunc(n - this.minDelta, this.best)
                          ? ((this.best = n), (this.wait = 0))
                          : (this.wait++,
                            this.wait >= this.patience &&
                              ((this.stoppedEpoch = t),
                              (this.model.stopTraining = !0))),
                        [2])
                  );
              }
            });
          });
        }),
        (e.prototype.onTrainEnd = function(t) {
          return u(this, void 0, void 0, function() {
            return c(this, function(t) {
              return (
                this.stoppedEpoch > 0 &&
                  this.verbose &&
                  console.log(
                    "Epoch " + this.stoppedEpoch + ": early stopping."
                  ),
                [2]
              );
            });
          });
        }),
        (e.prototype.getMonitorValue = function(t) {
          null == t && (t = {});
          var e = t[this.monitor];
          return (
            null == e &&
              console.warn(
                "Metric for EarlyStopping " +
                  this.monitor +
                  " is not available. Available metrics are: " +
                  Object.keys(t)
              ),
            e
          );
        }),
        e
      );
    })(Yi);
    var eo = {
        earlyStopping: function(t) {
          return new to(t);
        }
      },
      no = n(33),
      ro = n(34);
    n.d(e, "version", function() {
      return io;
    }),
      n.d(e, "AdadeltaOptimizer", function() {
        return r.AdadeltaOptimizer;
      }),
      n.d(e, "AdagradOptimizer", function() {
        return r.AdagradOptimizer;
      }),
      n.d(e, "AdamOptimizer", function() {
        return r.AdamOptimizer;
      }),
      n.d(e, "AdamaxOptimizer", function() {
        return r.AdamaxOptimizer;
      }),
      n.d(e, "DataStorage", function() {
        return r.DataStorage;
      }),
      n.d(e, "ENV", function() {
        return r.ENV;
      }),
      n.d(e, "Environment", function() {
        return r.Environment;
      }),
      n.d(e, "KernelBackend", function() {
        return r.KernelBackend;
      }),
      n.d(e, "MomentumOptimizer", function() {
        return r.MomentumOptimizer;
      }),
      n.d(e, "Optimizer", function() {
        return r.Optimizer;
      }),
      n.d(e, "RMSPropOptimizer", function() {
        return r.RMSPropOptimizer;
      }),
      n.d(e, "Rank", function() {
        return r.Rank;
      }),
      n.d(e, "Reduction", function() {
        return r.Reduction;
      }),
      n.d(e, "SGDOptimizer", function() {
        return r.SGDOptimizer;
      }),
      n.d(e, "Tensor", function() {
        return r.Tensor;
      }),
      n.d(e, "TensorBuffer", function() {
        return r.TensorBuffer;
      }),
      n.d(e, "Variable", function() {
        return r.Variable;
      }),
      n.d(e, "abs", function() {
        return r.abs;
      }),
      n.d(e, "acos", function() {
        return r.acos;
      }),
      n.d(e, "acosh", function() {
        return r.acosh;
      }),
      n.d(e, "add", function() {
        return r.add;
      }),
      n.d(e, "addN", function() {
        return r.addN;
      }),
      n.d(e, "addStrict", function() {
        return r.addStrict;
      }),
      n.d(e, "all", function() {
        return r.all;
      }),
      n.d(e, "any", function() {
        return r.any;
      }),
      n.d(e, "argMax", function() {
        return r.argMax;
      }),
      n.d(e, "argMin", function() {
        return r.argMin;
      }),
      n.d(e, "asin", function() {
        return r.asin;
      }),
      n.d(e, "asinh", function() {
        return r.asinh;
      }),
      n.d(e, "atan", function() {
        return r.atan;
      }),
      n.d(e, "atan2", function() {
        return r.atan2;
      }),
      n.d(e, "atanh", function() {
        return r.atanh;
      }),
      n.d(e, "avgPool", function() {
        return r.avgPool;
      }),
      n.d(e, "backend", function() {
        return r.backend;
      }),
      n.d(e, "backend_util", function() {
        return r.backend_util;
      }),
      n.d(e, "basicLSTMCell", function() {
        return r.basicLSTMCell;
      }),
      n.d(e, "batchNorm", function() {
        return r.batchNorm;
      }),
      n.d(e, "batchNorm2d", function() {
        return r.batchNorm2d;
      }),
      n.d(e, "batchNorm3d", function() {
        return r.batchNorm3d;
      }),
      n.d(e, "batchNorm4d", function() {
        return r.batchNorm4d;
      }),
      n.d(e, "batchNormalization", function() {
        return r.batchNormalization;
      }),
      n.d(e, "batchNormalization2d", function() {
        return r.batchNormalization2d;
      }),
      n.d(e, "batchNormalization3d", function() {
        return r.batchNormalization3d;
      }),
      n.d(e, "batchNormalization4d", function() {
        return r.batchNormalization4d;
      }),
      n.d(e, "batchToSpaceND", function() {
        return r.batchToSpaceND;
      }),
      n.d(e, "browser", function() {
        return r.browser;
      }),
      n.d(e, "buffer", function() {
        return r.buffer;
      }),
      n.d(e, "cast", function() {
        return r.cast;
      }),
      n.d(e, "ceil", function() {
        return r.ceil;
      }),
      n.d(e, "clipByValue", function() {
        return r.clipByValue;
      }),
      n.d(e, "clone", function() {
        return r.clone;
      }),
      n.d(e, "complex", function() {
        return r.complex;
      }),
      n.d(e, "concat", function() {
        return r.concat;
      }),
      n.d(e, "concat1d", function() {
        return r.concat1d;
      }),
      n.d(e, "concat2d", function() {
        return r.concat2d;
      }),
      n.d(e, "concat3d", function() {
        return r.concat3d;
      }),
      n.d(e, "concat4d", function() {
        return r.concat4d;
      }),
      n.d(e, "conv1d", function() {
        return r.conv1d;
      }),
      n.d(e, "conv2d", function() {
        return r.conv2d;
      }),
      n.d(e, "conv2dDerFilter", function() {
        return r.conv2dDerFilter;
      }),
      n.d(e, "conv2dTranspose", function() {
        return r.conv2dTranspose;
      }),
      n.d(e, "conv3d", function() {
        return r.conv3d;
      }),
      n.d(e, "cos", function() {
        return r.cos;
      }),
      n.d(e, "cosh", function() {
        return r.cosh;
      }),
      n.d(e, "cumsum", function() {
        return r.cumsum;
      }),
      n.d(e, "customGrad", function() {
        return r.customGrad;
      }),
      n.d(e, "deprecationWarn", function() {
        return r.deprecationWarn;
      }),
      n.d(e, "depthToSpace", function() {
        return r.depthToSpace;
      }),
      n.d(e, "depthwiseConv2d", function() {
        return r.depthwiseConv2d;
      }),
      n.d(e, "disableDeprecationWarnings", function() {
        return r.disableDeprecationWarnings;
      }),
      n.d(e, "dispose", function() {
        return r.dispose;
      }),
      n.d(e, "disposeVariables", function() {
        return r.disposeVariables;
      }),
      n.d(e, "div", function() {
        return r.div;
      }),
      n.d(e, "divStrict", function() {
        return r.divStrict;
      }),
      n.d(e, "dot", function() {
        return r.dot;
      }),
      n.d(e, "dropout", function() {
        return r.dropout;
      }),
      n.d(e, "elu", function() {
        return r.elu;
      }),
      n.d(e, "enableDebugMode", function() {
        return r.enableDebugMode;
      }),
      n.d(e, "enableProdMode", function() {
        return r.enableProdMode;
      }),
      n.d(e, "environment", function() {
        return r.environment;
      }),
      n.d(e, "equal", function() {
        return r.equal;
      }),
      n.d(e, "equalStrict", function() {
        return r.equalStrict;
      }),
      n.d(e, "erf", function() {
        return r.erf;
      }),
      n.d(e, "exp", function() {
        return r.exp;
      }),
      n.d(e, "expandDims", function() {
        return r.expandDims;
      }),
      n.d(e, "expm1", function() {
        return r.expm1;
      }),
      n.d(e, "eye", function() {
        return r.eye;
      }),
      n.d(e, "fft", function() {
        return r.fft;
      }),
      n.d(e, "fill", function() {
        return r.fill;
      }),
      n.d(e, "findBackend", function() {
        return r.findBackend;
      }),
      n.d(e, "findBackendFactory", function() {
        return r.findBackendFactory;
      }),
      n.d(e, "floor", function() {
        return r.floor;
      }),
      n.d(e, "floorDiv", function() {
        return r.floorDiv;
      }),
      n.d(e, "frame", function() {
        return r.frame;
      }),
      n.d(e, "fused", function() {
        return r.fused;
      }),
      n.d(e, "gather", function() {
        return r.gather;
      }),
      n.d(e, "gatherND", function() {
        return r.gatherND;
      }),
      n.d(e, "getBackend", function() {
        return r.getBackend;
      }),
      n.d(e, "grad", function() {
        return r.grad;
      }),
      n.d(e, "grads", function() {
        return r.grads;
      }),
      n.d(e, "greater", function() {
        return r.greater;
      }),
      n.d(e, "greaterEqual", function() {
        return r.greaterEqual;
      }),
      n.d(e, "greaterEqualStrict", function() {
        return r.greaterEqualStrict;
      }),
      n.d(e, "greaterStrict", function() {
        return r.greaterStrict;
      }),
      n.d(e, "hammingWindow", function() {
        return r.hammingWindow;
      }),
      n.d(e, "hannWindow", function() {
        return r.hannWindow;
      }),
      n.d(e, "ifft", function() {
        return r.ifft;
      }),
      n.d(e, "imag", function() {
        return r.imag;
      }),
      n.d(e, "image", function() {
        return r.image;
      }),
      n.d(e, "io", function() {
        return r.io;
      }),
      n.d(e, "irfft", function() {
        return r.irfft;
      }),
      n.d(e, "isFinite", function() {
        return r.isFinite;
      }),
      n.d(e, "isInf", function() {
        return r.isInf;
      }),
      n.d(e, "isNaN", function() {
        return r.isNaN;
      }),
      n.d(e, "keep", function() {
        return r.keep;
      }),
      n.d(e, "leakyRelu", function() {
        return r.leakyRelu;
      }),
      n.d(e, "less", function() {
        return r.less;
      }),
      n.d(e, "lessEqual", function() {
        return r.lessEqual;
      }),
      n.d(e, "lessEqualStrict", function() {
        return r.lessEqualStrict;
      }),
      n.d(e, "lessStrict", function() {
        return r.lessStrict;
      }),
      n.d(e, "linalg", function() {
        return r.linalg;
      }),
      n.d(e, "linspace", function() {
        return r.linspace;
      }),
      n.d(e, "localResponseNormalization", function() {
        return r.localResponseNormalization;
      }),
      n.d(e, "log", function() {
        return r.log;
      }),
      n.d(e, "log1p", function() {
        return r.log1p;
      }),
      n.d(e, "logSigmoid", function() {
        return r.logSigmoid;
      }),
      n.d(e, "logSoftmax", function() {
        return r.logSoftmax;
      }),
      n.d(e, "logSumExp", function() {
        return r.logSumExp;
      }),
      n.d(e, "logicalAnd", function() {
        return r.logicalAnd;
      }),
      n.d(e, "logicalNot", function() {
        return r.logicalNot;
      }),
      n.d(e, "logicalOr", function() {
        return r.logicalOr;
      }),
      n.d(e, "logicalXor", function() {
        return r.logicalXor;
      }),
      n.d(e, "losses", function() {
        return r.losses;
      }),
      n.d(e, "matMul", function() {
        return r.matMul;
      }),
      n.d(e, "math", function() {
        return r.math;
      }),
      n.d(e, "max", function() {
        return r.max;
      }),
      n.d(e, "maxPool", function() {
        return r.maxPool;
      }),
      n.d(e, "maximum", function() {
        return r.maximum;
      }),
      n.d(e, "maximumStrict", function() {
        return r.maximumStrict;
      }),
      n.d(e, "mean", function() {
        return r.mean;
      }),
      n.d(e, "memory", function() {
        return r.memory;
      }),
      n.d(e, "min", function() {
        return r.min;
      }),
      n.d(e, "minimum", function() {
        return r.minimum;
      }),
      n.d(e, "minimumStrict", function() {
        return r.minimumStrict;
      }),
      n.d(e, "mod", function() {
        return r.mod;
      }),
      n.d(e, "modStrict", function() {
        return r.modStrict;
      }),
      n.d(e, "moments", function() {
        return r.moments;
      }),
      n.d(e, "movingAverage", function() {
        return r.movingAverage;
      }),
      n.d(e, "mul", function() {
        return r.mul;
      }),
      n.d(e, "mulStrict", function() {
        return r.mulStrict;
      }),
      n.d(e, "multiRNNCell", function() {
        return r.multiRNNCell;
      }),
      n.d(e, "multinomial", function() {
        return r.multinomial;
      }),
      n.d(e, "neg", function() {
        return r.neg;
      }),
      n.d(e, "nextFrame", function() {
        return r.nextFrame;
      }),
      n.d(e, "norm", function() {
        return r.norm;
      }),
      n.d(e, "notEqual", function() {
        return r.notEqual;
      }),
      n.d(e, "notEqualStrict", function() {
        return r.notEqualStrict;
      }),
      n.d(e, "oneHot", function() {
        return r.oneHot;
      }),
      n.d(e, "ones", function() {
        return r.ones;
      }),
      n.d(e, "onesLike", function() {
        return r.onesLike;
      }),
      n.d(e, "op", function() {
        return r.op;
      }),
      n.d(e, "outerProduct", function() {
        return r.outerProduct;
      }),
      n.d(e, "pad", function() {
        return r.pad;
      }),
      n.d(e, "pad1d", function() {
        return r.pad1d;
      }),
      n.d(e, "pad2d", function() {
        return r.pad2d;
      }),
      n.d(e, "pad3d", function() {
        return r.pad3d;
      }),
      n.d(e, "pad4d", function() {
        return r.pad4d;
      }),
      n.d(e, "pool", function() {
        return r.pool;
      }),
      n.d(e, "pow", function() {
        return r.pow;
      }),
      n.d(e, "powStrict", function() {
        return r.powStrict;
      }),
      n.d(e, "prelu", function() {
        return r.prelu;
      }),
      n.d(e, "print", function() {
        return r.print;
      }),
      n.d(e, "prod", function() {
        return r.prod;
      }),
      n.d(e, "profile", function() {
        return r.profile;
      }),
      n.d(e, "rand", function() {
        return r.rand;
      }),
      n.d(e, "randomNormal", function() {
        return r.randomNormal;
      }),
      n.d(e, "randomUniform", function() {
        return r.randomUniform;
      }),
      n.d(e, "range", function() {
        return r.range;
      }),
      n.d(e, "ready", function() {
        return r.ready;
      }),
      n.d(e, "real", function() {
        return r.real;
      }),
      n.d(e, "reciprocal", function() {
        return r.reciprocal;
      }),
      n.d(e, "registerBackend", function() {
        return r.registerBackend;
      }),
      n.d(e, "relu", function() {
        return r.relu;
      }),
      n.d(e, "removeBackend", function() {
        return r.removeBackend;
      }),
      n.d(e, "reshape", function() {
        return r.reshape;
      }),
      n.d(e, "reverse", function() {
        return r.reverse;
      }),
      n.d(e, "reverse1d", function() {
        return r.reverse1d;
      }),
      n.d(e, "reverse2d", function() {
        return r.reverse2d;
      }),
      n.d(e, "reverse3d", function() {
        return r.reverse3d;
      }),
      n.d(e, "reverse4d", function() {
        return r.reverse4d;
      }),
      n.d(e, "rfft", function() {
        return r.rfft;
      }),
      n.d(e, "round", function() {
        return r.round;
      }),
      n.d(e, "rsqrt", function() {
        return r.rsqrt;
      }),
      n.d(e, "scalar", function() {
        return r.scalar;
      }),
      n.d(e, "scatterND", function() {
        return r.scatterND;
      }),
      n.d(e, "selu", function() {
        return r.selu;
      }),
      n.d(e, "separableConv2d", function() {
        return r.separableConv2d;
      }),
      n.d(e, "serialization", function() {
        return r.serialization;
      }),
      n.d(e, "setBackend", function() {
        return r.setBackend;
      }),
      n.d(e, "setPlatform", function() {
        return r.setPlatform;
      }),
      n.d(e, "setdiff1dAsync", function() {
        return r.setdiff1dAsync;
      }),
      n.d(e, "sigmoid", function() {
        return r.sigmoid;
      }),
      n.d(e, "sign", function() {
        return r.sign;
      }),
      n.d(e, "signal", function() {
        return r.signal;
      }),
      n.d(e, "sin", function() {
        return r.sin;
      }),
      n.d(e, "sinh", function() {
        return r.sinh;
      }),
      n.d(e, "slice", function() {
        return r.slice;
      }),
      n.d(e, "slice1d", function() {
        return r.slice1d;
      }),
      n.d(e, "slice2d", function() {
        return r.slice2d;
      }),
      n.d(e, "slice3d", function() {
        return r.slice3d;
      }),
      n.d(e, "slice4d", function() {
        return r.slice4d;
      }),
      n.d(e, "softmax", function() {
        return r.softmax;
      }),
      n.d(e, "softplus", function() {
        return r.softplus;
      }),
      n.d(e, "spaceToBatchND", function() {
        return r.spaceToBatchND;
      }),
      n.d(e, "sparseToDense", function() {
        return r.sparseToDense;
      }),
      n.d(e, "spectral", function() {
        return r.spectral;
      }),
      n.d(e, "split", function() {
        return r.split;
      }),
      n.d(e, "sqrt", function() {
        return r.sqrt;
      }),
      n.d(e, "square", function() {
        return r.square;
      }),
      n.d(e, "squaredDifference", function() {
        return r.squaredDifference;
      }),
      n.d(e, "squaredDifferenceStrict", function() {
        return r.squaredDifferenceStrict;
      }),
      n.d(e, "squeeze", function() {
        return r.squeeze;
      }),
      n.d(e, "stack", function() {
        return r.stack;
      }),
      n.d(e, "step", function() {
        return r.step;
      }),
      n.d(e, "stridedSlice", function() {
        return r.stridedSlice;
      }),
      n.d(e, "sub", function() {
        return r.sub;
      }),
      n.d(e, "subStrict", function() {
        return r.subStrict;
      }),
      n.d(e, "sum", function() {
        return r.sum;
      }),
      n.d(e, "tan", function() {
        return r.tan;
      }),
      n.d(e, "tanh", function() {
        return r.tanh;
      }),
      n.d(e, "tensor", function() {
        return r.tensor;
      }),
      n.d(e, "tensor1d", function() {
        return r.tensor1d;
      }),
      n.d(e, "tensor2d", function() {
        return r.tensor2d;
      }),
      n.d(e, "tensor3d", function() {
        return r.tensor3d;
      }),
      n.d(e, "tensor4d", function() {
        return r.tensor4d;
      }),
      n.d(e, "tensor5d", function() {
        return r.tensor5d;
      }),
      n.d(e, "tensor6d", function() {
        return r.tensor6d;
      }),
      n.d(e, "tensor_util", function() {
        return r.tensor_util;
      }),
      n.d(e, "test_util", function() {
        return r.test_util;
      }),
      n.d(e, "tidy", function() {
        return r.tidy;
      }),
      n.d(e, "tile", function() {
        return r.tile;
      }),
      n.d(e, "time", function() {
        return r.time;
      }),
      n.d(e, "topk", function() {
        return r.topk;
      }),
      n.d(e, "train", function() {
        return r.train;
      }),
      n.d(e, "transpose", function() {
        return r.transpose;
      }),
      n.d(e, "truncatedNormal", function() {
        return r.truncatedNormal;
      }),
      n.d(e, "unsortedSegmentSum", function() {
        return r.unsortedSegmentSum;
      }),
      n.d(e, "unstack", function() {
        return r.unstack;
      }),
      n.d(e, "util", function() {
        return r.util;
      }),
      n.d(e, "valueAndGrad", function() {
        return r.valueAndGrad;
      }),
      n.d(e, "valueAndGrads", function() {
        return r.valueAndGrads;
      }),
      n.d(e, "variable", function() {
        return r.variable;
      }),
      n.d(e, "variableGrads", function() {
        return r.variableGrads;
      }),
      n.d(e, "version_core", function() {
        return r.version_core;
      }),
      n.d(e, "webgl", function() {
        return r.webgl;
      }),
      n.d(e, "where", function() {
        return r.where;
      }),
      n.d(e, "whereAsync", function() {
        return r.whereAsync;
      }),
      n.d(e, "zeros", function() {
        return r.zeros;
      }),
      n.d(e, "zerosLike", function() {
        return r.zerosLike;
      }),
      n.d(e, "constraints", function() {
        return U;
      }),
      n.d(e, "initializers", function() {
        return Kt;
      }),
      n.d(e, "layers", function() {
        return Ki;
      }),
      n.d(e, "metrics", function() {
        return Qi;
      }),
      n.d(e, "models", function() {
        return Xi;
      }),
      n.d(e, "regularizers", function() {
        return $i;
      }),
      n.d(e, "CallbackList", function() {
        return _e;
      }),
      n.d(e, "CustomCallback", function() {
        return Te;
      }),
      n.d(e, "History", function() {
        return xe;
      }),
      n.d(e, "Callback", function() {
        return Yi;
      }),
      n.d(e, "callbacks", function() {
        return eo;
      }),
      n.d(e, "EarlyStopping", function() {
        return to;
      }),
      n.d(e, "InputSpec", function() {
        return se;
      }),
      n.d(e, "SymbolicTensor", function() {
        return ue;
      }),
      n.d(e, "LayersModel", function() {
        return Bn;
      }),
      n.d(e, "input", function() {
        return Hn;
      }),
      n.d(e, "loadLayersModel", function() {
        return Gn;
      }),
      n.d(e, "model", function() {
        return Vn;
      }),
      n.d(e, "registerCallbackConstructor", function() {
        return Kn;
      }),
      n.d(e, "sequential", function() {
        return Wn;
      }),
      n.d(e, "RNN", function() {
        return xi;
      }),
      n.d(e, "Sequential", function() {
        return Un;
      }),
      n.d(e, "LayerVariable", function() {
        return ie;
      }),
      n.d(e, "version_layers", function() {
        return "1.2.1";
      }),
      n.d(e, "GraphModel", function() {
        return no.a;
      }),
      n.d(e, "loadGraphModel", function() {
        return no.c;
      }),
      n.d(e, "deregisterOp", function() {
        return no.b;
      }),
      n.d(e, "registerOp", function() {
        return no.d;
      }),
      n.d(e, "version_converter", function() {
        return no.e;
      }),
      n.d(e, "data", function() {
        return ro;
      });
    var io = {
      "tfjs-core": r.version_core,
      "tfjs-data": ro.version_data,
      "tfjs-layers": "1.2.1",
      "tfjs-converter": no.e,
      tfjs: "1.2.1"
    };
  },
  function(t, e) {
    function n(t, e) {
      if (!t) throw new Error(e || "Assertion failed");
    }
    (t.exports = n),
      (n.equal = function(t, e, n) {
        if (t != e) throw new Error(n || "Assertion failed: " + t + " != " + e);
      });
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.DEFAULT_QUARTERS_PER_MINUTE = 120),
      (e.DEFAULT_STEPS_PER_BAR = 16),
      (e.DEFAULT_STEPS_PER_QUARTER = 4),
      (e.DEFAULT_STEPS_PER_SECOND = 100),
      (e.DEFAULT_VELOCITY = 80),
      (e.DEFAULT_PROGRAM = 0),
      (e.DEFAULT_TICKS_PER_QUARTER = 220),
      (e.DEFAULT_CHANNEL = 0),
      (e.DRUM_CHANNEL = 9),
      (e.MIN_MIDI_VELOCITY = 0),
      (e.MAX_MIDI_VELOCITY = 127),
      (e.MIDI_VELOCITIES = e.MAX_MIDI_VELOCITY - e.MIN_MIDI_VELOCITY + 1),
      (e.NO_CHORD = "N.C."),
      (e.NUM_PITCH_CLASSES = 12),
      (e.MIN_MIDI_PITCH = 0),
      (e.MAX_MIDI_PITCH = 127),
      (e.MIDI_PITCHES = e.MAX_MIDI_PITCH - e.MIN_MIDI_PITCH + 1),
      (e.MIN_PIANO_PITCH = 21),
      (e.MAX_PIANO_PITCH = 108),
      (e.MIN_DRUM_PITCH = 35),
      (e.MAX_DRUM_PITCH = 81),
      (e.MIN_MIDI_PROGRAM = 0),
      (e.MAX_MIDI_PROGRAM = 127),
      (e.LO_CLICK_PITCH = 89),
      (e.HI_CLICK_PITCH = 90),
      (e.LO_CLICK_CLASS = 9),
      (e.HI_CLICK_CLASS = 10);
  },
  function(t, e, n) {
    "use strict";
    var r = n(8),
      i = n(1);
    function o(t, e) {
      return (
        55296 == (64512 & t.charCodeAt(e)) &&
        (!(e < 0 || e + 1 >= t.length) &&
          56320 == (64512 & t.charCodeAt(e + 1)))
      );
    }
    function a(t) {
      return (
        ((t >>> 24) |
          ((t >>> 8) & 65280) |
          ((t << 8) & 16711680) |
          ((255 & t) << 24)) >>>
        0
      );
    }
    function s(t) {
      return 1 === t.length ? "0" + t : t;
    }
    function u(t) {
      return 7 === t.length
        ? "0" + t
        : 6 === t.length
        ? "00" + t
        : 5 === t.length
        ? "000" + t
        : 4 === t.length
        ? "0000" + t
        : 3 === t.length
        ? "00000" + t
        : 2 === t.length
        ? "000000" + t
        : 1 === t.length
        ? "0000000" + t
        : t;
    }
    (e.inherits = i),
      (e.toArray = function(t, e) {
        if (Array.isArray(t)) return t.slice();
        if (!t) return [];
        var n = [];
        if ("string" == typeof t)
          if (e) {
            if ("hex" === e)
              for (
                (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 &&
                  (t = "0" + t),
                  i = 0;
                i < t.length;
                i += 2
              )
                n.push(parseInt(t[i] + t[i + 1], 16));
          } else
            for (var r = 0, i = 0; i < t.length; i++) {
              var a = t.charCodeAt(i);
              a < 128
                ? (n[r++] = a)
                : a < 2048
                ? ((n[r++] = (a >> 6) | 192), (n[r++] = (63 & a) | 128))
                : o(t, i)
                ? ((a =
                    65536 + ((1023 & a) << 10) + (1023 & t.charCodeAt(++i))),
                  (n[r++] = (a >> 18) | 240),
                  (n[r++] = ((a >> 12) & 63) | 128),
                  (n[r++] = ((a >> 6) & 63) | 128),
                  (n[r++] = (63 & a) | 128))
                : ((n[r++] = (a >> 12) | 224),
                  (n[r++] = ((a >> 6) & 63) | 128),
                  (n[r++] = (63 & a) | 128));
            }
        else for (i = 0; i < t.length; i++) n[i] = 0 | t[i];
        return n;
      }),
      (e.toHex = function(t) {
        for (var e = "", n = 0; n < t.length; n++) e += s(t[n].toString(16));
        return e;
      }),
      (e.htonl = a),
      (e.toHex32 = function(t, e) {
        for (var n = "", r = 0; r < t.length; r++) {
          var i = t[r];
          "little" === e && (i = a(i)), (n += u(i.toString(16)));
        }
        return n;
      }),
      (e.zero2 = s),
      (e.zero8 = u),
      (e.join32 = function(t, e, n, i) {
        var o = n - e;
        r(o % 4 == 0);
        for (
          var a = new Array(o / 4), s = 0, u = e;
          s < a.length;
          s++, u += 4
        ) {
          var c;
          (c =
            "big" === i
              ? (t[u] << 24) | (t[u + 1] << 16) | (t[u + 2] << 8) | t[u + 3]
              : (t[u + 3] << 24) | (t[u + 2] << 16) | (t[u + 1] << 8) | t[u]),
            (a[s] = c >>> 0);
        }
        return a;
      }),
      (e.split32 = function(t, e) {
        for (
          var n = new Array(4 * t.length), r = 0, i = 0;
          r < t.length;
          r++, i += 4
        ) {
          var o = t[r];
          "big" === e
            ? ((n[i] = o >>> 24),
              (n[i + 1] = (o >>> 16) & 255),
              (n[i + 2] = (o >>> 8) & 255),
              (n[i + 3] = 255 & o))
            : ((n[i + 3] = o >>> 24),
              (n[i + 2] = (o >>> 16) & 255),
              (n[i + 1] = (o >>> 8) & 255),
              (n[i] = 255 & o));
        }
        return n;
      }),
      (e.rotr32 = function(t, e) {
        return (t >>> e) | (t << (32 - e));
      }),
      (e.rotl32 = function(t, e) {
        return (t << e) | (t >>> (32 - e));
      }),
      (e.sum32 = function(t, e) {
        return (t + e) >>> 0;
      }),
      (e.sum32_3 = function(t, e, n) {
        return (t + e + n) >>> 0;
      }),
      (e.sum32_4 = function(t, e, n, r) {
        return (t + e + n + r) >>> 0;
      }),
      (e.sum32_5 = function(t, e, n, r, i) {
        return (t + e + n + r + i) >>> 0;
      }),
      (e.sum64 = function(t, e, n, r) {
        var i = t[e],
          o = (r + t[e + 1]) >>> 0,
          a = (o < r ? 1 : 0) + n + i;
        (t[e] = a >>> 0), (t[e + 1] = o);
      }),
      (e.sum64_hi = function(t, e, n, r) {
        return (((e + r) >>> 0 < e ? 1 : 0) + t + n) >>> 0;
      }),
      (e.sum64_lo = function(t, e, n, r) {
        return (e + r) >>> 0;
      }),
      (e.sum64_4_hi = function(t, e, n, r, i, o, a, s) {
        var u = 0,
          c = e;
        return (
          (u += (c = (c + r) >>> 0) < e ? 1 : 0),
          (u += (c = (c + o) >>> 0) < o ? 1 : 0),
          (t + n + i + a + (u += (c = (c + s) >>> 0) < s ? 1 : 0)) >>> 0
        );
      }),
      (e.sum64_4_lo = function(t, e, n, r, i, o, a, s) {
        return (e + r + o + s) >>> 0;
      }),
      (e.sum64_5_hi = function(t, e, n, r, i, o, a, s, u, c) {
        var l = 0,
          h = e;
        return (
          (l += (h = (h + r) >>> 0) < e ? 1 : 0),
          (l += (h = (h + o) >>> 0) < o ? 1 : 0),
          (l += (h = (h + s) >>> 0) < s ? 1 : 0),
          (t + n + i + a + u + (l += (h = (h + c) >>> 0) < c ? 1 : 0)) >>> 0
        );
      }),
      (e.sum64_5_lo = function(t, e, n, r, i, o, a, s, u, c) {
        return (e + r + o + s + c) >>> 0;
      }),
      (e.rotr64_hi = function(t, e, n) {
        return ((e << (32 - n)) | (t >>> n)) >>> 0;
      }),
      (e.rotr64_lo = function(t, e, n) {
        return ((t << (32 - n)) | (e >>> n)) >>> 0;
      }),
      (e.shr64_hi = function(t, e, n) {
        return t >>> n;
      }),
      (e.shr64_lo = function(t, e, n) {
        return ((t << (32 - n)) | (e >>> n)) >>> 0;
      });
  },
  function(t, e) {
    var n,
      r,
      i = (t.exports = {});
    function o() {
      throw new Error("setTimeout has not been defined");
    }
    function a() {
      throw new Error("clearTimeout has not been defined");
    }
    function s(t) {
      if (n === setTimeout) return setTimeout(t, 0);
      if ((n === o || !n) && setTimeout)
        return (n = setTimeout), setTimeout(t, 0);
      try {
        return n(t, 0);
      } catch (e) {
        try {
          return n.call(null, t, 0);
        } catch (e) {
          return n.call(this, t, 0);
        }
      }
    }
    !(function() {
      try {
        n = "function" == typeof setTimeout ? setTimeout : o;
      } catch (t) {
        n = o;
      }
      try {
        r = "function" == typeof clearTimeout ? clearTimeout : a;
      } catch (t) {
        r = a;
      }
    })();
    var u,
      c = [],
      l = !1,
      h = -1;
    function f() {
      l &&
        u &&
        ((l = !1), u.length ? (c = u.concat(c)) : (h = -1), c.length && p());
    }
    function p() {
      if (!l) {
        var t = s(f);
        l = !0;
        for (var e = c.length; e; ) {
          for (u = c, c = []; ++h < e; ) u && u[h].run();
          (h = -1), (e = c.length);
        }
        (u = null),
          (l = !1),
          (function(t) {
            if (r === clearTimeout) return clearTimeout(t);
            if ((r === a || !r) && clearTimeout)
              return (r = clearTimeout), clearTimeout(t);
            try {
              r(t);
            } catch (e) {
              try {
                return r.call(null, t);
              } catch (e) {
                return r.call(this, t);
              }
            }
          })(t);
      }
    }
    function d(t, e) {
      (this.fun = t), (this.array = e);
    }
    function m() {}
    (i.nextTick = function(t) {
      var e = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
      c.push(new d(t, e)), 1 !== c.length || l || s(p);
    }),
      (d.prototype.run = function() {
        this.fun.apply(null, this.array);
      }),
      (i.title = "browser"),
      (i.browser = !0),
      (i.env = {}),
      (i.argv = []),
      (i.version = ""),
      (i.versions = {}),
      (i.on = m),
      (i.addListener = m),
      (i.once = m),
      (i.off = m),
      (i.removeListener = m),
      (i.removeAllListeners = m),
      (i.emit = m),
      (i.prependListener = m),
      (i.prependOnceListener = m),
      (i.listeners = function(t) {
        return [];
      }),
      (i.binding = function(t) {
        throw new Error("process.binding is not supported");
      }),
      (i.cwd = function() {
        return "/";
      }),
      (i.chdir = function(t) {
        throw new Error("process.chdir is not supported");
      }),
      (i.umask = function() {
        return 0;
      });
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(194).tensorflow.magenta.NoteSequence;
    e.NoteSequence = r;
  },
  function(t, e, n) {
    var r = n(2).Buffer,
      i = n(37).Transform,
      o = n(41).StringDecoder;
    function a(t) {
      i.call(this),
        (this.hashMode = "string" == typeof t),
        this.hashMode
          ? (this[t] = this._finalOrDigest)
          : (this.final = this._finalOrDigest),
        this._final && ((this.__final = this._final), (this._final = null)),
        (this._decoder = null),
        (this._encoding = null);
    }
    n(1)(a, i),
      (a.prototype.update = function(t, e, n) {
        "string" == typeof t && (t = r.from(t, e));
        var i = this._update(t);
        return this.hashMode ? this : (n && (i = this._toString(i, n)), i);
      }),
      (a.prototype.setAutoPadding = function() {}),
      (a.prototype.getAuthTag = function() {
        throw new Error("trying to get auth tag in unsupported state");
      }),
      (a.prototype.setAuthTag = function() {
        throw new Error("trying to set auth tag in unsupported state");
      }),
      (a.prototype.setAAD = function() {
        throw new Error("trying to set aad in unsupported state");
      }),
      (a.prototype._transform = function(t, e, n) {
        var r;
        try {
          this.hashMode ? this._update(t) : this.push(this._update(t));
        } catch (t) {
          r = t;
        } finally {
          n(r);
        }
      }),
      (a.prototype._flush = function(t) {
        var e;
        try {
          this.push(this.__final());
        } catch (t) {
          e = t;
        }
        t(e);
      }),
      (a.prototype._finalOrDigest = function(t) {
        var e = this.__final() || r.alloc(0);
        return t && (e = this._toString(e, t, !0)), e;
      }),
      (a.prototype._toString = function(t, e, n) {
        if (
          (this._decoder || ((this._decoder = new o(e)), (this._encoding = e)),
          this._encoding !== e)
        )
          throw new Error("can't switch encodings");
        var r = this._decoder.write(t);
        return n && (r += this._decoder.end()), r;
      }),
      (t.exports = a);
  },
  function(t, e, n) {
    "use strict";
    var r = n(27),
      i =
        Object.keys ||
        function(t) {
          var e = [];
          for (var n in t) e.push(n);
          return e;
        };
    t.exports = h;
    var o = n(21);
    o.inherits = n(1);
    var a = n(60),
      s = n(40);
    o.inherits(h, a);
    for (var u = i(s.prototype), c = 0; c < u.length; c++) {
      var l = u[c];
      h.prototype[l] || (h.prototype[l] = s.prototype[l]);
    }
    function h(t) {
      if (!(this instanceof h)) return new h(t);
      a.call(this, t),
        s.call(this, t),
        t && !1 === t.readable && (this.readable = !1),
        t && !1 === t.writable && (this.writable = !1),
        (this.allowHalfOpen = !0),
        t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1),
        this.once("end", f);
    }
    function f() {
      this.allowHalfOpen || this._writableState.ended || r.nextTick(p, this);
    }
    function p(t) {
      t.end();
    }
    Object.defineProperty(h.prototype, "writableHighWaterMark", {
      enumerable: !1,
      get: function() {
        return this._writableState.highWaterMark;
      }
    }),
      Object.defineProperty(h.prototype, "destroyed", {
        get: function() {
          return (
            void 0 !== this._readableState &&
            void 0 !== this._writableState &&
            (this._readableState.destroyed && this._writableState.destroyed)
          );
        },
        set: function(t) {
          void 0 !== this._readableState &&
            void 0 !== this._writableState &&
            ((this._readableState.destroyed = t),
            (this._writableState.destroyed = t));
        }
      }),
      (h.prototype._destroy = function(t, e) {
        this.push(null), this.end(), r.nextTick(e, t);
      });
  },
  function(t, e, n) {
    "use strict";
    (function(t) {
      var r = e;
      function i(t, e, n) {
        for (var r = Object.keys(e), i = 0; i < r.length; ++i)
          (void 0 !== t[r[i]] && n) || (t[r[i]] = e[r[i]]);
        return t;
      }
      function o(t) {
        function e(t, n) {
          if (!(this instanceof e)) return new e(t, n);
          Object.defineProperty(this, "message", {
            get: function() {
              return t;
            }
          }),
            Error.captureStackTrace
              ? Error.captureStackTrace(this, e)
              : Object.defineProperty(this, "stack", {
                  value: new Error().stack || ""
                }),
            n && i(this, n);
        }
        return (
          ((e.prototype = Object.create(Error.prototype)).constructor = e),
          Object.defineProperty(e.prototype, "name", {
            get: function() {
              return t;
            }
          }),
          (e.prototype.toString = function() {
            return this.name + ": " + this.message;
          }),
          e
        );
      }
      (r.asPromise = n(197)),
        (r.base64 = n(198)),
        (r.EventEmitter = n(199)),
        (r.float = n(200)),
        (r.inquire = n(201)),
        (r.utf8 = n(202)),
        (r.pool = n(203)),
        (r.LongBits = n(204)),
        (r.global =
          ("undefined" != typeof window && window) ||
          (void 0 !== t && t) ||
          ("undefined" != typeof self && self) ||
          this),
        (r.emptyArray = Object.freeze ? Object.freeze([]) : []),
        (r.emptyObject = Object.freeze ? Object.freeze({}) : {}),
        (r.isNode = Boolean(
          r.global.process &&
            r.global.process.versions &&
            r.global.process.versions.node
        )),
        (r.isInteger =
          Number.isInteger ||
          function(t) {
            return "number" == typeof t && isFinite(t) && Math.floor(t) === t;
          }),
        (r.isString = function(t) {
          return "string" == typeof t || t instanceof String;
        }),
        (r.isObject = function(t) {
          return t && "object" == typeof t;
        }),
        (r.isset = r.isSet = function(t, e) {
          var n = t[e];
          return (
            !(null == n || !t.hasOwnProperty(e)) &&
            ("object" != typeof n ||
              (Array.isArray(n) ? n.length : Object.keys(n).length) > 0)
          );
        }),
        (r.Buffer = (function() {
          try {
            var t = r.inquire("buffer").Buffer;
            return t.prototype.utf8Write ? t : null;
          } catch (t) {
            return null;
          }
        })()),
        (r._Buffer_from = null),
        (r._Buffer_allocUnsafe = null),
        (r.newBuffer = function(t) {
          return "number" == typeof t
            ? r.Buffer
              ? r._Buffer_allocUnsafe(t)
              : new r.Array(t)
            : r.Buffer
            ? r._Buffer_from(t)
            : "undefined" == typeof Uint8Array
            ? t
            : new Uint8Array(t);
        }),
        (r.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array),
        (r.Long =
          (r.global.dcodeIO && r.global.dcodeIO.Long) ||
          r.global.Long ||
          r.inquire("long")),
        (r.key2Re = /^true|false|0|1$/),
        (r.key32Re = /^-?(?:0|[1-9][0-9]*)$/),
        (r.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/),
        (r.longToHash = function(t) {
          return t ? r.LongBits.from(t).toHash() : r.LongBits.zeroHash;
        }),
        (r.longFromHash = function(t, e) {
          var n = r.LongBits.fromHash(t);
          return r.Long
            ? r.Long.fromBits(n.lo, n.hi, e)
            : n.toNumber(Boolean(e));
        }),
        (r.merge = i),
        (r.lcFirst = function(t) {
          return t.charAt(0).toLowerCase() + t.substring(1);
        }),
        (r.newError = o),
        (r.ProtocolError = o("ProtocolError")),
        (r.oneOfGetter = function(t) {
          for (var e = {}, n = 0; n < t.length; ++n) e[t[n]] = 1;
          return function() {
            for (var t = Object.keys(this), n = t.length - 1; n > -1; --n)
              if (1 === e[t[n]] && void 0 !== this[t[n]] && null !== this[t[n]])
                return t[n];
          };
        }),
        (r.oneOfSetter = function(t) {
          return function(e) {
            for (var n = 0; n < t.length; ++n) t[n] !== e && delete this[t[n]];
          };
        }),
        (r.toJSONOptions = {
          longs: String,
          enums: String,
          bytes: String,
          json: !0
        }),
        (r._configure = function() {
          var t = r.Buffer;
          t
            ? ((r._Buffer_from =
                (t.from !== Uint8Array.from && t.from) ||
                function(e, n) {
                  return new t(e, n);
                }),
              (r._Buffer_allocUnsafe =
                t.allocUnsafe ||
                function(e) {
                  return new t(e);
                }))
            : (r._Buffer_from = r._Buffer_allocUnsafe = null);
        });
    }.call(this, n(5)));
  },
  function(t, e, n) {
    "use strict";
    function r(t, n, r) {
      if (
        (void 0 === n && (n = "Magenta.js"), void 0 === r && (r = 10), 0 === r)
      )
        throw Error("Logging level cannot be NONE.");
      e.verbosity >= r &&
        (5 === r ? console.warn : console.log)(
          "%c " + n + " ",
          "background:magenta; color:white",
          t
        );
    }
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (function(t) {
        (t[(t.NONE = 0)] = "NONE"),
          (t[(t.WARN = 5)] = "WARN"),
          (t[(t.INFO = 10)] = "INFO"),
          (t[(t.DEBUG = 20)] = "DEBUG");
      })(e.Level || (e.Level = {})),
      (e.verbosity = 10),
      (e.log = r),
      (e.logWithDuration = function(t, e, n, i) {
        void 0 === n && (n = "Magenta.js"),
          void 0 === i && (i = 10),
          r(
            t + " in " + ((performance.now() - e) / 1e3).toPrecision(3) + "s",
            n,
            i
          );
      });
  },
  function(t, e, n) {
    "use strict";
    (function(e, r) {
      var i = 65536,
        o = 4294967295;
      var a = n(2).Buffer,
        s = e.crypto || e.msCrypto;
      s && s.getRandomValues
        ? (t.exports = function(t, e) {
            if (t > o) throw new RangeError("requested too many random bytes");
            var n = a.allocUnsafe(t);
            if (t > 0)
              if (t > i)
                for (var u = 0; u < t; u += i)
                  s.getRandomValues(n.slice(u, u + i));
              else s.getRandomValues(n);
            if ("function" == typeof e)
              return r.nextTick(function() {
                e(null, n);
              });
            return n;
          })
        : (t.exports = function() {
            throw new Error(
              "Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11"
            );
          });
    }.call(this, n(5), n(11)));
  },
  function(t, e, n) {
    var r = n(2).Buffer;
    function i(t, e) {
      (this._block = r.alloc(t)),
        (this._finalSize = e),
        (this._blockSize = t),
        (this._len = 0);
    }
    (i.prototype.update = function(t, e) {
      "string" == typeof t && ((e = e || "utf8"), (t = r.from(t, e)));
      for (
        var n = this._block,
          i = this._blockSize,
          o = t.length,
          a = this._len,
          s = 0;
        s < o;

      ) {
        for (var u = a % i, c = Math.min(o - s, i - u), l = 0; l < c; l++)
          n[u + l] = t[s + l];
        (s += c), (a += c) % i == 0 && this._update(n);
      }
      return (this._len += o), this;
    }),
      (i.prototype.digest = function(t) {
        var e = this._len % this._blockSize;
        (this._block[e] = 128),
          this._block.fill(0, e + 1),
          e >= this._finalSize &&
            (this._update(this._block), this._block.fill(0));
        var n = 8 * this._len;
        if (n <= 4294967295) this._block.writeUInt32BE(n, this._blockSize - 4);
        else {
          var r = (4294967295 & n) >>> 0,
            i = (n - r) / 4294967296;
          this._block.writeUInt32BE(i, this._blockSize - 8),
            this._block.writeUInt32BE(r, this._blockSize - 4);
        }
        this._update(this._block);
        var o = this._hash();
        return t ? o.toString(t) : o;
      }),
      (i.prototype._update = function() {
        throw new Error("_update must be implemented by subclass");
      }),
      (t.exports = i);
  },
  function(t, e, n) {
    (function(t) {
      var n = {};
      !(function(t) {
        var e = (t.DEFAULT_VOLUME = 90),
          n =
            ((t.DEFAULT_DURATION = 128),
            (t.DEFAULT_CHANNEL = 0),
            {
              midi_letter_pitches: {
                a: 21,
                b: 23,
                c: 12,
                d: 14,
                e: 16,
                f: 17,
                g: 19
              },
              midiPitchFromNote: function(t) {
                var e = /([a-g])(#+|b+)?([0-9]+)$/i.exec(t),
                  r = e[1].toLowerCase(),
                  i = e[2] || "";
                return (
                  12 * parseInt(e[3], 10) +
                  n.midi_letter_pitches[r] +
                  ("#" == i.substr(0, 1) ? 1 : -1) * i.length
                );
              },
              ensureMidiPitch: function(t) {
                return "number" != typeof t && /[^0-9]/.test(t)
                  ? n.midiPitchFromNote(t)
                  : parseInt(t, 10);
              },
              midi_pitches_letter: {
                12: "c",
                13: "c#",
                14: "d",
                15: "d#",
                16: "e",
                17: "f",
                18: "f#",
                19: "g",
                20: "g#",
                21: "a",
                22: "a#",
                23: "b"
              },
              midi_flattened_notes: {
                "a#": "bb",
                "c#": "db",
                "d#": "eb",
                "f#": "gb",
                "g#": "ab"
              },
              noteFromMidiPitch: function(t, e) {
                var r,
                  i = 0,
                  o = t;
                e = e || !1;
                return (
                  t > 23 && (o = t - 12 * (i = Math.floor(t / 12) - 1)),
                  (r = n.midi_pitches_letter[o]),
                  e && r.indexOf("#") > 0 && (r = n.midi_flattened_notes[r]),
                  r + i
                );
              },
              mpqnFromBpm: function(t) {
                var e = Math.floor(6e7 / t),
                  n = [];
                do {
                  n.unshift(255 & e), (e >>= 8);
                } while (e);
                for (; n.length < 3; ) n.push(0);
                return n;
              },
              bpmFromMpqn: function(t) {
                if (void 0 !== t[0]) {
                  0;
                  for (var e = 0, n = t.length - 1; n >= 0; ++e, --n) t[e] << n;
                }
                return Math.floor(6e7 / t);
              },
              codes2Str: function(t) {
                return String.fromCharCode.apply(null, t);
              },
              str2Bytes: function(t, e) {
                if (e) for (; t.length / 2 < e; ) t = "0" + t;
                for (var n = [], r = t.length - 1; r >= 0; r -= 2) {
                  var i = 0 === r ? t[r] : t[r - 1] + t[r];
                  n.unshift(parseInt(i, 16));
                }
                return n;
              },
              translateTickTime: function(t) {
                for (var e = 127 & t; (t >>= 7); )
                  (e <<= 8), (e |= (127 & t) | 128);
                for (var n = []; n.push(255 & e), 128 & e; ) e >>= 8;
                return n;
              }
            }),
          r = function(t) {
            if (!this) return new r(t);
            !t ||
              (null === t.type && void 0 === t.type) ||
              (null === t.channel && void 0 === t.channel) ||
              (null === t.param1 && void 0 === t.param1) ||
              (this.setTime(t.time),
              this.setType(t.type),
              this.setChannel(t.channel),
              this.setParam1(t.param1),
              this.setParam2(t.param2));
          };
        (r.NOTE_OFF = 128),
          (r.NOTE_ON = 144),
          (r.AFTER_TOUCH = 160),
          (r.CONTROLLER = 176),
          (r.PROGRAM_CHANGE = 192),
          (r.CHANNEL_AFTERTOUCH = 208),
          (r.PITCH_BEND = 224),
          (r.prototype.setTime = function(t) {
            this.time = n.translateTickTime(t || 0);
          }),
          (r.prototype.setType = function(t) {
            if (t < r.NOTE_OFF || t > r.PITCH_BEND)
              throw new Error("Trying to set an unknown event: " + t);
            this.type = t;
          }),
          (r.prototype.setChannel = function(t) {
            if (t < 0 || t > 15) throw new Error("Channel is out of bounds.");
            this.channel = t;
          }),
          (r.prototype.setParam1 = function(t) {
            this.param1 = t;
          }),
          (r.prototype.setParam2 = function(t) {
            this.param2 = t;
          }),
          (r.prototype.toBytes = function() {
            var t = [],
              e = this.type | (15 & this.channel);
            return (
              t.push.apply(t, this.time),
              t.push(e),
              t.push(this.param1),
              void 0 !== this.param2 &&
                null !== this.param2 &&
                t.push(this.param2),
              t
            );
          });
        var i = function(t) {
          if (!this) return new i(t);
          this.setTime(t.time), this.setType(t.type), this.setData(t.data);
        };
        (i.SEQUENCE = 0),
          (i.TEXT = 1),
          (i.COPYRIGHT = 2),
          (i.TRACK_NAME = 3),
          (i.INSTRUMENT = 4),
          (i.LYRIC = 5),
          (i.MARKER = 6),
          (i.CUE_POINT = 7),
          (i.CHANNEL_PREFIX = 32),
          (i.END_OF_TRACK = 47),
          (i.TEMPO = 81),
          (i.SMPTE = 84),
          (i.TIME_SIG = 88),
          (i.KEY_SIG = 89),
          (i.SEQ_EVENT = 127),
          (i.prototype.setTime = function(t) {
            this.time = n.translateTickTime(t || 0);
          }),
          (i.prototype.setType = function(t) {
            this.type = t;
          }),
          (i.prototype.setData = function(t) {
            this.data = t;
          }),
          (i.prototype.toBytes = function() {
            if (!this.type)
              throw new Error("Type for meta-event not specified.");
            var t = [];
            if (
              (t.push.apply(t, this.time),
              t.push(255, this.type),
              Array.isArray(this.data))
            )
              t.push(this.data.length), t.push.apply(t, this.data);
            else if ("number" == typeof this.data) t.push(1, this.data);
            else if (null !== this.data && void 0 !== this.data) {
              t.push(this.data.length);
              var e = this.data.split("").map(function(t) {
                return t.charCodeAt(0);
              });
              t.push.apply(t, e);
            } else t.push(0);
            return t;
          });
        var o = function(t) {
          if (!this) return new o(t);
          var e = t || {};
          this.events = e.events || [];
        };
        (o.START_BYTES = [77, 84, 114, 107]),
          (o.END_BYTES = [0, 255, 47, 0]),
          (o.prototype.addEvent = function(t) {
            return this.events.push(t), this;
          }),
          (o.prototype.addNoteOn = o.prototype.noteOn = function(t, i, o, a) {
            return (
              this.events.push(
                new r({
                  type: r.NOTE_ON,
                  channel: t,
                  param1: n.ensureMidiPitch(i),
                  param2: a || e,
                  time: o || 0
                })
              ),
              this
            );
          }),
          (o.prototype.addNoteOff = o.prototype.noteOff = function(t, i, o, a) {
            return (
              this.events.push(
                new r({
                  type: r.NOTE_OFF,
                  channel: t,
                  param1: n.ensureMidiPitch(i),
                  param2: a || e,
                  time: o || 0
                })
              ),
              this
            );
          }),
          (o.prototype.addNote = o.prototype.note = function(t, e, n, r, i) {
            return this.noteOn(t, e, r, i), n && this.noteOff(t, e, n, i), this;
          }),
          (o.prototype.addChord = o.prototype.chord = function(t, e, n, r) {
            if (!Array.isArray(e) && !e.length)
              throw new Error("Chord must be an array of pitches");
            return (
              e.forEach(function(e) {
                this.noteOn(t, e, 0, r);
              }, this),
              e.forEach(function(e, r) {
                0 === r ? this.noteOff(t, e, n) : this.noteOff(t, e);
              }, this),
              this
            );
          }),
          (o.prototype.setInstrument = o.prototype.instrument = function(
            t,
            e,
            n
          ) {
            return (
              this.events.push(
                new r({
                  type: r.PROGRAM_CHANGE,
                  channel: t,
                  param1: e,
                  time: n || 0
                })
              ),
              this
            );
          }),
          (o.prototype.setTempo = o.prototype.tempo = function(t, e) {
            return (
              this.events.push(
                new i({ type: i.TEMPO, data: n.mpqnFromBpm(t), time: e || 0 })
              ),
              this
            );
          }),
          (o.prototype.toBytes = function() {
            var t = 0,
              e = [],
              r = o.START_BYTES,
              i = o.END_BYTES;
            this.events.forEach(function(n) {
              var r = n.toBytes();
              (t += r.length), e.push.apply(e, r);
            }),
              (t += i.length);
            var a = n.str2Bytes(t.toString(16), 4);
            return r.concat(a, e, i);
          });
        var a = function(t) {
          if (!this) return new a(t);
          var e = t || {};
          if (e.ticks) {
            if ("number" != typeof e.ticks)
              throw new Error("Ticks per beat must be a number!");
            if (e.ticks <= 0 || e.ticks >= 32768 || e.ticks % 1 != 0)
              throw new Error(
                "Ticks per beat must be an integer between 1 and 32767!"
              );
          }
          (this.ticks = e.ticks || 128), (this.tracks = e.tracks || []);
        };
        (a.HDR_CHUNKID = "MThd"),
          (a.HDR_CHUNK_SIZE = "\0\0\0"),
          (a.HDR_TYPE0 = "\0\0"),
          (a.HDR_TYPE1 = "\0"),
          (a.prototype.addTrack = function(t) {
            return t
              ? (this.tracks.push(t), this)
              : ((t = new o()), this.tracks.push(t), t);
          }),
          (a.prototype.toBytes = function() {
            var t = this.tracks.length.toString(16),
              e = a.HDR_CHUNKID + a.HDR_CHUNK_SIZE;
            return (
              parseInt(t, 16) > 1 ? (e += a.HDR_TYPE1) : (e += a.HDR_TYPE0),
              (e += n.codes2Str(n.str2Bytes(t, 2))),
              (e += String.fromCharCode(this.ticks / 256, this.ticks % 256)),
              this.tracks.forEach(function(t) {
                e += n.codes2Str(t.toBytes());
              }),
              e
            );
          }),
          (t.Util = n),
          (t.File = a),
          (t.Track = o),
          (t.Event = r),
          (t.MetaEvent = i);
      })(n),
        null !== t ? (t.exports = n) : null !== e ? (e = n) : (this.Midi = n);
    }.call(this, n(79)(t)));
  },
  function(t, e, n) {
    "use strict";
    var r = n(1),
      i = n(36),
      o = n(42),
      a = n(43),
      s = n(13);
    function u(t) {
      s.call(this, "digest"), (this._hash = t);
    }
    r(u, s),
      (u.prototype._update = function(t) {
        this._hash.update(t);
      }),
      (u.prototype._final = function() {
        return this._hash.digest();
      }),
      (t.exports = function(t) {
        return "md5" === (t = t.toLowerCase())
          ? new i()
          : "rmd160" === t || "ripemd160" === t
          ? new o()
          : new u(a(t));
      });
  },
  function(t, e, n) {
    (function(t) {
      function n(t) {
        return Object.prototype.toString.call(t);
      }
      (e.isArray = function(t) {
        return Array.isArray ? Array.isArray(t) : "[object Array]" === n(t);
      }),
        (e.isBoolean = function(t) {
          return "boolean" == typeof t;
        }),
        (e.isNull = function(t) {
          return null === t;
        }),
        (e.isNullOrUndefined = function(t) {
          return null == t;
        }),
        (e.isNumber = function(t) {
          return "number" == typeof t;
        }),
        (e.isString = function(t) {
          return "string" == typeof t;
        }),
        (e.isSymbol = function(t) {
          return "symbol" == typeof t;
        }),
        (e.isUndefined = function(t) {
          return void 0 === t;
        }),
        (e.isRegExp = function(t) {
          return "[object RegExp]" === n(t);
        }),
        (e.isObject = function(t) {
          return "object" == typeof t && null !== t;
        }),
        (e.isDate = function(t) {
          return "[object Date]" === n(t);
        }),
        (e.isError = function(t) {
          return "[object Error]" === n(t) || t instanceof Error;
        }),
        (e.isFunction = function(t) {
          return "function" == typeof t;
        }),
        (e.isPrimitive = function(t) {
          return (
            null === t ||
            "boolean" == typeof t ||
            "number" == typeof t ||
            "string" == typeof t ||
            "symbol" == typeof t ||
            void 0 === t
          );
        }),
        (e.isBuffer = t.isBuffer);
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    (function(e) {
      t.exports = function(t, n) {
        for (
          var r = Math.min(t.length, n.length), i = new e(r), o = 0;
          o < r;
          ++o
        )
          i[o] = t[o] ^ n[o];
        return i;
      };
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(8);
    function o() {
      (this.pending = null),
        (this.pendingTotal = 0),
        (this.blockSize = this.constructor.blockSize),
        (this.outSize = this.constructor.outSize),
        (this.hmacStrength = this.constructor.hmacStrength),
        (this.padLength = this.constructor.padLength / 8),
        (this.endian = "big"),
        (this._delta8 = this.blockSize / 8),
        (this._delta32 = this.blockSize / 32);
    }
    (e.BlockHash = o),
      (o.prototype.update = function(t, e) {
        if (
          ((t = r.toArray(t, e)),
          this.pending
            ? (this.pending = this.pending.concat(t))
            : (this.pending = t),
          (this.pendingTotal += t.length),
          this.pending.length >= this._delta8)
        ) {
          var n = (t = this.pending).length % this._delta8;
          (this.pending = t.slice(t.length - n, t.length)),
            0 === this.pending.length && (this.pending = null),
            (t = r.join32(t, 0, t.length - n, this.endian));
          for (var i = 0; i < t.length; i += this._delta32)
            this._update(t, i, i + this._delta32);
        }
        return this;
      }),
      (o.prototype.digest = function(t) {
        return (
          this.update(this._pad()), i(null === this.pending), this._digest(t)
        );
      }),
      (o.prototype._pad = function() {
        var t = this.pendingTotal,
          e = this._delta8,
          n = e - ((t + this.padLength) % e),
          r = new Array(n + this.padLength);
        r[0] = 128;
        for (var i = 1; i < n; i++) r[i] = 0;
        if (((t <<= 3), "big" === this.endian)) {
          for (var o = 8; o < this.padLength; o++) r[i++] = 0;
          (r[i++] = 0),
            (r[i++] = 0),
            (r[i++] = 0),
            (r[i++] = 0),
            (r[i++] = (t >>> 24) & 255),
            (r[i++] = (t >>> 16) & 255),
            (r[i++] = (t >>> 8) & 255),
            (r[i++] = 255 & t);
        } else
          for (
            r[i++] = 255 & t,
              r[i++] = (t >>> 8) & 255,
              r[i++] = (t >>> 16) & 255,
              r[i++] = (t >>> 24) & 255,
              r[i++] = 0,
              r[i++] = 0,
              r[i++] = 0,
              r[i++] = 0,
              o = 8;
            o < this.padLength;
            o++
          )
            r[i++] = 0;
        return r;
      });
  },
  function(t, e, n) {
    var r = e;
    (r.bignum = n(4)),
      (r.define = n(172).define),
      (r.base = n(25)),
      (r.constants = n(87)),
      (r.decoders = n(177)),
      (r.encoders = n(179));
  },
  function(t, e, n) {
    var r = e;
    (r.Reporter = n(174).Reporter),
      (r.DecoderBuffer = n(86).DecoderBuffer),
      (r.EncoderBuffer = n(86).EncoderBuffer),
      (r.Node = n(175));
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(12),
      a = n(9),
      s = 0.5,
      u = (function(t) {
        function e(e) {
          var n = this.constructor,
            r = t.call(this, e) || this;
          return Object.setPrototypeOf(r, n.prototype), r;
        }
        return i(e, t), e;
      })(Error);
    e.MultipleTimeSignatureException = u;
    var c = (function(t) {
      function e(e) {
        var n = this.constructor,
          r = t.call(this, e) || this;
        return Object.setPrototypeOf(r, n.prototype), r;
      }
      return i(e, t), e;
    })(Error);
    e.BadTimeSignatureException = c;
    var l = (function(t) {
      function e(e) {
        var n = this.constructor,
          r = t.call(this, e) || this;
        return Object.setPrototypeOf(r, n.prototype), r;
      }
      return i(e, t), e;
    })(Error);
    e.NegativeTimeException = l;
    var h = (function(t) {
      function e(e) {
        var n = this.constructor,
          r = t.call(this, e) || this;
        return Object.setPrototypeOf(r, n.prototype), r;
      }
      return i(e, t), e;
    })(Error);
    e.MultipleTempoException = h;
    var f = (function(t) {
      function e(e) {
        var n = this.constructor,
          r = t.call(this, e) || this;
        return Object.setPrototypeOf(r, n.prototype), r;
      }
      return i(e, t), e;
    })(Error);
    function p(t) {
      return o.NoteSequence.decode(o.NoteSequence.encode(t).finish());
    }
    function d(t, e) {
      return (t * e) / 60;
    }
    function m(t, e, n) {
      void 0 === n && (n = s);
      var r = t * e;
      return Math.floor(r + (1 - n));
    }
    function y(t) {
      return t.controlChanges.concat(t.textAnnotations);
    }
    function g(t) {
      if (t.tempos && 0 !== t.tempos.length) {
        if (
          (t.tempos.sort(function(t, e) {
            return t.time - e.time;
          }),
          0 !== t.tempos[0].time &&
            t.tempos[0].qpm !== a.DEFAULT_QUARTERS_PER_MINUTE)
        )
          throw new h(
            "NoteSequence has an implicit tempo change from initial " +
              a.DEFAULT_QUARTERS_PER_MINUTE +
              " qpm to " +
              t.tempos[0].qpm +
              " qpm at " +
              t.tempos[0].time +
              " seconds."
          );
        for (var e = 1; e < t.tempos.length; e++)
          if (t.tempos[e].qpm !== t.tempos[0].qpm)
            throw new h(
              "NoteSequence has at least one tempo change from " +
                t.tempos[0].qpm +
                " qpm to " +
                t.tempos[e].qpm +
                "qpm at " +
                t.tempos[e].time +
                " seconds."
            );
      }
    }
    function v(t) {
      return (
        t.quantizationInfo &&
        (t.quantizationInfo.stepsPerQuarter > 0 ||
          t.quantizationInfo.stepsPerSecond > 0)
      );
    }
    function b(t) {
      if (!v(t))
        throw new f(
          "NoteSequence " +
            t.id +
            " is not quantized (missing quantizationInfo)"
        );
    }
    function w(t) {
      return t.quantizationInfo && t.quantizationInfo.stepsPerQuarter > 0;
    }
    function _(t) {
      if (!w(t))
        throw new f(
          "NoteSequence " +
            t.id +
            " is not quantized or is quantized based on absolute timing"
        );
    }
    function S(t) {
      return t.quantizationInfo && t.quantizationInfo.stepsPerSecond > 0;
    }
    function x(t, e, n, r, i) {
      for (var a, s = 0, u = 0; u < t.length; ++u) {
        var c = i ? i[u] : t[u][e];
        if (0 === c)
          throw Error(
            "Sequence " +
              t[u].id +
              " has no " +
              e +
              ", and no individual duration was provided."
          );
        0 === u
          ? (a = p(t[0]))
          : Array.prototype.push.apply(
              a.notes,
              t[u].notes.map(function(t) {
                var e = o.NoteSequence.Note.create(t);
                return (e[n] += s), (e[r] += s), e;
              })
            ),
          (s += c);
      }
      return (a[e] = s), a;
    }
    function T(t, e, n, r, i, o, a) {
      var s = p(t);
      (s[r] = n),
        (s.notes = s.notes.filter(function(t) {
          return t[i] >= e && t[i] <= n && (a || t[o] <= n);
        }));
      for (var u = 0; u < s.notes.length; u++)
        (s.notes[u][i] -= e),
          (s.notes[u][o] -= e),
          a && (s.notes[u][o] = Math.min(s.notes[u][o], n));
      return (s[r] = Math.min(t[r] - e, n)), s;
    }
    (e.QuantizationStatusException = f),
      (e.clone = p),
      (e.stepsPerQuarterToStepsPerSecond = d),
      (e.quantizeToStep = m),
      (e.quantizeNoteSequence = function(t, e) {
        var n = p(t);
        if (
          ((n.quantizationInfo = o.NoteSequence.QuantizationInfo.create({
            stepsPerQuarter: e
          })),
          n.timeSignatures.length > 0)
        ) {
          if (
            (n.timeSignatures.sort(function(t, e) {
              return t.time - e.time;
            }),
            0 !== n.timeSignatures[0].time &&
              (4 !== n.timeSignatures[0].numerator ||
                4 !== n.timeSignatures[0].denominator))
          )
            throw new u(
              "NoteSequence has an implicit change from initial 4/4 time signature to " +
                n.timeSignatures[0].numerator +
                "/" +
                n.timeSignatures[0].denominator +
                " at " +
                n.timeSignatures[0].time +
                " seconds."
            );
          for (var r = 1; r < n.timeSignatures.length; r++)
            if (
              (i = n.timeSignatures[r]).numerator !==
                n.timeSignatures[0].numerator ||
              i.denominator !== n.timeSignatures[0].denominator
            )
              throw new u(
                "NoteSequence has at least one time signature change from " +
                  n.timeSignatures[0].numerator +
                  "/" +
                  n.timeSignatures[0].denominator +
                  " to " +
                  i.numerator +
                  "/" +
                  i.denominator +
                  " at " +
                  i.time +
                  " seconds"
              );
          (n.timeSignatures[0].time = 0),
            (n.timeSignatures = [n.timeSignatures[0]]);
        } else {
          var i = o.NoteSequence.TimeSignature.create({
            numerator: 4,
            denominator: 4,
            time: 0
          });
          n.timeSignatures.push(i);
        }
        var s,
          h = n.timeSignatures[0];
        if (!(s = h.denominator) || 0 != (s & (s - 1)))
          throw new c(
            "Denominator is not a power of 2. Time signature: " +
              h.numerator +
              "/" +
              h.denominator
          );
        if (0 === h.numerator)
          throw new c(
            "Numerator is 0. Time signature: " +
              h.numerator +
              "/" +
              h.denominator
          );
        if (n.tempos.length > 0)
          g(n), (n.tempos[0].time = 0), (n.tempos = [n.tempos[0]]);
        else {
          var f = o.NoteSequence.Tempo.create({
            qpm: a.DEFAULT_QUARTERS_PER_MINUTE,
            time: 0
          });
          n.tempos.push(f);
        }
        var v = d(e, n.tempos[0].qpm);
        return (
          (n.totalQuantizedSteps = m(t.totalTime, v)),
          (function(t, e) {
            for (var n = 0, r = t.notes; n < r.length; n++) {
              var i = r[n];
              if (
                ((i.quantizedStartStep = m(i.startTime, e)),
                (i.quantizedEndStep = m(i.endTime, e)),
                i.quantizedEndStep === i.quantizedStartStep &&
                  (i.quantizedEndStep += 1),
                i.quantizedStartStep < 0 || i.quantizedEndStep < 0)
              )
                throw new l(
                  "Got negative note time: start_step = " +
                    i.quantizedStartStep +
                    ", end_step = " +
                    i.quantizedEndStep
                );
              i.quantizedEndStep > t.totalQuantizedSteps &&
                (t.totalQuantizedSteps = i.quantizedEndStep);
            }
            y(t).forEach(function(t) {
              if (((t.quantizedStep = m(t.time, e)), t.quantizedStep < 0))
                throw new l(
                  "Got negative event time: step = " + t.quantizedStep
                );
            });
          })(n, v),
          n
        );
      }),
      (e.isQuantizedSequence = v),
      (e.assertIsQuantizedSequence = b),
      (e.isRelativeQuantizedSequence = w),
      (e.assertIsRelativeQuantizedSequence = _),
      (e.isAbsoluteQuantizedSequence = S),
      (e.assertIsAbsoluteQuantizedSequence = function(t) {
        if (!S(t))
          throw new f(
            "NoteSequence " +
              t.id +
              " is not quantized or is quantized based on relative timing"
          );
      }),
      (e.unquantizeSequence = function(t, e) {
        _(t), g(t);
        var n = p(t);
        e
          ? n.tempos && n.tempos.length > 0
            ? (n.tempos[0].qpm = e)
            : n.tempos.push(o.NoteSequence.Tempo.create({ time: 0, qpm: e }))
          : (e =
              t.tempos && t.tempos.length > 0
                ? n.tempos[0].qpm
                : a.DEFAULT_QUARTERS_PER_MINUTE);
        var r = function(t) {
          return (t / n.quantizationInfo.stepsPerQuarter) * (60 / e);
        };
        return (
          (n.totalTime = r(n.totalQuantizedSteps)),
          n.notes.forEach(function(t) {
            (t.startTime = r(t.quantizedStartStep)),
              (t.endTime = r(t.quantizedEndStep)),
              (n.totalTime = Math.max(n.totalTime, t.endTime));
          }),
          y(n).forEach(function(t) {
            t.time = r(t.time);
          }),
          n
        );
      }),
      (e.mergeInstruments = function(t) {
        var e = p(t),
          n = e.notes.concat(e.pitchBends).concat(e.controlChanges),
          r = Array.from(
            new Set(
              n
                .filter(function(t) {
                  return !t.isDrum;
                })
                .map(function(t) {
                  return t.program;
                })
            )
          );
        return (
          n.forEach(function(t) {
            t.isDrum
              ? ((t.program = 0), (t.instrument = r.length))
              : (t.instrument = r.indexOf(t.program));
          }),
          e
        );
      }),
      (e.replaceInstruments = function(t, e) {
        var n = new Set(
            t.notes.map(function(t) {
              return t.instrument;
            })
          ),
          r = new Set(
            e.notes.map(function(t) {
              return t.instrument;
            })
          ),
          i = [];
        t.notes.forEach(function(t) {
          r.has(t.instrument) || i.push(o.NoteSequence.Note.create(t));
        }),
          e.notes.forEach(function(t) {
            n.has(t.instrument) && i.push(o.NoteSequence.Note.create(t));
          });
        var a = p(t);
        return (
          (a.notes = i.sort(function(t, e) {
            var n = t.instrument - e.instrument;
            return n || t.quantizedStartStep - e.quantizedStartStep;
          })),
          a
        );
      }),
      (e.mergeConsecutiveNotes = function(t) {
        b(t);
        var e = p(t);
        e.notes = [];
        var n = t.notes.sort(function(t, e) {
            var n = t.instrument - e.instrument;
            return n || t.quantizedStartStep - e.quantizedStartStep;
          }),
          r = new o.NoteSequence.Note();
        (r.pitch = n[0].pitch),
          (r.instrument = n[0].instrument),
          (r.quantizedStartStep = n[0].quantizedStartStep),
          (r.quantizedEndStep = n[0].quantizedEndStep),
          e.notes.push(r);
        for (var i = 0, a = 1; a < n.length; a++) {
          var s = n[a],
            u = e.notes[i];
          if (
            u.instrument === s.instrument &&
            u.pitch === s.pitch &&
            s.quantizedStartStep === u.quantizedEndStep &&
            s.quantizedStartStep % 16 != 0
          )
            e.notes[i].quantizedEndStep +=
              s.quantizedEndStep - s.quantizedStartStep;
          else {
            var c = new o.NoteSequence.Note();
            (c.pitch = n[a].pitch),
              (c.instrument = n[a].instrument),
              (c.quantizedStartStep = n[a].quantizedStartStep),
              (c.quantizedEndStep = n[a].quantizedEndStep),
              e.notes.push(c),
              i++;
          }
        }
        return e;
      }),
      (e.concatenate = function(t, e) {
        if (e && e.length !== t.length)
          throw new Error(
            "Number of sequences to concatenate and their individual\n durations does not match."
          );
        if (v(t[0])) {
          for (var n = 0; n < t.length; ++n)
            if (
              (b(t[n]),
              t[n].quantizationInfo.stepsPerQuarter !==
                t[0].quantizationInfo.stepsPerQuarter)
            )
              throw new Error(
                "Not all sequences have the same quantizationInfo"
              );
          return x(
            t,
            "totalQuantizedSteps",
            "quantizedStartStep",
            "quantizedEndStep",
            e
          );
        }
        return x(t, "totalTime", "startTime", "endTime", e);
      }),
      (e.trim = function(t, e, n, r) {
        return v(t)
          ? T(
              t,
              e,
              n,
              "totalQuantizedSteps",
              "quantizedStartStep",
              "quantizedEndStep",
              r
            )
          : T(t, e, n, "totalTime", "startTime", "endTime", r);
      }),
      (e.split = function(t, e) {
        b(t);
        for (
          var n = p(t),
            r = n.notes.sort(function(t, e) {
              return t.quantizedStartStep - e.quantizedStartStep;
            }),
            i = [],
            a = 0,
            s = [],
            u = 0;
          u < r.length;
          u++
        ) {
          var c = r[u],
            l = c.quantizedStartStep,
            h = c.quantizedEndStep;
          if (
            ((c.quantizedStartStep -= a),
            (c.quantizedEndStep -= a),
            !(c.quantizedStartStep < 0))
          )
            if (c.quantizedEndStep <= e) s.push(c);
            else {
              if (c.quantizedStartStep < e) {
                var f = o.NoteSequence.Note.create(c);
                (f.quantizedEndStep = e),
                  (f.startTime = f.endTime = void 0),
                  s.push(f),
                  (c.quantizedStartStep = a + e),
                  (c.quantizedEndStep = h);
              } else (c.quantizedStartStep = l), (c.quantizedEndStep = h);
              var d;
              (c.quantizedEndStep > e || c.quantizedStartStep > e) && (u -= 1),
                0 !== s.length &&
                  (((d = p(n)).notes = s),
                  (d.totalQuantizedSteps = e),
                  i.push(d)),
                (s = []),
                (a += e);
            }
        }
        return (
          0 !== s.length &&
            (((d = p(n)).notes = s), (d.totalQuantizedSteps = e), i.push(d)),
          i
        );
      });
  },
  function(t, e, n) {
    "use strict";
    (function(e) {
      !e.version ||
      0 === e.version.indexOf("v0.") ||
      (0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8."))
        ? (t.exports = {
            nextTick: function(t, n, r, i) {
              if ("function" != typeof t)
                throw new TypeError('"callback" argument must be a function');
              var o,
                a,
                s = arguments.length;
              switch (s) {
                case 0:
                case 1:
                  return e.nextTick(t);
                case 2:
                  return e.nextTick(function() {
                    t.call(null, n);
                  });
                case 3:
                  return e.nextTick(function() {
                    t.call(null, n, r);
                  });
                case 4:
                  return e.nextTick(function() {
                    t.call(null, n, r, i);
                  });
                default:
                  for (o = new Array(s - 1), a = 0; a < o.length; )
                    o[a++] = arguments[a];
                  return e.nextTick(function() {
                    t.apply(null, o);
                  });
              }
            }
          })
        : (t.exports = e);
    }.call(this, n(11)));
  },
  function(t, e, n) {
    var r = n(2).Buffer;
    function i(t) {
      r.isBuffer(t) || (t = r.from(t));
      for (var e = (t.length / 4) | 0, n = new Array(e), i = 0; i < e; i++)
        n[i] = t.readUInt32BE(4 * i);
      return n;
    }
    function o(t) {
      for (; 0 < t.length; t++) t[0] = 0;
    }
    function a(t, e, n, r, i) {
      for (
        var o,
          a,
          s,
          u,
          c = n[0],
          l = n[1],
          h = n[2],
          f = n[3],
          p = t[0] ^ e[0],
          d = t[1] ^ e[1],
          m = t[2] ^ e[2],
          y = t[3] ^ e[3],
          g = 4,
          v = 1;
        v < i;
        v++
      )
        (o =
          c[p >>> 24] ^
          l[(d >>> 16) & 255] ^
          h[(m >>> 8) & 255] ^
          f[255 & y] ^
          e[g++]),
          (a =
            c[d >>> 24] ^
            l[(m >>> 16) & 255] ^
            h[(y >>> 8) & 255] ^
            f[255 & p] ^
            e[g++]),
          (s =
            c[m >>> 24] ^
            l[(y >>> 16) & 255] ^
            h[(p >>> 8) & 255] ^
            f[255 & d] ^
            e[g++]),
          (u =
            c[y >>> 24] ^
            l[(p >>> 16) & 255] ^
            h[(d >>> 8) & 255] ^
            f[255 & m] ^
            e[g++]),
          (p = o),
          (d = a),
          (m = s),
          (y = u);
      return (
        (o =
          ((r[p >>> 24] << 24) |
            (r[(d >>> 16) & 255] << 16) |
            (r[(m >>> 8) & 255] << 8) |
            r[255 & y]) ^
          e[g++]),
        (a =
          ((r[d >>> 24] << 24) |
            (r[(m >>> 16) & 255] << 16) |
            (r[(y >>> 8) & 255] << 8) |
            r[255 & p]) ^
          e[g++]),
        (s =
          ((r[m >>> 24] << 24) |
            (r[(y >>> 16) & 255] << 16) |
            (r[(p >>> 8) & 255] << 8) |
            r[255 & d]) ^
          e[g++]),
        (u =
          ((r[y >>> 24] << 24) |
            (r[(p >>> 16) & 255] << 16) |
            (r[(d >>> 8) & 255] << 8) |
            r[255 & m]) ^
          e[g++]),
        [(o >>>= 0), (a >>>= 0), (s >>>= 0), (u >>>= 0)]
      );
    }
    var s = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
      u = (function() {
        for (var t = new Array(256), e = 0; e < 256; e++)
          t[e] = e < 128 ? e << 1 : (e << 1) ^ 283;
        for (
          var n = [],
            r = [],
            i = [[], [], [], []],
            o = [[], [], [], []],
            a = 0,
            s = 0,
            u = 0;
          u < 256;
          ++u
        ) {
          var c = s ^ (s << 1) ^ (s << 2) ^ (s << 3) ^ (s << 4);
          (c = (c >>> 8) ^ (255 & c) ^ 99), (n[a] = c), (r[c] = a);
          var l = t[a],
            h = t[l],
            f = t[h],
            p = (257 * t[c]) ^ (16843008 * c);
          (i[0][a] = (p << 24) | (p >>> 8)),
            (i[1][a] = (p << 16) | (p >>> 16)),
            (i[2][a] = (p << 8) | (p >>> 24)),
            (i[3][a] = p),
            (p = (16843009 * f) ^ (65537 * h) ^ (257 * l) ^ (16843008 * a)),
            (o[0][c] = (p << 24) | (p >>> 8)),
            (o[1][c] = (p << 16) | (p >>> 16)),
            (o[2][c] = (p << 8) | (p >>> 24)),
            (o[3][c] = p),
            0 === a ? (a = s = 1) : ((a = l ^ t[t[t[f ^ l]]]), (s ^= t[t[s]]));
        }
        return { SBOX: n, INV_SBOX: r, SUB_MIX: i, INV_SUB_MIX: o };
      })();
    function c(t) {
      (this._key = i(t)), this._reset();
    }
    (c.blockSize = 16),
      (c.keySize = 32),
      (c.prototype.blockSize = c.blockSize),
      (c.prototype.keySize = c.keySize),
      (c.prototype._reset = function() {
        for (
          var t = this._key,
            e = t.length,
            n = e + 6,
            r = 4 * (n + 1),
            i = [],
            o = 0;
          o < e;
          o++
        )
          i[o] = t[o];
        for (o = e; o < r; o++) {
          var a = i[o - 1];
          o % e == 0
            ? ((a = (a << 8) | (a >>> 24)),
              (a =
                (u.SBOX[a >>> 24] << 24) |
                (u.SBOX[(a >>> 16) & 255] << 16) |
                (u.SBOX[(a >>> 8) & 255] << 8) |
                u.SBOX[255 & a]),
              (a ^= s[(o / e) | 0] << 24))
            : e > 6 &&
              o % e == 4 &&
              (a =
                (u.SBOX[a >>> 24] << 24) |
                (u.SBOX[(a >>> 16) & 255] << 16) |
                (u.SBOX[(a >>> 8) & 255] << 8) |
                u.SBOX[255 & a]),
            (i[o] = i[o - e] ^ a);
        }
        for (var c = [], l = 0; l < r; l++) {
          var h = r - l,
            f = i[h - (l % 4 ? 0 : 4)];
          c[l] =
            l < 4 || h <= 4
              ? f
              : u.INV_SUB_MIX[0][u.SBOX[f >>> 24]] ^
                u.INV_SUB_MIX[1][u.SBOX[(f >>> 16) & 255]] ^
                u.INV_SUB_MIX[2][u.SBOX[(f >>> 8) & 255]] ^
                u.INV_SUB_MIX[3][u.SBOX[255 & f]];
        }
        (this._nRounds = n),
          (this._keySchedule = i),
          (this._invKeySchedule = c);
      }),
      (c.prototype.encryptBlockRaw = function(t) {
        return a(
          (t = i(t)),
          this._keySchedule,
          u.SUB_MIX,
          u.SBOX,
          this._nRounds
        );
      }),
      (c.prototype.encryptBlock = function(t) {
        var e = this.encryptBlockRaw(t),
          n = r.allocUnsafe(16);
        return (
          n.writeUInt32BE(e[0], 0),
          n.writeUInt32BE(e[1], 4),
          n.writeUInt32BE(e[2], 8),
          n.writeUInt32BE(e[3], 12),
          n
        );
      }),
      (c.prototype.decryptBlock = function(t) {
        var e = (t = i(t))[1];
        (t[1] = t[3]), (t[3] = e);
        var n = a(
            t,
            this._invKeySchedule,
            u.INV_SUB_MIX,
            u.INV_SBOX,
            this._nRounds
          ),
          o = r.allocUnsafe(16);
        return (
          o.writeUInt32BE(n[0], 0),
          o.writeUInt32BE(n[3], 4),
          o.writeUInt32BE(n[2], 8),
          o.writeUInt32BE(n[1], 12),
          o
        );
      }),
      (c.prototype.scrub = function() {
        o(this._keySchedule), o(this._invKeySchedule), o(this._key);
      }),
      (t.exports.AES = c);
  },
  function(t, e, n) {
    var r = n(2).Buffer,
      i = n(36);
    t.exports = function(t, e, n, o) {
      if (
        (r.isBuffer(t) || (t = r.from(t, "binary")),
        e && (r.isBuffer(e) || (e = r.from(e, "binary")), 8 !== e.length))
      )
        throw new RangeError("salt should be Buffer with 8 byte length");
      for (
        var a = n / 8, s = r.alloc(a), u = r.alloc(o || 0), c = r.alloc(0);
        a > 0 || o > 0;

      ) {
        var l = new i();
        l.update(c), l.update(t), e && l.update(e), (c = l.digest());
        var h = 0;
        if (a > 0) {
          var f = s.length - a;
          (h = Math.min(a, c.length)), c.copy(s, f, 0, h), (a -= h);
        }
        if (h < c.length && o > 0) {
          var p = u.length - o,
            d = Math.min(o, c.length - h);
          c.copy(u, p, h, h + d), (o -= d);
        }
      }
      return c.fill(0), { key: s, iv: u };
    };
  },
  function(t, e, n) {
    "use strict";
    var r = e;
    (r.base = n(152)),
      (r.short = n(153)),
      (r.mont = n(154)),
      (r.edwards = n(155));
  },
  function(t, e, n) {
    var r = n(171),
      i = n(182),
      o = n(183),
      a = n(45),
      s = n(69),
      u = n(2).Buffer;
    function c(t) {
      var e;
      "object" != typeof t ||
        u.isBuffer(t) ||
        ((e = t.passphrase), (t = t.key)),
        "string" == typeof t && (t = u.from(t));
      var n,
        c,
        l = o(t, e),
        h = l.tag,
        f = l.data;
      switch (h) {
        case "CERTIFICATE":
          c = r.certificate.decode(f, "der").tbsCertificate
            .subjectPublicKeyInfo;
        case "PUBLIC KEY":
          switch (
            (c || (c = r.PublicKey.decode(f, "der")),
            (n = c.algorithm.algorithm.join(".")))
          ) {
            case "1.2.840.113549.1.1.1":
              return r.RSAPublicKey.decode(c.subjectPublicKey.data, "der");
            case "1.2.840.10045.2.1":
              return (
                (c.subjectPrivateKey = c.subjectPublicKey),
                { type: "ec", data: c }
              );
            case "1.2.840.10040.4.1":
              return (
                (c.algorithm.params.pub_key = r.DSAparam.decode(
                  c.subjectPublicKey.data,
                  "der"
                )),
                { type: "dsa", data: c.algorithm.params }
              );
            default:
              throw new Error("unknown key id " + n);
          }
          throw new Error("unknown key type " + h);
        case "ENCRYPTED PRIVATE KEY":
          f = (function(t, e) {
            var n = t.algorithm.decrypt.kde.kdeparams.salt,
              r = parseInt(
                t.algorithm.decrypt.kde.kdeparams.iters.toString(),
                10
              ),
              o = i[t.algorithm.decrypt.cipher.algo.join(".")],
              c = t.algorithm.decrypt.cipher.iv,
              l = t.subjectPrivateKey,
              h = parseInt(o.split("-")[1], 10) / 8,
              f = s.pbkdf2Sync(e, n, r, h, "sha1"),
              p = a.createDecipheriv(o, f, c),
              d = [];
            return d.push(p.update(l)), d.push(p.final()), u.concat(d);
          })((f = r.EncryptedPrivateKey.decode(f, "der")), e);
        case "PRIVATE KEY":
          switch (
            (n = (c = r.PrivateKey.decode(f, "der")).algorithm.algorithm.join(
              "."
            ))
          ) {
            case "1.2.840.113549.1.1.1":
              return r.RSAPrivateKey.decode(c.subjectPrivateKey, "der");
            case "1.2.840.10045.2.1":
              return {
                curve: c.algorithm.curve,
                privateKey: r.ECPrivateKey.decode(c.subjectPrivateKey, "der")
                  .privateKey
              };
            case "1.2.840.10040.4.1":
              return (
                (c.algorithm.params.priv_key = r.DSAparam.decode(
                  c.subjectPrivateKey,
                  "der"
                )),
                { type: "dsa", params: c.algorithm.params }
              );
            default:
              throw new Error("unknown key id " + n);
          }
          throw new Error("unknown key type " + h);
        case "RSA PUBLIC KEY":
          return r.RSAPublicKey.decode(f, "der");
        case "RSA PRIVATE KEY":
          return r.RSAPrivateKey.decode(f, "der");
        case "DSA PRIVATE KEY":
          return { type: "dsa", params: r.DSAPrivateKey.decode(f, "der") };
        case "EC PRIVATE KEY":
          return {
            curve: (f = r.ECPrivateKey.decode(f, "der")).parameters.value,
            privateKey: f.privateKey
          };
        default:
          throw new Error("unknown key type " + h);
      }
    }
    (t.exports = c), (c.signature = r.signature);
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }),
      o =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      a =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var s = n(7),
      u = n(12),
      c = n(9),
      l = n(97),
      h = n(26);
    (e.DEFAULT_DRUM_PITCH_CLASSES = [
      [36, 35],
      [38, 27, 28, 31, 32, 33, 34, 37, 39, 40, 56, 65, 66, 75, 85],
      [42, 44, 54, 68, 69, 70, 71, 73, 78, 80],
      [46, 67, 72, 74, 79, 81],
      [45, 29, 41, 61, 64, 84],
      [48, 47, 60, 63, 77, 86, 87],
      [50, 30, 43, 62, 76, 83],
      [49, 55, 57, 58],
      [51, 52, 53, 59, 82]
    ]),
      (e.converterFromSpec = function(t) {
        switch (t.type) {
          case "MelodyConverter":
            return new y(t.args);
          case "DrumsConverter":
            return new p(t.args);
          case "DrumRollConverter":
            return new d(t.args);
          case "TrioConverter":
            return new g(t.args);
          case "DrumsOneHotConverter":
            return new m(t.args);
          case "MultitrackConverter":
            return new v(t.args);
          case "GrooveConverter":
            return new b(t.args);
          default:
            throw new Error("Unknown DataConverter type: " + t);
        }
      });
    var f = (function() {
      function t(t) {
        (this.NUM_SPLITS = 0),
          (this.SEGMENTED_BY_TRACK = !1),
          (this.numSteps = t.numSteps),
          (this.numSegments = t.numSegments);
      }
      return (
        (t.prototype.tensorSteps = function(t) {
          return s.scalar(t.shape[0], "int32");
        }),
        t
      );
    })();
    e.DataConverter = f;
    var p = (function(t) {
      function n(n) {
        var r = t.call(this, n) || this;
        (r.pitchClasses = n.pitchClasses || e.DEFAULT_DRUM_PITCH_CLASSES),
          (r.pitchToClass = new Map());
        for (
          var i = function(t) {
              o.pitchClasses[t].forEach(function(e) {
                r.pitchToClass.set(e, t);
              });
            },
            o = this,
            a = 0;
          a < r.pitchClasses.length;
          ++a
        )
          i(a);
        return (r.depth = r.pitchClasses.length), r;
      }
      return (
        i(n, t),
        (n.prototype.toTensor = function(t) {
          var e = this;
          h.assertIsQuantizedSequence(t);
          for (
            var n = this.numSteps || t.totalQuantizedSteps,
              r = s.buffer([n, this.pitchClasses.length + 1], "int32"),
              i = 0;
            i < n;
            ++i
          )
            r.set(1, i, -1);
          return (
            t.notes.forEach(function(t) {
              r.set(1, t.quantizedStartStep, e.pitchToClass.get(t.pitch)),
                r.set(0, t.quantizedStartStep, -1);
            }),
            r.toTensor()
          );
        }),
        (n.prototype.toNoteSequence = function(t, e, n) {
          return o(this, void 0, void 0, function() {
            var r, i, o, s, c;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  return (r = w(e, n)), [4, (i = t.argMax(1)).data()];
                case 1:
                  for (o = a.sent(), i.dispose(), s = 0; s < o.length; ++s)
                    for (c = 0; c < this.pitchClasses.length; c++)
                      (o[s] >> c) & 1 &&
                        r.notes.push(
                          u.NoteSequence.Note.create({
                            pitch: this.pitchClasses[c][0],
                            quantizedStartStep: s,
                            quantizedEndStep: s + 1,
                            isDrum: !0
                          })
                        );
                  return (r.totalQuantizedSteps = o.length), [2, r];
              }
            });
          });
        }),
        n
      );
    })(f);
    e.DrumsConverter = p;
    var d = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        i(e, t),
        (e.prototype.toNoteSequence = function(t, e, n) {
          return o(this, void 0, void 0, function() {
            var r, i, o, s, c;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  return (r = w(e, n)), [4, t.data()];
                case 1:
                  for (i = a.sent(), o = 0; o < t.shape[0]; ++o)
                    for (
                      s = i.slice(o * this.depth, (o + 1) * this.depth), c = 0;
                      c < s.length;
                      ++c
                    )
                      s[c] &&
                        r.notes.push(
                          u.NoteSequence.Note.create({
                            pitch: this.pitchClasses[c][0],
                            quantizedStartStep: o,
                            quantizedEndStep: o + 1,
                            isDrum: !0
                          })
                        );
                  return (r.totalQuantizedSteps = t.shape[0]), [2, r];
              }
            });
          });
        }),
        e
      );
    })(p);
    e.DrumRollConverter = d;
    var m = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (n.depth = Math.pow(2, n.pitchClasses.length)), n;
      }
      return (
        i(e, t),
        (e.prototype.toTensor = function(t) {
          var e = this;
          h.assertIsRelativeQuantizedSequence(t);
          for (
            var n = this.numSteps || t.totalQuantizedSteps,
              r = Array(n).fill(0),
              i = 0,
              o = t.notes;
            i < o.length;
            i++
          ) {
            var a = o[i],
              u = a.pitch,
              c = a.quantizedStartStep;
            r[c] += Math.pow(2, this.pitchToClass.get(u));
          }
          return s.tidy(function() {
            return s.oneHot(s.tensor1d(r, "int32"), e.depth);
          });
        }),
        e
      );
    })(p);
    e.DrumsOneHotConverter = m;
    var y = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.NOTE_OFF = 1),
          (n.FIRST_PITCH = 2),
          (n.minPitch = e.minPitch),
          (n.maxPitch = e.maxPitch),
          (n.ignorePolyphony =
            void 0 === e.ignorePolyphony || e.ignorePolyphony),
          (n.depth = e.maxPitch - e.minPitch + 1 + n.FIRST_PITCH),
          n
        );
      }
      return (
        i(e, t),
        (e.prototype.toTensor = function(t) {
          var e = this;
          h.assertIsQuantizedSequence(t);
          var n = this.numSteps || t.totalQuantizedSteps,
            r = t.notes.sort(function(t, e) {
              return t.quantizedStartStep === e.quantizedStartStep
                ? e.pitch - t.pitch
                : t.quantizedStartStep - e.quantizedStartStep;
            }),
            i = s.buffer([n], "int32"),
            o = -1;
          return (
            r.forEach(function(t) {
              if (t.quantizedStartStep === o) {
                if (e.ignorePolyphony) return;
                throw new Error("`NoteSequence` is not monophonic.");
              }
              if (t.pitch < e.minPitch || t.pitch > e.maxPitch)
                throw Error(
                  "`NoteSequence` has a pitch outside of the valid range: " +
                    t.pitch
                );
              i.set(t.pitch - e.minPitch + e.FIRST_PITCH, t.quantizedStartStep),
                i.set(e.NOTE_OFF, t.quantizedEndStep),
                (o = t.quantizedStartStep);
            }),
            s.tidy(function() {
              return s.oneHot(i.toTensor(), e.depth);
            })
          );
        }),
        (e.prototype.toNoteSequence = function(t, e, n) {
          return o(this, void 0, void 0, function() {
            var r, i, o, s, c, l;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  return (r = w(e, n)), [4, (i = t.argMax(1)).data()];
                case 1:
                  for (
                    o = a.sent(), i.dispose(), s = null, c = 0;
                    c < o.length;
                    ++c
                  )
                    switch ((l = o[c])) {
                      case 0:
                        break;
                      case 1:
                        s &&
                          ((s.quantizedEndStep = c),
                          r.notes.push(s),
                          (s = null));
                        break;
                      default:
                        s && ((s.quantizedEndStep = c), r.notes.push(s)),
                          (s = u.NoteSequence.Note.create({
                            pitch: l - this.FIRST_PITCH + this.minPitch,
                            quantizedStartStep: c
                          }));
                    }
                  return (
                    s && ((s.quantizedEndStep = o.length), r.notes.push(s)),
                    (r.totalQuantizedSteps = o.length),
                    [2, r]
                  );
              }
            });
          });
        }),
        e
      );
    })(f);
    e.MelodyConverter = y;
    var g = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.NUM_SPLITS = 3),
          (n.MEL_PROG_RANGE = [0, 31]),
          (n.BASS_PROG_RANGE = [32, 39]),
          (e.melArgs.numSteps = e.numSteps),
          (e.bassArgs.numSteps = e.numSteps),
          (e.drumsArgs.numSteps = e.numSteps),
          (n.melConverter = new y(e.melArgs)),
          (n.bassConverter = new y(e.bassArgs)),
          (n.drumsConverter = new m(e.drumsArgs)),
          (n.depth =
            n.melConverter.depth +
            n.bassConverter.depth +
            n.drumsConverter.depth),
          n
        );
      }
      return (
        i(e, t),
        (e.prototype.toTensor = function(t) {
          var e = this;
          h.assertIsQuantizedSequence(t);
          var n = h.clone(t),
            r = h.clone(t),
            i = h.clone(t);
          return (
            (n.notes = t.notes.filter(function(t) {
              return (
                !t.isDrum &&
                t.program >= e.MEL_PROG_RANGE[0] &&
                t.program <= e.MEL_PROG_RANGE[1]
              );
            })),
            (r.notes = t.notes.filter(function(t) {
              return (
                !t.isDrum &&
                t.program >= e.BASS_PROG_RANGE[0] &&
                t.program <= e.BASS_PROG_RANGE[1]
              );
            })),
            (i.notes = t.notes.filter(function(t) {
              return t.isDrum;
            })),
            s.tidy(function() {
              return s.concat(
                [
                  e.melConverter.toTensor(n),
                  e.bassConverter.toTensor(r),
                  e.drumsConverter.toTensor(i)
                ],
                -1
              );
            })
          );
        }),
        (e.prototype.toNoteSequence = function(t, e, n) {
          return o(this, void 0, void 0, function() {
            var r,
              i,
              o,
              u,
              c,
              l,
              h = this;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  return (
                    (r = s.split(
                      t,
                      [
                        this.melConverter.depth,
                        this.bassConverter.depth,
                        this.drumsConverter.depth
                      ],
                      -1
                    )),
                    [4, this.melConverter.toNoteSequence(r[0], e, n)]
                  );
                case 1:
                  return (
                    (i = a.sent()).notes.forEach(function(t) {
                      (t.instrument = 0), (t.program = 0);
                    }),
                    [4, this.bassConverter.toNoteSequence(r[1], e, n)]
                  );
                case 2:
                  return (
                    (o = a.sent()),
                    (c = i.notes).push.apply(
                      c,
                      o.notes.map(function(t) {
                        return (
                          (t.instrument = 1),
                          (t.program = h.BASS_PROG_RANGE[0]),
                          t
                        );
                      })
                    ),
                    [4, this.drumsConverter.toNoteSequence(r[2], e, n)]
                  );
                case 3:
                  return (
                    (u = a.sent()),
                    (l = i.notes).push.apply(
                      l,
                      u.notes.map(function(t) {
                        return (t.instrument = 2), t;
                      })
                    ),
                    r.forEach(function(t) {
                      return t.dispose();
                    }),
                    [2, i]
                  );
              }
            });
          });
        }),
        e
      );
    })(f);
    e.TrioConverter = g;
    var v = (function(t) {
      function e(e) {
        var n = t.call(this, e) || this;
        return (
          (n.SEGMENTED_BY_TRACK = !0),
          (n.stepsPerQuarter = e.stepsPerQuarter),
          (n.totalSteps = e.totalSteps),
          (n.numVelocityBins = e.numVelocityBins),
          (n.minPitch = e.minPitch ? e.minPitch : c.MIN_MIDI_PITCH),
          (n.maxPitch = e.maxPitch ? e.maxPitch : c.MAX_MIDI_PITCH),
          (n.numPitches = n.maxPitch - n.minPitch + 1),
          (n.performanceEventDepth =
            2 * n.numPitches + n.totalSteps + n.numVelocityBins),
          (n.numPrograms = c.MAX_MIDI_PROGRAM - c.MIN_MIDI_PROGRAM + 2),
          (n.endToken = n.performanceEventDepth + n.numPrograms),
          (n.depth = n.endToken + 1),
          (n.endTensor = s.tidy(function() {
            return s.oneHot(s.tensor1d([n.endToken], "int32"), n.depth).as1D();
          })),
          n
        );
      }
      return (
        i(e, t),
        (e.prototype.trackToTensor = function(t) {
          var e = this,
            n = this.numSteps / this.numSegments,
            r = void 0;
          if (t) {
            for (; t.events.length > n - 2; ) t.events.pop();
            (r = s.buffer([t.events.length + 2], "int32")).set(
              this.performanceEventDepth +
                (t.isDrum ? this.numPrograms - 1 : t.program),
              0
            ),
              t.events.forEach(function(t, n) {
                switch (t.type) {
                  case "note-on":
                    r.set(t.pitch - e.minPitch, n + 1);
                    break;
                  case "note-off":
                    r.set(e.numPitches + t.pitch - e.minPitch, n + 1);
                    break;
                  case "time-shift":
                    r.set(2 * e.numPitches + t.steps - 1, n + 1);
                    break;
                  case "velocity-change":
                    r.set(
                      2 * e.numPitches + e.totalSteps + t.velocityBin - 1,
                      n + 1
                    );
                    break;
                  default:
                    throw new Error("Unrecognized performance event: " + t);
                }
              }),
              r.set(this.endToken, t.events.length + 1);
          } else r = s.buffer([1], "int32", new Int32Array([this.endToken]));
          return s.tidy(function() {
            var t = s.oneHot(r.toTensor(), e.depth);
            return t.pad([[0, n - t.shape[0]], [0, 0]]);
          });
        }),
        (e.prototype.toTensor = function(t) {
          var e = this;
          if (
            (h.assertIsRelativeQuantizedSequence(t),
            t.quantizationInfo.stepsPerQuarter !== this.stepsPerQuarter)
          )
            throw new Error(
              "Steps per quarter note mismatch: " +
                t.quantizationInfo.stepsPerQuarter +
                " != " +
                this.stepsPerQuarter
            );
          var n = h.clone(t);
          n.notes = t.notes.filter(function(t) {
            return t.pitch >= e.minPitch && t.pitch <= e.maxPitch;
          });
          for (
            var r = new Set(
                n.notes.map(function(t) {
                  return t.instrument;
                })
              ),
              i = Array.from(r)
                .map(function(t) {
                  return l.Performance.fromNoteSequence(
                    n,
                    e.totalSteps,
                    e.numVelocityBins,
                    t
                  );
                })
                .sort(function(t, e) {
                  return e.isDrum ? -1 : t.isDrum ? 1 : t.program - e.program;
                });
            i.length > this.numSegments;

          )
            i.pop();
          for (
            i.forEach(function(t) {
              return t.setNumSteps(e.totalSteps);
            });
            i.length < this.numSegments;

          )
            i.push(void 0);
          return s.tidy(function() {
            return s.concat(
              i.map(function(t) {
                return e.trackToTensor(t);
              }),
              0
            );
          });
        }),
        (e.prototype.tokensToTrack = function(t) {
          var e = this,
            n = t.indexOf(this.endToken),
            r = n >= 0 ? n : t.length,
            i = t.slice(0, r),
            o = i.filter(function(t) {
              return t < e.performanceEventDepth;
            }),
            a = i.filter(function(t) {
              return t >= e.performanceEventDepth;
            }),
            s = a.length
              ? a[0] - this.performanceEventDepth < this.numPrograms - 1
                ? [a[0] - this.performanceEventDepth, !1]
                : [0, !0]
              : [0, !1],
            u = s[0],
            c = s[1],
            h = Array.from(o).map(function(t) {
              if (t < e.numPitches)
                return { type: "note-on", pitch: e.minPitch + t };
              if (t < 2 * e.numPitches)
                return {
                  type: "note-off",
                  pitch: e.minPitch + t - e.numPitches
                };
              if (t < 2 * e.numPitches + e.totalSteps)
                return { type: "time-shift", steps: t - 2 * e.numPitches + 1 };
              if (t < 2 * e.numPitches + e.totalSteps + e.numVelocityBins)
                return {
                  type: "velocity-change",
                  velocityBin: t - 2 * e.numPitches - e.totalSteps + 1
                };
              throw new Error("Invalid performance event token: " + t);
            });
          return new l.Performance(
            h,
            this.totalSteps,
            this.numVelocityBins,
            u,
            c
          );
        }),
        (e.prototype.toNoteSequence = function(t, e, n) {
          return (
            void 0 === e && (e = this.stepsPerQuarter),
            o(this, void 0, void 0, function() {
              var r,
                i,
                u = this;
              return a(this, function(c) {
                switch (c.label) {
                  case 0:
                    return (
                      ((r = w(e, n)).totalQuantizedSteps = this.totalSteps),
                      (i = s.tidy(function() {
                        return s.split(t.argMax(1), u.numSegments);
                      })),
                      [
                        4,
                        Promise.all(
                          i.map(function(t) {
                            return o(u, void 0, void 0, function() {
                              var e, n;
                              return a(this, function(r) {
                                switch (r.label) {
                                  case 0:
                                    return [4, t.data()];
                                  case 1:
                                    return (
                                      (e = r.sent()),
                                      (n = this.tokensToTrack(e)),
                                      t.dispose(),
                                      [2, n]
                                    );
                                }
                              });
                            });
                          })
                        )
                      ]
                    );
                  case 1:
                    return (
                      c.sent().forEach(function(t, e) {
                        var n;
                        t.setNumSteps(u.totalSteps),
                          (n = r.notes).push.apply(
                            n,
                            t.toNoteSequence(e).notes
                          );
                      }),
                      [2, r]
                    );
                }
              });
            })
          );
        }),
        e
      );
    })(f);
    e.MultitrackConverter = v;
    var b = (function(t) {
      function n(n) {
        var r = t.call(this, n) || this;
        (r.TAPIFY_CHANNEL = 3),
          (r.stepsPerQuarter =
            n.stepsPerQuarter || c.DEFAULT_STEPS_PER_QUARTER),
          (r.pitchClasses = n.pitchClasses || e.DEFAULT_DRUM_PITCH_CLASSES),
          (r.pitchToClass = new Map());
        for (
          var i = function(t) {
              o.pitchClasses[t].forEach(function(e) {
                r.pitchToClass.set(e, t);
              });
            },
            o = this,
            a = 0;
          a < r.pitchClasses.length;
          ++a
        )
          i(a);
        return (
          (r.humanize = n.humanize || !1),
          (r.tapify = n.tapify || !1),
          (r.splitInstruments = n.splitInstruments || !1),
          (r.depth = 3),
          r
        );
      }
      return (
        i(n, t),
        (n.prototype.toTensor = function(t) {
          for (
            var e = this,
              n = h.isRelativeQuantizedSequence(t)
                ? t
                : h.quantizeNoteSequence(t, this.stepsPerQuarter),
              r = this.numSteps,
              i =
                n.tempos && n.tempos.length
                  ? n.tempos[0].qpm
                  : c.DEFAULT_QUARTERS_PER_MINUTE,
              o = 60 / i / this.stepsPerQuarter,
              a = [],
              u = 0;
            u < r;
            ++u
          )
            a.push(new Map());
          n.notes.forEach(function(t) {
            if (e.tapify || e.pitchToClass.has(t.pitch)) {
              var n = t.quantizedStartStep;
              if (n >= a.length)
                throw Error(
                  "Model does not support sequences with more than " +
                    r +
                    " steps (" +
                    r * o +
                    " seconds at qpm " +
                    i +
                    ")."
                );
              var s = e.tapify ? e.TAPIFY_CHANNEL : e.pitchToClass.get(t.pitch);
              (!a[n].has(s) || a[n].get(s).velocity < t.velocity) &&
                a[n].set(s, t);
            }
          });
          var l = this.pitchClasses.length,
            f = s.buffer([r, l]),
            p = s.buffer([r, l]),
            d = s.buffer([r, l]);
          function m(t) {
            if (void 0 === t.startTime) return 0;
            var e = t.startTime;
            return (2 * (t.quantizedStartStep * o - e)) / o;
          }
          for (var y = 0; y < r; ++y)
            for (var g = 0; g < l; ++g) {
              var v = a[y].get(g);
              f.set(v ? 1 : 0, y, g),
                this.humanize ||
                  this.tapify ||
                  p.set(v ? v.velocity / c.MAX_MIDI_VELOCITY : 0, y, g),
                this.humanize || d.set(v ? m(v) : 0, y, g);
            }
          return s.tidy(function() {
            var t = f.toTensor(),
              n = p.toTensor(),
              i = d.toTensor(),
              o = e.splitInstruments ? r * l : r;
            return s.concat([t.as2D(o, -1), n.as2D(o, -1), i.as2D(o, -1)], 1);
          });
        }),
        (n.prototype.toNoteSequence = function(t, e, n) {
          return (
            void 0 === n && (n = c.DEFAULT_QUARTERS_PER_MINUTE),
            o(this, void 0, void 0, function() {
              function r(t, e, n) {
                return Math.min(Math.max(t, e), n);
              }
              var i, o, s, l, h, f, p, d, m, y, g, v, b, w, _;
              return a(this, function(a) {
                switch (a.label) {
                  case 0:
                    if (e && e !== this.stepsPerQuarter)
                      throw Error("`stepsPerQuarter` is set by the model.");
                    return (
                      (e = this.stepsPerQuarter),
                      (i = this.splitInstruments
                        ? t.shape[0] / this.pitchClasses.length
                        : t.shape[0]),
                      (o = 60 / n / this.stepsPerQuarter),
                      (s = u.NoteSequence.create({
                        totalTime: i * o,
                        tempos: [{ qpm: n }]
                      })),
                      [4, t.data()]
                    );
                  case 1:
                    for (
                      l = a.sent(), h = this.pitchClasses.length, f = 0;
                      f < i;
                      ++f
                    )
                      for (
                        p = l.slice(
                          f * h * this.depth,
                          (f + 1) * h * this.depth
                        ),
                          d = 0;
                        d < h;
                        ++d
                      )
                        (m = p[this.splitInstruments ? d * this.depth : d]),
                          (y = this.splitInstruments
                            ? d * this.depth + 1
                            : h + d),
                          (g = p[y]),
                          (v = this.splitInstruments
                            ? d * this.depth + 2
                            : 2 * h + d),
                          (b = p[v]),
                          m > 0.5 &&
                            ((w = r(
                              Math.round(g * c.MAX_MIDI_VELOCITY),
                              c.MIN_MIDI_VELOCITY,
                              c.MAX_MIDI_VELOCITY
                            )),
                            (_ = r(b / 2, -0.5, 0.5)),
                            s.notes.push(
                              u.NoteSequence.Note.create({
                                pitch: this.pitchClasses[d][0],
                                startTime: (f - _) * o,
                                endTime: (f - _ + 1) * o,
                                velocity: w,
                                isDrum: !0
                              })
                            ));
                    return [2, s];
                }
              });
            })
          );
        }),
        n
      );
    })(f);
    function w(t, e) {
      return (
        void 0 === t && (t = c.DEFAULT_STEPS_PER_QUARTER),
        void 0 === e && (e = c.DEFAULT_QUARTERS_PER_MINUTE),
        u.NoteSequence.create({
          quantizationInfo: { stepsPerQuarter: t },
          tempos: [{ qpm: e }]
        })
      );
    }
    e.GrooveConverter = b;
  },
  function(t, e, n) {
    "use strict";
    (function(t) {
      n.d(e, "a", function() {
        return St;
      }),
        n.d(e, "c", function() {
          return xt;
        }),
        n.d(e, "b", function() {
          return p;
        }),
        n.d(e, "d", function() {
          return h;
        }),
        n.d(e, "e", function() {
          return Tt;
        });
      var r,
        i,
        o,
        a = n(0),
        s = function() {
          return (s =
            Object.assign ||
            function(t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var i in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              return t;
            }).apply(this, arguments);
        };
      /**
       * @license
       * Copyright 2019 Google LLC. All Rights Reserved.
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       * http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       * =============================================================================
       */ function u(t, e, n, r) {
        return new (n || (n = Promise))(function(i, o) {
          function a(t) {
            try {
              u(r.next(t));
            } catch (t) {
              o(t);
            }
          }
          function s(t) {
            try {
              u(r.throw(t));
            } catch (t) {
              o(t);
            }
          }
          function u(t) {
            t.done
              ? i(t.value)
              : new n(function(e) {
                  e(t.value);
                }).then(a, s);
          }
          u((r = r.apply(t, e || [])).next());
        });
      }
      function c(t, e) {
        var n,
          r,
          i,
          o,
          a = {
            label: 0,
            sent: function() {
              if (1 & i[0]) throw i[1];
              return i[1];
            },
            trys: [],
            ops: []
          };
        return (
          (o = { next: s(0), throw: s(1), return: s(2) }),
          "function" == typeof Symbol &&
            (o[Symbol.iterator] = function() {
              return this;
            }),
          o
        );
        function s(o) {
          return function(s) {
            return (function(o) {
              if (n) throw new TypeError("Generator is already executing.");
              for (; a; )
                try {
                  if (
                    ((n = 1),
                    r &&
                      (i =
                        2 & o[0]
                          ? r.return
                          : o[0]
                          ? r.throw || ((i = r.return) && i.call(r), 0)
                          : r.next) &&
                      !(i = i.call(r, o[1])).done)
                  )
                    return i;
                  switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                    case 0:
                    case 1:
                      i = o;
                      break;
                    case 4:
                      return a.label++, { value: o[1], done: !1 };
                    case 5:
                      a.label++, (r = o[1]), (o = [0]);
                      continue;
                    case 7:
                      (o = a.ops.pop()), a.trys.pop();
                      continue;
                    default:
                      if (
                        !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                        (6 === o[0] || 2 === o[0])
                      ) {
                        a = 0;
                        continue;
                      }
                      if (3 === o[0] && (!i || (o[1] > i[0] && o[1] < i[3]))) {
                        a.label = o[1];
                        break;
                      }
                      if (6 === o[0] && a.label < i[1]) {
                        (a.label = i[1]), (i = o);
                        break;
                      }
                      if (i && a.label < i[2]) {
                        (a.label = i[2]), a.ops.push(o);
                        break;
                      }
                      i[2] && a.ops.pop(), a.trys.pop();
                      continue;
                  }
                  o = e.call(t, a);
                } catch (t) {
                  (o = [6, t]), (r = 0);
                } finally {
                  n = i = 0;
                }
              if (5 & o[0]) throw o[1];
              return { value: o[0] ? o[1] : void 0, done: !0 };
            })([o, s]);
          };
        }
      }
      ((o = r || (r = {}))[(o.DT_INVALID = 0)] = "DT_INVALID"),
        (o[(o.DT_FLOAT = 1)] = "DT_FLOAT"),
        (o[(o.DT_DOUBLE = 2)] = "DT_DOUBLE"),
        (o[(o.DT_INT32 = 3)] = "DT_INT32"),
        (o[(o.DT_UINT8 = 4)] = "DT_UINT8"),
        (o[(o.DT_INT16 = 5)] = "DT_INT16"),
        (o[(o.DT_INT8 = 6)] = "DT_INT8"),
        (o[(o.DT_STRING = 7)] = "DT_STRING"),
        (o[(o.DT_COMPLEX64 = 8)] = "DT_COMPLEX64"),
        (o[(o.DT_INT64 = 9)] = "DT_INT64"),
        (o[(o.DT_BOOL = 10)] = "DT_BOOL"),
        (o[(o.DT_QINT8 = 11)] = "DT_QINT8"),
        (o[(o.DT_QUINT8 = 12)] = "DT_QUINT8"),
        (o[(o.DT_QINT32 = 13)] = "DT_QINT32"),
        (o[(o.DT_BFLOAT16 = 14)] = "DT_BFLOAT16"),
        (o[(o.DT_FLOAT_REF = 101)] = "DT_FLOAT_REF"),
        (o[(o.DT_DOUBLE_REF = 102)] = "DT_DOUBLE_REF"),
        (o[(o.DT_INT32_REF = 103)] = "DT_INT32_REF"),
        (o[(o.DT_UINT8_REF = 104)] = "DT_UINT8_REF"),
        (o[(o.DT_INT16_REF = 105)] = "DT_INT16_REF"),
        (o[(o.DT_INT8_REF = 106)] = "DT_INT8_REF"),
        (o[(o.DT_STRING_REF = 107)] = "DT_STRING_REF"),
        (o[(o.DT_COMPLEX64_REF = 108)] = "DT_COMPLEX64_REF"),
        (o[(o.DT_INT64_REF = 109)] = "DT_INT64_REF"),
        (o[(o.DT_BOOL_REF = 110)] = "DT_BOOL_REF"),
        (o[(o.DT_QINT8_REF = 111)] = "DT_QINT8_REF"),
        (o[(o.DT_QUINT8_REF = 112)] = "DT_QUINT8_REF"),
        (o[(o.DT_QINT32_REF = 113)] = "DT_QINT32_REF"),
        (o[(o.DT_BFLOAT16_REF = 114)] = "DT_BFLOAT16_REF"),
        (function(t) {
          !(function(t) {
            (t[(t.LEGACY = 0)] = "LEGACY"),
              (t[(t.V1 = 1)] = "V1"),
              (t[(t.V2 = 2)] = "V2");
          })(t.CheckpointFormatVersion || (t.CheckpointFormatVersion = {}));
        })(i || (i = {}));
      var l = {};
      function h(t, e) {
        var n = {
          tfOpName: t,
          category: "custom",
          inputs: [],
          attrs: [],
          customExecutor: e
        };
        l[t] = n;
      }
      function f(t) {
        return l[t];
      }
      function p(t) {
        delete l[t];
      }
      function d(t, e, n, r) {
        var i = e.inputParams[t];
        if (i && void 0 !== i.inputIndexStart) {
          var o = i.inputIndexStart,
            a =
              0 === i.inputIndexEnd
                ? void 0
                : void 0 === i.inputIndexEnd
                ? o + 1
                : i.inputIndexEnd;
          if ("tensor" === i.type)
            return m(e.inputNames[i.inputIndexStart], n, r);
          if ("tensors" === i.type)
            return e.inputNames.slice(o, a).map(function(t) {
              return m(t, n, r);
            });
          var s = Array.prototype.slice.call(
            m(e.inputNames.slice(o)[0], n, r).dataSync()
          );
          return "number" === i.type ? s[0] : s;
        }
        var u = e.attrParams[t];
        return u && u.value;
      }
      function m(t, e, n) {
        var r = v(t),
          i = r[0],
          o = r[1],
          a = n.currentContextIds.find(function(t) {
            return !!e[g(i, t)];
          });
        return void 0 !== a ? e[g(i, a)][o] : void 0;
      }
      function y(t, e) {
        var n = v(t),
          r = n[0],
          i = n[1];
        return [g(r, e && e.currentContextId), i];
      }
      function g(t, e) {
        return e ? t + "-" + e : t;
      }
      function v(t) {
        var e = t.lastIndexOf(":");
        return -1 === e
          ? [t, 0]
          : [t.substring(0, e), Number(t.substring(e + 1))];
      }
      function b(t, e) {
        for (var n = [], r = 0; r < t.length; r += e) n.push(t.slice(r, r + e));
        return n;
      }
      var w = Object.freeze({
          json: [
            {
              tfOpName: "Add",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "AddN",
              category: "arithmetic",
              inputs: [{ start: 0, end: 0, name: "tensors", type: "tensors" }]
            },
            {
              tfOpName: "BiasAdd",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Sub",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "RealDiv",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Div",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "FloorDiv",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Mul",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Maximum",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ]
            },
            {
              tfOpName: "Minimum",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ]
            },
            {
              tfOpName: "Pow",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "SquaredDifference",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Mod",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "FloorMod",
              category: "arithmetic",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            }
          ]
        }),
        _ = Object.freeze({
          json: [
            {
              tfOpName: "Abs",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Acos",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Asin",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Atan",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Atan2",
              category: "basic_math",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "y", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Ceil",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "ClipByValue",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                {
                  tfName: "clip_value_min",
                  name: "clipValueMin",
                  type: "number"
                },
                {
                  tfName: "clip_value_max",
                  name: "clipValueMax",
                  type: "number"
                }
              ]
            },
            {
              tfOpName: "Cos",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Cosh",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Elu",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Exp",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Floor",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Log",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Neg",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Relu",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Relu6",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 },
                {
                  tfName: "clipValueMin",
                  name: "clipValueMin",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "clipValueMax",
                  name: "clipValueMax",
                  type: "number",
                  defaultValue: 6
                }
              ]
            },
            {
              tfOpName: "Selu",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Sigmoid",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Sin",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Sinh",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Sqrt",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Rsqrt",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Square",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Tan",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Tanh",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Sign",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Round",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Expm1",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Log1p",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Reciprocal",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Softplus",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Asinh",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Acosh",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Atanh",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Erf",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Prod",
              category: "basic_math",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axes", type: "number[]" }
              ],
              attrs: [
                {
                  tfName: "keep_dims",
                  name: "keepDims",
                  type: "bool",
                  notSupported: !0
                },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "LeakyRelu",
              category: "basic_math",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                {
                  tfName: "alpha",
                  name: "alpha",
                  type: "number",
                  defaultValue: 0.2
                },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            }
          ]
        }),
        S = Object.freeze({
          json: [
            {
              tfOpName: "LoopCond",
              category: "control",
              inputs: [{ start: 0, name: "pred", type: "tensor" }]
            },
            {
              tfOpName: "Switch",
              category: "control",
              inputs: [
                { start: 0, name: "data", type: "tensor" },
                { start: 1, name: "pred", type: "tensor" }
              ]
            },
            {
              tfOpName: "Merge",
              category: "control",
              inputs: [{ start: 0, end: 0, name: "tensors", type: "tensors" }]
            },
            {
              tfOpName: "Enter",
              category: "control",
              inputs: [{ start: 0, name: "tensor", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 },
                { tfName: "frame_name", name: "frameName", type: "string" },
                { tfName: "is_constant", name: "isConstant", type: "bool" }
              ]
            },
            {
              tfOpName: "Exit",
              category: "control",
              inputs: [{ start: 0, name: "tensor", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "NextIteration",
              category: "control",
              inputs: [{ start: 0, name: "tensor", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "TensorArrayV3",
              category: "control",
              inputs: [{ start: 0, name: "size", type: "number" }],
              attrs: [
                { tfName: "dtype", name: "dtype", type: "dtype" },
                {
                  tfName: "element_shape",
                  name: "elementShape",
                  type: "shape"
                },
                { tfName: "dynamic_size", name: "dynamicSize", type: "bool" },
                {
                  tfName: "clear_after_read",
                  name: "clearAfterRead",
                  type: "bool"
                },
                {
                  tfName: "identical_element_shapes",
                  name: "identicalElementShapes",
                  type: "bool"
                },
                { tfName: "tensor_array_name", name: "name", type: "string" }
              ]
            },
            {
              tfOpName: "TensorArrayWriteV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "index", type: "number" },
                { start: 2, name: "tensor", type: "tensor" },
                { start: 3, name: "flowIn", type: "number" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "TensorArrayReadV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "index", type: "number" },
                { start: 2, name: "flowIn", type: "number" }
              ],
              attrs: [
                {
                  tfName: "dtype",
                  name: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "TensorArrayGatherV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "indices", type: "number[]" },
                { start: 2, name: "flowIn", type: "number" }
              ],
              attrs: [
                { tfName: "dtype", name: "dtype", type: "dtype" },
                { tfName: "element_shape", name: "elementShape", type: "shape" }
              ]
            },
            {
              tfOpName: "TensorArrayScatterV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "indices", type: "number[]" },
                { start: 2, name: "tensor", type: "tensor" },
                { start: 3, name: "flowIn", type: "number" }
              ],
              attrs: [{ tfName: "T", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "TensorArrayConcatV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "flowIn", type: "number" }
              ],
              attrs: [
                { tfName: "dtype", name: "dtype", type: "dtype" },
                {
                  tfName: "element_shape_except0",
                  name: "elementShapeExcept0",
                  type: "shape",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "TensorArraySplitV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "tensor", type: "tensor" },
                { start: 2, name: "lengths", type: "number[]" },
                { start: 3, name: "flowIn", type: "number" }
              ],
              attrs: [{ tfName: "T", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "TensorArraySizeV3",
              category: "control",
              inputs: [
                { start: 0, name: "tensorArrayId", type: "number" },
                { start: 1, name: "flowIn", type: "number" }
              ]
            },
            {
              tfOpName: "TensorArrayCloseV3",
              category: "control",
              inputs: [{ start: 0, name: "tensorArrayId", type: "number" }]
            }
          ]
        }),
        x = Object.freeze({
          json: [
            {
              tfOpName: "AvgPool",
              category: "convolution",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "strides", name: "strides", type: "number[]" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  notSupported: !0
                },
                { tfName: "ksize", name: "kernelSize", type: "number[]" },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "MaxPool",
              category: "convolution",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "strides", name: "strides", type: "number[]" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  notSupported: !0
                },
                { tfName: "ksize", name: "kernelSize", type: "number[]" },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Conv1D",
              category: "convolution",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "filter", type: "tensor" }
              ],
              attrs: [
                { tfName: "stride", name: "stride", type: "number" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  defaultValue: "NWC"
                },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 },
                {
                  tfName: "dilation",
                  name: "dilation",
                  type: "number",
                  defaultValue: 1
                }
              ]
            },
            {
              tfOpName: "Conv2D",
              category: "convolution",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "filter", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 },
                { tfName: "strides", name: "strides", type: "number[]" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "useCudnnOnGpu",
                  name: "useCudnnOnGpu",
                  type: "bool"
                },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  defaultValue: "NHWC"
                },
                { tfName: "dilations", name: "dilations", type: "number[]" }
              ]
            },
            {
              tfOpName: "Conv2DBackpropInput",
              category: "convolution",
              inputs: [
                { start: 2, name: "x", type: "tensor" },
                { start: 1, name: "filter", type: "tensor" },
                { start: 0, name: "outputShape", type: "number[]" }
              ],
              attrs: [
                { tfName: "strides", name: "strides", type: "number[]" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "DepthwiseConv2d",
              category: "convolution",
              inputs: [
                { start: 0, name: "input", type: "tensor" },
                { start: 1, name: "filter", type: "tensor" }
              ],
              attrs: [
                { tfName: "strides", name: "strides", type: "number[]" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  defaultValue: "NHWC"
                },
                { tfName: "dilations", name: "dilations", type: "number[]" }
              ]
            },
            {
              tfOpName: "DepthwiseConv2dNative",
              category: "convolution",
              inputs: [
                { start: 0, name: "input", type: "tensor" },
                { start: 1, name: "filter", type: "tensor" }
              ],
              attrs: [
                { tfName: "strides", name: "strides", type: "number[]" },
                { tfName: "padding", name: "pad", type: "string" },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  defaultValue: "NHWC"
                },
                { tfName: "dilations", name: "dilations", type: "number[]" }
              ]
            }
          ]
        }),
        T = Object.freeze({
          json: [
            {
              tfOpName: "Fill",
              category: "creation",
              inputs: [
                { start: 0, name: "shape", type: "number[]" },
                { start: 1, name: "value", type: "number" }
              ],
              attrs: [{ tfName: "T", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "LinSpace",
              category: "creation",
              inputs: [
                { start: 0, name: "start", type: "number" },
                { start: 1, name: "stop", type: "number" },
                { start: 2, name: "num", type: "number" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "OneHot",
              category: "creation",
              inputs: [
                { start: 0, name: "indices", type: "tensor" },
                { start: 1, name: "depth", type: "number" },
                { start: 2, name: "onValue", type: "number", defaultValue: 1 },
                { start: 3, name: "offValue", type: "number", defaultValue: 0 }
              ],
              attrs: [
                {
                  tfName: "axis",
                  name: "axis",
                  type: "number",
                  notSupported: !0
                },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Ones",
              category: "creation",
              inputs: [{ start: 0, name: "shape", type: "number[]" }],
              attrs: [{ tfName: "T", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "OnesLike",
              category: "creation",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [{ tfName: "dtype", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "RandomUniform",
              category: "creation",
              inputs: [{ start: 0, name: "shape", type: "number[]" }],
              attrs: [
                {
                  tfName: "minval",
                  name: "minval",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "maxval",
                  name: "maxval",
                  type: "number",
                  defaultValue: 1
                },
                { tfName: "dtype", name: "dtype", type: "dtype" },
                {
                  tfName: "seed",
                  name: "seed",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "seed2",
                  name: "seed2",
                  type: "number",
                  defaultValue: 0,
                  notSupported: !0
                },
                { tfName: "T", name: "T", type: "number", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Range",
              category: "creation",
              inputs: [
                { start: 0, name: "start", type: "number" },
                { start: 1, name: "stop", type: "number" },
                { start: 2, name: "step", type: "number", defaultValue: 0 }
              ],
              attrs: [{ tfName: "Tidx", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "TruncatedNormal",
              category: "creation",
              inputs: [{ start: 0, name: "shape", type: "number[]" }],
              attrs: [
                {
                  tfName: "means",
                  name: "mean",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "stddev",
                  name: "stdDev",
                  type: "number",
                  defaultValue: 1
                },
                { tfName: "seed", name: "seed", type: "number" },
                {
                  tfName: "seed2",
                  name: "seed2",
                  type: "number",
                  defaultValue: 0,
                  notSupported: !0
                },
                { tfName: "dtype", name: "dtype", type: "dtype" },
                { tfName: "T", name: "T", type: "number", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Zeros",
              category: "creation",
              inputs: [{ start: 0, name: "shape", type: "number[]" }],
              attrs: [{ tfName: "T", name: "dtype", type: "dtype" }]
            },
            {
              tfOpName: "ZerosLike",
              category: "creation",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [{ tfName: "T", name: "dtype", type: "dtype" }]
            }
          ]
        }),
        A = Object.freeze({
          json: [
            {
              tfOpName: "NonMaxSuppressionV2",
              category: "dynamic",
              inputs: [
                { start: 0, name: "boxes", type: "tensor" },
                { start: 1, name: "scores", type: "tensor" },
                { start: 2, name: "maxOutputSize", type: "number" },
                { start: 3, name: "iouThreshold", type: "number" }
              ]
            },
            {
              tfOpName: "NonMaxSuppressionV3",
              category: "dynamic",
              inputs: [
                { start: 0, name: "boxes", type: "tensor" },
                { start: 1, name: "scores", type: "tensor" },
                { start: 2, name: "maxOutputSize", type: "number" },
                { start: 3, name: "iouThreshold", type: "number" },
                { start: 4, name: "scoreThreshold", type: "number" }
              ]
            },
            {
              tfOpName: "Where",
              category: "dynamic",
              inputs: [{ start: 0, name: "condition", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "ListDiff",
              category: "dynamic",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "y", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            }
          ]
        }),
        k = Object.freeze({
          json: [
            {
              tfOpName: "TopKV2",
              category: "evaluation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "k", type: "number" }
              ],
              attrs: [{ tfName: "sorted", name: "sorted", type: "bool" }]
            }
          ]
        }),
        E = Object.freeze({
          json: [
            {
              tfOpName: "PlaceholderWithDefault",
              category: "graph",
              inputs: [{ start: 0, name: "default", type: "tensor" }],
              attrs: [
                { tfName: "shape", name: "shape", type: "shape" },
                { tfName: "dtype", name: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "Placeholder",
              category: "graph",
              attrs: [
                { tfName: "shape", name: "shape", type: "shape" },
                { tfName: "dtype", name: "dtype", type: "dtype" }
              ]
            },
            { tfOpName: "Const", category: "graph" },
            {
              tfOpName: "Identity",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "IdentityN",
              category: "graph",
              inputs: [{ start: 0, end: 0, name: "x", type: "tensors" }]
            },
            {
              tfOpName: "Snapshot",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "Rank",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "Size",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "Shape",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "ShapeN",
              category: "graph",
              inputs: [{ start: 0, end: 0, name: "x", type: "tensors" }]
            },
            {
              tfOpName: "Print",
              category: "graph",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "data", type: "tensors" }
              ],
              attrs: [
                { tfName: "message", name: "message", type: "string" },
                {
                  tfName: "first_n",
                  name: "firstN",
                  type: "number",
                  notSupported: !0
                },
                {
                  tfName: "summarize",
                  name: "summarize",
                  type: "number",
                  defaultValue: 3
                }
              ]
            },
            { tfOpName: "NoOp", category: "graph", inputs: [] },
            {
              tfOpName: "StopGradient",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "FakeQuantWithMinMaxVars",
              category: "graph",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "min", name: "min", type: "number" },
                { tfName: "max", name: "max", type: "number" }
              ]
            }
          ]
        }),
        N = Object.freeze({
          json: [
            {
              tfOpName: "ResizeBilinear",
              category: "image",
              inputs: [
                { start: 0, name: "images", type: "tensor" },
                { start: 1, name: "size", type: "number[]" }
              ],
              attrs: [
                { tfName: "align_corners", name: "alignCorners", type: "bool" },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "ResizeNearestNeighbor",
              category: "image",
              inputs: [
                { start: 0, name: "images", type: "tensor" },
                { start: 1, name: "size", type: "number[]" }
              ],
              attrs: [
                { tfName: "align_corners", name: "alignCorners", type: "bool" },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "CropAndResize",
              category: "image",
              inputs: [
                { start: 0, name: "image", type: "tensor" },
                { start: 1, name: "boxes", type: "tensor" },
                { start: 2, name: "boxInd", type: "tensor" },
                { start: 3, name: "cropSize", type: "number[]" }
              ],
              attrs: [
                { tfName: "method", name: "method", type: "string" },
                {
                  tfName: "extrapolation_value",
                  name: "extrapolationValue",
                  type: "number"
                }
              ]
            }
          ]
        }),
        O = Object.freeze({
          json: [
            {
              tfOpName: "Equal",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "NotEqual",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Greater",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "GreaterEqual",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Less",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "LessEqual",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "LogicalAnd",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "LogicalNot",
              category: "logical",
              inputs: [{ start: 0, name: "a", type: "tensor" }],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "LogicalOr",
              category: "logical",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Select",
              category: "logical",
              inputs: [
                { start: 0, name: "condition", type: "tensor" },
                { start: 1, name: "a", type: "tensor" },
                { start: 2, name: "b", type: "tensor" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            }
          ]
        }),
        C = Object.freeze({
          json: [
            {
              tfOpName: "MatMul",
              category: "matrices",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "transpose_a",
                  name: "transposeA",
                  type: "bool",
                  defaultValue: !1
                },
                {
                  tfName: "transpose_b",
                  name: "transposeB",
                  type: "bool",
                  defaultValue: !1
                },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "BatchMatMul",
              category: "matrices",
              inputs: [
                { start: 0, name: "a", type: "tensor" },
                { start: 1, name: "b", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "adj_x",
                  name: "transposeA",
                  type: "bool",
                  defaultValue: !1
                },
                {
                  tfName: "adj_y",
                  name: "transposeB",
                  type: "bool",
                  defaultValue: !1
                },
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            },
            {
              tfOpName: "Transpose",
              category: "matrices",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "perm", type: "number[]" }
              ],
              attrs: [
                { tfName: "T", name: "dtype", type: "dtype", notSupported: !0 }
              ]
            }
          ]
        }),
        I = Object.freeze({
          json: [
            {
              tfOpName: "FusedBatchNorm",
              category: "normalization",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "scale", type: "tensor" },
                { start: 2, name: "offset", type: "tensor" },
                { start: 3, name: "mean", type: "tensor" },
                { start: 4, name: "variance", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "epsilon",
                  name: "epsilon",
                  type: "number",
                  defaultValue: 0.001
                },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "FusedBatchNormV2",
              category: "normalization",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "scale", type: "tensor" },
                { start: 2, name: "offset", type: "tensor" },
                { start: 3, name: "mean", type: "tensor" },
                { start: 4, name: "variance", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "epsilon",
                  name: "epsilon",
                  type: "number",
                  defaultValue: 0.001
                },
                {
                  tfName: "data_format",
                  name: "dataFormat",
                  type: "string",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LRN",
              category: "normalization",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                {
                  tfName: "depth_radius",
                  name: "radius",
                  type: "number",
                  defaultValue: 5
                },
                {
                  tfName: "bias",
                  name: "bias",
                  type: "number",
                  defaultValue: 1
                },
                {
                  tfName: "alpha",
                  name: "alpha",
                  type: "number",
                  defaultValue: 1
                },
                {
                  tfName: "beta",
                  name: "beta",
                  type: "number",
                  defaultValue: 0.5
                }
              ]
            },
            {
              tfOpName: "Softmax",
              category: "normalization",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "LogSoftmax",
              category: "normalization",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "SparseToDense",
              category: "normalization",
              inputs: [
                { start: 0, name: "sparseIndices", type: "tensor" },
                { start: 1, name: "outputShape", type: "number[]" },
                { start: 2, name: "sparseValues", type: "tensor" },
                { start: 3, name: "defaultValue", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "validate_indices",
                  name: "validateIndices",
                  type: "bool",
                  defaultValue: !0,
                  notSupported: !0
                }
              ]
            }
          ]
        }),
        M = Object.freeze({
          json: [
            {
              tfOpName: "Max",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            },
            {
              tfOpName: "Mean",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            },
            {
              tfOpName: "Min",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            },
            {
              tfOpName: "Sum",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            },
            {
              tfOpName: "All",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            },
            {
              tfOpName: "Any",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            },
            {
              tfOpName: "ArgMax",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "ArgMin",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "Prod",
              category: "reduction",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ],
              attrs: [{ tfName: "keep_dims", name: "keepDims", type: "bool" }]
            }
          ]
        }),
        P = Object.freeze({
          json: [
            {
              tfOpName: "ConcatV2",
              category: "slice_join",
              inputs: [
                { start: 0, end: -1, name: "tensors", type: "tensors" },
                { start: -1, name: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "Concat",
              category: "slice_join",
              inputs: [
                { start: 1, end: 0, name: "tensors", type: "tensors" },
                { start: 0, name: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "GatherV2",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "indices", type: "tensor" },
                { start: 2, name: "axis", type: "number", defaultValue: 0 }
              ]
            },
            {
              tfOpName: "Gather",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "indices", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "axis",
                  name: "axis",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "validate_indices",
                  name: "validateIndices",
                  type: "bool",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Reverse",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "dims", type: "bool", notSupported: !0 }
              ]
            },
            {
              tfOpName: "ReverseV2",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number[]" }
              ]
            },
            {
              tfOpName: "Slice",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "begin", type: "number[]" },
                { start: 2, name: "size", type: "number[]" }
              ]
            },
            {
              tfOpName: "StridedSlice",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "begin", type: "number[]" },
                { start: 2, name: "end", type: "number[]" },
                { start: 3, name: "strides", type: "number[]" }
              ],
              attrs: [
                {
                  tfName: "begin_mask",
                  name: "beginMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "end_mask",
                  name: "endMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "new_axis_mask",
                  name: "newAxisMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "ellipsis_mask",
                  name: "ellipsisMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "shrink_axis_mask",
                  name: "shrinkAxisMask",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Pack",
              category: "slice_join",
              inputs: [{ start: 0, end: 0, name: "tensors", type: "tensors" }],
              attrs: [
                {
                  tfName: "axis",
                  name: "axis",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Unpack",
              category: "slice_join",
              inputs: [{ start: 0, name: "tensor", type: "tensor" }],
              attrs: [
                {
                  tfName: "axis",
                  name: "axis",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfName: "num",
                  name: "num",
                  type: "number",
                  defaultValue: 0,
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Tile",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "reps", type: "number[]" }
              ]
            },
            {
              tfOpName: "Split",
              category: "slice_join",
              inputs: [
                { start: 0, name: "axis", type: "number", defaultValue: 0 },
                { start: 1, name: "x", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "num_split",
                  name: "numOrSizeSplits",
                  type: "number",
                  defaultValue: 1
                }
              ]
            },
            {
              tfOpName: "SplitV",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "numOrSizeSplits", type: "number[]" },
                { start: 2, name: "axis", type: "number", defaultValue: 0 }
              ]
            },
            {
              tfOpName: "ScatterNd",
              category: "slice_join",
              inputs: [
                { start: 0, name: "indices", type: "tensor" },
                { start: 1, name: "values", type: "tensor" },
                { start: 2, name: "shape", type: "number[]" }
              ]
            },
            {
              tfOpName: "GatherNd",
              category: "slice_join",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "indices", type: "tensor" }
              ]
            },
            {
              tfOpName: "SparseToDense",
              category: "slice_join",
              inputs: [
                { start: 0, name: "sparseIndices", type: "tensor" },
                { start: 1, name: "outputShape", type: "number[]" },
                { start: 2, name: "sparseValues", type: "tensor" },
                { start: 3, name: "defaultValue", type: "tensor" }
              ],
              attrs: [
                {
                  tfName: "validate_indices",
                  name: "validateIndices",
                  type: "bool",
                  defaultValue: !1,
                  notSupported: !0
                }
              ]
            }
          ]
        }),
        R = Object.freeze({
          json: [
            {
              tfOpName: "FFT",
              category: "spectral",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "IFFT",
              category: "spectral",
              inputs: [{ start: 0, name: "x", type: "tensor" }]
            },
            {
              tfOpName: "RFFT",
              category: "spectral",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                {
                  start: 1,
                  name: "fft_length",
                  type: "number",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "IRFFT",
              category: "spectral",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                {
                  start: 1,
                  name: "fft_length",
                  type: "number",
                  notSupported: !0
                }
              ]
            }
          ]
        }),
        D = Object.freeze({
          json: [
            {
              tfOpName: "Cast",
              category: "transformation",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                {
                  tfName: "SrcT",
                  name: "sdtype",
                  type: "dtype",
                  notSupported: !0
                },
                { tfName: "DstT", name: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "ExpandDims",
              category: "transformation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "Pad",
              category: "transformation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "padding", type: "number[]" }
              ],
              attrs: [
                {
                  tfName: "constant_value",
                  name: "constantValue",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "PadV2",
              category: "transformation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "padding", type: "number[]" },
                {
                  start: 2,
                  name: "constantValue",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Reshape",
              category: "transformation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "shape", type: "number[]" }
              ]
            },
            {
              tfOpName: "Squeeze",
              category: "transformation",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                {
                  tfName: "axis",
                  tfDeprecatedName: "squeeze_dims",
                  name: "axis",
                  type: "number[]"
                }
              ]
            },
            {
              tfOpName: "SpaceToBatchND",
              category: "transformation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "blockShape", type: "number[]" },
                { start: 2, name: "paddings", type: "number[]" }
              ]
            },
            {
              tfOpName: "BatchToSpaceND",
              category: "transformation",
              inputs: [
                { start: 0, name: "x", type: "tensor" },
                { start: 1, name: "blockShape", type: "number[]" },
                { start: 2, name: "crops", type: "number[]" }
              ]
            },
            {
              tfOpName: "DepthToSpace",
              category: "transformation",
              inputs: [{ start: 0, name: "x", type: "tensor" }],
              attrs: [
                { tfName: "block_size", name: "blockSize", type: "number" },
                { tfName: "data_format", name: "dataFormat", type: "string" }
              ]
            }
          ]
        }),
        F = (function() {
          function t() {
            var t = [w, _, S, x, T, A, k, O, N, E, C, I, M, P, R, D],
              e = [].concat.apply(
                [],
                t.map(function(t) {
                  return t.json;
                })
              );
            this.opMappers = e.reduce(function(t, e) {
              return (t[e.tfOpName] = e), t;
            }, {});
          }
          return (
            Object.defineProperty(t, "Instance", {
              get: function() {
                return this._instance || (this._instance = new this());
              },
              enumerable: !0,
              configurable: !0
            }),
            (t.prototype.transformGraph = function(t) {
              var e = this,
                n = [],
                r = [],
                i = t.node.reduce(function(t, i) {
                  return (
                    (t[i.name] = e.mapNode(i)),
                    "Placeholder" === i.op && n.push(t[i.name]),
                    "Const" === i.op && r.push(t[i.name]),
                    t
                  );
                }, {}),
                o = [],
                a = [],
                s = Object.keys(i);
              return (
                s.forEach(function(t) {
                  var e = i[t];
                  e.inputNames.forEach(function(t) {
                    var n = y(t)[0];
                    e.inputs.push(i[n]), i[n].children.push(e);
                  }),
                    0 === e.inputs.length && o.push(e);
                }),
                s.forEach(function(t) {
                  var e = i[t];
                  0 === e.children.length && a.push(e);
                }),
                { nodes: i, inputs: o, outputs: a, weights: r, placeholders: n }
              );
            }),
            (t.prototype.mapNode = function(t) {
              var e = f(t.op) || this.opMappers[t.op] || {};
              null == t.attr && (t.attr = {});
              var n = {
                name: t.name,
                op: t.op,
                category: e.category,
                inputNames: (t.input || []).map(function(t) {
                  return t.startsWith("^") ? t.substr(1) : t;
                }),
                inputs: [],
                children: [],
                inputParams: {},
                attrParams: {},
                rawAttrs: t.attr
              };
              return (
                null != e.inputs &&
                  (n.inputParams = e.inputs.reduce(function(t, e) {
                    return (
                      (t[e.name] = {
                        type: e.type,
                        inputIndexStart: e.start,
                        inputIndexEnd: e.end
                      }),
                      t
                    );
                  }, {})),
                null != e.attrs &&
                  (n.attrParams = e.attrs.reduce(function(e, n) {
                    var r = n.type,
                      i = void 0;
                    switch (n.type) {
                      case "string":
                        void 0 === (i = L(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = L(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "string[]":
                        void 0 === (i = K(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = K(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "number":
                        void 0 ===
                          (i = B(t.attr, n.tfName, n.defaultValue || 0)) &&
                          n.tfDeprecatedName &&
                          (i = B(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "number[]":
                        void 0 === (i = H(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = H(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "bool":
                        void 0 === (i = j(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = j(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "bool[]":
                        void 0 === (i = X(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = X(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "shape":
                        void 0 === (i = G(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = G(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "shape[]":
                        void 0 === (i = Q(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = Q(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "dtype":
                        void 0 === (i = U(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = U(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "dtype[]":
                        void 0 === (i = V(t.attr, n.tfName, n.defaultValue)) &&
                          n.tfDeprecatedName &&
                          (i = V(t.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                      case "tensor":
                      case "tensors":
                        break;
                      default:
                        throw new Error(
                          "Unsupported param type: " +
                            n.type +
                            " for op: " +
                            t.op
                        );
                    }
                    return (e[n.name] = { value: i, type: r }), e;
                  }, {})),
                n
              );
            }),
            t
          );
        })();
      function z(e, n) {
        var r = Array.isArray(e)
          ? String.fromCharCode.apply(null, e)
          : (function(e) {
              var n = a.ENV.global;
              if (void 0 !== n.atob) return n.atob(e);
              if (void 0 !== t) return new t(e, "base64").toString();
              throw new Error(
                "Unable to decode base64 in this environment. Missing built-in atob() or Buffer()"
              );
            })(e);
        return n ? r : r.toLowerCase();
      }
      function L(t, e, n, r) {
        void 0 === r && (r = !1);
        var i = t[e];
        return null != i ? z(i.s, r) : n;
      }
      function j(t, e, n) {
        var r = t[e];
        return r ? r.b : n;
      }
      function B(t, e, n) {
        var r = t[e] || {},
          i = null != r.i ? r.i : null != r.f ? r.f : n;
        return "number" == typeof i ? i : parseInt(i, 10);
      }
      function q(t) {
        switch (("string" == typeof t && (t = r[t]), t)) {
          case r.DT_FLOAT:
            return "float32";
          case r.DT_INT32:
            return "int32";
          case r.DT_BOOL:
            return "bool";
          case r.DT_DOUBLE:
            return "float32";
          case r.DT_STRING:
            return "string";
          default:
            return null;
        }
      }
      function U(t, e, n) {
        var r = t[e];
        return r && r.type ? q(r.type) : n;
      }
      function V(t, e, n) {
        var r = t[e];
        return r && r.list && r.list.type
          ? r.list.type.map(function(t) {
              return q(t);
            })
          : n;
      }
      function W(t) {
        if (!t.unknownRank)
          return null != t.dim
            ? t.dim.map(function(t) {
                return "number" == typeof t.size
                  ? t.size
                  : parseInt(t.size, 10);
              })
            : [];
      }
      function G(t, e, n) {
        var r = t[e];
        return r && r.shape ? W(r.shape) : n;
      }
      function H(t, e, n) {
        var r = t[e];
        return r
          ? (r.list.f && r.list.f.length ? r.list.f : r.list.i).map(function(
              t
            ) {
              return "number" == typeof t ? t : parseInt(t, 10);
            })
          : n;
      }
      function K(t, e, n, r) {
        void 0 === r && (r = !1);
        var i = t[e];
        return i && i.list && i.list.s
          ? i.list.s.map(function(t) {
              return z(t, r);
            })
          : n;
      }
      function Q(t, e, n) {
        var r = t[e];
        return r && r.list && r.list.shape
          ? r.list.shape.map(function(t) {
              return W(t);
            })
          : n;
      }
      function X(t, e, n) {
        var r = t[e];
        return r && r.list && r.list.b ? r.list.b : n;
      }
      var $ = (function() {
          function t(t, e, n) {
            var r = this;
            (this.node = t),
              (this.tensorMap = e),
              (this.context = n),
              (this.inputs = []),
              (this.attrs = {}),
              (this.inputs = t.inputNames.map(function(t) {
                return r.getInput(t);
              })),
              null != t.rawAttrs &&
                (this.attrs = Object.keys(t.rawAttrs).reduce(function(t, e) {
                  return (t[e] = r.getAttr(e)), t;
                }, {}));
          }
          return (
            (t.prototype.getInput = function(t) {
              return m(t, this.tensorMap, this.context);
            }),
            (t.prototype.getAttr = function(t, e) {
              var n = this.node.rawAttrs[t];
              if (null != n.tensor) return m(t, this.tensorMap, this.context);
              if (null != n.i || null != n.f)
                return B(this.node.rawAttrs, t, e);
              if (null != n.s) return L(this.node.rawAttrs, t, e);
              if (null != n.b) return j(this.node.rawAttrs, t, e);
              if (null != n.shape) return G(this.node.rawAttrs, t, e);
              if (null != n.type) return U(this.node.rawAttrs, t, e);
              if (null != n.list) {
                if (null != n.list.i || null != n.list.f)
                  return H(this.node.rawAttrs, t, e);
                if (null != n.list.s) return K(this.node.rawAttrs, t, e);
                if (null != n.list.shape) return Q(this.node.rawAttrs, t, e);
                if (null != n.list.b) return X(this.node.rawAttrs, t, e);
                if (null != n.list.type) return V(this.node.rawAttrs, t, e);
              }
              return e;
            }),
            t
          );
        })(),
        Y = function(t, e, n) {
          switch (t.op) {
            case "BiasAdd":
            case "Add":
              return [Object(a.add)(d("a", t, e, n), d("b", t, e, n))];
            case "AddN":
              return [Object(a.addN)(d("tensors", t, e, n))];
            case "FloorMod":
            case "Mod":
              return [Object(a.mod)(d("a", t, e, n), d("b", t, e, n))];
            case "Mul":
              return [Object(a.mul)(d("a", t, e, n), d("b", t, e, n))];
            case "RealDiv":
            case "Div":
              return [Object(a.div)(d("a", t, e, n), d("b", t, e, n))];
            case "FloorDiv":
              return [Object(a.floorDiv)(d("a", t, e, n), d("b", t, e, n))];
            case "Sub":
              return [Object(a.sub)(d("a", t, e, n), d("b", t, e, n))];
            case "Minimum":
              return [Object(a.minimum)(d("a", t, e, n), d("b", t, e, n))];
            case "Maximum":
              return [Object(a.maximum)(d("a", t, e, n), d("b", t, e, n))];
            case "Pow":
              return [Object(a.pow)(d("a", t, e, n), d("b", t, e, n))];
            case "SquaredDifference":
              return [
                Object(a.squaredDifference)(d("a", t, e, n), d("b", t, e, n))
              ];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        J = function(t, e, n) {
          switch (t.op) {
            case "Abs":
              return [Object(a.abs)(d("x", t, e, n))];
            case "Acos":
              return [Object(a.acos)(d("x", t, e, n))];
            case "Acosh":
              return [Object(a.acosh)(d("x", t, e, n))];
            case "Asin":
              return [Object(a.asin)(d("x", t, e, n))];
            case "Asinh":
              return [Object(a.asinh)(d("x", t, e, n))];
            case "Atan":
              return [Object(a.atan)(d("x", t, e, n))];
            case "Atan2":
              return [Object(a.atan2)(d("x", t, e, n), d("y", t, e, n))];
            case "Atanh":
              return [Object(a.atanh)(d("x", t, e, n))];
            case "Ceil":
              return [Object(a.ceil)(d("x", t, e, n))];
            case "Cos":
              return [Object(a.cos)(d("x", t, e, n))];
            case "Cosh":
              return [Object(a.cosh)(d("x", t, e, n))];
            case "Elu":
              return [Object(a.elu)(d("x", t, e, n))];
            case "Erf":
              return [Object(a.erf)(d("x", t, e, n))];
            case "Exp":
              return [Object(a.exp)(d("x", t, e, n))];
            case "Expm1":
              return [Object(a.expm1)(d("x", t, e, n))];
            case "Floor":
              return [Object(a.floor)(d("x", t, e, n))];
            case "Log":
              return [Object(a.log)(d("x", t, e, n))];
            case "Log1p":
              return [Object(a.log1p)(d("x", t, e, n))];
            case "Neg":
              return [Object(a.neg)(d("x", t, e, n))];
            case "Reciprocal":
              return [Object(a.reciprocal)(d("x", t, e, n))];
            case "Relu":
              return [Object(a.relu)(d("x", t, e, n))];
            case "Round":
              return [Object(a.round)(d("x", t, e, n))];
            case "Selu":
              return [Object(a.selu)(d("x", t, e, n))];
            case "Sigmoid":
              return [Object(a.sigmoid)(d("x", t, e, n))];
            case "Sin":
              return [Object(a.sin)(d("x", t, e, n))];
            case "Sign":
              return [Object(a.sign)(d("x", t, e, n))];
            case "Sinh":
              return [Object(a.sinh)(d("x", t, e, n))];
            case "Softplus":
              return [Object(a.softplus)(d("x", t, e, n))];
            case "Sqrt":
              return [Object(a.sqrt)(d("x", t, e, n))];
            case "Square":
              return [Object(a.square)(d("x", t, e, n))];
            case "Tanh":
              return [Object(a.tanh)(d("x", t, e, n))];
            case "Tan":
              return [Object(a.tan)(d("x", t, e, n))];
            case "Relu6":
            case "ClipByValue":
              return [
                Object(a.clipByValue)(
                  d("x", t, e, n),
                  d("clipValueMin", t, e, n),
                  d("clipValueMax", t, e, n)
                )
              ];
            case "Rsqrt":
              return [Object(a.rsqrt)(m(t.inputNames[0], e, n))];
            case "Prod":
              return [Object(a.prod)(d("x", t, e, n), d("axes", t, e, n))];
            case "LeakyRelu":
              return [
                Object(a.leakyRelu)(d("x", t, e, n), d("alpha", t, e, n))
              ];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        Z = (function() {
          function t(e, n, r, i, o, a, s) {
            (this.name = e),
              (this.dtype = n),
              (this.maxSize = r),
              (this.elementShape = i),
              (this.identicalElementShapes = o),
              (this.dynamicSize = a),
              (this.clearAfterRead = s),
              (this.tensors = []),
              (this.closed_ = !1),
              (this.id = t.nextId++);
          }
          return (
            Object.defineProperty(t.prototype, "closed", {
              get: function() {
                return this.closed_;
              },
              enumerable: !0,
              configurable: !0
            }),
            (t.prototype.clearAndClose = function() {
              this.tensors.forEach(function(t) {
                return t.tensor.dispose();
              }),
                (this.tensors = []),
                (this.closed_ = !0);
            }),
            (t.prototype.size = function() {
              return this.tensors.length;
            }),
            (t.prototype.read = function(t) {
              if (this.closed_)
                throw new Error(
                  "TensorArray " + this.name + " has already been closed."
                );
              if (t < 0 || t >= this.tensors.length)
                throw new Error(
                  "Tried to read from index " +
                    t +
                    ", but array size is: " +
                    this.tensors.length
                );
              var e = this.tensors[t];
              if (e.cleared)
                throw new Error(
                  "TensorArray " +
                    this.name +
                    ": Could not read index " +
                    t +
                    " twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?)."
                );
              return (
                this.clearAfterRead && (e.cleared = !0), (e.read = !0), e.tensor
              );
            }),
            (t.prototype.readMany = function(t) {
              var e = this;
              return t.map(function(t) {
                return e.read(t);
              });
            }),
            (t.prototype.write = function(t, e) {
              if (this.closed_)
                throw new Error(
                  "TensorArray " + this.name + " has already been closed."
                );
              if (t < 0 || (!this.dynamicSize && t >= this.maxSize))
                throw new Error(
                  "Tried to write to index " +
                    t +
                    ", but array is not resizeable and size is: " +
                    this.maxSize
                );
              var n = this.tensors[t] || {};
              if (e.dtype !== this.dtype)
                throw new Error(
                  "TensorArray " +
                    this.name +
                    ": Could not write to TensorArray index " +
                    t +
                    ",\n          because the value dtype is " +
                    e.dtype +
                    ", but TensorArray dtype is " +
                    this.dtype +
                    "."
                );
              if (
                (0 !== this.size() ||
                  (null != this.elementShape &&
                    0 !== this.elementShape.length) ||
                  (this.elementShape = e.shape),
                this.assertShapesMatchAllowUndefinedSize(
                  this.elementShape,
                  e.shape,
                  "TensorArray " +
                    this.name +
                    ": Could not write to TensorArray index " +
                    t +
                    "."
                ),
                n && n.read)
              )
                throw new Error(
                  "TensorArray " +
                    this.name +
                    ": Could not write to TensorArray index " +
                    t +
                    ", because it has already been read."
                );
              if (n && n.written)
                throw new Error(
                  "TensorArray " +
                    this.name +
                    ": Could not write to TensorArray index " +
                    t +
                    ", because it has already been written."
                );
              (n.tensor = e), (n.written = !0), (this.tensors[t] = n);
            }),
            (t.prototype.writeMany = function(t, e) {
              var n = this;
              if (t.length !== e.length)
                throw new Error(
                  "TensorArray " +
                    this.name +
                    ": could not write multiple tensors,because the index size: " +
                    t.length +
                    " is not the same as tensors size: " +
                    e.length +
                    "."
                );
              t.forEach(function(t, r) {
                return n.write(t, e[r]);
              });
            }),
            (t.prototype.gather = function(t, e) {
              if (e && e !== this.dtype)
                throw new Error(
                  "TensorArray dtype is " +
                    this.dtype +
                    " but gather requested dtype " +
                    e
                );
              if (!t) {
                t = [];
                for (var n = 0; n < this.size(); n++) t.push(n);
              }
              if (0 === t.length)
                return Object(a.tensor)([], [0].concat(this.elementShape));
              var r = this.readMany(t);
              return (
                this.assertShapesMatchAllowUndefinedSize(
                  this.elementShape,
                  r[0].shape,
                  "TensorArray shape mismatch: "
                ),
                Object(a.stack)(r, 0)
              );
            }),
            (t.prototype.concat = function(t) {
              if (t && t !== this.dtype)
                throw new Error(
                  "TensorArray dtype is " +
                    this.dtype +
                    " but concat requested dtype " +
                    t
                );
              if (0 === this.size())
                return Object(a.tensor)([], [0].concat(this.elementShape));
              for (var e = [], n = 0; n < this.size(); n++) e.push(n);
              var r = this.readMany(e);
              return (
                this.assertShapesMatchAllowUndefinedSize(
                  this.elementShape,
                  r[0].shape,
                  "TensorArray shape mismatch: tensor array shape (" +
                    this.elementShape +
                    ") vs first tensor shape (" +
                    r[0].shape +
                    ")"
                ),
                Object(a.concat)(r, 0)
              );
            }),
            (t.prototype.scatter = function(t, e) {
              if (e.dtype !== this.dtype)
                throw new Error(
                  "TensorArray dtype is " +
                    this.dtype +
                    " but tensor has dtype " +
                    e.dtype
                );
              if (t.length !== e.shape[0])
                throw new Error(
                  "Expected len(indices) == tensor.shape[0], but saw: " +
                    t.length +
                    " vs. " +
                    e.shape[0]
                );
              var n = Math.max.apply(Math, t);
              if (!this.dynamicSize && n >= this.maxSize)
                throw new Error(
                  "Max index must be < array size (" +
                    n +
                    "  vs. " +
                    this.maxSize +
                    ")"
                );
              this.writeMany(t, Object(a.unstack)(e, 0));
            }),
            (t.prototype.split = function(t, e) {
              var n = this;
              if (e.dtype !== this.dtype)
                throw new Error(
                  "TensorArray dtype is " +
                    this.dtype +
                    " but tensor has dtype " +
                    e.dtype
                );
              var r = 0,
                i = t.map(function(t) {
                  return (r += t);
                });
              if (r !== e.shape[0])
                throw new Error(
                  "Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        " +
                    r +
                    ", and tensor's shape is: " +
                    e.shape
                );
              if (!this.dynamicSize && t.length !== this.maxSize)
                throw new Error(
                  "TensorArray's size is not equal to the size of lengths (" +
                    this.maxSize +
                    " vs. " +
                    t.length +
                    "), and the TensorArray is not marked as dynamically resizeable"
                );
              var o = 0 === r ? 0 : e.size / r,
                s = [];
              Object(a.tidy)(function() {
                e = e.reshape([1, r, o]);
                for (var u = 0; u < t.length; ++u) {
                  var c = [0, 0 === u ? 0 : i[u - 1], 0],
                    l = [1, t[u], o];
                  s[u] = Object(a.slice)(e, c, l).reshape(n.elementShape);
                }
                return s;
              });
              for (var u = [], c = 0; c < t.length; c++) u[c] = c;
              this.writeMany(u, s);
            }),
            (t.prototype.assertShapesMatchAllowUndefinedSize = function(
              t,
              e,
              n
            ) {
              void 0 === n && (n = ""),
                a.util.assert(
                  this.shapesEqualAllowUndefinedSize(t, e),
                  function() {
                    return n + " Shapes " + t + " and " + e + " must match";
                  }
                );
            }),
            (t.prototype.shapesEqualAllowUndefinedSize = function(t, e) {
              if (t.length !== e.length) return !1;
              for (var n = 0; n < t.length; n++)
                if (-1 !== t[n] && -1 !== e[n] && t[n] !== e[n]) return !1;
              return !0;
            }),
            (t.nextId = 0),
            t
          );
        })();
      var tt = function(t, e, n) {
          switch (t.op) {
            case "Conv1D":
              var r = d("stride", t, e, n),
                i = d("pad", t, e, n),
                o = d("dataFormat", t, e, n).toUpperCase(),
                s = d("dilation", t, e, n);
              return [
                Object(a.conv1d)(
                  d("x", t, e, n),
                  d("filter", t, e, n),
                  r,
                  i,
                  o,
                  s
                )
              ];
            case "Conv2D":
              (r = d("strides", t, e, n)),
                (i = d("pad", t, e, n)),
                (o = d("dataFormat", t, e, n).toUpperCase());
              var u = d("dilations", t, e, n);
              return [
                Object(a.conv2d)(
                  d("x", t, e, n),
                  d("filter", t, e, n),
                  [r[1], r[2]],
                  i,
                  o,
                  [u[1], u[2]]
                )
              ];
            case "Conv2DBackpropInput":
            case "Conv2dTranspose":
              var c = d("outputShape", t, e, n);
              return (
                (r = d("strides", t, e, n)),
                (i = d("pad", t, e, n)),
                [
                  Object(a.conv2dTranspose)(
                    d("x", t, e, n),
                    d("filter", t, e, n),
                    c,
                    [r[1], r[2]],
                    i
                  )
                ]
              );
            case "DepthwiseConv2dNative":
            case "DepthwiseConv2d":
              return (
                (r = d("strides", t, e, n)),
                (i = d("pad", t, e, n)),
                (u = d("dilations", t, e, n)),
                (o = d("dataFormat", t, e, n).toUpperCase()),
                [
                  Object(a.depthwiseConv2d)(
                    d("input", t, e, n),
                    d("filter", t, e, n),
                    [r[1], r[2]],
                    i,
                    o,
                    [u[1], u[2]]
                  )
                ]
              );
            case "AvgPool":
              (r = d("strides", t, e, n)), (i = d("pad", t, e, n));
              var l = d("kernelSize", t, e, n);
              return [
                Object(a.avgPool)(
                  d("x", t, e, n),
                  [l[1], l[2]],
                  [r[1], r[2]],
                  i
                )
              ];
            case "MaxPool":
              return (
                (r = d("strides", t, e, n)),
                (i = d("pad", t, e, n)),
                (l = d("kernelSize", t, e, n)),
                [
                  Object(a.maxPool)(
                    d("x", t, e, n),
                    [l[1], l[2]],
                    [r[1], r[2]],
                    i
                  )
                ]
              );
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        et = function(t, e, n) {
          switch (t.op) {
            case "Fill":
              var r = d("shape", t, e, n),
                i = d("dtype", t, e, n),
                o = d("value", t, e, n);
              return [Object(a.fill)(r, o, i)];
            case "LinSpace":
              var s = d("start", t, e, n),
                u = d("stop", t, e, n),
                c = d("num", t, e, n);
              return [Object(a.linspace)(s, u, c)];
            case "OneHot":
              var l = d("indices", t, e, n),
                h = d("depth", t, e, n),
                f = d("onValue", t, e, n),
                p = d("offValue", t, e, n);
              return [Object(a.oneHot)(l, h, f, p)];
            case "Ones":
              return [Object(a.ones)(d("shape", t, e, n), d("dtype", t, e, n))];
            case "OnesLike":
              return [Object(a.onesLike)(d("x", t, e, n))];
            case "RandomUniform":
              return [
                Object(a.randomUniform)(
                  d("shape", t, e, n),
                  d("minval", t, e, n),
                  d("maxval", t, e, n),
                  d("dtype", t, e, n)
                )
              ];
            case "Range":
              s = d("start", t, e, n);
              var m = d("stop", t, e, n),
                y = d("step", t, e, n);
              return [Object(a.range)(s, m, y, d("dtype", t, e, n))];
            case "TruncatedNormal":
              r = d("shape", t, e, n);
              var g = d("mean", t, e, n),
                v = d("stdDev", t, e, n),
                b = d("seed", t, e, n);
              return [
                Object(a.truncatedNormal)(r, g, v, d("dtype", t, e, n), b)
              ];
            case "Zeros":
              return [
                Object(a.zeros)(d("shape", t, e, n), d("dtype", t, e, n))
              ];
            case "ZerosLike":
              return [Object(a.zerosLike)(d("x", t, e, n))];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        };
      var nt = function(t, e, n) {
          switch (t.op) {
            case "TopKV2":
              var r = d("x", t, e, n),
                i = d("k", t, e, n),
                o = d("sorted", t, e, n),
                s = Object(a.topk)(r, i, o);
              return [s.values, s.indices];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        rt = function(t, e, n) {
          switch (t.op) {
            case "Const":
              return e[t.name];
            case "PlaceholderWithDefault":
              var r = d("default", t, e, n);
              return [m(t.name, e, n) || r];
            case "Placeholder":
              return [m(t.name, e, n)];
            case "Identity":
            case "StopGradient":
            case "FakeQuantWithMinMaxVars":
              return [d("x", t, e, n).clone()];
            case "IdentityN":
              return d("x", t, e, n).map(function(t) {
                return t.clone();
              });
            case "Snapshot":
              return [d("x", t, e, n).clone()];
            case "Shape":
              return [Object(a.tensor1d)(d("x", t, e, n).shape, "int32")];
            case "ShapeN":
              return d("x", t, e, n).map(function(t) {
                return Object(a.tensor1d)(t.shape);
              });
            case "Size":
              return [Object(a.scalar)(d("x", t, e, n).size, "int32")];
            case "Rank":
              return [Object(a.scalar)(d("x", t, e, n).rank, "int32")];
            case "NoOp":
              return [];
            case "Print":
              var i = d("x", t, e, n),
                o = d("data", t, e, n),
                s = d("message", t, e, n),
                u = d("summarize", t, e, n);
              console.warn(
                "The graph has a tf.print() operation,usually used for debugging, which slows down performance."
              ),
                console.log(s);
              for (var c = 0; c < o.length; c++)
                console.log(
                  Array.prototype.slice.call(o[c].dataSync()).slice(0, u)
                );
              return [i];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        it = function(t, e, n) {
          switch (t.op) {
            case "ResizeBilinear":
              var r = d("images", t, e, n),
                i = d("size", t, e, n),
                o = d("alignCorners", t, e, n);
              return [a.image.resizeBilinear(r, [i[0], i[1]], o)];
            case "ResizeNearestNeighbor":
              return (
                (r = d("images", t, e, n)),
                (i = d("size", t, e, n)),
                (o = d("alignCorners", t, e, n)),
                [a.image.resizeNearestNeighbor(r, [i[0], i[1]], o)]
              );
            case "CropAndResize":
              var s = d("image", t, e, n),
                u = d("boxes", t, e, n),
                c = d("boxInd", t, e, n),
                l = d("cropSize", t, e, n),
                h = d("method", t, e, n),
                f = d("extrapolationValue", t, e, n);
              return [a.image.cropAndResize(s, u, c, l, h, f)];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        ot = function(t, e, n) {
          switch (t.op) {
            case "Equal":
              return [Object(a.equal)(d("a", t, e, n), d("b", t, e, n))];
            case "NotEqual":
              return [Object(a.notEqual)(d("a", t, e, n), d("b", t, e, n))];
            case "Greater":
              return [Object(a.greater)(d("a", t, e, n), d("b", t, e, n))];
            case "GreaterEqual":
              return [Object(a.greaterEqual)(d("a", t, e, n), d("b", t, e, n))];
            case "Less":
              return [Object(a.less)(d("a", t, e, n), d("b", t, e, n))];
            case "LessEqual":
              return [Object(a.lessEqual)(d("a", t, e, n), d("b", t, e, n))];
            case "LogicalAnd":
              return [Object(a.logicalAnd)(d("a", t, e, n), d("b", t, e, n))];
            case "LogicalNot":
              return [Object(a.logicalNot)(d("a", t, e, n))];
            case "LogicalOr":
              return [Object(a.logicalOr)(d("a", t, e, n), d("b", t, e, n))];
            case "Select":
              return [
                Object(a.where)(
                  d("condition", t, e, n),
                  d("a", t, e, n),
                  d("b", t, e, n)
                )
              ];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        at = function(t, e, n) {
          switch (t.op) {
            case "BatchMatMul":
            case "MatMul":
              return [
                Object(a.matMul)(
                  d("a", t, e, n),
                  d("b", t, e, n),
                  d("transposeA", t, e, n),
                  d("transposeB", t, e, n)
                )
              ];
            case "Transpose":
              return [Object(a.transpose)(d("x", t, e, n), d("perm", t, e, n))];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        st = function(t, e, n) {
          switch (t.op) {
            case "FusedBatchNorm":
            case "FusedBatchNormV2":
              return [
                Object(a.batchNorm)(
                  d("x", t, e, n),
                  d("mean", t, e, n),
                  d("variance", t, e, n),
                  d("offset", t, e, n),
                  d("scale", t, e, n),
                  d("epsilon", t, e, n)
                )
              ];
            case "LRN":
              return [
                Object(a.localResponseNormalization)(
                  d("x", t, e, n),
                  d("radius", t, e, n),
                  d("bias", t, e, n),
                  d("alpha", t, e, n),
                  d("beta", t, e, n)
                )
              ];
            case "Softmax":
              return [Object(a.softmax)(d("x", t, e, n))];
            case "LogSoftmax":
              return [Object(a.logSoftmax)(d("x", t, e, n))];
            case "SparseToDense":
              return [
                Object(a.sparseToDense)(
                  d("sparseIndices", t, e, n),
                  d("outputShape", t, e, n),
                  d("sparseValues", t, e, n),
                  d("defaultValue", t, e, n)
                )
              ];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        ut = function(t, e, n) {
          switch (t.op) {
            case "Max":
              var r = d("axis", t, e, n),
                i = d("keepDims", t, e, n);
              return [Object(a.max)(d("x", t, e, n), r, i)];
            case "Mean":
              return (
                (r = d("axis", t, e, n)),
                (i = d("keepDims", t, e, n)),
                [Object(a.mean)(d("x", t, e, n), r, i)]
              );
            case "Min":
              return (
                (r = d("axis", t, e, n)),
                (i = d("keepDims", t, e, n)),
                [Object(a.min)(d("x", t, e, n), r, i)]
              );
            case "Sum":
              return (
                (r = d("axis", t, e, n)),
                (i = d("keepDims", t, e, n)),
                [Object(a.sum)(d("x", t, e, n), r, i)]
              );
            case "All":
              return (
                (r = d("axis", t, e, n)),
                (i = d("keepDims", t, e, n)),
                [Object(a.all)(d("x", t, e, n), r, i)]
              );
            case "Any":
              return (
                (r = d("axis", t, e, n)),
                (i = d("keepDims", t, e, n)),
                [Object(a.any)(d("x", t, e, n), r, i)]
              );
            case "ArgMax":
              return (
                (r = d("axis", t, e, n)), [Object(a.argMax)(d("x", t, e, n), r)]
              );
            case "ArgMin":
              return (
                (r = d("axis", t, e, n)), [Object(a.argMin)(d("x", t, e, n), r)]
              );
            case "Prod":
              return (
                (r = d("axis", t, e, n)),
                (i = d("keepDims", t, e, n)),
                [Object(a.prod)(d("x", t, e, n), r, i)]
              );
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        ct = function(t, e, n) {
          switch (t.op) {
            case "ConcatV2":
            case "Concat":
              var r = d("axis", t, e, n),
                i = d("tensors", t, e, n);
              return [Object(a.concat)(i, r)];
            case "GatherV2":
            case "Gather":
              r = d("axis", t, e, n);
              var o = d("x", t, e, n),
                s = d("indices", t, e, n);
              return [Object(a.gather)(o, s.asType("int32"), r)];
            case "ReverseV2":
            case "Reverse":
              return (
                (r = d("axis", t, e, n)),
                (o = d("x", t, e, n)),
                [Object(a.reverse)(o, r)]
              );
            case "Slice":
              var u = d("begin", t, e, n),
                c = d("size", t, e, n);
              return [Object(a.slice)(d("x", t, e, n), u, c)];
            case "StridedSlice":
              u = d("begin", t, e, n);
              var l = d("end", t, e, n),
                h = d("strides", t, e, n),
                f = d("beginMask", t, e, n),
                p = d("endMask", t, e, n),
                m = d("ellipsisMask", t, e, n),
                y = d("newAxisMask", t, e, n),
                g = d("shrinkAxisMask", t, e, n),
                v = d("x", t, e, n);
              if (1 === u.length && v.shape.length > 1)
                for (var b = 1; b < v.shape.length; b++)
                  u.push(0), l.push(v.shape[b]), h.push(h[0]);
              return [Object(a.stridedSlice)(v, u, l, h, f, p, m, y, g)];
            case "Pack":
              return Object(a.tidy)(function() {
                var r = d("axis", t, e, n),
                  i = d("tensors", t, e, n),
                  o = i[0].shape,
                  s = i[0].squeeze().shape,
                  u = i.map(function(t) {
                    var e = a.util.arraysEqual(t.shape, o);
                    if (!e && !a.util.arraysEqual(t.squeeze().shape, s))
                      throw new Error("the input tensors shape does not match");
                    return e ? t : t.reshape(o);
                  });
                return [Object(a.stack)(u, r)];
              });
            case "Unpack":
              return Object(a.tidy)(function() {
                var r = d("axis", t, e, n),
                  i = d("tensor", t, e, n);
                return Object(a.unstack)(i, r);
              });
            case "Tile":
              var w = d("reps", t, e, n);
              return [Object(a.tile)(d("x", t, e, n), w)];
            case "Split":
            case "SplitV":
              r = d("axis", t, e, n);
              var _ = d("numOrSizeSplits", t, e, n);
              return Object(a.split)(d("x", t, e, n), _, r);
            case "ScatterNd":
              s = d("indices", t, e, n);
              var S = d("values", t, e, n),
                x = d("shape", t, e, n);
              return [Object(a.scatterND)(s, S, x)];
            case "GatherNd":
              var T = d("x", t, e, n);
              return (s = d("indices", t, e, n)), [Object(a.gatherND)(T, s)];
            case "SparseToDense":
              (s = d("sparseIndices", t, e, n)),
                (x = d("outputShape", t, e, n));
              var A = d("sparseValues", t, e, n),
                k = d("defaultValue", t, e, n);
              return [
                Object(a.sparseToDense)(
                  s,
                  A,
                  x,
                  A.dtype === k.dtype ? k : k.asType(A.dtype)
                )
              ];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        lt = function(t, e, n) {
          switch (t.op) {
            case "FFT":
              return [Object(a.fft)(d("x", t, e, n))];
            case "IFFT":
              return [Object(a.ifft)(d("x", t, e, n))];
            case "RFFT":
              return [Object(a.rfft)(d("x", t, e, n))];
            case "IRFFT":
              return [Object(a.irfft)(d("x", t, e, n))];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        },
        ht = function(t, e, n) {
          switch (t.op) {
            case "Cast":
              return [Object(a.cast)(d("x", t, e, n), d("dtype", t, e, n))];
            case "ExpandDims":
              var r = d("axis", t, e, n);
              return [Object(a.expandDims)(d("x", t, e, n), r)];
            case "Squeeze":
              return (
                (r = d("axis", t, e, n)),
                [Object(a.squeeze)(d("x", t, e, n), r)]
              );
            case "Reshape":
              return [Object(a.reshape)(d("x", t, e, n), d("shape", t, e, n))];
            case "PadV2":
            case "Pad":
              return [
                Object(a.pad)(
                  d("x", t, e, n),
                  b(d("padding", t, e, n), 2),
                  d("constantValue", t, e, n)
                )
              ];
            case "SpaceToBatchND":
              var i = d("blockShape", t, e, n),
                o = b(d("paddings", t, e, n), 2);
              return [Object(a.spaceToBatchND)(d("x", t, e, n), i, o)];
            case "BatchToSpaceND":
              i = d("blockShape", t, e, n);
              var s = b(d("crops", t, e, n), 2);
              return [Object(a.batchToSpaceND)(d("x", t, e, n), i, s)];
            case "DepthToSpace":
              var u = d("blockSize", t, e, n),
                c = d("dataFormat", t, e, n).toUpperCase();
              return [Object(a.depthToSpace)(d("x", t, e, n), u, c)];
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        };
      function ft(t, e, n) {
        var r = (function(t, e, n) {
          switch (t.category) {
            case "arithmetic":
              return Y(t, e, n);
            case "basic_math":
              return J(t, e, n);
            case "control":
              return (function(t, e, n) {
                return u(this, void 0, void 0, function() {
                  var r,
                    i,
                    o,
                    s,
                    u,
                    l,
                    h,
                    f,
                    p,
                    y,
                    g,
                    v,
                    b,
                    w,
                    _,
                    S,
                    x,
                    T,
                    A,
                    k,
                    E,
                    N,
                    O,
                    C,
                    I,
                    M,
                    P,
                    R,
                    D,
                    F,
                    z,
                    L,
                    j,
                    B,
                    q;
                  return c(this, function(c) {
                    switch (c.label) {
                      case 0:
                        switch (t.op) {
                          case "LoopCond":
                            return [3, 1];
                          case "Switch":
                            return [3, 2];
                          case "Merge":
                            return [3, 4];
                          case "Enter":
                            return [3, 5];
                          case "Exit":
                            return [3, 6];
                          case "NextIteration":
                            return [3, 7];
                          case "TensorArrayV3":
                            return [3, 8];
                          case "TensorArrayWriteV3":
                            return [3, 9];
                          case "TensorArrayReadV3":
                            return [3, 10];
                          case "TensorArrayGatherV3":
                            return [3, 11];
                          case "TensorArrayScatterV3":
                            return [3, 12];
                          case "TensorArrayConcatV3":
                            return [3, 13];
                          case "TensorArraySplitV3":
                            return [3, 14];
                          case "TensorArraySizeV3":
                            return [3, 15];
                          case "TensorArrayCloseV3":
                            return [3, 16];
                        }
                        return [3, 17];
                      case 1:
                        return [2, [d("pred", t, e, n).clone()]];
                      case 2:
                        return (
                          (r = d("pred", t, e, n)),
                          (i = d("data", t, e, n)),
                          [4, r.data()]
                        );
                      case 3:
                        return [
                          2,
                          c.sent()[0]
                            ? [void 0, i.clone()]
                            : [i.clone(), void 0]
                        ];
                      case 4:
                        return [
                          2,
                          (o = t.inputNames.find(function(t) {
                            return void 0 !== m(t, e, n);
                          }))
                            ? [m(o, e, n).clone()]
                            : void 0
                        ];
                      case 5:
                        return (
                          (s = d("frameName", t, e, n)),
                          (u = d("tensor", t, e, n)),
                          n.enterFrame(s),
                          [2, [u.clone()]]
                        );
                      case 6:
                        return (
                          (l = d("tensor", t, e, n)),
                          n.exitFrame(),
                          [2, [l.clone()]]
                        );
                      case 7:
                        return (
                          (h = d("tensor", t, e, n)),
                          n.nextIteration(),
                          [2, [h.clone()]]
                        );
                      case 8:
                        return (
                          (f = d("size", t, e, n)),
                          (p = d("dtype", t, e, n)),
                          (y = d("elementShape", t, e, n)),
                          (g = d("dynamicSize", t, e, n)),
                          (v = d("clearAfterRead", t, e, n)),
                          (b = d("identicalElementShapes", t, e, n)),
                          (w = d("name", t, e, n)),
                          (_ = new Z(w, p, f, y, b, g, v)),
                          n.addTensorArray(_),
                          [2, [Object(a.scalar)(_.id), Object(a.scalar)(1)]]
                        );
                      case 9:
                        return (
                          (S = d("tensorArrayId", t, e, n)),
                          (x = d("index", t, e, n)),
                          (T = d("tensor", t, e, n)),
                          n.getTensorArray(S).write(x, T),
                          [2, [Object(a.scalar)(1)]]
                        );
                      case 10:
                        return (
                          (A = d("tensorArrayId", t, e, n)),
                          (k = d("index", t, e, n)),
                          [2, [n.getTensorArray(A).read(k)]]
                        );
                      case 11:
                        return (
                          (E = d("tensorArrayId", t, e, n)),
                          (N = d("indices", t, e, n)),
                          (O = d("dtype", t, e, n)),
                          [2, [n.getTensorArray(E).gather(N, O)]]
                        );
                      case 12:
                        return (
                          (C = d("tensorArrayId", t, e, n)),
                          (I = d("indices", t, e, n)),
                          (M = d("tensor", t, e, n)),
                          n.getTensorArray(C).scatter(I, M),
                          [2, [Object(a.scalar)(1)]]
                        );
                      case 13:
                        return (
                          (P = d("tensorArrayId", t, e, n)),
                          (R = n.getTensorArray(P)),
                          (D = d("dtype", t, e, n)),
                          [2, [R.concat(D)]]
                        );
                      case 14:
                        return (
                          (F = d("tensorArrayId", t, e, n)),
                          (z = d("tensor", t, e, n)),
                          (L = d("lengths", t, e, n)),
                          n.getTensorArray(F).split(L, z),
                          [2, [Object(a.scalar)(1)]]
                        );
                      case 15:
                        return (
                          (j = d("tensorArrayId", t, e, n)),
                          (B = n.getTensorArray(j)),
                          [2, [Object(a.scalar)(B.size(), "int32")]]
                        );
                      case 16:
                        return (
                          (q = d("tensorArrayId", t, e, n)),
                          n.getTensorArray(q).clearAndClose(),
                          [2, []]
                        );
                      case 17:
                        throw TypeError(
                          "Node type " + t.op + " is not implemented"
                        );
                    }
                  });
                });
              })(t, e, n);
            case "convolution":
              return tt(t, e, n);
            case "creation":
              return et(t, e, n);
            case "dynamic":
              return (function(t, e, n) {
                return u(this, void 0, void 0, function() {
                  var r, i, o, s, u;
                  return c(this, function(c) {
                    switch (c.label) {
                      case 0:
                        switch (t.op) {
                          case "NonMaxSuppressionV3":
                          case "NonMaxSuppressionV2":
                            return [3, 1];
                          case "Where":
                            return [3, 3];
                          case "ListDiff":
                            return [3, 5];
                        }
                        return [3, 7];
                      case 1:
                        return (
                          (r = d("boxes", t, e, n)),
                          (i = d("scores", t, e, n)),
                          (o = d("maxOutputSize", t, e, n)),
                          (s = d("iouThreshold", t, e, n)),
                          (u = d("scoreThreshold", t, e, n)),
                          [4, a.image.nonMaxSuppressionAsync(r, i, o, s, u)]
                        );
                      case 2:
                        return [2, [c.sent()]];
                      case 3:
                        return [
                          4,
                          Object(a.whereAsync)(d("condition", t, e, n))
                        ];
                      case 4:
                        return [2, [c.sent()]];
                      case 5:
                        return [
                          4,
                          Object(a.setdiff1dAsync)(
                            d("x", t, e, n),
                            d("y", t, e, n)
                          )
                        ];
                      case 6:
                        return [2, c.sent()];
                      case 7:
                        throw TypeError(
                          "Node type " + t.op + " is not implemented"
                        );
                    }
                  });
                });
              })(t, e, n);
            case "evaluation":
              return nt(t, e, n);
            case "image":
              return it(t, e, n);
            case "graph":
              return rt(t, e, n);
            case "logical":
              return ot(t, e, n);
            case "matrices":
              return at(t, e, n);
            case "normalization":
              return st(t, e, n);
            case "reduction":
              return ut(t, e, n);
            case "slice_join":
              return ct(t, e, n);
            case "spectral":
              return lt(t, e, n);
            case "transformation":
              return ht(t, e, n);
            case "custom":
              var r = f(t.op);
              if (r && r.customExecutor)
                return r.customExecutor(new $(t, e, n));
              throw TypeError("Custom op " + t.op + " is not registered.");
            default:
              throw TypeError(
                "Unknown op '" +
                  t.op +
                  "'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()"
              );
          }
        })(t, e, n);
        return r instanceof Promise
          ? r.then(function(t) {
              return [].concat(t);
            })
          : [].concat(r);
      }
      var pt = (function() {
        function t(t, e) {
          (this.weightMap = t),
            (this.tensorArrayMap = e),
            (this.rootContext = { id: 0, frameName: "", iterationId: 0 }),
            (this.contexts = [this.rootContext]),
            (this.lastId = 0),
            this.generateCurrentContextIds();
        }
        return (
          (t.prototype.newFrame = function(t, e) {
            return { id: t, frameName: e, iterationId: 0 };
          }),
          Object.defineProperty(t.prototype, "currentContext", {
            get: function() {
              return this.contexts;
            },
            set: function(t) {
              this.contexts !== t &&
                ((this.contexts = t), this.generateCurrentContextIds());
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(t.prototype, "currentContextId", {
            get: function() {
              return this._currentContextIds[0];
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(t.prototype, "currentContextIds", {
            get: function() {
              return this._currentContextIds;
            },
            enumerable: !0,
            configurable: !0
          }),
          (t.prototype.generateCurrentContextIds = function() {
            for (var t = [], e = 0; e < this.contexts.length - 1; e++) {
              var n = this.contexts.slice(0, this.contexts.length - e);
              t.push(this.contextIdforContexts(n));
            }
            t.push(""), (this._currentContextIds = t);
          }),
          (t.prototype.contextIdforContexts = function(t) {
            return t
              ? t
                  .map(function(t) {
                    return 0 === t.id && 0 === t.iterationId
                      ? ""
                      : t.frameName + "-" + t.iterationId;
                  })
                  .join("/")
              : "";
          }),
          (t.prototype.enterFrame = function(t) {
            this.contexts &&
              (this.lastId++,
              (this.contexts = this.contexts.slice()),
              this.contexts.push(this.newFrame(this.lastId, t)),
              this._currentContextIds.unshift(
                this.contextIdforContexts(this.contexts)
              ));
          }),
          (t.prototype.exitFrame = function() {
            if (!(this.contexts && this.contexts.length > 1))
              throw new Error("Cannot exit frame, the context is empty");
            (this.contexts = this.contexts.slice()),
              this.contexts.splice(-1),
              this.currentContextIds.shift();
          }),
          (t.prototype.nextIteration = function() {
            if (!(this.contexts && this.contexts.length > 0))
              throw new Error(
                "Cannot increase frame iteration, the context is empty"
              );
            (this.contexts = this.contexts.slice()), this.lastId++;
            var t = Object.assign({}, this.contexts[this.contexts.length - 1]);
            (t.iterationId += 1),
              (t.id = this.lastId),
              this.contexts.splice(-1, 1, t),
              this._currentContextIds.splice(
                0,
                1,
                this.contextIdforContexts(this.contexts)
              );
          }),
          (t.prototype.getWeight = function(t) {
            return this.weightMap[t];
          }),
          (t.prototype.addTensorArray = function(t) {
            this.tensorArrayMap[t.id] = t;
          }),
          (t.prototype.getTensorArray = function(t) {
            return this.tensorArrayMap[t];
          }),
          t
        );
      })();
      function dt(t, e, n) {
        for (
          var r = new Set(),
            i = [],
            o = null,
            a = null,
            s = new Set(),
            u = e.slice();
          u.length > 0;

        ) {
          var c = u.pop();
          (gt(c) || vt(c)) &&
            null == o &&
            (a = (o = c).children
              .map(function(t) {
                return t.name;
              })
              .filter(function(t) {
                return r.has(t);
              })),
            r.add(c.name),
            null == n[c.name] &&
              null == t[c.name] &&
              (0 !== c.inputs.length
                ? c.inputs.forEach(function(t) {
                    s.has(t.name) || (s.add(t.name), u.push(t));
                  })
                : i.push(c.name));
        }
        return {
          inputs: t,
          outputs: e,
          usedNodes: r,
          missingInputs: i,
          dynamicNode: o,
          syncInputs: a
        };
      }
      var mt = ["Switch", "Merge", "Enter", "Exit", "NextIteration"],
        yt = ["NonMaxSuppressionV2", "NonMaxSuppressionV3", "Where"];
      function gt(t) {
        return mt.indexOf(t.op) >= 0;
      }
      function vt(t) {
        return yt.indexOf(t.op) >= 0;
      }
      var bt = (function() {
          function t(t) {
            (this.graph = t),
              (this.compiledMap = new Map()),
              (this._weightMap = {}),
              (this.SEPERATOR = ","),
              (this.placeholders = t.placeholders),
              (this._outputs = t.outputs);
          }
          return (
            Object.defineProperty(t.prototype, "weightMap", {
              get: function() {
                return this._weightMap;
              },
              set: function(t) {
                var e = Object.keys(t).map(function(e) {
                  return t[e].map(function(t) {
                    return t.id;
                  });
                });
                (this.weightIds = [].concat.apply([], e)),
                  (this._weightMap = t);
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "inputs", {
              get: function() {
                return this.placeholders.map(function(t) {
                  return {
                    name: t.name,
                    shape: t.attrParams.shape
                      ? t.attrParams.shape.value
                      : void 0,
                    dtype: t.attrParams.dtype
                      ? t.attrParams.dtype.value
                      : void 0
                  };
                });
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "outputs", {
              get: function() {
                return this._outputs.map(function(t) {
                  return {
                    name: t.name,
                    shape: t.attrParams.shape
                      ? t.attrParams.shape.value
                      : void 0,
                    dtype: t.attrParams.dtype
                      ? t.attrParams.dtype.value
                      : void 0
                  };
                });
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "inputNodes", {
              get: function() {
                return this.placeholders.map(function(t) {
                  return t.name;
                });
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "outputNodes", {
              get: function() {
                return this.outputs.map(function(t) {
                  return t.name;
                });
              },
              enumerable: !0,
              configurable: !0
            }),
            (t.prototype.getCompilationKey = function(t, e) {
              var n = t
                  .map(function(t) {
                    return t.name;
                  })
                  .sort(),
                r = e
                  .map(function(t) {
                    return t.name;
                  })
                  .sort();
              return n.join(this.SEPERATOR) + "--" + r.join(this.SEPERATOR);
            }),
            (t.prototype.compile = function(t, e) {
              var n = dt(t, e, this.weightMap),
                r = n.missingInputs,
                i = n.dynamicNode,
                o = n.syncInputs;
              if (null != i)
                throw new Error(
                  "This execution contains the node '" +
                    i.name +
                    "', which has the dynamic op '" +
                    i.op +
                    "'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [" +
                    o +
                    "]"
                );
              if (r.length > 0) {
                var a = e.map(function(t) {
                    return t.name;
                  }),
                  s = Object.keys(t);
                throw new Error(
                  "Cannot compute the outputs [" +
                    a +
                    "] from the provided inputs [" +
                    s +
                    "]. Missing the following inputs: [" +
                    r +
                    "]"
                );
              }
              return (function(t, e, n) {
                var r = n.usedNodes,
                  i = n.inputs,
                  o = [];
                Object.keys(i)
                  .map(function(e) {
                    return t.nodes[e];
                  })
                  .forEach(function(t) {
                    r.has(t.name) && o.push(t);
                  }),
                  t.weights.forEach(function(t) {
                    r.has(t.name) && o.push(t);
                  });
                for (var a = new Set(), s = []; o.length > 0; ) {
                  var u = o.pop();
                  a.add(u.name),
                    e[u.name] || s.push(u),
                    u.children.forEach(function(t) {
                      !a.has(t.name) &&
                        r.has(t.name) &&
                        t.inputs.every(function(t) {
                          return a.has(t.name);
                        }) &&
                        o.push(t);
                    });
                }
                return s;
              })(this.graph, this.weightMap, n);
            }),
            (t.prototype.execute = function(t, e) {
              var n = this,
                r = Object.keys(t).sort();
              this.checkInputs(t),
                this.checkInputShapeAndType(t),
                this.checkOutputs(e);
              var i = r.map(function(t) {
                  return n.graph.nodes[t];
                }),
                o = e.map(function(t) {
                  return n.graph.nodes[v(t)[0]];
                }),
                u = this.getCompilationKey(i, o),
                c = this.compiledMap.get(u);
              null == c &&
                ((c = this.compile(t, o)), this.compiledMap.set(u, c));
              var l = {};
              return Object(a.tidy)(function() {
                var r = new pt(n._weightMap, l),
                  i = s({}, n.weightMap);
                Object.keys(t).forEach(function(e) {
                  i[e] = [t[e]];
                });
                for (
                  var o = n.getFrozenTensorIds(i), a = {}, u = 0;
                  u < c.length;
                  u++
                ) {
                  var h = c[u];
                  if (!i[h.name]) {
                    var f = ft(h, i, r);
                    if (f instanceof Promise)
                      throw new Error(
                        "The execution of the op '" +
                          h.op +
                          "' returned a promise. Please use model.executeAsync() instead."
                      );
                    (i[h.name] = f),
                      n.checkTensorForDisposal(h.name, h, i, r, o, e, a);
                  }
                }
                return e.map(function(t) {
                  return m(t, i, r);
                });
              });
            }),
            (t.prototype.getFrozenTensorIds = function(t) {
              var e = [].concat.apply(
                [],
                Object.keys(t)
                  .map(function(e) {
                    return t[e];
                  })
                  .map(function(t) {
                    return t.map(function(t) {
                      return t.id;
                    });
                  })
              );
              return new Set(e);
            }),
            (t.prototype.checkTensorForDisposal = function(
              t,
              e,
              n,
              r,
              i,
              o,
              a
            ) {
              "control" !== e.category &&
                -1 === o.indexOf(t) &&
                (n[t].forEach(function(t) {
                  null != t && (a[t.id] = (a[t.id] || 0) + e.children.length);
                }),
                e.inputs.forEach(function(t) {
                  if ("control" !== t.category) {
                    var e = (function(t, e, n) {
                      return e[g(t, n.currentContextId)];
                    })(t.name, n, r);
                    null != e &&
                      e.forEach(function(t) {
                        if (t && !i.has(t.id)) {
                          var e = a[t.id];
                          1 === e
                            ? (t.dispose(), delete a[t.id])
                            : null != e && a[t.id]--;
                        }
                      });
                  }
                }));
            }),
            (t.prototype.executeAsync = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n,
                  r,
                  i,
                  o,
                  a,
                  s,
                  u = this;
                return c(this, function(c) {
                  switch (c.label) {
                    case 0:
                      return (
                        this.checkInputs(t),
                        this.checkInputShapeAndType(t),
                        (n = {}),
                        (r = new pt(this._weightMap, n)),
                        [4, this.executeWithControlFlow(t, r, e)]
                      );
                    case 1:
                      return (
                        (i = c.sent()),
                        (o = e.map(function(t) {
                          return m(t, i, r);
                        })),
                        (a = new Set(
                          o.map(function(t) {
                            return t.id;
                          })
                        )),
                        (s = new Set(
                          Object.keys(t).map(function(e) {
                            return t[e].id;
                          })
                        )),
                        Object.keys(i).forEach(function(t) {
                          i[t].forEach(function(t) {
                            !t ||
                              t.isDisposed ||
                              a.has(t.id) ||
                              s.has(t.id) ||
                              -1 !== u.weightIds.indexOf(t.id) ||
                              t.dispose();
                          });
                        }),
                        [2, o]
                      );
                  }
                });
              });
            }),
            (t.prototype.executeWithControlFlow = function(t, e, n) {
              return u(this, void 0, void 0, function() {
                var r,
                  i,
                  o,
                  a,
                  u,
                  l,
                  h,
                  f,
                  p,
                  d,
                  y,
                  g,
                  b,
                  w,
                  _,
                  S,
                  x = this;
                return c(this, function(c) {
                  switch (c.label) {
                    case 0:
                      (r = Object.keys(t)),
                        (i = r.map(function(t) {
                          return x.graph.nodes[t];
                        })),
                        (o = n.map(function(t) {
                          return x.graph.nodes[v(t)[0]];
                        })),
                        (a = dt(t, o, this.weightMap)),
                        (u = a.usedNodes),
                        (l = a.missingInputs),
                        (h = a.dynamicNode),
                        (f = a.syncInputs),
                        (p = i.concat(this.graph.weights).map(function(t) {
                          return { node: t, contexts: e.currentContext };
                        })),
                        (d = s({}, this.weightMap)),
                        Object.keys(t).forEach(function(e) {
                          d[e] = [t[e]];
                        }),
                        (y = {}),
                        (g = this.getFrozenTensorIds(d)),
                        (b = {}),
                        (c.label = 1);
                    case 1:
                      return p.length > 0
                        ? ((w = this.processStack(i, p, e, d, b, g, n, y, u)),
                          [4, Promise.all(w)])
                        : [3, 3];
                    case 2:
                      return c.sent(), [3, 1];
                    case 3:
                      if (
                        (null == h &&
                          console.warn(
                            "This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."
                          ),
                        (_ = o
                          .filter(function(t) {
                            return !gt(t) && !m(t.name, d, e);
                          })
                          .map(function(t) {
                            return t.name;
                          })).length > 0)
                      )
                        throw ((S = ""),
                        null != h &&
                          (S =
                            "Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [" +
                            f +
                            "]"),
                        new Error(
                          "Cannot compute the outputs [" +
                            _ +
                            "] from the provided inputs [" +
                            r +
                            "]. Consider providing the following inputs: [" +
                            l +
                            "]. " +
                            S
                        ));
                      return [2, d];
                  }
                });
              });
            }),
            (t.prototype.processStack = function(t, e, n, r, i, o, a, s, u) {
              for (
                var c = this,
                  l = [],
                  h = function() {
                    var h = e.pop();
                    n.currentContext = h.contexts;
                    var p = "";
                    if (
                      ("Enter" === h.node.op &&
                        d("isConstant", h.node, r, n) &&
                        (p = y(h.node.name, n)[0]),
                      -1 === t.indexOf(h.node))
                    ) {
                      var m = ft(h.node, r, n);
                      p || (p = y(h.node.name, n)[0]);
                      var g = n.currentContext;
                      m instanceof Promise
                        ? l.push(
                            m.then(function(t) {
                              return (
                                (r[p] = t),
                                (n.currentContext = g),
                                c.checkTensorForDisposal(
                                  p,
                                  h.node,
                                  r,
                                  n,
                                  o,
                                  a,
                                  s
                                ),
                                c.processChildNodes(h.node, e, n, r, i, u),
                                t
                              );
                            })
                          )
                        : ((r[p] = m),
                          f.checkTensorForDisposal(p, h.node, r, n, o, a, s),
                          f.processChildNodes(h.node, e, n, r, i, u));
                    } else f.processChildNodes(h.node, e, n, r, i, u);
                  },
                  f = this;
                e.length > 0;

              )
                h();
              return l;
            }),
            (t.prototype.processChildNodes = function(t, e, n, r, i, o) {
              t.children.forEach(function(t) {
                var a = y(t.name, n)[0];
                !i[a] &&
                  o.has(t.name) &&
                  ("Merge" === t.op
                    ? t.inputNames.some(function(t) {
                        return !!m(t, r, n);
                      }) &&
                      ((i[a] = !0),
                      e.push({ contexts: n.currentContext, node: t }))
                    : t.inputNames.every(function(t) {
                        return !!m(t, r, n);
                      }) &&
                      ((i[a] = !0),
                      e.push({ contexts: n.currentContext, node: t })));
              });
            }),
            (t.prototype.dispose = function() {
              var t = this;
              Object.keys(this.weightMap).forEach(function(e) {
                return t.weightMap[e].forEach(function(t) {
                  return t.dispose();
                });
              });
            }),
            (t.prototype.checkInputShapeAndType = function(t) {
              var e = this;
              Object.keys(t).forEach(function(n) {
                var r = t[n],
                  i = e.graph.nodes[n];
                if (i.attrParams.shape && i.attrParams.shape.value) {
                  var o = i.attrParams.shape.value,
                    s =
                      o.length === r.shape.length &&
                      r.shape.every(function(t, e) {
                        return -1 === o[e] || o[e] === t;
                      });
                  a.util.assert(s, function() {
                    return (
                      "The shape of dict['" +
                      i.name +
                      "'] provided in model.execute(dict) must be [" +
                      o +
                      "], but was [" +
                      r.shape +
                      "]"
                    );
                  });
                }
                i.attrParams.dtype &&
                  i.attrParams.dtype.value &&
                  a.util.assert(
                    r.dtype === i.attrParams.dtype.value,
                    function() {
                      return (
                        "The dtype of dict['" +
                        i.name +
                        "'] provided in model.execute(dict) must be " +
                        i.attrParams.dtype.value +
                        ", but was " +
                        r.dtype
                      );
                    }
                  );
              });
            }),
            (t.prototype.checkInputs = function(t) {
              var e = this,
                n = Object.keys(t).filter(function(t) {
                  return !e.graph.nodes[t];
                });
              if (n.length > 0)
                throw new Error(
                  "The dict provided in model.execute(dict) has keys: [" +
                    n +
                    "] that are not part of graph"
                );
            }),
            (t.prototype.checkOutputs = function(t) {
              var e = this;
              t.forEach(function(t) {
                var n = v(t)[0];
                if (!e.graph.nodes[n])
                  throw new Error(
                    "The output '" + t + "' is not found in the graph"
                  );
              });
            }),
            t
          );
        })(),
        wt = "?tfjs-format=file",
        _t = "model.json",
        St = (function() {
          function t(t, e) {
            void 0 === e && (e = {}),
              (this.modelUrl = t),
              (this.loadOptions = e),
              (this.version = "n/a"),
              null == e && (this.loadOptions = {});
          }
          return (
            Object.defineProperty(t.prototype, "modelVersion", {
              get: function() {
                return this.version;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "inputNodes", {
              get: function() {
                return this.executor.inputNodes;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "outputNodes", {
              get: function() {
                return this.executor.outputNodes;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "inputs", {
              get: function() {
                return this.executor.inputs;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "outputs", {
              get: function() {
                return this.executor.outputs;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(t.prototype, "weights", {
              get: function() {
                return this.executor.weightMap;
              },
              enumerable: !0,
              configurable: !0
            }),
            (t.prototype.findIOHandler = function() {
              var t = this.modelUrl;
              if (null != t.load) this.handler = t;
              else if (null != this.loadOptions.requestInit)
                this.handler = a.io.browserHTTPRequest(t, this.loadOptions);
              else {
                var e = a.io.getLoadHandlers(t, this.loadOptions.onProgress);
                if (0 === e.length)
                  e.push(a.io.browserHTTPRequest(t, this.loadOptions));
                else if (e.length > 1)
                  throw new Error(
                    "Found more than one (" +
                      e.length +
                      ") load handlers for URL '" +
                      [t] +
                      "'"
                  );
                this.handler = e[0];
              }
            }),
            (t.prototype.load = function() {
              return u(this, void 0, void 0, function() {
                var t, e, n;
                return c(this, function(r) {
                  switch (r.label) {
                    case 0:
                      if ((this.findIOHandler(), null == this.handler.load))
                        throw new Error(
                          "Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented."
                        );
                      return [4, this.handler.load()];
                    case 1:
                      return (
                        (t = r.sent()),
                        (e = t.modelTopology),
                        (this.version =
                          e.versions.producer + "." + e.versions.minConsumer),
                        (n = a.io.decodeWeights(t.weightData, t.weightSpecs)),
                        (this.executor = new bt(F.Instance.transformGraph(e))),
                        (this.executor.weightMap = this.convertTensorMapToTensorsMap(
                          n
                        )),
                        [2, !0]
                      );
                  }
                });
              });
            }),
            (t.prototype.predict = function(t, e) {
              return this.execute(t, this.outputNodes);
            }),
            (t.prototype.normalizeInputs = function(t) {
              if (!(t instanceof a.Tensor || Array.isArray(t))) return t;
              if (
                (t = Array.isArray(t) ? t : [t]).length !==
                this.inputNodes.length
              )
                throw new Error(
                  "Input tensor count mismatch,the graph model has " +
                    this.inputNodes.length +
                    " placeholders, while there are " +
                    t.length +
                    " input tensors."
                );
              return this.inputNodes.reduce(function(e, n, r) {
                return (e[n] = t[r]), e;
              }, {});
            }),
            (t.prototype.normalizeOutputs = function(t) {
              return (t = t || this.outputNodes), Array.isArray(t) ? t : [t];
            }),
            (t.prototype.execute = function(t, e) {
              (t = this.normalizeInputs(t)), (e = this.normalizeOutputs(e));
              var n = this.executor.execute(t, e);
              return n.length > 1 ? n : n[0];
            }),
            (t.prototype.executeAsync = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n;
                return c(this, function(r) {
                  switch (r.label) {
                    case 0:
                      return (
                        (t = this.normalizeInputs(t)),
                        (e = this.normalizeOutputs(e)),
                        [4, this.executor.executeAsync(t, e)]
                      );
                    case 1:
                      return [2, (n = r.sent()).length > 1 ? n : n[0]];
                  }
                });
              });
            }),
            (t.prototype.convertTensorMapToTensorsMap = function(t) {
              return Object.keys(t).reduce(function(e, n) {
                return (e[n] = [t[n]]), e;
              }, {});
            }),
            (t.prototype.dispose = function() {
              this.executor.dispose();
            }),
            t
          );
        })();
      function xt(t, e) {
        return (
          void 0 === e && (e = {}),
          u(this, void 0, void 0, function() {
            var n;
            return c(this, function(r) {
              switch (r.label) {
                case 0:
                  if (null == t)
                    throw new Error(
                      "modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model"
                    );
                  return (
                    null == e && (e = {}),
                    e.fromTFHub &&
                      null == t.load &&
                      (t.endsWith("/") || (t += "/"), (t = "" + t + _t + wt)),
                    [4, (n = new St(t, e)).load()]
                  );
                case 1:
                  return r.sent(), [2, n];
              }
            });
          })
        );
      }
      var Tt = "1.2.1";
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    "use strict";
    n.r(e),
      function(t, r) {
        n.d(e, "array", function() {
          return J;
        }),
          n.d(e, "Dataset", function() {
            return $;
          }),
          n.d(e, "zip", function() {
            return Z;
          }),
          n.d(e, "CSVDataset", function() {
            return ut;
          }),
          n.d(e, "TextLineDataset", function() {
            return nt;
          }),
          n.d(e, "csv", function() {
            return St;
          }),
          n.d(e, "func", function() {
            return xt;
          }),
          n.d(e, "generator", function() {
            return Tt;
          }),
          n.d(e, "webcam", function() {
            return At;
          }),
          n.d(e, "FileDataSource", function() {
            return wt;
          }),
          n.d(e, "URLDataSource", function() {
            return _t;
          }),
          n.d(e, "version_data", function() {
            return kt;
          });
        var i = n(0),
          o = function(t, e) {
            return (o =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function(t, e) {
                  t.__proto__ = e;
                }) ||
              function(t, e) {
                for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
              })(t, e);
          };
        /**
         * @license
         * Copyright 2019 Google LLC. All Rights Reserved.
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         * =============================================================================
         */ function a(t, e) {
          function n() {
            this.constructor = t;
          }
          o(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }
        function s(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        }
        function u(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        }
        "undefined" != typeof window
          ? window
          : void 0 !== t || ("undefined" != typeof self && self);
        function c(t, e) {
          return t((e = { exports: {} }), e.exports), e.exports;
        }
        var l = c(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (
                  (e.c = t.c), (e.s0 = t.s0), (e.s1 = t.s1), (e.s2 = t.s2), e
                );
              }
              function i(t, e) {
                var n = new (function(t) {
                    var e,
                      n = this,
                      r =
                        ((e = 4022871197),
                        function(t) {
                          t = t.toString();
                          for (var n = 0; n < t.length; n++) {
                            var r =
                              0.02519603282416938 * (e += t.charCodeAt(n));
                            (r -= e = r >>> 0),
                              (e = (r *= e) >>> 0),
                              (e += 4294967296 * (r -= e));
                          }
                          return 2.3283064365386963e-10 * (e >>> 0);
                        });
                    (n.next = function() {
                      var t = 2091639 * n.s0 + 2.3283064365386963e-10 * n.c;
                      return (
                        (n.s0 = n.s1), (n.s1 = n.s2), (n.s2 = t - (n.c = 0 | t))
                      );
                    }),
                      (n.c = 1),
                      (n.s0 = r(" ")),
                      (n.s1 = r(" ")),
                      (n.s2 = r(" ")),
                      (n.s0 -= r(t)),
                      n.s0 < 0 && (n.s0 += 1),
                      (n.s1 -= r(t)),
                      n.s1 < 0 && (n.s1 += 1),
                      (n.s2 -= r(t)),
                      n.s2 < 0 && (n.s2 += 1),
                      (r = null);
                  })(t),
                  i = e && e.state,
                  o = n.next;
                return (
                  (o.int32 = function() {
                    return (4294967296 * n.next()) | 0;
                  }),
                  (o.double = function() {
                    return o() + 1.1102230246251565e-16 * ((2097152 * o()) | 0);
                  }),
                  (o.quick = o),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (o.state = function() {
                      return r(n, {});
                    })),
                  o
                );
              }
              e && e.exports ? (e.exports = i) : (this.alea = i);
            })(0, t);
          }),
          h = c(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.x = t.x), (e.y = t.y), (e.z = t.z), (e.w = t.w), e;
              }
              function i(t, e) {
                var n = new (function(t) {
                    var e = this,
                      n = "";
                    (e.x = 0),
                      (e.y = 0),
                      (e.z = 0),
                      (e.w = 0),
                      (e.next = function() {
                        var t = e.x ^ (e.x << 11);
                        return (
                          (e.x = e.y),
                          (e.y = e.z),
                          (e.z = e.w),
                          (e.w ^= (e.w >>> 19) ^ t ^ (t >>> 8))
                        );
                      }),
                      t === (0 | t) ? (e.x = t) : (n += t);
                    for (var r = 0; r < n.length + 64; r++)
                      (e.x ^= 0 | n.charCodeAt(r)), e.next();
                  })(t),
                  i = e && e.state,
                  o = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (o.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (o.int32 = n.next),
                  (o.quick = o),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (o.state = function() {
                      return r(n, {});
                    })),
                  o
                );
              }
              e && e.exports ? (e.exports = i) : (this.xor128 = i);
            })(0, t);
          }),
          f = c(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (
                  (e.x = t.x),
                  (e.y = t.y),
                  (e.z = t.z),
                  (e.w = t.w),
                  (e.v = t.v),
                  (e.d = t.d),
                  e
                );
              }
              function i(t, e) {
                var n = new (function(t) {
                    var e = this,
                      n = "";
                    (e.next = function() {
                      var t = e.x ^ (e.x >>> 2);
                      return (
                        (e.x = e.y),
                        (e.y = e.z),
                        (e.z = e.w),
                        (e.w = e.v),
                        ((e.d = (e.d + 362437) | 0) +
                          (e.v = e.v ^ (e.v << 4) ^ t ^ (t << 1))) |
                          0
                      );
                    }),
                      (e.x = 0),
                      (e.y = 0),
                      (e.z = 0),
                      (e.w = 0),
                      (e.v = 0),
                      t === (0 | t) ? (e.x = t) : (n += t);
                    for (var r = 0; r < n.length + 64; r++)
                      (e.x ^= 0 | n.charCodeAt(r)),
                        r == n.length && (e.d = (e.x << 10) ^ (e.x >>> 4)),
                        e.next();
                  })(t),
                  i = e && e.state,
                  o = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (o.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (o.int32 = n.next),
                  (o.quick = o),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (o.state = function() {
                      return r(n, {});
                    })),
                  o
                );
              }
              e && e.exports ? (e.exports = i) : (this.xorwow = i);
            })(0, t);
          }),
          p = c(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.x = t.x.slice()), (e.i = t.i), e;
              }
              function i(t, e) {
                null == t && (t = +new Date());
                var n = new (function(t) {
                    var e = this;
                    (e.next = function() {
                      var t,
                        n,
                        r = e.x,
                        i = e.i;
                      return (
                        (t = r[i]),
                        (n = (t ^= t >>> 7) ^ (t << 24)),
                        (n ^= (t = r[(i + 1) & 7]) ^ (t >>> 10)),
                        (n ^= (t = r[(i + 3) & 7]) ^ (t >>> 3)),
                        (n ^= (t = r[(i + 4) & 7]) ^ (t << 7)),
                        (t = r[(i + 7) & 7]),
                        (n ^= (t ^= t << 13) ^ (t << 9)),
                        (r[i] = n),
                        (e.i = (i + 1) & 7),
                        n
                      );
                    }),
                      (function(t, e) {
                        var n,
                          r = [];
                        if (e === (0 | e)) r[0] = e;
                        else
                          for (e = "" + e, n = 0; n < e.length; ++n)
                            r[7 & n] =
                              (r[7 & n] << 15) ^
                              ((e.charCodeAt(n) + r[(n + 1) & 7]) << 13);
                        for (; r.length < 8; ) r.push(0);
                        for (n = 0; n < 8 && 0 === r[n]; ++n);
                        for (
                          8 == n ? (r[7] = -1) : r[n],
                            t.x = r,
                            t.i = 0,
                            n = 256;
                          n > 0;
                          --n
                        )
                          t.next();
                      })(e, t);
                  })(t),
                  i = e && e.state,
                  o = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (o.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (o.int32 = n.next),
                  (o.quick = o),
                  i &&
                    (i.x && r(i, n),
                    (o.state = function() {
                      return r(n, {});
                    })),
                  o
                );
              }
              e && e.exports ? (e.exports = i) : (this.xorshift7 = i);
            })(0, t);
          }),
          d = c(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.i = t.i), (e.w = t.w), (e.X = t.X.slice()), e;
              }
              function i(t, e) {
                null == t && (t = +new Date());
                var n = new (function(t) {
                    var e = this;
                    (e.next = function() {
                      var t,
                        n,
                        r = e.w,
                        i = e.X,
                        o = e.i;
                      return (
                        (e.w = r = (r + 1640531527) | 0),
                        (n = i[(o + 34) & 127]),
                        (t = i[(o = (o + 1) & 127)]),
                        (n ^= n << 13),
                        (t ^= t << 17),
                        (n ^= n >>> 15),
                        (t ^= t >>> 12),
                        (n = i[o] = n ^ t),
                        (e.i = o),
                        (n + (r ^ (r >>> 16))) | 0
                      );
                    }),
                      (function(t, e) {
                        var n,
                          r,
                          i,
                          o,
                          a,
                          s = [],
                          u = 128;
                        for (
                          e === (0 | e)
                            ? ((r = e), (e = null))
                            : ((e += "\0"),
                              (r = 0),
                              (u = Math.max(u, e.length))),
                            i = 0,
                            o = -32;
                          o < u;
                          ++o
                        )
                          e && (r ^= e.charCodeAt((o + 32) % e.length)),
                            0 === o && (a = r),
                            (r ^= r << 10),
                            (r ^= r >>> 15),
                            (r ^= r << 4),
                            (r ^= r >>> 13),
                            o >= 0 &&
                              ((a = (a + 1640531527) | 0),
                              (i = 0 == (n = s[127 & o] ^= r + a) ? i + 1 : 0));
                        for (
                          i >= 128 && (s[127 & ((e && e.length) || 0)] = -1),
                            i = 127,
                            o = 512;
                          o > 0;
                          --o
                        )
                          (r = s[(i + 34) & 127]),
                            (n = s[(i = (i + 1) & 127)]),
                            (r ^= r << 13),
                            (n ^= n << 17),
                            (r ^= r >>> 15),
                            (n ^= n >>> 12),
                            (s[i] = r ^ n);
                        (t.w = a), (t.X = s), (t.i = i);
                      })(e, t);
                  })(t),
                  i = e && e.state,
                  o = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (o.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (o.int32 = n.next),
                  (o.quick = o),
                  i &&
                    (i.X && r(i, n),
                    (o.state = function() {
                      return r(n, {});
                    })),
                  o
                );
              }
              e && e.exports ? (e.exports = i) : (this.xor4096 = i);
            })(0, t);
          }),
          m = c(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.a = t.a), (e.b = t.b), (e.c = t.c), (e.d = t.d), e;
              }
              function i(t, e) {
                var n = new (function(t) {
                    var e = this,
                      n = "";
                    (e.next = function() {
                      var t = e.b,
                        n = e.c,
                        r = e.d,
                        i = e.a;
                      return (
                        (t = (t << 25) ^ (t >>> 7) ^ n),
                        (n = (n - r) | 0),
                        (r = (r << 24) ^ (r >>> 8) ^ i),
                        (i = (i - t) | 0),
                        (e.b = t = (t << 20) ^ (t >>> 12) ^ n),
                        (e.c = n = (n - r) | 0),
                        (e.d = (r << 16) ^ (n >>> 16) ^ i),
                        (e.a = (i - t) | 0)
                      );
                    }),
                      (e.a = 0),
                      (e.b = 0),
                      (e.c = -1640531527),
                      (e.d = 1367130551),
                      t === Math.floor(t)
                        ? ((e.a = (t / 4294967296) | 0), (e.b = 0 | t))
                        : (n += t);
                    for (var r = 0; r < n.length + 20; r++)
                      (e.b ^= 0 | n.charCodeAt(r)), e.next();
                  })(t),
                  i = e && e.state,
                  o = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (o.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (o.int32 = n.next),
                  (o.quick = o),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (o.state = function() {
                      return r(n, {});
                    })),
                  o
                );
              }
              e && e.exports ? (e.exports = i) : (this.tychei = i);
            })(0, t);
          }),
          y = c(function(t) {
            !(function(e, r) {
              var i,
                o = this,
                a = 256,
                s = 6,
                u = "random",
                c = r.pow(a, s),
                l = r.pow(2, 52),
                h = 2 * l,
                f = a - 1;
              function p(t, n, p) {
                var g = [],
                  v = m(
                    (function t(e, n) {
                      var r,
                        i = [],
                        o = typeof e;
                      if (n && "object" == o)
                        for (r in e)
                          try {
                            i.push(t(e[r], n - 1));
                          } catch (t) {}
                      return i.length ? i : "string" == o ? e : e + "\0";
                    })(
                      (n = 1 == n ? { entropy: !0 } : n || {}).entropy
                        ? [t, y(e)]
                        : null == t
                        ? (function() {
                            try {
                              var t;
                              return (
                                i && (t = i.randomBytes)
                                  ? (t = t(a))
                                  : ((t = new Uint8Array(a)),
                                    (o.crypto || o.msCrypto).getRandomValues(
                                      t
                                    )),
                                y(t)
                              );
                            } catch (t) {
                              var n = o.navigator,
                                r = n && n.plugins;
                              return [+new Date(), o, r, o.screen, y(e)];
                            }
                          })()
                        : t,
                      3
                    ),
                    g
                  ),
                  b = new (function(t) {
                    var e,
                      n = t.length,
                      r = this,
                      i = 0,
                      o = (r.i = r.j = 0),
                      s = (r.S = []);
                    for (n || (t = [n++]); i < a; ) s[i] = i++;
                    for (i = 0; i < a; i++)
                      (s[i] = s[(o = f & (o + t[i % n] + (e = s[i])))]),
                        (s[o] = e);
                    (r.g = function(t) {
                      for (var e, n = 0, i = r.i, o = r.j, s = r.S; t--; )
                        (e = s[(i = f & (i + 1))]),
                          (n =
                            n * a +
                            s[
                              f & ((s[i] = s[(o = f & (o + e))]) + (s[o] = e))
                            ]);
                      return (r.i = i), (r.j = o), n;
                    })(a);
                  })(g),
                  w = function() {
                    for (var t = b.g(s), e = c, n = 0; t < l; )
                      (t = (t + n) * a), (e *= a), (n = b.g(1));
                    for (; t >= h; ) (t /= 2), (e /= 2), (n >>>= 1);
                    return (t + n) / e;
                  };
                return (
                  (w.int32 = function() {
                    return 0 | b.g(4);
                  }),
                  (w.quick = function() {
                    return b.g(4) / 4294967296;
                  }),
                  (w.double = w),
                  m(y(b.S), e),
                  (n.pass ||
                    p ||
                    function(t, e, n, i) {
                      return (
                        i &&
                          (i.S && d(i, b),
                          (t.state = function() {
                            return d(b, {});
                          })),
                        n ? ((r[u] = t), e) : t
                      );
                    })(w, v, "global" in n ? n.global : this == r, n.state)
                );
              }
              function d(t, e) {
                return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
              }
              function m(t, e) {
                for (var n, r = t + "", i = 0; i < r.length; )
                  e[f & i] = f & ((n ^= 19 * e[f & i]) + r.charCodeAt(i++));
                return y(e);
              }
              function y(t) {
                return String.fromCharCode.apply(0, t);
              }
              if (((r["seed" + u] = p), m(r.random(), e), t.exports)) {
                t.exports = p;
                try {
                  i = n(58);
                } catch (t) {}
              }
            })([], Math);
          });
        (y.alea = l),
          (y.xor128 = h),
          (y.xorwow = f),
          (y.xorshift7 = p),
          (y.xor4096 = d),
          (y.tychei = m);
        var g = y.alea;
        function v(t, e, n, r) {
          if (
            (void 0 === n && (n = new Map()),
            void 0 === r && (r = new Set()),
            null == t)
          )
            return null;
          if (r.has(t))
            throw new Error("Circular references are not supported.");
          if (n.has(t)) return n.get(t);
          var i = e(t);
          if (i.recurse && null !== i.value)
            throw new Error(
              "A deep map function may not return both a value and recurse=true."
            );
          if (i.recurse) {
            if (S(t)) {
              var o = Array.isArray(t) ? [] : {};
              for (var a in (r.add(t), t)) {
                var s = v(t[a], e, n, r);
                o[a] = s;
              }
              return r.delete(t), o;
            }
            throw new Error("Can't recurse into non-iterable type: " + t);
          }
          return n.set(t, i.value), i.value;
        }
        function b(t, e) {
          return (
            void 0 === e && (e = w),
            (function t(e, n, r) {
              void 0 === r && (r = new Set());
              var i = e[0];
              if (r.has(i))
                throw new Error("Circular references are not supported.");
              var o = n(e);
              if (o.recurse && null !== o.value)
                throw new Error(
                  "A deep zip function may not return both a value and recurse=true."
                );
              if (o.recurse) {
                if (S(i)) {
                  var a = Array.isArray(i) ? [] : {};
                  r.add(i);
                  var s = function(i) {
                    var o = t(
                      e.map(function(t) {
                        return t[i];
                      }),
                      n,
                      r
                    );
                    a[i] = o;
                  };
                  for (var u in i) s(u);
                  return r.delete(i), a;
                }
                throw new Error("Can't recurse into non-iterable type: " + i);
              }
              return o.value;
            })(t, e)
          );
        }
        function w(t) {
          return null === t
            ? null
            : S(t[0])
            ? { value: null, recurse: !0 }
            : { value: t, recurse: !1 };
        }
        function _(t, e) {
          return s(this, void 0, void 0, function() {
            var n, r, i, o, a, s;
            return u(this, function(u) {
              switch (u.label) {
                case 0:
                  (n = new Map()),
                    v(t, e, n),
                    (r = 0),
                    (i = Array.from(n.keys())),
                    (u.label = 1);
                case 1:
                  return r < i.length
                    ? ((o = i[r]),
                      (a = n.get(o)) instanceof Promise ? [4, a] : [3, 3])
                    : [3, 4];
                case 2:
                  (s = u.sent()), n.set(o, s), (u.label = 3);
                case 3:
                  return r++, [3, 1];
                case 4:
                  return [2, v(t, e, n)];
              }
            });
          });
        }
        function S(t) {
          return (
            null != t &&
            (Array.isArray(t) ||
              ("object" == typeof t && !(t instanceof i.Tensor)))
          );
        }
        function x(t) {
          return (function(t, e) {
            return v(t, e);
          })(t, T);
        }
        function T(t) {
          return t instanceof i.Tensor
            ? { value: t.clone(), recurse: !1 }
            : S(t)
            ? { value: null, recurse: !0 }
            : { value: t, recurse: !1 };
        }
        var A = (function() {
            function t(t) {
              if (
                ((this.capacity = t),
                (this.begin = 0),
                (this.end = 0),
                null == t)
              )
                throw new RangeError(
                  "Can't create a ring buffer of unknown capacity."
                );
              if (t < 1)
                throw new RangeError(
                  "Can't create ring buffer of capacity < 1."
                );
              (this.data = new Array(t)), (this.doubledCapacity = 2 * t);
            }
            return (
              (t.prototype.wrap = function(t) {
                for (; t < 0; ) t += this.doubledCapacity;
                return t % this.doubledCapacity;
              }),
              (t.prototype.get = function(t) {
                if (t < 0)
                  throw new RangeError("Can't get item at a negative index.");
                return this.data[t % this.capacity];
              }),
              (t.prototype.set = function(t, e) {
                if (t < 0)
                  throw new RangeError("Can't set item at a negative index.");
                this.data[t % this.capacity] = e;
              }),
              (t.prototype.length = function() {
                var t = this.end - this.begin;
                return t < 0 && (t = this.doubledCapacity + t), t;
              }),
              (t.prototype.isFull = function() {
                return this.length() === this.capacity;
              }),
              (t.prototype.isEmpty = function() {
                return 0 === this.length();
              }),
              (t.prototype.push = function(t) {
                if (this.isFull()) throw new RangeError("Ring buffer is full.");
                this.set(this.end, t), (this.end = this.wrap(this.end + 1));
              }),
              (t.prototype.pushAll = function(t) {
                for (var e = 0, n = t; e < n.length; e++) {
                  var r = n[e];
                  this.push(r);
                }
              }),
              (t.prototype.pop = function() {
                if (this.isEmpty())
                  throw new RangeError("Ring buffer is empty.");
                this.end = this.wrap(this.end - 1);
                var t = this.get(this.end);
                return this.set(this.end, void 0), t;
              }),
              (t.prototype.unshift = function(t) {
                if (this.isFull()) throw new RangeError("Ring buffer is full.");
                (this.begin = this.wrap(this.begin - 1)),
                  this.set(this.begin, t);
              }),
              (t.prototype.shift = function() {
                if (this.isEmpty())
                  throw new RangeError("Ring buffer is empty.");
                var t = this.get(this.begin);
                return (
                  this.set(this.begin, void 0),
                  (this.begin = this.wrap(this.begin + 1)),
                  t
                );
              }),
              (t.prototype.shuffleExcise = function(t) {
                if (this.isEmpty())
                  throw new RangeError("Ring buffer is empty.");
                var e = this.wrap(this.begin + t),
                  n = this.get(e);
                return this.set(e, this.pop()), n;
              }),
              t
            );
          })(),
          k = (function(t) {
            function e() {
              return t.call(this, e.INITIAL_CAPACITY) || this;
            }
            return (
              a(e, t),
              (e.prototype.isFull = function() {
                return !1;
              }),
              (e.prototype.push = function(e) {
                t.prototype.isFull.call(this) && this.expand(),
                  t.prototype.push.call(this, e);
              }),
              (e.prototype.unshift = function(e) {
                t.prototype.isFull.call(this) && this.expand(),
                  t.prototype.unshift.call(this, e);
              }),
              (e.prototype.expand = function() {
                for (
                  var t = 2 * this.capacity,
                    e = new Array(t),
                    n = this.length(),
                    r = 0;
                  r < n;
                  r++
                )
                  e[r] = this.get(this.wrap(this.begin + r));
                (this.data = e),
                  (this.capacity = t),
                  (this.doubledCapacity = 2 * this.capacity),
                  (this.begin = 0),
                  (this.end = n);
              }),
              (e.INITIAL_CAPACITY = 32),
              e
            );
          })(A);
        function E(t) {
          return new R(t);
        }
        function N(t) {
          return new D(t);
        }
        function O(t, e) {
          return new H(t, e);
        }
        function C(t, e) {
          return void 0 === e && (e = I.FAIL), new K(t, e);
        }
        var I,
          M,
          P = (function() {
            function t() {}
            return (
              (t.prototype.toArray = function() {
                return s(this, void 0, void 0, function() {
                  var t, e;
                  return u(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return (t = []), [4, this.next()];
                      case 1:
                        (e = n.sent()), (n.label = 2);
                      case 2:
                        return e.done
                          ? [3, 4]
                          : (t.push(e.value), [4, this.next()]);
                      case 3:
                        return (e = n.sent()), [3, 2];
                      case 4:
                        return [2, t];
                    }
                  });
                });
              }),
              (t.prototype.toArrayForTest = function() {
                return s(this, void 0, void 0, function() {
                  var t, e, n;
                  return u(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return (
                          (t = this.prefetch(100)), (e = []), [4, t.next()]
                        );
                      case 1:
                        (n = r.sent()), (r.label = 2);
                      case 2:
                        return n.done
                          ? [3, 4]
                          : (e.push(n.value), [4, t.next()]);
                      case 3:
                        return (n = r.sent()), [3, 2];
                      case 4:
                        return [2, e];
                    }
                  });
                });
              }),
              (t.prototype.resolveFully = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.next()];
                      case 1:
                        (t = e.sent()), (e.label = 2);
                      case 2:
                        return t.done ? [3, 4] : [4, this.next()];
                      case 3:
                        return (t = e.sent()), [3, 2];
                      case 4:
                        return [2];
                    }
                  });
                });
              }),
              (t.prototype.resolveWhile = function(t) {
                return s(this, void 0, void 0, function() {
                  var e, n;
                  return u(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return [4, this.next()];
                      case 1:
                        (e = r.sent()), (n = t(e.value)), (r.label = 2);
                      case 2:
                        return e.done || !n ? [3, 4] : [4, this.next()];
                      case 3:
                        return (e = r.sent()), (n = t(e.value)), [3, 2];
                      case 4:
                        return [2];
                    }
                  });
                });
              }),
              (t.prototype.handleErrors = function(t) {
                return new U(this, t);
              }),
              (t.prototype.filter = function(t) {
                return new B(this, t);
              }),
              (t.prototype.map = function(t) {
                return new q(this, t);
              }),
              (t.prototype.mapAsync = function(t) {
                return new V(this, t);
              }),
              (t.prototype.serialMapAsync = function(t) {
                return new V(this, t).serial();
              }),
              (t.prototype.flatmap = function(t) {
                return new G(this, t);
              }),
              (t.prototype.forEachAsync = function(t) {
                return s(this, void 0, void 0, function() {
                  return u(this, function(e) {
                    return [2, this.map(t).resolveFully()];
                  });
                });
              }),
              (t.prototype.serialForEach = function(t) {
                return s(this, void 0, void 0, function() {
                  return u(this, function(e) {
                    return [
                      2,
                      this.serialMapAsync(t).resolveWhile(function(t) {
                        return !0 === t;
                      })
                    ];
                  });
                });
              }),
              (t.prototype.rowMajorBatch = function(t, e) {
                return void 0 === e && (e = !0), new j(this, t, e);
              }),
              (t.prototype.columnMajorBatch = function(t, e, n) {
                return (
                  void 0 === e && (e = !0),
                  void 0 === n && (n = w),
                  this.rowMajorBatch(t, e).map(function(t) {
                    return b(t, n);
                  })
                );
              }),
              (t.prototype.concatenate = function(t, e) {
                return new H(E([this, t]), e);
              }),
              (t.prototype.take = function(t) {
                return t < 0 || null == t ? this : new L(this, t);
              }),
              (t.prototype.skip = function(t) {
                return t < 0 || null == t ? this : new z(this, t);
              }),
              (t.prototype.prefetch = function(t) {
                return new Q(this, t);
              }),
              (t.prototype.shuffle = function(t, e) {
                return new X(this, t, e);
              }),
              (t.prototype.serial = function() {
                return new F(this);
              }),
              t
            );
          })(),
          R = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.items = e), (n.trav = 0), n;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return "Array of " + this.items.length + " items";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    return this.trav >= this.items.length
                      ? [2, { value: null, done: !0 }]
                      : ((t = this.items[this.trav]),
                        this.trav++,
                        [2, { value: x(t), done: !1 }]);
                  });
                });
              }),
              e
            );
          })(P),
          D = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.nextFn = e), n;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return "Function call";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    try {
                      return [2, this.nextFn()];
                    } catch (t) {
                      throw ((t.message =
                        "Error thrown while iterating through a dataset: " +
                        t.message),
                      t);
                    }
                    return [2];
                  });
                });
              }),
              e
            );
          })(P),
          F = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (
                (n.upstream = e),
                (n.lastRead = Promise.resolve({ value: null, done: !1 })),
                n
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Serial";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    return [2, this.upstream.next()];
                  });
                });
              }),
              e
            );
          })(P),
          z = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e),
                (r.maxCount = n),
                (r.count = 0),
                (r.lastRead = Promise.resolve({ value: null, done: !1 })),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Skip";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return this.count++ < this.maxCount
                          ? [4, this.upstream.next()]
                          : [3, 2];
                      case 1:
                        return (t = e.sent()).done
                          ? [2, t]
                          : (Object(i.dispose)(t.value), [3, 0]);
                      case 2:
                        return [2, this.upstream.next()];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          L = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.maxCount = n), (r.count = 0), r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Take";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    return this.count++ >= this.maxCount
                      ? [2, { value: null, done: !0 }]
                      : [2, this.upstream.next()];
                  });
                });
              }),
              e
            );
          })(P),
          j = (function(t) {
            function e(e, n, r) {
              void 0 === r && (r = !0);
              var i = t.call(this) || this;
              return (
                (i.upstream = e),
                (i.batchSize = n),
                (i.enableSmallLastBatch = r),
                (i.lastRead = Promise.resolve({ value: null, done: !1 })),
                i
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> RowMajorBatch";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  var t, e;
                  return u(this, function(n) {
                    switch (n.label) {
                      case 0:
                        (t = []), (n.label = 1);
                      case 1:
                        return t.length < this.batchSize
                          ? [4, this.upstream.next()]
                          : [3, 3];
                      case 2:
                        return (e = n.sent()).done
                          ? this.enableSmallLastBatch && t.length > 0
                            ? [2, { value: t, done: !1 }]
                            : [2, { value: null, done: !0 }]
                          : (t.push(e.value), [3, 1]);
                      case 3:
                        return [2, { value: t, done: !1 }];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          B = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e),
                (r.predicate = n),
                (r.lastRead = Promise.resolve({ value: null, done: !1 })),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Filter";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        return (t = e.sent()).done || this.predicate(t.value)
                          ? [2, t]
                          : (Object(i.dispose)(t.value), [3, 0]);
                      case 2:
                        return [2];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          q = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.transform = n), r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Map";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t, e, n, r, o, a, s;
                  return u(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        if ((t = u.sent()).done)
                          return [2, { value: null, done: !0 }];
                        for (
                          e = i.tensor_util.getTensorsInContainer(t.value),
                            n = this.transform(t.value),
                            r = i.tensor_util.getTensorsInContainer(n),
                            o = 0,
                            a = e;
                          o < a.length;
                          o++
                        )
                          (s = a[o]),
                            i.tensor_util.isTensorInList(s, r) || s.dispose();
                        return [2, { value: n, done: !1 }];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          U = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e),
                (r.handler = n),
                (r.count = 0),
                (r.lastRead = Promise.resolve({ value: null, done: !1 })),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> handleErrors";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    switch (e.label) {
                      case 0:
                        e.label = 1;
                      case 1:
                        return (
                          e.trys.push([1, 3, , 4]), [4, this.upstream.next()]
                        );
                      case 2:
                        return [2, e.sent()];
                      case 3:
                        return (
                          (t = e.sent()),
                          this.handler(t)
                            ? [3, 4]
                            : [2, { value: null, done: !0 }]
                        );
                      case 4:
                        return [3, 0];
                      case 5:
                        return [2];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          V = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.transform = n), r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> AsyncMap";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t, e, n, r, o, a, s;
                  return u(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        return (t = u.sent()).done
                          ? [2, { value: null, done: !0 }]
                          : ((e = i.tensor_util.getTensorsInContainer(t.value)),
                            [4, this.transform(t.value)]);
                      case 2:
                        for (
                          n = u.sent(),
                            r = i.tensor_util.getTensorsInContainer(n),
                            o = 0,
                            a = e;
                          o < a.length;
                          o++
                        )
                          (s = a[o]),
                            i.tensor_util.isTensorInList(s, r) || s.dispose();
                        return [2, { value: n, done: !1 }];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          W = (function(t) {
            function e() {
              var e = t.call(this) || this;
              return (
                (e.outputQueue = new k()),
                (e.lastRead = Promise.resolve({ value: null, done: !1 })),
                e
              );
            }
            return (
              a(e, t),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return 0 !== this.outputQueue.length()
                          ? [3, 2]
                          : [4, this.pump()];
                      case 1:
                        return t.sent()
                          ? [3, 0]
                          : [2, { value: null, done: !0 }];
                      case 2:
                        return [
                          2,
                          { value: this.outputQueue.shift(), done: !1 }
                        ];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          G = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.transform = n), r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Flatmap";
              }),
              (e.prototype.pump = function() {
                return s(this, void 0, void 0, function() {
                  var t, e, n, r, o, a, s;
                  return u(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        if ((t = u.sent()).done) return [2, !1];
                        for (
                          e = i.tensor_util.getTensorsInContainer(t.value),
                            n = this.transform(t.value),
                            r = i.tensor_util.getTensorsInContainer(n),
                            this.outputQueue.pushAll(n),
                            o = 0,
                            a = e;
                          o < a.length;
                          o++
                        )
                          (s = a[o]),
                            i.tensor_util.isTensorInList(s, r) || s.dispose();
                        return [2, !0];
                    }
                  });
                });
              }),
              e
            );
          })(W),
          H = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.baseErrorHandler = n),
                (r.lastRead = null),
                (r.iterator = null),
                (r.moreIterators = e),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return "TODO: fill in upstream of chained summaries -> Chained";
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    return (
                      (this.lastRead = this.readFromChain(this.lastRead)),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.readFromChain = function(t) {
                return s(this, void 0, void 0, function() {
                  var e, n;
                  return u(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return [4, t];
                      case 1:
                        return (
                          r.sent(),
                          null != this.iterator
                            ? [3, 3]
                            : [4, this.moreIterators.next()]
                        );
                      case 2:
                        if ((e = r.sent()).done)
                          return [2, { value: null, done: !0 }];
                        (this.iterator = e.value),
                          null != this.baseErrorHandler &&
                            (this.iterator = this.iterator.handleErrors(
                              this.baseErrorHandler
                            )),
                          (r.label = 3);
                      case 3:
                        return [4, this.iterator.next()];
                      case 4:
                        return (n = r.sent()).done
                          ? ((this.iterator = null), [2, this.readFromChain(t)])
                          : [2, n];
                    }
                  });
                });
              }),
              e
            );
          })(P);
        ((M = I || (I = {}))[(M.FAIL = 0)] = "FAIL"),
          (M[(M.SHORTEST = 1)] = "SHORTEST"),
          (M[(M.LONGEST = 2)] = "LONGEST");
        var K = (function(t) {
            function e(e, n) {
              void 0 === n && (n = I.FAIL);
              var r = t.call(this) || this;
              return (
                (r.iterators = e),
                (r.mismatchMode = n),
                (r.count = 0),
                (r.currentPromise = null),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return "{TODO: fill in upstream of zip summaries} -> Zip";
              }),
              (e.prototype.nextState = function(t) {
                return s(this, void 0, void 0, function() {
                  function e(t) {
                    return t instanceof P
                      ? {
                          value: t.next().then(function(t) {
                            return n++, t.done && r++, t.value;
                          }),
                          recurse: !1
                        }
                      : { value: null, recurse: !0 };
                  }
                  var n, r, i;
                  return u(this, function(o) {
                    switch (o.label) {
                      case 0:
                        return [4, t];
                      case 1:
                        return (
                          o.sent(), (n = 0), (r = 0), [4, _(this.iterators, e)]
                        );
                      case 2:
                        if (((i = o.sent()), n === r))
                          return [2, { value: null, done: !0 }];
                        if (r > 0)
                          switch (this.mismatchMode) {
                            case I.FAIL:
                              throw new Error(
                                "Zipped streams should have the same length. Mismatched at element " +
                                  this.count +
                                  "."
                              );
                            case I.SHORTEST:
                              return [2, { value: null, done: !0 }];
                            case I.LONGEST:
                          }
                        return this.count++, [2, { value: i, done: !1 }];
                    }
                  });
                });
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return (
                          (this.currentPromise = this.nextState(
                            this.currentPromise
                          )),
                          [4, this.currentPromise]
                        );
                      case 1:
                        return [2, t.sent()];
                    }
                  });
                });
              }),
              e
            );
          })(P),
          Q = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e), (r.bufferSize = n), (r.buffer = new A(n)), r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Prefetch";
              }),
              (e.prototype.refill = function() {
                for (; !this.buffer.isFull(); ) {
                  var t = this.upstream.next();
                  this.buffer.push(t);
                }
              }),
              (e.prototype.next = function() {
                return this.refill(), this.buffer.shift();
              }),
              e
            );
          })(P),
          X = (function(t) {
            function e(e, n, r) {
              var o = t.call(this, e, n) || this;
              return (
                (o.upstream = e),
                (o.windowSize = n),
                (o.upstreamExhausted = !1),
                (o.random = g(r || i.util.now().toString())),
                (o.lastRead = Promise.resolve({ value: null, done: !1 })),
                o
              );
            }
            return (
              a(e, t),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t = this;
                  return u(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.randomInt = function(t) {
                return Math.floor(this.random() * t);
              }),
              (e.prototype.chooseIndex = function() {
                return this.randomInt(this.buffer.length());
              }),
              (e.prototype.serialNext = function() {
                return s(this, void 0, void 0, function() {
                  var t, e;
                  return u(this, function(n) {
                    switch (n.label) {
                      case 0:
                        this.upstreamExhausted || this.refill(), (n.label = 1);
                      case 1:
                        return this.buffer.isEmpty()
                          ? [3, 3]
                          : ((t = this.chooseIndex()),
                            [4, this.buffer.shuffleExcise(t)]);
                      case 2:
                        return (e = n.sent()).done
                          ? ((this.upstreamExhausted = !0), [3, 1])
                          : (this.refill(), [2, e]);
                      case 3:
                        return [2, { value: null, done: !0 }];
                    }
                  });
                });
              }),
              e
            );
          })(Q),
          $ = (function() {
            function t() {
              this.size = null;
            }
            return (
              (t.prototype.batch = function(t, e) {
                var n = this;
                void 0 === e && (e = !0);
                var r = this;
                return (
                  i.util.assert(t > 0, function() {
                    return (
                      "batchSize needs to be positive, but it is\n      " + t
                    );
                  }),
                  Y(
                    function() {
                      return s(n, void 0, void 0, function() {
                        return u(this, function(n) {
                          switch (n.label) {
                            case 0:
                              return [4, r.iterator()];
                            case 1:
                              return [2, n.sent().columnMajorBatch(t, e, tt)];
                          }
                        });
                      });
                    },
                    this.size === 1 / 0 || null == this.size
                      ? this.size
                      : e
                      ? Math.ceil(this.size / t)
                      : Math.floor(this.size / t)
                  )
                );
              }),
              (t.prototype.concatenate = function(t) {
                var e = this,
                  n = this;
                return Y(
                  function() {
                    return s(e, void 0, void 0, function() {
                      var e, r;
                      return u(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return (
                              (r = (e = i.sent()).concatenate),
                              [4, t.iterator()]
                            );
                          case 2:
                            return [2, r.apply(e, [i.sent()])];
                        }
                      });
                    });
                  },
                  this.size === 1 / 0 || t.size === 1 / 0
                    ? 1 / 0
                    : null != this.size && null != t.size
                    ? this.size + t.size
                    : null
                );
              }),
              (t.prototype.filter = function(t) {
                var e = this,
                  n = this;
                return Y(
                  function() {
                    return s(e, void 0, void 0, function() {
                      return u(this, function(e) {
                        switch (e.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return [
                              2,
                              e.sent().filter(function(e) {
                                return Object(i.tidy)(function() {
                                  return t(e);
                                });
                              })
                            ];
                        }
                      });
                    });
                  },
                  this.size === 1 / 0 ? 1 / 0 : null
                );
              }),
              (t.prototype.forEachAsync = function(t) {
                return s(this, void 0, void 0, function() {
                  return u(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.iterator()];
                      case 1:
                        return [2, e.sent().forEachAsync(t)];
                    }
                  });
                });
              }),
              (t.prototype.forEach = function(t) {
                return s(this, void 0, void 0, function() {
                  return u(this, function(e) {
                    return (
                      Object(i.deprecationWarn)(
                        "dataset.forEach() is deprecated and will be removed. Please use dataset.forEachAsync() instead"
                      ),
                      [2, this.forEachAsync(t)]
                    );
                  });
                });
              }),
              (t.prototype.map = function(t) {
                var e = this,
                  n = this;
                return Y(function() {
                  return s(e, void 0, void 0, function() {
                    return u(this, function(e) {
                      switch (e.label) {
                        case 0:
                          return [4, n.iterator()];
                        case 1:
                          return [
                            2,
                            e.sent().map(function(e) {
                              return Object(i.tidy)(function() {
                                return t(e);
                              });
                            })
                          ];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.mapAsync = function(t) {
                var e = this,
                  n = this;
                return Y(function() {
                  return s(e, void 0, void 0, function() {
                    return u(this, function(e) {
                      switch (e.label) {
                        case 0:
                          return [4, n.iterator()];
                        case 1:
                          return [2, e.sent().mapAsync(t)];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.prefetch = function(t) {
                var e = this;
                if (null == t)
                  throw new RangeError(
                    "`Dataset.prefetch()` requires bufferSize to be specified."
                  );
                var n = this;
                return Y(function() {
                  return s(e, void 0, void 0, function() {
                    return u(this, function(e) {
                      switch (e.label) {
                        case 0:
                          return [4, n.iterator()];
                        case 1:
                          return [2, e.sent().prefetch(t)];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.repeat = function(t) {
                var e = this,
                  n = this;
                return Y(
                  function() {
                    return s(e, void 0, void 0, function() {
                      var e = this;
                      return u(this, function(r) {
                        return [
                          2,
                          O(
                            N(function() {
                              return s(e, void 0, void 0, function() {
                                var t;
                                return u(this, function(e) {
                                  switch (e.label) {
                                    case 0:
                                      return (t = {}), [4, n.iterator()];
                                    case 1:
                                      return [
                                        2,
                                        ((t.value = e.sent()), (t.done = !1), t)
                                      ];
                                  }
                                });
                              });
                            }).take(t)
                          )
                        ];
                      });
                    });
                  },
                  null != this.size && t > 0
                    ? this.size * t
                    : 0 === t
                    ? 0
                    : null != this.size && (void 0 === t || t < 0)
                    ? 1 / 0
                    : null
                );
              }),
              (t.prototype.skip = function(t) {
                var e = this,
                  n = this;
                return Y(
                  function() {
                    return s(e, void 0, void 0, function() {
                      return u(this, function(e) {
                        switch (e.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return [2, e.sent().skip(t)];
                        }
                      });
                    });
                  },
                  null != this.size && t >= 0 && this.size >= t
                    ? this.size - t
                    : null != this.size &&
                      (this.size < t || void 0 === t || t < 0)
                    ? 0
                    : null
                );
              }),
              (t.prototype.shuffle = function(t, e, n) {
                var r = this;
                if ((void 0 === n && (n = !0), null == t || t < 0))
                  throw null == this.size
                    ? new RangeError(
                        "`Dataset.shuffle()` requires bufferSize to be specified."
                      )
                    : new RangeError(
                        "`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting bufferSize to the dataset size (" +
                          this.size +
                          " elements)"
                      );
                var o = this,
                  a = g(e || i.util.now().toString());
                return Y(function() {
                  return s(r, void 0, void 0, function() {
                    var e;
                    return u(this, function(r) {
                      switch (r.label) {
                        case 0:
                          return (
                            (e = a.int32()),
                            n && (e += a.int32()),
                            [4, o.iterator()]
                          );
                        case 1:
                          return [2, r.sent().shuffle(t, e.toString())];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.take = function(t) {
                var e = this,
                  n = this;
                return Y(
                  function() {
                    return s(e, void 0, void 0, function() {
                      return u(this, function(e) {
                        switch (e.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return [2, e.sent().take(t)];
                        }
                      });
                    });
                  },
                  null != this.size && this.size > t
                    ? t
                    : null != this.size && this.size <= t
                    ? this.size
                    : null
                );
              }),
              (t.prototype.toArray = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    switch (t.label) {
                      case 0:
                        if (this.size === 1 / 0)
                          throw new Error(
                            "Can not convert infinite data stream to array."
                          );
                        return [4, this.iterator()];
                      case 1:
                        return [2, t.sent().toArray()];
                    }
                  });
                });
              }),
              (t.prototype.toArrayForTest = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    switch (t.label) {
                      case 0:
                        if (this.size === 1 / 0)
                          throw new Error(
                            "Can not convert infinite data stream to array."
                          );
                        return [4, this.iterator()];
                      case 1:
                        return [2, t.sent().toArrayForTest()];
                    }
                  });
                });
              }),
              (t.MAX_BUFFER_SIZE = 1e4),
              t
            );
          })();
        function Y(t, e) {
          return (
            void 0 === e && (e = null),
            new ((function(n) {
              function r() {
                var t = (null !== n && n.apply(this, arguments)) || this;
                return (t.size = e), t;
              }
              return (
                a(r, n),
                (r.prototype.iterator = function() {
                  return s(this, void 0, void 0, function() {
                    return u(this, function(e) {
                      return [2, t()];
                    });
                  });
                }),
                r
              );
            })($))()
          );
        }
        function J(t) {
          var e = this;
          return Y(function() {
            return s(e, void 0, void 0, function() {
              return u(this, function(e) {
                return [2, E(t)];
              });
            });
          }, t.length);
        }
        function Z(t) {
          var e,
            n = this;
          if (!S(t))
            throw new Error(
              "The argument to zip() must be an object or array."
            );
          if (Array.isArray(t))
            for (var r = 0; r < t.length; r++)
              e = null == e ? t[r].size : Math.min(e, t[r].size);
          else if (t instanceof Object)
            for (var i in t) e = null == e ? t[i].size : Math.min(e, t[i].size);
          return Y(function() {
            return s(n, void 0, void 0, function() {
              return u(this, function(e) {
                switch (e.label) {
                  case 0:
                    return [
                      4,
                      _(t, function(t) {
                        if (t instanceof $)
                          return { value: t.iterator(), recurse: !1 };
                        if (S(t)) return { value: null, recurse: !0 };
                        throw new Error(
                          "Leaves of the structure passed to zip() must be Datasets, not primitives."
                        );
                      })
                    ];
                  case 1:
                    return [2, C(e.sent(), I.SHORTEST)];
                }
              });
            });
          }, e);
        }
        function tt(t) {
          return null === t
            ? null
            : (function(t) {
                return (
                  null == t ||
                  (function(t) {
                    return (
                      null === t ||
                      ("object" != typeof t && "function" != typeof t)
                    );
                  })(t) ||
                  Array.isArray(t) ||
                  ("object" == typeof t && t instanceof i.Tensor) ||
                  i.util.isTypedArray(t)
                );
              })(t[0])
            ? { value: et(t), recurse: !1 }
            : { value: null, recurse: !0 };
        }
        function et(t) {
          if (0 === t.length)
            throw new Error("Can't make a batch of zero elements.");
          return t[0] instanceof i.Tensor
            ? Object(i.stack)(t)
            : Object(i.tensor)(t);
        }
        var nt = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.input = e), n;
            }
            return (
              a(e, t),
              (e.prototype.iterator = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.input.iterator()];
                      case 1:
                        return (
                          (t = e.sent()),
                          [
                            2,
                            t
                              .decodeUTF8()
                              .split("\n")
                              .map(function(t) {
                                return (
                                  t.endsWith("\r") && (t = t.slice(0, -1)), t
                                );
                              })
                          ]
                        );
                    }
                  });
                });
              }),
              e
            );
          })($),
          rt = Symbol("out"),
          it = Symbol("field"),
          ot = Symbol("quote"),
          at = Symbol("quoteafterquote"),
          st = Symbol("quoteinquote"),
          ut = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.input = e),
                (r.hasHeader = !0),
                (r.fullColumnNames = null),
                (r.columnNamesValidated = !1),
                (r.columnConfigs = null),
                (r.configuredColumnsOnly = !1),
                (r.delimiter = ","),
                (r.delimWhitespace = !1),
                (r.base = new nt(e)),
                n || (n = {}),
                (r.hasHeader = !1 !== n.hasHeader),
                (r.fullColumnNames = n.columnNames),
                (r.columnConfigs = n.columnConfigs),
                (r.configuredColumnsOnly = n.configuredColumnsOnly),
                n.delimWhitespace
                  ? (i.util.assert(null == n.delimiter, function() {
                      return "Delimiter should not be provided when delimWhitespace is true.";
                    }),
                    (r.delimWhitespace = !0),
                    (r.delimiter = " "))
                  : (r.delimiter = n.delimiter ? n.delimiter : ","),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.columnNames = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return this.columnNamesValidated
                          ? [3, 2]
                          : [4, this.setColumnNames()];
                      case 1:
                        t.sent(), (t.label = 2);
                      case 2:
                        return [
                          2,
                          this.configuredColumnsOnly
                            ? Object.keys(this.columnConfigs)
                            : this.fullColumnNames
                        ];
                    }
                  });
                });
              }),
              (e.prototype.setColumnNames = function() {
                return s(this, void 0, void 0, function() {
                  var t,
                    e,
                    n,
                    r,
                    o,
                    a,
                    s = this;
                  return u(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return [4, this.maybeReadHeaderLine()];
                      case 1:
                        if (((t = u.sent()), !this.fullColumnNames && !t))
                          throw new Error(
                            "Column names must be provided if there is no header line."
                          );
                        if (
                          (this.fullColumnNames &&
                            t &&
                            i.util.assert(
                              t.length === this.fullColumnNames.length,
                              function() {
                                return (
                                  "The length of provided columnNames (" +
                                  s.fullColumnNames.length.toString() +
                                  ") does not match the length of the header line read from file (" +
                                  t.length.toString() +
                                  ")."
                                );
                              }
                            ),
                          this.fullColumnNames || (this.fullColumnNames = t),
                          (e = this.fullColumnNames.reduce(function(t, e) {
                            return (t[e] = t[e] + 1 || 1), t;
                          }, {})),
                          (n = Object.keys(e).filter(function(t) {
                            return e[t] > 1;
                          })),
                          i.util.assert(0 === n.length, function() {
                            return (
                              "Duplicate column names found: " + n.toString()
                            );
                          }),
                          this.columnConfigs)
                        )
                          for (
                            r = 0, o = Object.keys(this.columnConfigs);
                            r < o.length;
                            r++
                          )
                            if (
                              ((a = o[r]),
                              -1 === this.fullColumnNames.indexOf(a))
                            )
                              throw new Error(
                                'The key "' +
                                  a +
                                  '" provided in columnConfigs does not match any of the column names (' +
                                  this.fullColumnNames.toString() +
                                  ")."
                              );
                        return (this.columnNamesValidated = !0), [2];
                    }
                  });
                });
              }),
              (e.prototype.maybeReadHeaderLine = function() {
                return s(this, void 0, void 0, function() {
                  var t, e;
                  return u(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return this.hasHeader
                          ? [4, this.base.iterator()]
                          : [3, 3];
                      case 1:
                        return [4, n.sent().next()];
                      case 2:
                        if ((t = n.sent()).done)
                          throw new Error("No data was found for CSV parsing.");
                        return (e = t.value), [2, this.parseRow(e, !1)];
                      case 3:
                        return [2, null];
                    }
                  });
                });
              }),
              (e.prototype.iterator = function() {
                return s(this, void 0, void 0, function() {
                  var t,
                    e = this;
                  return u(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return this.columnNamesValidated
                          ? [3, 2]
                          : [4, this.setColumnNames()];
                      case 1:
                        n.sent(), (n.label = 2);
                      case 2:
                        return [4, this.base.iterator()];
                      case 3:
                        return (
                          (t = n.sent()),
                          this.hasHeader && (t = t.skip(1)),
                          [
                            2,
                            t.map(function(t) {
                              return e.makeDataElement(t);
                            })
                          ]
                        );
                    }
                  });
                });
              }),
              (e.prototype.makeDataElement = function(t) {
                for (
                  var e = this.parseRow(t), n = {}, r = {}, i = 0;
                  i < this.fullColumnNames.length;
                  i++
                ) {
                  var o = this.fullColumnNames[i],
                    a = this.columnConfigs ? this.columnConfigs[o] : null;
                  if (!this.configuredColumnsOnly || a) {
                    var s = e[i],
                      u = null;
                    if ("" === s)
                      if (a && void 0 !== a.default) u = a.default;
                      else {
                        if (a && (a.required || a.isLabel))
                          throw new Error(
                            "Required column " +
                              o +
                              " is empty in this line: " +
                              t
                          );
                        u = void 0;
                      }
                    else {
                      var c = Number(s);
                      if (isNaN(c))
                        u = a && "bool" === a.dtype ? this.getBoolean(s) : s;
                      else if (a && a.dtype)
                        switch (a.dtype) {
                          case "float32":
                            u = c;
                            break;
                          case "int32":
                            u = Math.floor(c);
                            break;
                          case "bool":
                            u = this.getBoolean(s);
                            break;
                          default:
                            u = c;
                        }
                      else u = c;
                    }
                    a && a.isLabel ? (r[o] = u) : (n[o] = u);
                  }
                }
                return 0 === Object.keys(r).length ? n : { xs: n, ys: r };
              }),
              (e.prototype.getBoolean = function(t) {
                return "1" === t || "true" === t.toLowerCase() ? 1 : 0;
              }),
              (e.prototype.parseRow = function(t, e) {
                void 0 === e && (e = !0);
                for (var n = [], r = 0, i = t.length, o = rt, a = 0; a < i; a++)
                  switch (o) {
                    case rt:
                      switch (t.charAt(a)) {
                        case '"':
                          (r = a + 1), (o = ot);
                          break;
                        case this.delimiter:
                          if (
                            ((r = a + 1),
                            " " === this.delimiter && this.delimWhitespace)
                          )
                            break;
                          n.push(""), (o = rt);
                          break;
                        default:
                          (o = it), (r = a);
                      }
                      break;
                    case it:
                      switch (t.charAt(a)) {
                        case this.delimiter:
                          n.push(t.substring(r, a)), (o = rt), (r = a + 1);
                      }
                      break;
                    case ot:
                      switch (t.charAt(a)) {
                        case '"':
                          o = at;
                      }
                      break;
                    case at:
                      switch (t.charAt(a)) {
                        case this.delimiter:
                          n.push(t.substring(r, a - 1)), (o = rt), (r = a + 1);
                          break;
                        case '"':
                          o = ot;
                          break;
                        default:
                          o = st;
                      }
                      break;
                    case st:
                      switch (t.charAt(a)) {
                        case '"':
                          o = ot;
                      }
                  }
                if (
                  (o === at
                    ? n.push(t.substring(r, i - 1))
                    : n.push(t.substring(r)),
                  e && n.length !== this.fullColumnNames.length)
                )
                  throw new Error(
                    "Invalid row in csv file. Should have " +
                      this.fullColumnNames.length +
                      " elements in a row, but got " +
                      n
                  );
                return n;
              }),
              e
            );
          })($),
          ct = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              if (
                ((r.webcamVideoElement = e),
                (r.webcamConfig = n),
                (r.isClosed = !0),
                (r.resize = !1),
                r.needToResize())
              )
                if (
                  ((r.resize = !0),
                  (r.cropSize = [
                    r.webcamConfig.resizeHeight,
                    r.webcamConfig.resizeWidth
                  ]),
                  (r.cropBoxInd = Object(i.tensor1d)([0], "int32")),
                  r.webcamConfig.centerCrop)
                ) {
                  var o =
                      (1 * r.webcamConfig.resizeWidth) /
                      r.webcamVideoElement.width,
                    a =
                      (1 * r.webcamConfig.resizeHeight) /
                      r.webcamVideoElement.height,
                    s = (1 - o) / 2,
                    u = (1 - a) / 2,
                    c = s + o,
                    l = a + u;
                  r.cropBox = Object(i.tensor2d)([u, s, l, c], [1, 4]);
                } else r.cropBox = Object(i.tensor2d)([0, 0, 1, 1], [1, 4]);
              return r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return "webcam";
              }),
              (e.create = function(t, n) {
                return (
                  void 0 === n && (n = {}),
                  s(this, void 0, void 0, function() {
                    var r;
                    return u(this, function(o) {
                      switch (o.label) {
                        case 0:
                          if (i.ENV.get("IS_NODE"))
                            throw new Error(
                              "tf.data.webcam is only supported in browser environment."
                            );
                          if (!t) {
                            if (
                              ((t = document.createElement("video")),
                              !n.resizeWidth || !n.resizeHeight)
                            )
                              throw new Error(
                                "Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element."
                              );
                            (t.width = n.resizeWidth),
                              (t.height = n.resizeHeight);
                          }
                          return [4, (r = new e(t, n)).start()];
                        case 1:
                          return o.sent(), [2, r];
                      }
                    });
                  })
                );
              }),
              (e.prototype.start = function() {
                return s(this, void 0, void 0, function() {
                  var t,
                    e,
                    n = this;
                  return u(this, function(r) {
                    switch (r.label) {
                      case 0:
                        this.webcamConfig.facingMode &&
                          i.util.assert(
                            "user" === this.webcamConfig.facingMode ||
                              "environment" === this.webcamConfig.facingMode,
                            function() {
                              return (
                                "Invalid webcam facing mode: " +
                                n.webcamConfig.facingMode +
                                ". Please provide 'user' or 'environment'"
                              );
                            }
                          ),
                          (r.label = 1);
                      case 1:
                        return (
                          r.trys.push([1, 3, , 4]),
                          (t = this),
                          [
                            4,
                            navigator.mediaDevices.getUserMedia({
                              video: {
                                deviceId: this.webcamConfig.deviceId,
                                facingMode: this.webcamConfig.facingMode
                                  ? this.webcamConfig.facingMode
                                  : "user",
                                width: this.webcamVideoElement.width,
                                height: this.webcamVideoElement.height
                              }
                            })
                          ]
                        );
                      case 2:
                        return (t.stream = r.sent()), [3, 4];
                      case 3:
                        throw (((e = r.sent()).message =
                          "Error thrown while initializing video stream: " +
                          e.message),
                        e);
                      case 4:
                        if (!this.stream)
                          throw new Error(
                            "Could not obtain video from webcam."
                          );
                        try {
                          this.webcamVideoElement.srcObject = this.stream;
                        } catch (t) {
                          console.log(t),
                            (this.webcamVideoElement.src = window.URL.createObjectURL(
                              this.stream
                            ));
                        }
                        return (
                          this.webcamVideoElement.play(),
                          (this.isClosed = !1),
                          [
                            2,
                            new Promise(function(t) {
                              n.webcamVideoElement.onloadedmetadata = function() {
                                t();
                              };
                            })
                          ]
                        );
                    }
                  });
                });
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    if (this.isClosed) return [2, { value: null, done: !0 }];
                    try {
                      t = i.browser.fromPixels(this.webcamVideoElement);
                    } catch (t) {
                      throw new Error(
                        "Error thrown converting video to pixels: " +
                          JSON.stringify(t)
                      );
                    }
                    if (!this.resize) return [2, { value: t, done: !1 }];
                    try {
                      return [
                        2,
                        { value: this.cropAndResizeFrame(t), done: !1 }
                      ];
                    } catch (t) {
                      throw new Error(
                        "Error thrown cropping the video: " + t.message
                      );
                    } finally {
                      t.dispose();
                    }
                    return [2];
                  });
                });
              }),
              (e.prototype.needToResize = function() {
                return !(
                  !this.webcamConfig.resizeWidth ||
                  !this.webcamConfig.resizeHeight ||
                  (this.webcamVideoElement.width ===
                    this.webcamConfig.resizeWidth &&
                    this.webcamVideoElement.height ===
                      this.webcamConfig.resizeHeight)
                );
              }),
              (e.prototype.cropAndResizeFrame = function(t) {
                var e = this;
                return Object(i.tidy)(function() {
                  var n,
                    r = t.toFloat().expandDims(0),
                    o = (n = i.image.cropAndResize(
                      r,
                      e.cropBox,
                      e.cropBoxInd,
                      e.cropSize,
                      "bilinear"
                    )).shape;
                  return n.reshape(o.slice(1));
                });
              }),
              (e.prototype.capture = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return [4, this.next()];
                      case 1:
                        return [2, t.sent().value];
                    }
                  });
                });
              }),
              (e.prototype.stop = function() {
                this.stream.getTracks().forEach(function(t) {
                  return t.stop();
                });
                try {
                  this.webcamVideoElement.srcObject = null;
                } catch (t) {
                  console.log(t), (this.webcamVideoElement.src = null);
                }
                this.isClosed = !0;
              }),
              (e.prototype.toArray = function() {
                throw new Error(
                  "Can not convert infinite video stream to array."
                );
              }),
              e
            );
          })(P),
          lt = function() {},
          ht = (function(t) {
            function e() {
              return (null !== t && t.apply(this, arguments)) || this;
            }
            return (
              a(e, t),
              (e.prototype.split = function(t) {
                return new ft(this, t);
              }),
              e
            );
          })(P),
          ft = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.impl = new pt(e, n)), r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.impl.summary();
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    return [2, this.impl.next()];
                  });
                });
              }),
              e
            );
          })(ht),
          pt = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.separator = n), (r.carryover = ""), r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return (
                  this.upstream.summary() +
                  " -> Split('" +
                  this.separator +
                  "')"
                );
              }),
              (e.prototype.pump = function() {
                return s(this, void 0, void 0, function() {
                  var t, e, n, r, i;
                  return u(this, function(o) {
                    switch (o.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        if ((t = o.sent()).done)
                          return "" === this.carryover
                            ? [2, !1]
                            : (this.outputQueue.push(this.carryover),
                              (this.carryover = ""),
                              [2, !0]);
                        for (
                          (e = t.value.split(this.separator))[0] =
                            this.carryover + e[0],
                            n = 0,
                            r = e.slice(0, -1);
                          n < r.length;
                          n++
                        )
                          (i = r[n]), this.outputQueue.push(i);
                        return (this.carryover = e[e.length - 1]), [2, !0];
                    }
                  });
                });
              }),
              e
            );
          })(W),
          dt = (function(t) {
            function e() {
              return (null !== t && t.apply(this, arguments)) || this;
            }
            return (
              a(e, t),
              (e.prototype.decodeUTF8 = function() {
                return new mt(this);
              }),
              e
            );
          })(P),
          mt = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.upstream = e), (n.impl = new yt(e)), n;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.impl.summary();
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    return [2, this.impl.next()];
                  });
                });
              }),
              e
            );
          })(ht),
          yt = (function(t) {
            function e(e) {
              var r = t.call(this) || this;
              if (((r.upstream = e), i.ENV.get("IS_BROWSER")))
                r.decoder = new TextDecoder("utf-8");
              else {
                var o = n(191).StringDecoder;
                r.decoder = new o("utf8");
              }
              return r;
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Utf8";
              }),
              (e.prototype.pump = function() {
                return s(this, void 0, void 0, function() {
                  var t, e, n;
                  return u(this, function(o) {
                    switch (o.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        return (t = o.sent()).done
                          ? [2, !1]
                          : ((e = t.value),
                            (n = i.ENV.get("IS_BROWSER")
                              ? this.decoder.decode(e, { stream: !0 })
                              : this.decoder.write(r.from(e.buffer))),
                            this.outputQueue.push(n),
                            [2, !0]);
                    }
                  });
                });
              }),
              e
            );
          })(W),
          gt = (function(t) {
            function e(e, n) {
              void 0 === n && (n = {});
              var r = t.call(this) || this;
              return (
                (r.file = e),
                (r.options = n),
                i.util.assert(
                  e instanceof Uint8Array ||
                    (!!i.ENV.get("IS_BROWSER") &&
                      (e instanceof File || e instanceof Blob)),
                  function() {
                    return "FileChunkIterator only supports File, Blob and Uint8Array right now.";
                  }
                ),
                (r.offset = n.offset || 0),
                (r.chunkSize = n.chunkSize || 1048576),
                r
              );
            }
            return (
              a(e, t),
              (e.prototype.summary = function() {
                return "FileChunks " + this.file;
              }),
              (e.prototype.next = function() {
                return s(this, void 0, void 0, function() {
                  var t,
                    e,
                    n = this;
                  return u(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return this.offset >=
                          (this.file instanceof Uint8Array
                            ? this.file.byteLength
                            : this.file.size)
                          ? [2, { value: null, done: !0 }]
                          : ((t = new Promise(function(t, e) {
                              var r = n.offset + n.chunkSize;
                              if (n.file instanceof Uint8Array)
                                t(new Uint8Array(n.file.slice(n.offset, r)));
                              else {
                                var i = new FileReader();
                                (i.onload = function(n) {
                                  var r = i.result;
                                  if (
                                    (r instanceof ArrayBuffer &&
                                      (r = new Uint8Array(r)),
                                    !(r instanceof Uint8Array))
                                  )
                                    return e(
                                      new TypeError(
                                        "FileReader returned unknown type."
                                      )
                                    );
                                  t(r);
                                }),
                                  (i.onabort = function(t) {
                                    return e(new Error("Aborted"));
                                  }),
                                  (i.onerror = function(t) {
                                    return e(new Error(t.type));
                                  });
                                var o = n.file.slice(n.offset, r);
                                i.readAsArrayBuffer(o);
                              }
                              n.offset = r;
                            })),
                            (e = {}),
                            [4, t]);
                      case 1:
                        return [2, ((e.value = r.sent()), (e.done = !1), e)];
                    }
                  });
                });
              }),
              e
            );
          })(dt);
        function vt(t, e) {
          return (
            void 0 === e && (e = {}),
            s(this, void 0, void 0, function() {
              var r, o, a, s;
              return u(this, function(u) {
                switch (u.label) {
                  case 0:
                    return i.ENV.get("IS_BROWSER") ? [4, fetch(t)] : [3, 5];
                  case 1:
                    return (r = u.sent()).ok ? [4, r.blob()] : [3, 3];
                  case 2:
                    return (o = u.sent()), [2, new gt(o, e)];
                  case 3:
                    throw new Error(r.statusText);
                  case 4:
                    return [3, 9];
                  case 5:
                    if (((a = n(192)), "string" != typeof t))
                      throw new Error(
                        "URL must be a string. Request objects are not supported in the node.js environment yet."
                      );
                    return [4, a(t)];
                  case 6:
                    return (r = u.sent()).ok ? [4, r.buffer()] : [3, 8];
                  case 7:
                    return (s = u.sent()), [2, new gt(s, e)];
                  case 8:
                    throw new Error(r.statusText);
                  case 9:
                    return [2];
                }
              });
            })
          );
        }
        function bt(t) {
          return "string" == typeof t && "file://" === t.substr(0, 7);
        }
        var wt = (function(t) {
            function e(e, n) {
              void 0 === n && (n = {});
              var r = t.call(this) || this;
              return (r.input = e), (r.options = n), r;
            }
            return (
              a(e, t),
              (e.prototype.iterator = function() {
                return s(this, void 0, void 0, function() {
                  var t;
                  return u(this, function(e) {
                    return (
                      bt(this.input) &&
                        i.ENV.get("IS_NODE") &&
                        ((t = n(193)),
                        (this.input = t.readFileSync(this.input.substr(7)))),
                      [2, new gt(this.input, this.options)]
                    );
                  });
                });
              }),
              e
            );
          })(lt),
          _t = (function(t) {
            function e(e, n) {
              void 0 === n && (n = {});
              var r = t.call(this) || this;
              return (r.url = e), (r.fileOptions = n), r;
            }
            return (
              a(e, t),
              (e.prototype.iterator = function() {
                return s(this, void 0, void 0, function() {
                  return u(this, function(t) {
                    return bt(this.url)
                      ? [2, new wt(this.url, this.fileOptions).iterator()]
                      : [2, vt(this.url, this.fileOptions)];
                  });
                });
              }),
              e
            );
          })(lt);
        function St(t, e) {
          return void 0 === e && (e = {}), new ut(new _t(t), e);
        }
        function xt(t) {
          var e = this,
            n = N(t);
          return Y(function() {
            return s(e, void 0, void 0, function() {
              return u(this, function(t) {
                return [2, n];
              });
            });
          });
        }
        function Tt(t) {
          var e = this;
          return Y(function() {
            return s(e, void 0, void 0, function() {
              var e;
              return u(this, function(n) {
                switch (n.label) {
                  case 0:
                    return [4, t()];
                  case 1:
                    return (
                      (e = n.sent()),
                      [
                        2,
                        N(function() {
                          return e.next();
                        })
                      ]
                    );
                }
              });
            });
          });
        }
        function At(t, e) {
          return s(this, void 0, void 0, function() {
            return u(this, function(n) {
              return [2, ct.create(t, e)];
            });
          });
        }
        var kt = "1.2.1";
      }.call(this, n(5), n(3).Buffer);
  },
  function(t, e, n) {
    "use strict";
    function r(t) {
      for (var n in t) e.hasOwnProperty(n) || (e[n] = t[n]);
    }
    Object.defineProperty(e, "__esModule", { value: !0 });
    var i = n(7);
    (e.tf = i),
      r(n(49)),
      r(n(215)),
      r(n(218)),
      r(n(221)),
      r(n(224)),
      r(n(12)),
      r(n(226)),
      r(n(242));
  },
  function(t, e, n) {
    "use strict";
    var r = n(1),
      i = n(59),
      o = n(2).Buffer,
      a = new Array(16);
    function s() {
      i.call(this, 64),
        (this._a = 1732584193),
        (this._b = 4023233417),
        (this._c = 2562383102),
        (this._d = 271733878);
    }
    function u(t, e) {
      return (t << e) | (t >>> (32 - e));
    }
    function c(t, e, n, r, i, o, a) {
      return (u((t + ((e & n) | (~e & r)) + i + o) | 0, a) + e) | 0;
    }
    function l(t, e, n, r, i, o, a) {
      return (u((t + ((e & r) | (n & ~r)) + i + o) | 0, a) + e) | 0;
    }
    function h(t, e, n, r, i, o, a) {
      return (u((t + (e ^ n ^ r) + i + o) | 0, a) + e) | 0;
    }
    function f(t, e, n, r, i, o, a) {
      return (u((t + (n ^ (e | ~r)) + i + o) | 0, a) + e) | 0;
    }
    r(s, i),
      (s.prototype._update = function() {
        for (var t = a, e = 0; e < 16; ++e)
          t[e] = this._block.readInt32LE(4 * e);
        var n = this._a,
          r = this._b,
          i = this._c,
          o = this._d;
        (n = c(n, r, i, o, t[0], 3614090360, 7)),
          (o = c(o, n, r, i, t[1], 3905402710, 12)),
          (i = c(i, o, n, r, t[2], 606105819, 17)),
          (r = c(r, i, o, n, t[3], 3250441966, 22)),
          (n = c(n, r, i, o, t[4], 4118548399, 7)),
          (o = c(o, n, r, i, t[5], 1200080426, 12)),
          (i = c(i, o, n, r, t[6], 2821735955, 17)),
          (r = c(r, i, o, n, t[7], 4249261313, 22)),
          (n = c(n, r, i, o, t[8], 1770035416, 7)),
          (o = c(o, n, r, i, t[9], 2336552879, 12)),
          (i = c(i, o, n, r, t[10], 4294925233, 17)),
          (r = c(r, i, o, n, t[11], 2304563134, 22)),
          (n = c(n, r, i, o, t[12], 1804603682, 7)),
          (o = c(o, n, r, i, t[13], 4254626195, 12)),
          (i = c(i, o, n, r, t[14], 2792965006, 17)),
          (n = l(
            n,
            (r = c(r, i, o, n, t[15], 1236535329, 22)),
            i,
            o,
            t[1],
            4129170786,
            5
          )),
          (o = l(o, n, r, i, t[6], 3225465664, 9)),
          (i = l(i, o, n, r, t[11], 643717713, 14)),
          (r = l(r, i, o, n, t[0], 3921069994, 20)),
          (n = l(n, r, i, o, t[5], 3593408605, 5)),
          (o = l(o, n, r, i, t[10], 38016083, 9)),
          (i = l(i, o, n, r, t[15], 3634488961, 14)),
          (r = l(r, i, o, n, t[4], 3889429448, 20)),
          (n = l(n, r, i, o, t[9], 568446438, 5)),
          (o = l(o, n, r, i, t[14], 3275163606, 9)),
          (i = l(i, o, n, r, t[3], 4107603335, 14)),
          (r = l(r, i, o, n, t[8], 1163531501, 20)),
          (n = l(n, r, i, o, t[13], 2850285829, 5)),
          (o = l(o, n, r, i, t[2], 4243563512, 9)),
          (i = l(i, o, n, r, t[7], 1735328473, 14)),
          (n = h(
            n,
            (r = l(r, i, o, n, t[12], 2368359562, 20)),
            i,
            o,
            t[5],
            4294588738,
            4
          )),
          (o = h(o, n, r, i, t[8], 2272392833, 11)),
          (i = h(i, o, n, r, t[11], 1839030562, 16)),
          (r = h(r, i, o, n, t[14], 4259657740, 23)),
          (n = h(n, r, i, o, t[1], 2763975236, 4)),
          (o = h(o, n, r, i, t[4], 1272893353, 11)),
          (i = h(i, o, n, r, t[7], 4139469664, 16)),
          (r = h(r, i, o, n, t[10], 3200236656, 23)),
          (n = h(n, r, i, o, t[13], 681279174, 4)),
          (o = h(o, n, r, i, t[0], 3936430074, 11)),
          (i = h(i, o, n, r, t[3], 3572445317, 16)),
          (r = h(r, i, o, n, t[6], 76029189, 23)),
          (n = h(n, r, i, o, t[9], 3654602809, 4)),
          (o = h(o, n, r, i, t[12], 3873151461, 11)),
          (i = h(i, o, n, r, t[15], 530742520, 16)),
          (n = f(
            n,
            (r = h(r, i, o, n, t[2], 3299628645, 23)),
            i,
            o,
            t[0],
            4096336452,
            6
          )),
          (o = f(o, n, r, i, t[7], 1126891415, 10)),
          (i = f(i, o, n, r, t[14], 2878612391, 15)),
          (r = f(r, i, o, n, t[5], 4237533241, 21)),
          (n = f(n, r, i, o, t[12], 1700485571, 6)),
          (o = f(o, n, r, i, t[3], 2399980690, 10)),
          (i = f(i, o, n, r, t[10], 4293915773, 15)),
          (r = f(r, i, o, n, t[1], 2240044497, 21)),
          (n = f(n, r, i, o, t[8], 1873313359, 6)),
          (o = f(o, n, r, i, t[15], 4264355552, 10)),
          (i = f(i, o, n, r, t[6], 2734768916, 15)),
          (r = f(r, i, o, n, t[13], 1309151649, 21)),
          (n = f(n, r, i, o, t[4], 4149444226, 6)),
          (o = f(o, n, r, i, t[11], 3174756917, 10)),
          (i = f(i, o, n, r, t[2], 718787259, 15)),
          (r = f(r, i, o, n, t[9], 3951481745, 21)),
          (this._a = (this._a + n) | 0),
          (this._b = (this._b + r) | 0),
          (this._c = (this._c + i) | 0),
          (this._d = (this._d + o) | 0);
      }),
      (s.prototype._digest = function() {
        (this._block[this._blockOffset++] = 128),
          this._blockOffset > 56 &&
            (this._block.fill(0, this._blockOffset, 64),
            this._update(),
            (this._blockOffset = 0)),
          this._block.fill(0, this._blockOffset, 56),
          this._block.writeUInt32LE(this._length[0], 56),
          this._block.writeUInt32LE(this._length[1], 60),
          this._update();
        var t = o.allocUnsafe(16);
        return (
          t.writeInt32LE(this._a, 0),
          t.writeInt32LE(this._b, 4),
          t.writeInt32LE(this._c, 8),
          t.writeInt32LE(this._d, 12),
          t
        );
      }),
      (t.exports = s);
  },
  function(t, e, n) {
    t.exports = i;
    var r = n(38).EventEmitter;
    function i() {
      r.call(this);
    }
    n(1)(i, r),
      (i.Readable = n(39)),
      (i.Writable = n(115)),
      (i.Duplex = n(116)),
      (i.Transform = n(117)),
      (i.PassThrough = n(118)),
      (i.Stream = i),
      (i.prototype.pipe = function(t, e) {
        var n = this;
        function i(e) {
          t.writable && !1 === t.write(e) && n.pause && n.pause();
        }
        function o() {
          n.readable && n.resume && n.resume();
        }
        n.on("data", i),
          t.on("drain", o),
          t._isStdio ||
            (e && !1 === e.end) ||
            (n.on("end", s), n.on("close", u));
        var a = !1;
        function s() {
          a || ((a = !0), t.end());
        }
        function u() {
          a || ((a = !0), "function" == typeof t.destroy && t.destroy());
        }
        function c(t) {
          if ((l(), 0 === r.listenerCount(this, "error"))) throw t;
        }
        function l() {
          n.removeListener("data", i),
            t.removeListener("drain", o),
            n.removeListener("end", s),
            n.removeListener("close", u),
            n.removeListener("error", c),
            t.removeListener("error", c),
            n.removeListener("end", l),
            n.removeListener("close", l),
            t.removeListener("close", l);
        }
        return (
          n.on("error", c),
          t.on("error", c),
          n.on("end", l),
          n.on("close", l),
          t.on("close", l),
          t.emit("pipe", n),
          t
        );
      });
  },
  function(t, e, n) {
    "use strict";
    var r,
      i = "object" == typeof Reflect ? Reflect : null,
      o =
        i && "function" == typeof i.apply
          ? i.apply
          : function(t, e, n) {
              return Function.prototype.apply.call(t, e, n);
            };
    r =
      i && "function" == typeof i.ownKeys
        ? i.ownKeys
        : Object.getOwnPropertySymbols
        ? function(t) {
            return Object.getOwnPropertyNames(t).concat(
              Object.getOwnPropertySymbols(t)
            );
          }
        : function(t) {
            return Object.getOwnPropertyNames(t);
          };
    var a =
      Number.isNaN ||
      function(t) {
        return t != t;
      };
    function s() {
      s.init.call(this);
    }
    (t.exports = s),
      (s.EventEmitter = s),
      (s.prototype._events = void 0),
      (s.prototype._eventsCount = 0),
      (s.prototype._maxListeners = void 0);
    var u = 10;
    function c(t) {
      return void 0 === t._maxListeners
        ? s.defaultMaxListeners
        : t._maxListeners;
    }
    function l(t, e, n, r) {
      var i, o, a, s;
      if ("function" != typeof n)
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' +
            typeof n
        );
      if (
        (void 0 === (o = t._events)
          ? ((o = t._events = Object.create(null)), (t._eventsCount = 0))
          : (void 0 !== o.newListener &&
              (t.emit("newListener", e, n.listener ? n.listener : n),
              (o = t._events)),
            (a = o[e])),
        void 0 === a)
      )
        (a = o[e] = n), ++t._eventsCount;
      else if (
        ("function" == typeof a
          ? (a = o[e] = r ? [n, a] : [a, n])
          : r
          ? a.unshift(n)
          : a.push(n),
        (i = c(t)) > 0 && a.length > i && !a.warned)
      ) {
        a.warned = !0;
        var u = new Error(
          "Possible EventEmitter memory leak detected. " +
            a.length +
            " " +
            String(e) +
            " listeners added. Use emitter.setMaxListeners() to increase limit"
        );
        (u.name = "MaxListenersExceededWarning"),
          (u.emitter = t),
          (u.type = e),
          (u.count = a.length),
          (s = u),
          console && console.warn && console.warn(s);
      }
      return t;
    }
    function h(t, e, n) {
      var r = { fired: !1, wrapFn: void 0, target: t, type: e, listener: n },
        i = function() {
          for (var t = [], e = 0; e < arguments.length; e++)
            t.push(arguments[e]);
          this.fired ||
            (this.target.removeListener(this.type, this.wrapFn),
            (this.fired = !0),
            o(this.listener, this.target, t));
        }.bind(r);
      return (i.listener = n), (r.wrapFn = i), i;
    }
    function f(t, e, n) {
      var r = t._events;
      if (void 0 === r) return [];
      var i = r[e];
      return void 0 === i
        ? []
        : "function" == typeof i
        ? n
          ? [i.listener || i]
          : [i]
        : n
        ? (function(t) {
            for (var e = new Array(t.length), n = 0; n < e.length; ++n)
              e[n] = t[n].listener || t[n];
            return e;
          })(i)
        : d(i, i.length);
    }
    function p(t) {
      var e = this._events;
      if (void 0 !== e) {
        var n = e[t];
        if ("function" == typeof n) return 1;
        if (void 0 !== n) return n.length;
      }
      return 0;
    }
    function d(t, e) {
      for (var n = new Array(e), r = 0; r < e; ++r) n[r] = t[r];
      return n;
    }
    Object.defineProperty(s, "defaultMaxListeners", {
      enumerable: !0,
      get: function() {
        return u;
      },
      set: function(t) {
        if ("number" != typeof t || t < 0 || a(t))
          throw new RangeError(
            'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
              t +
              "."
          );
        u = t;
      }
    }),
      (s.init = function() {
        (void 0 !== this._events &&
          this._events !== Object.getPrototypeOf(this)._events) ||
          ((this._events = Object.create(null)), (this._eventsCount = 0)),
          (this._maxListeners = this._maxListeners || void 0);
      }),
      (s.prototype.setMaxListeners = function(t) {
        if ("number" != typeof t || t < 0 || a(t))
          throw new RangeError(
            'The value of "n" is out of range. It must be a non-negative number. Received ' +
              t +
              "."
          );
        return (this._maxListeners = t), this;
      }),
      (s.prototype.getMaxListeners = function() {
        return c(this);
      }),
      (s.prototype.emit = function(t) {
        for (var e = [], n = 1; n < arguments.length; n++) e.push(arguments[n]);
        var r = "error" === t,
          i = this._events;
        if (void 0 !== i) r = r && void 0 === i.error;
        else if (!r) return !1;
        if (r) {
          var a;
          if ((e.length > 0 && (a = e[0]), a instanceof Error)) throw a;
          var s = new Error(
            "Unhandled error." + (a ? " (" + a.message + ")" : "")
          );
          throw ((s.context = a), s);
        }
        var u = i[t];
        if (void 0 === u) return !1;
        if ("function" == typeof u) o(u, this, e);
        else {
          var c = u.length,
            l = d(u, c);
          for (n = 0; n < c; ++n) o(l[n], this, e);
        }
        return !0;
      }),
      (s.prototype.addListener = function(t, e) {
        return l(this, t, e, !1);
      }),
      (s.prototype.on = s.prototype.addListener),
      (s.prototype.prependListener = function(t, e) {
        return l(this, t, e, !0);
      }),
      (s.prototype.once = function(t, e) {
        if ("function" != typeof e)
          throw new TypeError(
            'The "listener" argument must be of type Function. Received type ' +
              typeof e
          );
        return this.on(t, h(this, t, e)), this;
      }),
      (s.prototype.prependOnceListener = function(t, e) {
        if ("function" != typeof e)
          throw new TypeError(
            'The "listener" argument must be of type Function. Received type ' +
              typeof e
          );
        return this.prependListener(t, h(this, t, e)), this;
      }),
      (s.prototype.removeListener = function(t, e) {
        var n, r, i, o, a;
        if ("function" != typeof e)
          throw new TypeError(
            'The "listener" argument must be of type Function. Received type ' +
              typeof e
          );
        if (void 0 === (r = this._events)) return this;
        if (void 0 === (n = r[t])) return this;
        if (n === e || n.listener === e)
          0 == --this._eventsCount
            ? (this._events = Object.create(null))
            : (delete r[t],
              r.removeListener &&
                this.emit("removeListener", t, n.listener || e));
        else if ("function" != typeof n) {
          for (i = -1, o = n.length - 1; o >= 0; o--)
            if (n[o] === e || n[o].listener === e) {
              (a = n[o].listener), (i = o);
              break;
            }
          if (i < 0) return this;
          0 === i
            ? n.shift()
            : (function(t, e) {
                for (; e + 1 < t.length; e++) t[e] = t[e + 1];
                t.pop();
              })(n, i),
            1 === n.length && (r[t] = n[0]),
            void 0 !== r.removeListener &&
              this.emit("removeListener", t, a || e);
        }
        return this;
      }),
      (s.prototype.off = s.prototype.removeListener),
      (s.prototype.removeAllListeners = function(t) {
        var e, n, r;
        if (void 0 === (n = this._events)) return this;
        if (void 0 === n.removeListener)
          return (
            0 === arguments.length
              ? ((this._events = Object.create(null)), (this._eventsCount = 0))
              : void 0 !== n[t] &&
                (0 == --this._eventsCount
                  ? (this._events = Object.create(null))
                  : delete n[t]),
            this
          );
        if (0 === arguments.length) {
          var i,
            o = Object.keys(n);
          for (r = 0; r < o.length; ++r)
            "removeListener" !== (i = o[r]) && this.removeAllListeners(i);
          return (
            this.removeAllListeners("removeListener"),
            (this._events = Object.create(null)),
            (this._eventsCount = 0),
            this
          );
        }
        if ("function" == typeof (e = n[t])) this.removeListener(t, e);
        else if (void 0 !== e)
          for (r = e.length - 1; r >= 0; r--) this.removeListener(t, e[r]);
        return this;
      }),
      (s.prototype.listeners = function(t) {
        return f(this, t, !0);
      }),
      (s.prototype.rawListeners = function(t) {
        return f(this, t, !1);
      }),
      (s.listenerCount = function(t, e) {
        return "function" == typeof t.listenerCount
          ? t.listenerCount(e)
          : p.call(t, e);
      }),
      (s.prototype.listenerCount = p),
      (s.prototype.eventNames = function() {
        return this._eventsCount > 0 ? r(this._events) : [];
      });
  },
  function(t, e, n) {
    ((e = t.exports = n(60)).Stream = e),
      (e.Readable = e),
      (e.Writable = n(40)),
      (e.Duplex = n(14)),
      (e.Transform = n(63)),
      (e.PassThrough = n(114));
  },
  function(t, e, n) {
    "use strict";
    (function(e, r, i) {
      var o = n(27);
      function a(t) {
        var e = this;
        (this.next = null),
          (this.entry = null),
          (this.finish = function() {
            !(function(t, e, n) {
              var r = t.entry;
              t.entry = null;
              for (; r; ) {
                var i = r.callback;
                e.pendingcb--, i(n), (r = r.next);
              }
              e.corkedRequestsFree
                ? (e.corkedRequestsFree.next = t)
                : (e.corkedRequestsFree = t);
            })(e, t);
          });
      }
      t.exports = v;
      var s,
        u =
          !e.browser && ["v0.10", "v0.9."].indexOf(e.version.slice(0, 5)) > -1
            ? r
            : o.nextTick;
      v.WritableState = g;
      var c = n(21);
      c.inherits = n(1);
      var l = { deprecate: n(113) },
        h = n(61),
        f = n(2).Buffer,
        p = i.Uint8Array || function() {};
      var d,
        m = n(62);
      function y() {}
      function g(t, e) {
        (s = s || n(14)), (t = t || {});
        var r = e instanceof s;
        (this.objectMode = !!t.objectMode),
          r && (this.objectMode = this.objectMode || !!t.writableObjectMode);
        var i = t.highWaterMark,
          c = t.writableHighWaterMark,
          l = this.objectMode ? 16 : 16384;
        (this.highWaterMark = i || 0 === i ? i : r && (c || 0 === c) ? c : l),
          (this.highWaterMark = Math.floor(this.highWaterMark)),
          (this.finalCalled = !1),
          (this.needDrain = !1),
          (this.ending = !1),
          (this.ended = !1),
          (this.finished = !1),
          (this.destroyed = !1);
        var h = !1 === t.decodeStrings;
        (this.decodeStrings = !h),
          (this.defaultEncoding = t.defaultEncoding || "utf8"),
          (this.length = 0),
          (this.writing = !1),
          (this.corked = 0),
          (this.sync = !0),
          (this.bufferProcessing = !1),
          (this.onwrite = function(t) {
            !(function(t, e) {
              var n = t._writableState,
                r = n.sync,
                i = n.writecb;
              if (
                ((function(t) {
                  (t.writing = !1),
                    (t.writecb = null),
                    (t.length -= t.writelen),
                    (t.writelen = 0);
                })(n),
                e)
              )
                !(function(t, e, n, r, i) {
                  --e.pendingcb,
                    n
                      ? (o.nextTick(i, r),
                        o.nextTick(T, t, e),
                        (t._writableState.errorEmitted = !0),
                        t.emit("error", r))
                      : (i(r),
                        (t._writableState.errorEmitted = !0),
                        t.emit("error", r),
                        T(t, e));
                })(t, n, r, e, i);
              else {
                var a = S(n);
                a ||
                  n.corked ||
                  n.bufferProcessing ||
                  !n.bufferedRequest ||
                  _(t, n),
                  r ? u(w, t, n, a, i) : w(t, n, a, i);
              }
            })(e, t);
          }),
          (this.writecb = null),
          (this.writelen = 0),
          (this.bufferedRequest = null),
          (this.lastBufferedRequest = null),
          (this.pendingcb = 0),
          (this.prefinished = !1),
          (this.errorEmitted = !1),
          (this.bufferedRequestCount = 0),
          (this.corkedRequestsFree = new a(this));
      }
      function v(t) {
        if (((s = s || n(14)), !(d.call(v, this) || this instanceof s)))
          return new v(t);
        (this._writableState = new g(t, this)),
          (this.writable = !0),
          t &&
            ("function" == typeof t.write && (this._write = t.write),
            "function" == typeof t.writev && (this._writev = t.writev),
            "function" == typeof t.destroy && (this._destroy = t.destroy),
            "function" == typeof t.final && (this._final = t.final)),
          h.call(this);
      }
      function b(t, e, n, r, i, o, a) {
        (e.writelen = r),
          (e.writecb = a),
          (e.writing = !0),
          (e.sync = !0),
          n ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite),
          (e.sync = !1);
      }
      function w(t, e, n, r) {
        n ||
          (function(t, e) {
            0 === e.length &&
              e.needDrain &&
              ((e.needDrain = !1), t.emit("drain"));
          })(t, e),
          e.pendingcb--,
          r(),
          T(t, e);
      }
      function _(t, e) {
        e.bufferProcessing = !0;
        var n = e.bufferedRequest;
        if (t._writev && n && n.next) {
          var r = e.bufferedRequestCount,
            i = new Array(r),
            o = e.corkedRequestsFree;
          o.entry = n;
          for (var s = 0, u = !0; n; )
            (i[s] = n), n.isBuf || (u = !1), (n = n.next), (s += 1);
          (i.allBuffers = u),
            b(t, e, !0, e.length, i, "", o.finish),
            e.pendingcb++,
            (e.lastBufferedRequest = null),
            o.next
              ? ((e.corkedRequestsFree = o.next), (o.next = null))
              : (e.corkedRequestsFree = new a(e)),
            (e.bufferedRequestCount = 0);
        } else {
          for (; n; ) {
            var c = n.chunk,
              l = n.encoding,
              h = n.callback;
            if (
              (b(t, e, !1, e.objectMode ? 1 : c.length, c, l, h),
              (n = n.next),
              e.bufferedRequestCount--,
              e.writing)
            )
              break;
          }
          null === n && (e.lastBufferedRequest = null);
        }
        (e.bufferedRequest = n), (e.bufferProcessing = !1);
      }
      function S(t) {
        return (
          t.ending &&
          0 === t.length &&
          null === t.bufferedRequest &&
          !t.finished &&
          !t.writing
        );
      }
      function x(t, e) {
        t._final(function(n) {
          e.pendingcb--,
            n && t.emit("error", n),
            (e.prefinished = !0),
            t.emit("prefinish"),
            T(t, e);
        });
      }
      function T(t, e) {
        var n = S(e);
        return (
          n &&
            (!(function(t, e) {
              e.prefinished ||
                e.finalCalled ||
                ("function" == typeof t._final
                  ? (e.pendingcb++, (e.finalCalled = !0), o.nextTick(x, t, e))
                  : ((e.prefinished = !0), t.emit("prefinish")));
            })(t, e),
            0 === e.pendingcb && ((e.finished = !0), t.emit("finish"))),
          n
        );
      }
      c.inherits(v, h),
        (g.prototype.getBuffer = function() {
          for (var t = this.bufferedRequest, e = []; t; )
            e.push(t), (t = t.next);
          return e;
        }),
        (function() {
          try {
            Object.defineProperty(g.prototype, "buffer", {
              get: l.deprecate(
                function() {
                  return this.getBuffer();
                },
                "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                "DEP0003"
              )
            });
          } catch (t) {}
        })(),
        "function" == typeof Symbol &&
        Symbol.hasInstance &&
        "function" == typeof Function.prototype[Symbol.hasInstance]
          ? ((d = Function.prototype[Symbol.hasInstance]),
            Object.defineProperty(v, Symbol.hasInstance, {
              value: function(t) {
                return (
                  !!d.call(this, t) ||
                  (this === v && (t && t._writableState instanceof g))
                );
              }
            }))
          : (d = function(t) {
              return t instanceof this;
            }),
        (v.prototype.pipe = function() {
          this.emit("error", new Error("Cannot pipe, not readable"));
        }),
        (v.prototype.write = function(t, e, n) {
          var r,
            i = this._writableState,
            a = !1,
            s = !i.objectMode && ((r = t), f.isBuffer(r) || r instanceof p);
          return (
            s &&
              !f.isBuffer(t) &&
              (t = (function(t) {
                return f.from(t);
              })(t)),
            "function" == typeof e && ((n = e), (e = null)),
            s ? (e = "buffer") : e || (e = i.defaultEncoding),
            "function" != typeof n && (n = y),
            i.ended
              ? (function(t, e) {
                  var n = new Error("write after end");
                  t.emit("error", n), o.nextTick(e, n);
                })(this, n)
              : (s ||
                  (function(t, e, n, r) {
                    var i = !0,
                      a = !1;
                    return (
                      null === n
                        ? (a = new TypeError(
                            "May not write null values to stream"
                          ))
                        : "string" == typeof n ||
                          void 0 === n ||
                          e.objectMode ||
                          (a = new TypeError(
                            "Invalid non-string/buffer chunk"
                          )),
                      a && (t.emit("error", a), o.nextTick(r, a), (i = !1)),
                      i
                    );
                  })(this, i, t, n)) &&
                (i.pendingcb++,
                (a = (function(t, e, n, r, i, o) {
                  if (!n) {
                    var a = (function(t, e, n) {
                      t.objectMode ||
                        !1 === t.decodeStrings ||
                        "string" != typeof e ||
                        (e = f.from(e, n));
                      return e;
                    })(e, r, i);
                    r !== a && ((n = !0), (i = "buffer"), (r = a));
                  }
                  var s = e.objectMode ? 1 : r.length;
                  e.length += s;
                  var u = e.length < e.highWaterMark;
                  u || (e.needDrain = !0);
                  if (e.writing || e.corked) {
                    var c = e.lastBufferedRequest;
                    (e.lastBufferedRequest = {
                      chunk: r,
                      encoding: i,
                      isBuf: n,
                      callback: o,
                      next: null
                    }),
                      c
                        ? (c.next = e.lastBufferedRequest)
                        : (e.bufferedRequest = e.lastBufferedRequest),
                      (e.bufferedRequestCount += 1);
                  } else b(t, e, !1, s, r, i, o);
                  return u;
                })(this, i, s, t, e, n))),
            a
          );
        }),
        (v.prototype.cork = function() {
          this._writableState.corked++;
        }),
        (v.prototype.uncork = function() {
          var t = this._writableState;
          t.corked &&
            (t.corked--,
            t.writing ||
              t.corked ||
              t.finished ||
              t.bufferProcessing ||
              !t.bufferedRequest ||
              _(this, t));
        }),
        (v.prototype.setDefaultEncoding = function(t) {
          if (
            ("string" == typeof t && (t = t.toLowerCase()),
            !(
              [
                "hex",
                "utf8",
                "utf-8",
                "ascii",
                "binary",
                "base64",
                "ucs2",
                "ucs-2",
                "utf16le",
                "utf-16le",
                "raw"
              ].indexOf((t + "").toLowerCase()) > -1
            ))
          )
            throw new TypeError("Unknown encoding: " + t);
          return (this._writableState.defaultEncoding = t), this;
        }),
        Object.defineProperty(v.prototype, "writableHighWaterMark", {
          enumerable: !1,
          get: function() {
            return this._writableState.highWaterMark;
          }
        }),
        (v.prototype._write = function(t, e, n) {
          n(new Error("_write() is not implemented"));
        }),
        (v.prototype._writev = null),
        (v.prototype.end = function(t, e, n) {
          var r = this._writableState;
          "function" == typeof t
            ? ((n = t), (t = null), (e = null))
            : "function" == typeof e && ((n = e), (e = null)),
            null != t && this.write(t, e),
            r.corked && ((r.corked = 1), this.uncork()),
            r.ending ||
              r.finished ||
              (function(t, e, n) {
                (e.ending = !0),
                  T(t, e),
                  n && (e.finished ? o.nextTick(n) : t.once("finish", n));
                (e.ended = !0), (t.writable = !1);
              })(this, r, n);
        }),
        Object.defineProperty(v.prototype, "destroyed", {
          get: function() {
            return (
              void 0 !== this._writableState && this._writableState.destroyed
            );
          },
          set: function(t) {
            this._writableState && (this._writableState.destroyed = t);
          }
        }),
        (v.prototype.destroy = m.destroy),
        (v.prototype._undestroy = m.undestroy),
        (v.prototype._destroy = function(t, e) {
          this.end(), e(t);
        });
    }.call(this, n(11), n(57).setImmediate, n(5)));
  },
  function(t, e, n) {
    "use strict";
    var r = n(2).Buffer,
      i =
        r.isEncoding ||
        function(t) {
          switch ((t = "" + t) && t.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return !0;
            default:
              return !1;
          }
        };
    function o(t) {
      var e;
      switch (
        ((this.encoding = (function(t) {
          var e = (function(t) {
            if (!t) return "utf8";
            for (var e; ; )
              switch (t) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return t;
                default:
                  if (e) return;
                  (t = ("" + t).toLowerCase()), (e = !0);
              }
          })(t);
          if ("string" != typeof e && (r.isEncoding === i || !i(t)))
            throw new Error("Unknown encoding: " + t);
          return e || t;
        })(t)),
        this.encoding)
      ) {
        case "utf16le":
          (this.text = u), (this.end = c), (e = 4);
          break;
        case "utf8":
          (this.fillLast = s), (e = 4);
          break;
        case "base64":
          (this.text = l), (this.end = h), (e = 3);
          break;
        default:
          return (this.write = f), void (this.end = p);
      }
      (this.lastNeed = 0),
        (this.lastTotal = 0),
        (this.lastChar = r.allocUnsafe(e));
    }
    function a(t) {
      return t <= 127
        ? 0
        : t >> 5 == 6
        ? 2
        : t >> 4 == 14
        ? 3
        : t >> 3 == 30
        ? 4
        : t >> 6 == 2
        ? -1
        : -2;
    }
    function s(t) {
      var e = this.lastTotal - this.lastNeed,
        n = (function(t, e, n) {
          if (128 != (192 & e[0])) return (t.lastNeed = 0), "�";
          if (t.lastNeed > 1 && e.length > 1) {
            if (128 != (192 & e[1])) return (t.lastNeed = 1), "�";
            if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2]))
              return (t.lastNeed = 2), "�";
          }
        })(this, t);
      return void 0 !== n
        ? n
        : this.lastNeed <= t.length
        ? (t.copy(this.lastChar, e, 0, this.lastNeed),
          this.lastChar.toString(this.encoding, 0, this.lastTotal))
        : (t.copy(this.lastChar, e, 0, t.length),
          void (this.lastNeed -= t.length));
    }
    function u(t, e) {
      if ((t.length - e) % 2 == 0) {
        var n = t.toString("utf16le", e);
        if (n) {
          var r = n.charCodeAt(n.length - 1);
          if (r >= 55296 && r <= 56319)
            return (
              (this.lastNeed = 2),
              (this.lastTotal = 4),
              (this.lastChar[0] = t[t.length - 2]),
              (this.lastChar[1] = t[t.length - 1]),
              n.slice(0, -1)
            );
        }
        return n;
      }
      return (
        (this.lastNeed = 1),
        (this.lastTotal = 2),
        (this.lastChar[0] = t[t.length - 1]),
        t.toString("utf16le", e, t.length - 1)
      );
    }
    function c(t) {
      var e = t && t.length ? this.write(t) : "";
      if (this.lastNeed) {
        var n = this.lastTotal - this.lastNeed;
        return e + this.lastChar.toString("utf16le", 0, n);
      }
      return e;
    }
    function l(t, e) {
      var n = (t.length - e) % 3;
      return 0 === n
        ? t.toString("base64", e)
        : ((this.lastNeed = 3 - n),
          (this.lastTotal = 3),
          1 === n
            ? (this.lastChar[0] = t[t.length - 1])
            : ((this.lastChar[0] = t[t.length - 2]),
              (this.lastChar[1] = t[t.length - 1])),
          t.toString("base64", e, t.length - n));
    }
    function h(t) {
      var e = t && t.length ? this.write(t) : "";
      return this.lastNeed
        ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
        : e;
    }
    function f(t) {
      return t.toString(this.encoding);
    }
    function p(t) {
      return t && t.length ? this.write(t) : "";
    }
    (e.StringDecoder = o),
      (o.prototype.write = function(t) {
        if (0 === t.length) return "";
        var e, n;
        if (this.lastNeed) {
          if (void 0 === (e = this.fillLast(t))) return "";
          (n = this.lastNeed), (this.lastNeed = 0);
        } else n = 0;
        return n < t.length
          ? e
            ? e + this.text(t, n)
            : this.text(t, n)
          : e || "";
      }),
      (o.prototype.end = function(t) {
        var e = t && t.length ? this.write(t) : "";
        return this.lastNeed ? e + "�" : e;
      }),
      (o.prototype.text = function(t, e) {
        var n = (function(t, e, n) {
          var r = e.length - 1;
          if (r < n) return 0;
          var i = a(e[r]);
          if (i >= 0) return i > 0 && (t.lastNeed = i - 1), i;
          if (--r < n || -2 === i) return 0;
          if ((i = a(e[r])) >= 0) return i > 0 && (t.lastNeed = i - 2), i;
          if (--r < n || -2 === i) return 0;
          if ((i = a(e[r])) >= 0)
            return i > 0 && (2 === i ? (i = 0) : (t.lastNeed = i - 3)), i;
          return 0;
        })(this, t, e);
        if (!this.lastNeed) return t.toString("utf8", e);
        this.lastTotal = n;
        var r = t.length - (n - this.lastNeed);
        return t.copy(this.lastChar, 0, r), t.toString("utf8", e, r);
      }),
      (o.prototype.fillLast = function(t) {
        if (this.lastNeed <= t.length)
          return (
            t.copy(
              this.lastChar,
              this.lastTotal - this.lastNeed,
              0,
              this.lastNeed
            ),
            this.lastChar.toString(this.encoding, 0, this.lastTotal)
          );
        t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length),
          (this.lastNeed -= t.length);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(3).Buffer,
      i = n(1),
      o = n(59),
      a = new Array(16),
      s = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ],
      u = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ],
      c = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ],
      l = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ],
      h = [0, 1518500249, 1859775393, 2400959708, 2840853838],
      f = [1352829926, 1548603684, 1836072691, 2053994217, 0];
    function p() {
      o.call(this, 64),
        (this._a = 1732584193),
        (this._b = 4023233417),
        (this._c = 2562383102),
        (this._d = 271733878),
        (this._e = 3285377520);
    }
    function d(t, e) {
      return (t << e) | (t >>> (32 - e));
    }
    function m(t, e, n, r, i, o, a, s) {
      return (d((t + (e ^ n ^ r) + o + a) | 0, s) + i) | 0;
    }
    function y(t, e, n, r, i, o, a, s) {
      return (d((t + ((e & n) | (~e & r)) + o + a) | 0, s) + i) | 0;
    }
    function g(t, e, n, r, i, o, a, s) {
      return (d((t + ((e | ~n) ^ r) + o + a) | 0, s) + i) | 0;
    }
    function v(t, e, n, r, i, o, a, s) {
      return (d((t + ((e & r) | (n & ~r)) + o + a) | 0, s) + i) | 0;
    }
    function b(t, e, n, r, i, o, a, s) {
      return (d((t + (e ^ (n | ~r)) + o + a) | 0, s) + i) | 0;
    }
    i(p, o),
      (p.prototype._update = function() {
        for (var t = a, e = 0; e < 16; ++e)
          t[e] = this._block.readInt32LE(4 * e);
        for (
          var n = 0 | this._a,
            r = 0 | this._b,
            i = 0 | this._c,
            o = 0 | this._d,
            p = 0 | this._e,
            w = 0 | this._a,
            _ = 0 | this._b,
            S = 0 | this._c,
            x = 0 | this._d,
            T = 0 | this._e,
            A = 0;
          A < 80;
          A += 1
        ) {
          var k, E;
          A < 16
            ? ((k = m(n, r, i, o, p, t[s[A]], h[0], c[A])),
              (E = b(w, _, S, x, T, t[u[A]], f[0], l[A])))
            : A < 32
            ? ((k = y(n, r, i, o, p, t[s[A]], h[1], c[A])),
              (E = v(w, _, S, x, T, t[u[A]], f[1], l[A])))
            : A < 48
            ? ((k = g(n, r, i, o, p, t[s[A]], h[2], c[A])),
              (E = g(w, _, S, x, T, t[u[A]], f[2], l[A])))
            : A < 64
            ? ((k = v(n, r, i, o, p, t[s[A]], h[3], c[A])),
              (E = y(w, _, S, x, T, t[u[A]], f[3], l[A])))
            : ((k = b(n, r, i, o, p, t[s[A]], h[4], c[A])),
              (E = m(w, _, S, x, T, t[u[A]], f[4], l[A]))),
            (n = p),
            (p = o),
            (o = d(i, 10)),
            (i = r),
            (r = k),
            (w = T),
            (T = x),
            (x = d(S, 10)),
            (S = _),
            (_ = E);
        }
        var N = (this._b + i + x) | 0;
        (this._b = (this._c + o + T) | 0),
          (this._c = (this._d + p + w) | 0),
          (this._d = (this._e + n + _) | 0),
          (this._e = (this._a + r + S) | 0),
          (this._a = N);
      }),
      (p.prototype._digest = function() {
        (this._block[this._blockOffset++] = 128),
          this._blockOffset > 56 &&
            (this._block.fill(0, this._blockOffset, 64),
            this._update(),
            (this._blockOffset = 0)),
          this._block.fill(0, this._blockOffset, 56),
          this._block.writeUInt32LE(this._length[0], 56),
          this._block.writeUInt32LE(this._length[1], 60),
          this._update();
        var t = r.alloc ? r.alloc(20) : new r(20);
        return (
          t.writeInt32LE(this._a, 0),
          t.writeInt32LE(this._b, 4),
          t.writeInt32LE(this._c, 8),
          t.writeInt32LE(this._d, 12),
          t.writeInt32LE(this._e, 16),
          t
        );
      }),
      (t.exports = p);
  },
  function(t, e, n) {
    ((e = t.exports = function(t) {
      t = t.toLowerCase();
      var n = e[t];
      if (!n)
        throw new Error(t + " is not supported (we accept pull requests)");
      return new n();
    }).sha = n(119)),
      (e.sha1 = n(120)),
      (e.sha224 = n(121)),
      (e.sha256 = n(64)),
      (e.sha384 = n(122)),
      (e.sha512 = n(65));
  },
  function(t, e, n) {
    "use strict";
    (e.utils = n(128)),
      (e.Cipher = n(129)),
      (e.DES = n(130)),
      (e.CBC = n(131)),
      (e.EDE = n(132));
  },
  function(t, e, n) {
    var r = n(133),
      i = n(141),
      o = n(75);
    (e.createCipher = e.Cipher = r.createCipher),
      (e.createCipheriv = e.Cipheriv = r.createCipheriv),
      (e.createDecipher = e.Decipher = i.createDecipher),
      (e.createDecipheriv = e.Decipheriv = i.createDecipheriv),
      (e.listCiphers = e.getCiphers = function() {
        return Object.keys(o);
      });
  },
  function(t, e, n) {
    var r = {
        ECB: n(134),
        CBC: n(135),
        CFB: n(136),
        CFB8: n(137),
        CFB1: n(138),
        OFB: n(139),
        CTR: n(73),
        GCM: n(73)
      },
      i = n(75);
    for (var o in i) i[o].module = r[i[o].mode];
    t.exports = i;
  },
  function(t, e, n) {
    (function(e) {
      var r = n(4),
        i = n(17);
      function o(t, n) {
        var i = (function(t) {
            var e = a(t);
            return {
              blinder: e
                .toRed(r.mont(t.modulus))
                .redPow(new r(t.publicExponent))
                .fromRed(),
              unblinder: e.invm(t.modulus)
            };
          })(n),
          o = n.modulus.byteLength(),
          s = (r.mont(n.modulus), new r(t).mul(i.blinder).umod(n.modulus)),
          u = s.toRed(r.mont(n.prime1)),
          c = s.toRed(r.mont(n.prime2)),
          l = n.coefficient,
          h = n.prime1,
          f = n.prime2,
          p = u.redPow(n.exponent1),
          d = c.redPow(n.exponent2);
        (p = p.fromRed()), (d = d.fromRed());
        var m = p
          .isub(d)
          .imul(l)
          .umod(h);
        return (
          m.imul(f),
          d.iadd(m),
          new e(
            d
              .imul(i.unblinder)
              .umod(n.modulus)
              .toArray(!1, o)
          )
        );
      }
      function a(t) {
        for (
          var e = t.modulus.byteLength(), n = new r(i(e));
          n.cmp(t.modulus) >= 0 || !n.umod(t.prime1) || !n.umod(t.prime2);

        )
          n = new r(i(e));
        return n;
      }
      (t.exports = o), (o.getr = a);
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    var r = e;
    (r.utils = n(10)),
      (r.common = n(23)),
      (r.sha = n(157)),
      (r.ripemd = n(161)),
      (r.hmac = n(162)),
      (r.sha1 = r.sha.sha1),
      (r.sha256 = r.sha.sha256),
      (r.sha224 = r.sha.sha224),
      (r.sha384 = r.sha.sha384),
      (r.sha512 = r.sha.sha512),
      (r.ripemd160 = r.ripemd.ripemd160);
  },
  function(t, e, n) {
    "use strict";
    function r(t) {
      for (var n in t) e.hasOwnProperty(n) || (e[n] = t[n]);
    }
    Object.defineProperty(e, "__esModule", { value: !0 });
    var i = n(94);
    e.aux_inputs = i;
    var o = n(50);
    e.chords = o;
    var a = n(9);
    e.constants = a;
    var s = n(32);
    e.data = s;
    var u = n(16);
    e.logging = u;
    var c = n(97);
    e.performance = c;
    var l = n(26);
    (e.sequences = l), r(n(210)), r(n(211)), r(n(213)), r(n(214));
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o,
      a = n(7),
      s = n(249),
      u = n(9),
      c = [
        ["1P", "3M", "5P"],
        ["1P", "3m", "5P"],
        ["1P", "3M", "5A"],
        ["1P", "3m", "5d"]
      ];
    !(function(t) {
      (t[(t.Major = 0)] = "Major"),
        (t[(t.Minor = 1)] = "Minor"),
        (t[(t.Augmented = 2)] = "Augmented"),
        (t[(t.Diminished = 3)] = "Diminished"),
        (t[(t.Other = 4)] = "Other");
    })((o = e.ChordQuality || (e.ChordQuality = {})));
    var l = (function(t) {
      function e(e) {
        var n = this.constructor,
          r = t.call(this, e) || this;
        return Object.setPrototypeOf(r, n.prototype), r;
      }
      return i(e, t), e;
    })(Error);
    e.ChordSymbolException = l;
    var h = (function(t) {
      function e(e) {
        var n = this.constructor,
          r = t.call(this, e) || this;
        return Object.setPrototypeOf(r, n.prototype), r;
      }
      return i(e, t), e;
    })(Error);
    e.ChordEncodingException = h;
    var f = (function() {
      function t() {}
      return (
        (t.pitches = function(t) {
          if (!s.Chord.tokenize(t)[0] || !s.Chord.exists(t))
            throw new l("Unrecognized chord symbol: " + t);
          return s.Chord.notes(t).map(s.Note.chroma);
        }),
        (t.root = function(t) {
          var e = s.Chord.tokenize(t)[0];
          if (!e) throw new l("Chord symbol has unknown root: " + t);
          return s.Note.chroma(e);
        }),
        (t.quality = function(t) {
          if (!s.Chord.exists(t))
            throw new l("Unrecognized chord symbol: " + t);
          var e = s.Chord.intervals(t),
            n = c.map(function(t) {
              return t.every(function(t) {
                return e.includes(t);
              });
            }),
            r = n.indexOf(!0),
            i = n.lastIndexOf(!0);
          return r >= 0 && r === i ? r : o.Other;
        }),
        t
      );
    })();
    e.ChordSymbols = f;
    var p = (function() {
      function t() {}
      return (
        (t.prototype.encodeProgression = function(t, e) {
          var n = this,
            r = t.map(function(t) {
              return n.encode(t);
            }),
            i = Array.from(Array(e).keys()).map(function(t) {
              return Math.floor((t * r.length) / e);
            });
          return a.stack(
            i.map(function(t) {
              return r[t];
            })
          );
        }),
        t
      );
    })();
    (e.ChordEncoder = p),
      (e.chordEncoderFromType = function(t) {
        switch (t) {
          case "MajorMinorChordEncoder":
            return new d();
          case "TriadChordEncoder":
            return new m();
          case "PitchChordEncoder":
            return new y();
          default:
            throw new Error("Unknown chord encoder type: " + t);
        }
      });
    var d = (function(t) {
      function e() {
        var e = (null !== t && t.apply(this, arguments)) || this;
        return (e.depth = 1 + 2 * u.NUM_PITCH_CLASSES), e;
      }
      return (
        i(e, t),
        (e.prototype.index = function(t) {
          if (t === u.NO_CHORD) return 0;
          var e = f.root(t),
            n = 1 + f.quality(t) * u.NUM_PITCH_CLASSES + e;
          if (n >= this.depth)
            throw new h("Chord is neither major nor minor: " + t);
          return n;
        }),
        (e.prototype.encode = function(t) {
          var e = this;
          return a.tidy(function() {
            return a.oneHot(a.tensor1d([e.index(t)], "int32"), e.depth).as1D();
          });
        }),
        e
      );
    })(p);
    e.MajorMinorChordEncoder = d;
    var m = (function(t) {
      function e() {
        var e = (null !== t && t.apply(this, arguments)) || this;
        return (e.depth = 1 + 4 * u.NUM_PITCH_CLASSES), e;
      }
      return (
        i(e, t),
        (e.prototype.index = function(t) {
          if (t === u.NO_CHORD) return 0;
          var e = f.root(t),
            n = 1 + f.quality(t) * u.NUM_PITCH_CLASSES + e;
          if (n >= this.depth)
            throw new h("Chord is not a standard triad: " + t);
          return n;
        }),
        (e.prototype.encode = function(t) {
          var e = this;
          return a.tidy(function() {
            return a.oneHot(a.tensor1d([e.index(t)], "int32"), e.depth).as1D();
          });
        }),
        e
      );
    })(p);
    e.TriadChordEncoder = m;
    var y = (function(t) {
      function e() {
        var e = (null !== t && t.apply(this, arguments)) || this;
        return (e.depth = 1 + 3 * u.NUM_PITCH_CLASSES), e;
      }
      return (
        i(e, t),
        (e.prototype.encode = function(t) {
          var e = this;
          return a.tidy(function() {
            if (t === u.NO_CHORD)
              return a.oneHot(a.tensor1d([0], "int32"), e.depth).as1D();
            var n = f.root(t),
              r = a
                .oneHot(a.tensor1d([n], "int32"), u.NUM_PITCH_CLASSES)
                .as1D(),
              i = a.buffer([u.NUM_PITCH_CLASSES]);
            f.pitches(t).forEach(function(t) {
              return i.set(1, t);
            });
            var o = i.toTensor().as1D(),
              s = r;
            return a.concat1d([a.tensor1d([0]), r, o, s]);
          });
        }),
        e
      );
    })(p);
    e.PitchChordEncoder = y;
  },
  function(t, e, n) {
    var r;
    void 0 ===
      (r = function() {
        return (function() {
          "use strict";
          var t, e;
          function n(e) {
            e(t);
          }
          /**
           *  Tone.js
           *  @author Yotam Mann
           *  @license http://opensource.org/licenses/MIT MIT License
           *  @copyright 2014-2018 Yotam Mann
           */ return (
            (e = function() {
              var t = function() {
                if (!(this instanceof t))
                  throw new Error(
                    "constructor needs to be called with the 'new' keyword"
                  );
              };
              (t.prototype.toString = function() {
                for (var e in t) {
                  var n = e[0].match(/^[A-Z]$/),
                    r = t[e] === this.constructor;
                  if (t.isFunction(t[e]) && n && r) return e;
                }
                return "Tone";
              }),
                (t.prototype.dispose = function() {
                  return this;
                }),
                (t.prototype.set = function(e, n, r) {
                  if (t.isObject(e)) r = n;
                  else if (t.isString(e)) {
                    var i = {};
                    (i[e] = n), (e = i);
                  }
                  t: for (var o in e) {
                    n = e[o];
                    var a = this;
                    if (-1 !== o.indexOf(".")) {
                      for (var s = o.split("."), u = 0; u < s.length - 1; u++)
                        if ((a = a[s[u]]) instanceof t) {
                          s.splice(0, u + 1);
                          var c = s.join(".");
                          a.set(c, n);
                          continue t;
                        }
                      o = s[s.length - 1];
                    }
                    var l = a[o];
                    t.isUndef(l) ||
                      ((t.Signal && l instanceof t.Signal) ||
                      (t.Param && l instanceof t.Param)
                        ? l.value !== n &&
                          (t.isUndef(r) ? (l.value = n) : l.rampTo(n, r))
                        : l instanceof AudioParam
                        ? l.value !== n && (l.value = n)
                        : t.TimeBase && l instanceof t.TimeBase
                        ? (a[o] = n)
                        : l instanceof t
                        ? l.set(n)
                        : l !== n && (a[o] = n));
                  }
                  return this;
                }),
                (t.prototype.get = function(e) {
                  t.isUndef(e)
                    ? (e = this._collectDefaults(this.constructor))
                    : t.isString(e) && (e = [e]);
                  for (var n = {}, r = 0; r < e.length; r++) {
                    var i = e[r],
                      o = this,
                      a = n;
                    if (-1 !== i.indexOf(".")) {
                      for (var s = i.split("."), u = 0; u < s.length - 1; u++) {
                        var c = s[u];
                        (a[c] = a[c] || {}), (a = a[c]), (o = o[c]);
                      }
                      i = s[s.length - 1];
                    }
                    var l = o[i];
                    t.isObject(e[i])
                      ? (a[i] = l.get())
                      : t.Signal && l instanceof t.Signal
                      ? (a[i] = l.value)
                      : t.Param && l instanceof t.Param
                      ? (a[i] = l.value)
                      : l instanceof AudioParam
                      ? (a[i] = l.value)
                      : l instanceof t
                      ? (a[i] = l.get())
                      : !t.isFunction(l) && t.isDefined(l) && (a[i] = l);
                  }
                  return n;
                }),
                (t.prototype._collectDefaults = function(e) {
                  var n = [];
                  if (
                    (t.isDefined(e.defaults) && (n = Object.keys(e.defaults)),
                    t.isDefined(e._super))
                  )
                    for (
                      var r = this._collectDefaults(e._super), i = 0;
                      i < r.length;
                      i++
                    )
                      -1 === n.indexOf(r[i]) && n.push(r[i]);
                  return n;
                }),
                (t.defaults = function(e, n, r) {
                  var i = {};
                  if (1 === e.length && t.isObject(e[0])) i = e[0];
                  else for (var o = 0; o < n.length; o++) i[n[o]] = e[o];
                  return t.isDefined(r.defaults)
                    ? t.defaultArg(i, r.defaults)
                    : t.isObject(r)
                    ? t.defaultArg(i, r)
                    : i;
                }),
                (t.defaultArg = function(e, n) {
                  if (t.isObject(e) && t.isObject(n)) {
                    var r = {};
                    for (var i in e) r[i] = t.defaultArg(n[i], e[i]);
                    for (var o in n) r[o] = t.defaultArg(e[o], n[o]);
                    return r;
                  }
                  return t.isUndef(e) ? n : e;
                }),
                (t.connectSeries = function() {
                  for (var e = arguments[0], n = 1; n < arguments.length; n++) {
                    var r = arguments[n];
                    e.connect(r), (e = r);
                  }
                  return t;
                }),
                (t.isUndef = function(t) {
                  return void 0 === t;
                }),
                (t.isDefined = function(e) {
                  return !t.isUndef(e);
                }),
                (t.isFunction = function(t) {
                  return "function" == typeof t;
                }),
                (t.isNumber = function(t) {
                  return "number" == typeof t;
                }),
                (t.isObject = function(t) {
                  return (
                    "[object Object]" === Object.prototype.toString.call(t) &&
                    t.constructor === Object
                  );
                }),
                (t.isBoolean = function(t) {
                  return "boolean" == typeof t;
                }),
                (t.isArray = function(t) {
                  return Array.isArray(t);
                }),
                (t.isString = function(t) {
                  return "string" == typeof t;
                }),
                (t.isNote = function(e) {
                  return (
                    t.isString(e) &&
                    /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(e)
                  );
                }),
                (t.noOp = function() {}),
                (t.prototype._readOnly = function(t) {
                  if (Array.isArray(t))
                    for (var e = 0; e < t.length; e++) this._readOnly(t[e]);
                  else
                    Object.defineProperty(this, t, {
                      writable: !1,
                      enumerable: !0
                    });
                }),
                (t.prototype._writable = function(t) {
                  if (Array.isArray(t))
                    for (var e = 0; e < t.length; e++) this._writable(t[e]);
                  else Object.defineProperty(this, t, { writable: !0 });
                }),
                (t.State = {
                  Started: "started",
                  Stopped: "stopped",
                  Paused: "paused"
                }),
                (t.equalPowerScale = function(t) {
                  var e = 0.5 * Math.PI;
                  return Math.sin(t * e);
                }),
                (t.dbToGain = function(t) {
                  return Math.pow(10, t / 20);
                }),
                (t.gainToDb = function(t) {
                  return (Math.log(t) / Math.LN10) * 20;
                }),
                (t.intervalToFrequencyRatio = function(t) {
                  return Math.pow(2, t / 12);
                }),
                (t.prototype.now = function() {
                  return t.context.now();
                }),
                (t.now = function() {
                  return t.context.now();
                }),
                (t.extend = function(e, n) {
                  function r() {}
                  t.isUndef(n) && (n = t),
                    (r.prototype = n.prototype),
                    (e.prototype = new r()),
                    (e.prototype.constructor = e),
                    (e._super = n);
                });
              var e = null;
              return (
                Object.defineProperty(t, "context", {
                  get: function() {
                    return e;
                  },
                  set: function(n) {
                    (e =
                      t.Context && n instanceof t.Context
                        ? n
                        : new t.Context(n)),
                      t.Context.emit("init", e);
                  }
                }),
                Object.defineProperty(t.prototype, "context", {
                  get: function() {
                    return t.context;
                  }
                }),
                (t.setContext = function(e) {
                  t.context = e;
                }),
                Object.defineProperty(t.prototype, "blockTime", {
                  get: function() {
                    return 128 / this.context.sampleRate;
                  }
                }),
                Object.defineProperty(t.prototype, "sampleTime", {
                  get: function() {
                    return 1 / this.context.sampleRate;
                  }
                }),
                Object.defineProperty(t, "supported", {
                  get: function() {
                    var t =
                        window.hasOwnProperty("AudioContext") ||
                        window.hasOwnProperty("webkitAudioContext"),
                      e = window.hasOwnProperty("Promise"),
                      n = window.hasOwnProperty("Worker");
                    return t && e && n;
                  }
                }),
                Object.defineProperty(t, "initialized", {
                  get: function() {
                    return null !== e;
                  }
                }),
                (t.getContext = function(e) {
                  if (t.initialized) e(t.context);
                  else {
                    var n = function() {
                      e(t.context), t.Context.off("init", n);
                    };
                    t.Context.on("init", n);
                  }
                  return t;
                }),
                (t.version = "r12"),
                t
              );
            }),
            (t = e()),
            n(function(t) {
              return (
                (t.Emitter = function() {
                  t.call(this), (this._events = {});
                }),
                t.extend(t.Emitter),
                (t.Emitter.prototype.on = function(t, e) {
                  for (var n = t.split(/\W+/), r = 0; r < n.length; r++) {
                    var i = n[r];
                    this._events.hasOwnProperty(i) || (this._events[i] = []),
                      this._events[i].push(e);
                  }
                  return this;
                }),
                (t.Emitter.prototype.once = function(t, e) {
                  var n = function() {
                    e.apply(this, arguments), this.off(t, n);
                  }.bind(this);
                  return this.on(t, n), this;
                }),
                (t.Emitter.prototype.off = function(e, n) {
                  for (var r = e.split(/\W+/), i = 0; i < r.length; i++)
                    if (((e = r[i]), this._events.hasOwnProperty(e)))
                      if (t.isUndef(n)) this._events[e] = [];
                      else
                        for (var o = this._events[e], a = 0; a < o.length; a++)
                          o[a] === n && o.splice(a, 1);
                  return this;
                }),
                (t.Emitter.prototype.emit = function(t) {
                  if (this._events) {
                    var e = Array.apply(null, arguments).slice(1);
                    if (this._events.hasOwnProperty(t))
                      for (
                        var n = this._events[t].slice(0), r = 0, i = n.length;
                        r < i;
                        r++
                      )
                        n[r].apply(this, e);
                  }
                  return this;
                }),
                (t.Emitter.mixin = function(e) {
                  var n = ["on", "once", "off", "emit"];
                  e._events = {};
                  for (var r = 0; r < n.length; r++) {
                    var i = n[r],
                      o = t.Emitter.prototype[i];
                    e[i] = o;
                  }
                  return t.Emitter;
                }),
                (t.Emitter.prototype.dispose = function() {
                  return (
                    t.prototype.dispose.call(this), (this._events = null), this
                  );
                }),
                t.Emitter
              );
            }),
            n(function(t) {
              return (
                (t.Timeline = function() {
                  var e = t.defaults(arguments, ["memory"], t.Timeline);
                  t.call(this), (this._timeline = []), (this.memory = e.memory);
                }),
                t.extend(t.Timeline),
                (t.Timeline.defaults = { memory: 1 / 0 }),
                Object.defineProperty(t.Timeline.prototype, "length", {
                  get: function() {
                    return this._timeline.length;
                  }
                }),
                (t.Timeline.prototype.add = function(e) {
                  if (t.isUndef(e.time))
                    throw new Error(
                      "Tone.Timeline: events must have a time attribute"
                    );
                  e.time = e.time.valueOf();
                  var n = this._search(e.time);
                  if (
                    (this._timeline.splice(n + 1, 0, e),
                    this.length > this.memory)
                  ) {
                    var r = this.length - this.memory;
                    this._timeline.splice(0, r);
                  }
                  return this;
                }),
                (t.Timeline.prototype.remove = function(t) {
                  var e = this._timeline.indexOf(t);
                  return -1 !== e && this._timeline.splice(e, 1), this;
                }),
                (t.Timeline.prototype.get = function(e, n) {
                  n = t.defaultArg(n, "time");
                  var r = this._search(e, n);
                  return -1 !== r ? this._timeline[r] : null;
                }),
                (t.Timeline.prototype.peek = function() {
                  return this._timeline[0];
                }),
                (t.Timeline.prototype.shift = function() {
                  return this._timeline.shift();
                }),
                (t.Timeline.prototype.getAfter = function(e, n) {
                  n = t.defaultArg(n, "time");
                  var r = this._search(e, n);
                  return r + 1 < this._timeline.length
                    ? this._timeline[r + 1]
                    : null;
                }),
                (t.Timeline.prototype.getBefore = function(e, n) {
                  n = t.defaultArg(n, "time");
                  var r = this._timeline.length;
                  if (r > 0 && this._timeline[r - 1][n] < e)
                    return this._timeline[r - 1];
                  var i = this._search(e, n);
                  return i - 1 >= 0 ? this._timeline[i - 1] : null;
                }),
                (t.Timeline.prototype.cancel = function(t) {
                  if (this._timeline.length > 1) {
                    var e = this._search(t);
                    if (e >= 0)
                      if (this._timeline[e].time === t) {
                        for (
                          var n = e;
                          n >= 0 && this._timeline[n].time === t;
                          n--
                        )
                          e = n;
                        this._timeline = this._timeline.slice(0, e);
                      } else this._timeline = this._timeline.slice(0, e + 1);
                    else this._timeline = [];
                  } else
                    1 === this._timeline.length &&
                      this._timeline[0].time >= t &&
                      (this._timeline = []);
                  return this;
                }),
                (t.Timeline.prototype.cancelBefore = function(t) {
                  var e = this._search(t);
                  return (
                    e >= 0 && (this._timeline = this._timeline.slice(e + 1)),
                    this
                  );
                }),
                (t.Timeline.prototype.previousEvent = function(t) {
                  var e = this._timeline.indexOf(t);
                  return e > 0 ? this._timeline[e - 1] : null;
                }),
                (t.Timeline.prototype._search = function(e, n) {
                  if (0 === this._timeline.length) return -1;
                  n = t.defaultArg(n, "time");
                  var r = 0,
                    i = this._timeline.length,
                    o = i;
                  if (i > 0 && this._timeline[i - 1][n] <= e) return i - 1;
                  for (; r < o; ) {
                    var a = Math.floor(r + (o - r) / 2),
                      s = this._timeline[a],
                      u = this._timeline[a + 1];
                    if (s[n] === e) {
                      for (var c = a; c < this._timeline.length; c++)
                        this._timeline[c][n] === e && (a = c);
                      return a;
                    }
                    if (s[n] < e && u[n] > e) return a;
                    s[n] > e ? (o = a) : (r = a + 1);
                  }
                  return -1;
                }),
                (t.Timeline.prototype._iterate = function(e, n, r) {
                  (n = t.defaultArg(n, 0)),
                    (r = t.defaultArg(r, this._timeline.length - 1)),
                    this._timeline.slice(n, r + 1).forEach(
                      function(t) {
                        e.call(this, t);
                      }.bind(this)
                    );
                }),
                (t.Timeline.prototype.forEach = function(t) {
                  return this._iterate(t), this;
                }),
                (t.Timeline.prototype.forEachBefore = function(t, e) {
                  var n = this._search(t);
                  return -1 !== n && this._iterate(e, 0, n), this;
                }),
                (t.Timeline.prototype.forEachAfter = function(t, e) {
                  var n = this._search(t);
                  return this._iterate(e, n + 1), this;
                }),
                (t.Timeline.prototype.forEachBetween = function(t, e, n) {
                  var r = this._search(t),
                    i = this._search(e);
                  return (
                    -1 !== r && -1 !== i
                      ? (this._timeline[r].time !== t && (r += 1),
                        this._timeline[i].time === e && (i -= 1),
                        this._iterate(n, r, i))
                      : -1 === r && this._iterate(n, 0, i),
                    this
                  );
                }),
                (t.Timeline.prototype.forEachFrom = function(t, e) {
                  for (
                    var n = this._search(t);
                    n >= 0 && this._timeline[n].time >= t;

                  )
                    n--;
                  return this._iterate(e, n + 1), this;
                }),
                (t.Timeline.prototype.forEachAtTime = function(t, e) {
                  var n = this._search(t);
                  return (
                    -1 !== n &&
                      this._iterate(
                        function(n) {
                          n.time === t && e.call(this, n);
                        },
                        0,
                        n
                      ),
                    this
                  );
                }),
                (t.Timeline.prototype.dispose = function() {
                  return (
                    t.prototype.dispose.call(this),
                    (this._timeline = null),
                    this
                  );
                }),
                t.Timeline
              );
            }),
            n(function(t) {
              t.supported &&
                (!window.hasOwnProperty("OfflineAudioContext") &&
                  window.hasOwnProperty("webkitOfflineAudioContext") &&
                  (window.OfflineAudioContext =
                    window.webkitOfflineAudioContext),
                new OfflineAudioContext(1, 1, 44100).startRendering() instanceof
                  Promise ||
                  ((OfflineAudioContext.prototype._native_startRendering =
                    OfflineAudioContext.prototype.startRendering),
                  (OfflineAudioContext.prototype.startRendering = function() {
                    return new Promise(
                      function(t) {
                        (this.oncomplete = function(e) {
                          t(e.renderedBuffer);
                        }),
                          this._native_startRendering();
                      }.bind(this)
                    );
                  })));
            }),
            n(function(t) {
              if (t.supported) {
                !window.hasOwnProperty("AudioContext") &&
                  window.hasOwnProperty("webkitAudioContext") &&
                  (window.AudioContext = window.webkitAudioContext),
                  AudioContext.prototype.close ||
                    (AudioContext.prototype.close = function() {
                      return (
                        t.isFunction(this.suspend) && this.suspend(),
                        Promise.resolve()
                      );
                    }),
                  AudioContext.prototype.resume ||
                    (AudioContext.prototype.resume = function() {
                      return Promise.resolve();
                    }),
                  !AudioContext.prototype.createGain &&
                    AudioContext.prototype.createGainNode &&
                    (AudioContext.prototype.createGain =
                      AudioContext.prototype.createGainNode),
                  !AudioContext.prototype.createDelay &&
                    AudioContext.prototype.createDelayNode &&
                    (AudioContext.prototype.createDelay =
                      AudioContext.prototype.createDelayNode);
                var e = !1,
                  n = new OfflineAudioContext(1, 1, 44100),
                  r = new Uint32Array([
                    1179011410,
                    48,
                    1163280727,
                    544501094,
                    16,
                    131073,
                    44100,
                    176400,
                    1048580,
                    1635017060,
                    8,
                    0,
                    0,
                    0,
                    0
                  ]).buffer;
                try {
                  n.decodeAudioData(r) instanceof Promise && (e = !0);
                } catch (t) {
                  e = !1;
                }
                e ||
                  ((AudioContext.prototype._native_decodeAudioData =
                    AudioContext.prototype.decodeAudioData),
                  (AudioContext.prototype.decodeAudioData = function(t) {
                    return new Promise(
                      function(e, n) {
                        this._native_decodeAudioData(t, e, n);
                      }.bind(this)
                    );
                  }));
              }
            }),
            n(function(t) {
              (t.Context = function() {
                t.Emitter.call(this);
                var n = t.defaults(arguments, ["context"], t.Context);
                if (
                  !n.context &&
                  ((n.context = new window.AudioContext()), !n.context)
                )
                  throw new Error(
                    "could not create AudioContext. Possibly too many AudioContexts running already."
                  );
                for (var r in ((this._context = n.context), this._context))
                  this._defineProperty(this._context, r);
                (this._latencyHint = n.latencyHint),
                  (this._constants = {}),
                  (this.lookAhead = n.lookAhead),
                  (this._computedUpdateInterval = 0),
                  (this._ticker = new e(
                    this.emit.bind(this, "tick"),
                    n.clockSource,
                    n.updateInterval
                  )),
                  (this._timeouts = new t.Timeline()),
                  (this._timeoutIds = 0),
                  this.on("tick", this._timeoutLoop.bind(this));
              }),
                t.extend(t.Context, t.Emitter),
                t.Emitter.mixin(t.Context),
                (t.Context.defaults = {
                  clockSource: "worker",
                  latencyHint: "interactive",
                  lookAhead: 0.1,
                  updateInterval: 0.03
                }),
                (t.Context.prototype._defineProperty = function(e, n) {
                  t.isUndef(this[n]) &&
                    Object.defineProperty(this, n, {
                      get: function() {
                        return "function" == typeof e[n] ? e[n].bind(e) : e[n];
                      },
                      set: function(t) {
                        e[n] = t;
                      }
                    });
                }),
                (t.Context.prototype.now = function() {
                  return this._context.currentTime + this.lookAhead;
                }),
                (t.Context.prototype.ready = function() {
                  return new Promise(
                    function(t) {
                      "running" === this._context.state
                        ? t()
                        : this._context.resume().then(function() {
                            t();
                          });
                    }.bind(this)
                  );
                }),
                (t.Context.prototype.close = function() {
                  return this._context.close().then(
                    function() {
                      t.Context.emit("close", this);
                    }.bind(this)
                  );
                }),
                (t.Context.prototype.getConstant = function(t) {
                  if (this._constants[t]) return this._constants[t];
                  for (
                    var e = this._context.createBuffer(
                        1,
                        128,
                        this._context.sampleRate
                      ),
                      n = e.getChannelData(0),
                      r = 0;
                    r < n.length;
                    r++
                  )
                    n[r] = t;
                  var i = this._context.createBufferSource();
                  return (
                    (i.channelCount = 1),
                    (i.channelCountMode = "explicit"),
                    (i.buffer = e),
                    (i.loop = !0),
                    i.start(0),
                    (this._constants[t] = i),
                    i
                  );
                }),
                (t.Context.prototype._timeoutLoop = function() {
                  for (
                    var t = this.now();
                    this._timeouts &&
                    this._timeouts.length &&
                    this._timeouts.peek().time <= t;

                  )
                    this._timeouts.shift().callback();
                }),
                (t.Context.prototype.setTimeout = function(t, e) {
                  this._timeoutIds++;
                  var n = this.now();
                  return (
                    this._timeouts.add({
                      callback: t,
                      time: n + e,
                      id: this._timeoutIds
                    }),
                    this._timeoutIds
                  );
                }),
                (t.Context.prototype.clearTimeout = function(t) {
                  return (
                    this._timeouts.forEach(function(e) {
                      e.id === t && this.remove(e);
                    }),
                    this
                  );
                }),
                Object.defineProperty(t.Context.prototype, "updateInterval", {
                  get: function() {
                    return this._ticker.updateInterval;
                  },
                  set: function(t) {
                    this._ticker.updateInterval = t;
                  }
                }),
                Object.defineProperty(t.Context.prototype, "clockSource", {
                  get: function() {
                    return this._ticker.type;
                  },
                  set: function(t) {
                    this._ticker.type = t;
                  }
                }),
                Object.defineProperty(t.Context.prototype, "latencyHint", {
                  get: function() {
                    return this._latencyHint;
                  },
                  set: function(e) {
                    var n = e;
                    if (((this._latencyHint = e), t.isString(e)))
                      switch (e) {
                        case "interactive":
                          (n = 0.1), (this._context.latencyHint = e);
                          break;
                        case "playback":
                          (n = 0.8), (this._context.latencyHint = e);
                          break;
                        case "balanced":
                          (n = 0.25), (this._context.latencyHint = e);
                          break;
                        case "fastest":
                          (this._context.latencyHint = "interactive"),
                            (n = 0.01);
                      }
                    (this.lookAhead = n), (this.updateInterval = n / 3);
                  }
                }),
                (t.Context.prototype.dispose = function() {
                  return this.close().then(
                    function() {
                      for (var e in (t.Emitter.prototype.dispose.call(this),
                      this._ticker.dispose(),
                      (this._ticker = null),
                      this._timeouts.dispose(),
                      (this._timeouts = null),
                      this._constants))
                        this._constants[e].disconnect();
                      this._constants = null;
                    }.bind(this)
                  );
                });
              var e = function(e, n, r) {
                (this._type = n),
                  (this._updateInterval = r),
                  (this._callback = t.defaultArg(e, t.noOp)),
                  this._createClock();
              };
              return (
                (e.Type = {
                  Worker: "worker",
                  Timeout: "timeout",
                  Offline: "offline"
                }),
                (e.prototype._createWorker = function() {
                  window.URL = window.URL || window.webkitURL;
                  var t = new Blob([
                      "var timeoutTime = " +
                        (1e3 * this._updateInterval).toFixed(1) +
                        ";self.onmessage = function(msg){\ttimeoutTime = parseInt(msg.data);};function tick(){\tsetTimeout(tick, timeoutTime);\tself.postMessage('tick');}tick();"
                    ]),
                    e = URL.createObjectURL(t),
                    n = new Worker(e);
                  (n.onmessage = this._callback.bind(this)), (this._worker = n);
                }),
                (e.prototype._createTimeout = function() {
                  this._timeout = setTimeout(
                    function() {
                      this._createTimeout(), this._callback();
                    }.bind(this),
                    1e3 * this._updateInterval
                  );
                }),
                (e.prototype._createClock = function() {
                  if (this._type === e.Type.Worker)
                    try {
                      this._createWorker();
                    } catch (t) {
                      (this._type = e.Type.Timeout), this._createClock();
                    }
                  else this._type === e.Type.Timeout && this._createTimeout();
                }),
                Object.defineProperty(e.prototype, "updateInterval", {
                  get: function() {
                    return this._updateInterval;
                  },
                  set: function(t) {
                    (this._updateInterval = Math.max(t, 128 / 44100)),
                      this._type === e.Type.Worker &&
                        this._worker.postMessage(Math.max(1e3 * t, 1));
                  }
                }),
                Object.defineProperty(e.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(t) {
                    this._disposeClock(), (this._type = t), this._createClock();
                  }
                }),
                (e.prototype._disposeClock = function() {
                  this._timeout &&
                    (clearTimeout(this._timeout), (this._timeout = null)),
                    this._worker &&
                      (this._worker.terminate(),
                      (this._worker.onmessage = null),
                      (this._worker = null));
                }),
                (e.prototype.dispose = function() {
                  this._disposeClock(), (this._callback = null);
                }),
                t.getContext(function() {
                  var e = AudioNode.prototype.connect,
                    n = AudioNode.prototype.disconnect;
                  function r(n, r, i) {
                    if (n.input)
                      return (
                        (i = t.defaultArg(i, 0)),
                        t.isArray(n.input)
                          ? this.connect(n.input[i])
                          : this.connect(n.input, r, i)
                      );
                    try {
                      return n instanceof AudioNode
                        ? (e.call(this, n, r, i), n)
                        : (e.call(this, n, r), n);
                    } catch (t) {
                      throw new Error(
                        "error connecting to node: " + n + "\n" + t
                      );
                    }
                  }
                  AudioNode.prototype.connect !== r &&
                    ((AudioNode.prototype.connect = r),
                    (AudioNode.prototype.disconnect = function(e, r, i) {
                      if (e && e.input && t.isArray(e.input))
                        (i = t.defaultArg(i, 0)),
                          this.disconnect(e.input[i], r, 0);
                      else if (e && e.input) this.disconnect(e.input, r, i);
                      else
                        try {
                          n.apply(this, arguments);
                        } catch (t) {
                          throw new Error(
                            "error disconnecting node: " + e + "\n" + t
                          );
                        }
                    }));
                }),
                t.supported && !t.initialized
                  ? ((t.context = new t.Context()),
                    window.TONE_SILENCE_VERSION_LOGGING ||
                      console.log(
                        "%c * Tone.js " + t.version + " * ",
                        "background: #000; color: #fff"
                      ))
                  : t.supported ||
                    console.warn("This browser does not support Tone.js"),
                t.Context
              );
            }),
            n(function(t) {
              return (
                (t.AudioNode = function() {
                  t.call(this);
                  var e = t.defaults(arguments, ["context"], {
                    context: t.context
                  });
                  this._context = e.context;
                }),
                t.extend(t.AudioNode),
                Object.defineProperty(t.AudioNode.prototype, "context", {
                  get: function() {
                    return this._context;
                  }
                }),
                (t.AudioNode.prototype.createInsOuts = function(t, e) {
                  1 === t
                    ? (this.input = this.context.createGain())
                    : t > 1 && (this.input = new Array(t)),
                    1 === e
                      ? (this.output = this.context.createGain())
                      : e > 1 && (this.output = new Array(e));
                }),
                Object.defineProperty(t.AudioNode.prototype, "channelCount", {
                  get: function() {
                    return this.output.channelCount;
                  },
                  set: function(t) {
                    return (this.output.channelCount = t);
                  }
                }),
                Object.defineProperty(
                  t.AudioNode.prototype,
                  "channelCountMode",
                  {
                    get: function() {
                      return this.output.channelCountMode;
                    },
                    set: function(t) {
                      return (this.output.channelCountMode = t);
                    }
                  }
                ),
                Object.defineProperty(
                  t.AudioNode.prototype,
                  "channelInterpretation",
                  {
                    get: function() {
                      return this.output.channelInterpretation;
                    },
                    set: function(t) {
                      return (this.output.channelInterpretation = t);
                    }
                  }
                ),
                Object.defineProperty(t.AudioNode.prototype, "numberOfInputs", {
                  get: function() {
                    return this.input
                      ? t.isArray(this.input)
                        ? this.input.length
                        : 1
                      : 0;
                  }
                }),
                Object.defineProperty(
                  t.AudioNode.prototype,
                  "numberOfOutputs",
                  {
                    get: function() {
                      return this.output
                        ? t.isArray(this.output)
                          ? this.output.length
                          : 1
                        : 0;
                    }
                  }
                ),
                (t.AudioNode.prototype._onConnect = function() {}),
                (t.AudioNode.prototype.connect = function(e, n, r) {
                  return (
                    e._onConnect && e._onConnect(this),
                    t.isArray(this.output)
                      ? ((n = t.defaultArg(n, 0)),
                        this.output[n].connect(e, 0, r))
                      : this.output.connect(e, n, r),
                    this
                  );
                }),
                (t.AudioNode.prototype.disconnect = function(e, n, r) {
                  t.isArray(this.output)
                    ? t.isNumber(e)
                      ? this.output[e].disconnect()
                      : ((n = t.defaultArg(n, 0)),
                        this.output[n].disconnect(e, 0, r))
                    : this.output.disconnect.apply(this.output, arguments);
                }),
                (t.AudioNode.prototype.chain = function() {
                  for (var t = this, e = 0; e < arguments.length; e++) {
                    var n = arguments[e];
                    t.connect(n), (t = n);
                  }
                  return this;
                }),
                (t.AudioNode.prototype.fan = function() {
                  for (var t = 0; t < arguments.length; t++)
                    this.connect(arguments[t]);
                  return this;
                }),
                window.AudioNode &&
                  ((AudioNode.prototype.chain = t.AudioNode.prototype.chain),
                  (AudioNode.prototype.fan = t.AudioNode.prototype.fan)),
                (t.AudioNode.prototype.dispose = function() {
                  return (
                    t.isDefined(this.input) &&
                      (this.input instanceof AudioNode &&
                        this.input.disconnect(),
                      (this.input = null)),
                    t.isDefined(this.output) &&
                      (this.output instanceof AudioNode &&
                        this.output.disconnect(),
                      (this.output = null)),
                    (this._context = null),
                    this
                  );
                }),
                t.AudioNode
              );
            }),
            n(function(t) {
              return (
                (t.SignalBase = function() {
                  t.AudioNode.call(this);
                }),
                t.extend(t.SignalBase, t.AudioNode),
                (t.SignalBase.prototype.connect = function(e, n, r) {
                  return (
                    (t.Signal && t.Signal === e.constructor) ||
                    (t.Param && t.Param === e.constructor)
                      ? (e._param.cancelScheduledValues(0),
                        (e._param.value = 0),
                        (e.overridden = !0))
                      : e instanceof AudioParam &&
                        (e.cancelScheduledValues(0), (e.value = 0)),
                    t.AudioNode.prototype.connect.call(this, e, n, r),
                    this
                  );
                }),
                t.SignalBase
              );
            }),
            n(function(t) {
              if (t.supported) {
                var e = navigator.userAgent.toLowerCase();
                if (e.includes("safari") && !e.includes("chrome")) {
                  var n = function(t) {
                    for (var e in ((this._internalNode = this.input = this.output = t._native_createWaveShaper()),
                    (this._curve = null),
                    this._internalNode))
                      this._defineProperty(this._internalNode, e);
                  };
                  Object.defineProperty(n.prototype, "curve", {
                    get: function() {
                      return this._curve;
                    },
                    set: function(t) {
                      this._curve = t;
                      var e = new Float32Array(t.length + 1);
                      e.set(t, 1),
                        (e[0] = t[0]),
                        (this._internalNode.curve = e);
                    }
                  }),
                    (n.prototype._defineProperty = function(e, n) {
                      t.isUndef(this[n]) &&
                        Object.defineProperty(this, n, {
                          get: function() {
                            return "function" == typeof e[n]
                              ? e[n].bind(e)
                              : e[n];
                          },
                          set: function(t) {
                            e[n] = t;
                          }
                        });
                    }),
                    (AudioContext.prototype._native_createWaveShaper =
                      AudioContext.prototype.createWaveShaper),
                    (AudioContext.prototype.createWaveShaper = function() {
                      return new n(this);
                    });
                }
              }
            }),
            n(function(t) {
              return (
                (t.WaveShaper = function(e, n) {
                  t.SignalBase.call(this),
                    (this._shaper = this.input = this.output = this.context.createWaveShaper()),
                    (this._curve = null),
                    Array.isArray(e)
                      ? (this.curve = e)
                      : isFinite(e) || t.isUndef(e)
                      ? (this._curve = new Float32Array(t.defaultArg(e, 1024)))
                      : t.isFunction(e) &&
                        ((this._curve = new Float32Array(
                          t.defaultArg(n, 1024)
                        )),
                        this.setMap(e));
                }),
                t.extend(t.WaveShaper, t.SignalBase),
                (t.WaveShaper.prototype.setMap = function(t) {
                  for (
                    var e = new Array(this._curve.length),
                      n = 0,
                      r = this._curve.length;
                    n < r;
                    n++
                  ) {
                    var i = (n / (r - 1)) * 2 - 1;
                    e[n] = t(i, n);
                  }
                  return (this.curve = e), this;
                }),
                Object.defineProperty(t.WaveShaper.prototype, "curve", {
                  get: function() {
                    return this._shaper.curve;
                  },
                  set: function(t) {
                    (this._curve = new Float32Array(t)),
                      (this._shaper.curve = this._curve);
                  }
                }),
                Object.defineProperty(t.WaveShaper.prototype, "oversample", {
                  get: function() {
                    return this._shaper.oversample;
                  },
                  set: function(t) {
                    if (!["none", "2x", "4x"].includes(t))
                      throw new RangeError(
                        "Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'"
                      );
                    this._shaper.oversample = t;
                  }
                }),
                (t.WaveShaper.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._shaper.disconnect(),
                    (this._shaper = null),
                    (this._curve = null),
                    this
                  );
                }),
                t.WaveShaper
              );
            }),
            n(function(t) {
              return (
                (t.TimeBase = function(e, n) {
                  if (!(this instanceof t.TimeBase))
                    return new t.TimeBase(e, n);
                  if (
                    ((this._val = e),
                    (this._units = n),
                    t.isUndef(this._units) &&
                      t.isString(this._val) &&
                      parseFloat(this._val) == this._val &&
                      "+" !== this._val.charAt(0))
                  )
                    (this._val = parseFloat(this._val)),
                      (this._units = this._defaultUnits);
                  else if (e && e.constructor === this.constructor)
                    (this._val = e._val), (this._units = e._units);
                  else if (e instanceof t.TimeBase)
                    switch (this._defaultUnits) {
                      case "s":
                        this._val = e.toSeconds();
                        break;
                      case "i":
                        this._val = e.toTicks();
                        break;
                      case "hz":
                        this._val = e.toFrequency();
                        break;
                      case "midi":
                        this._val = e.toMidi();
                        break;
                      default:
                        throw new Error(
                          "Unrecognized default units " + this._defaultUnits
                        );
                    }
                }),
                t.extend(t.TimeBase),
                (t.TimeBase.prototype._expressions = {
                  n: {
                    regexp: /^(\d+)n(\.?)$/i,
                    method: function(t, e) {
                      var n = "." === e ? 1.5 : 1;
                      return 1 === (t = parseInt(t))
                        ? this._beatsToUnits(this._getTimeSignature()) * n
                        : this._beatsToUnits(4 / t) * n;
                    }
                  },
                  t: {
                    regexp: /^(\d+)t$/i,
                    method: function(t) {
                      return (
                        (t = parseInt(t)),
                        this._beatsToUnits(8 / (3 * parseInt(t)))
                      );
                    }
                  },
                  m: {
                    regexp: /^(\d+)m$/i,
                    method: function(t) {
                      return this._beatsToUnits(
                        parseInt(t) * this._getTimeSignature()
                      );
                    }
                  },
                  i: {
                    regexp: /^(\d+)i$/i,
                    method: function(t) {
                      return this._ticksToUnits(parseInt(t));
                    }
                  },
                  hz: {
                    regexp: /^(\d+(?:\.\d+)?)hz$/i,
                    method: function(t) {
                      return this._frequencyToUnits(parseFloat(t));
                    }
                  },
                  tr: {
                    regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/,
                    method: function(t, e, n) {
                      var r = 0;
                      return (
                        t &&
                          "0" !== t &&
                          (r += this._beatsToUnits(
                            this._getTimeSignature() * parseFloat(t)
                          )),
                        e &&
                          "0" !== e &&
                          (r += this._beatsToUnits(parseFloat(e))),
                        n &&
                          "0" !== n &&
                          (r += this._beatsToUnits(parseFloat(n) / 4)),
                        r
                      );
                    }
                  },
                  s: {
                    regexp: /^(\d+(?:\.\d+)?)s$/,
                    method: function(t) {
                      return this._secondsToUnits(parseFloat(t));
                    }
                  },
                  samples: {
                    regexp: /^(\d+)samples$/,
                    method: function(t) {
                      return parseInt(t) / this.context.sampleRate;
                    }
                  },
                  default: {
                    regexp: /^(\d+(?:\.\d+)?)$/,
                    method: function(t) {
                      return this._expressions[this._defaultUnits].method.call(
                        this,
                        t
                      );
                    }
                  }
                }),
                (t.TimeBase.prototype._defaultUnits = "s"),
                (t.TimeBase.prototype._getBpm = function() {
                  return t.Transport ? t.Transport.bpm.value : 120;
                }),
                (t.TimeBase.prototype._getTimeSignature = function() {
                  return t.Transport ? t.Transport.timeSignature : 4;
                }),
                (t.TimeBase.prototype._getPPQ = function() {
                  return t.Transport ? t.Transport.PPQ : 192;
                }),
                (t.TimeBase.prototype._now = function() {
                  return this.now();
                }),
                (t.TimeBase.prototype._frequencyToUnits = function(t) {
                  return 1 / t;
                }),
                (t.TimeBase.prototype._beatsToUnits = function(t) {
                  return (60 / this._getBpm()) * t;
                }),
                (t.TimeBase.prototype._secondsToUnits = function(t) {
                  return t;
                }),
                (t.TimeBase.prototype._ticksToUnits = function(t) {
                  return t * (this._beatsToUnits(1) / this._getPPQ());
                }),
                (t.TimeBase.prototype._noArg = function() {
                  return this._now();
                }),
                (t.TimeBase.prototype.valueOf = function() {
                  if (t.isUndef(this._val)) return this._noArg();
                  if (t.isString(this._val) && t.isUndef(this._units))
                    for (var e in this._expressions)
                      if (this._expressions[e].regexp.test(this._val.trim())) {
                        this._units = e;
                        break;
                      }
                  if (t.isDefined(this._units)) {
                    var n = this._expressions[this._units],
                      r = this._val
                        .toString()
                        .trim()
                        .match(n.regexp);
                    return r
                      ? n.method.apply(this, r.slice(1))
                      : n.method.call(this, parseFloat(this._val));
                  }
                  return this._val;
                }),
                (t.TimeBase.prototype.toSeconds = function() {
                  return this.valueOf();
                }),
                (t.TimeBase.prototype.toFrequency = function() {
                  return 1 / this.toSeconds();
                }),
                (t.TimeBase.prototype.toSamples = function() {
                  return this.toSeconds() * this.context.sampleRate;
                }),
                (t.TimeBase.prototype.toMilliseconds = function() {
                  return 1e3 * this.toSeconds();
                }),
                (t.TimeBase.prototype.dispose = function() {
                  (this._val = null), (this._units = null);
                }),
                t.TimeBase
              );
            }),
            n(function(t) {
              (t.Frequency = function(e, n) {
                if (!(this instanceof t.Frequency))
                  return new t.Frequency(e, n);
                t.TimeBase.call(this, e, n);
              }),
                t.extend(t.Frequency, t.TimeBase),
                (t.Frequency.prototype._expressions = Object.assign(
                  {},
                  t.TimeBase.prototype._expressions,
                  {
                    midi: {
                      regexp: /^(\d+(?:\.\d+)?midi)/,
                      method: function(e) {
                        return "midi" === this._defaultUnits
                          ? e
                          : t.Frequency.mtof(e);
                      }
                    },
                    note: {
                      regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
                      method: function(n, r) {
                        var i = e[n.toLowerCase()] + 12 * (parseInt(r) + 1);
                        return "midi" === this._defaultUnits
                          ? i
                          : t.Frequency.mtof(i);
                      }
                    },
                    tr: {
                      regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
                      method: function(t, e, n) {
                        var r = 1;
                        return (
                          t &&
                            "0" !== t &&
                            (r *= this._beatsToUnits(
                              this._getTimeSignature() * parseFloat(t)
                            )),
                          e &&
                            "0" !== e &&
                            (r *= this._beatsToUnits(parseFloat(e))),
                          n &&
                            "0" !== n &&
                            (r *= this._beatsToUnits(parseFloat(n) / 4)),
                          r
                        );
                      }
                    }
                  }
                )),
                (t.Frequency.prototype.transpose = function(e) {
                  return new this.constructor(
                    this.valueOf() * t.intervalToFrequencyRatio(e)
                  );
                }),
                (t.Frequency.prototype.harmonize = function(t) {
                  return t.map(
                    function(t) {
                      return this.transpose(t);
                    }.bind(this)
                  );
                }),
                (t.Frequency.prototype.toMidi = function() {
                  return t.Frequency.ftom(this.valueOf());
                }),
                (t.Frequency.prototype.toNote = function() {
                  var e = this.toFrequency(),
                    r = Math.log2(e / t.Frequency.A4),
                    i = Math.round(12 * r) + 57,
                    o = Math.floor(i / 12);
                  return o < 0 && (i += -12 * o), n[i % 12] + o.toString();
                }),
                (t.Frequency.prototype.toSeconds = function() {
                  return 1 / t.TimeBase.prototype.toSeconds.call(this);
                }),
                (t.Frequency.prototype.toFrequency = function() {
                  return t.TimeBase.prototype.toFrequency.call(this);
                }),
                (t.Frequency.prototype.toTicks = function() {
                  var e = this._beatsToUnits(1),
                    n = this.valueOf() / e;
                  return Math.floor(n * t.Transport.PPQ);
                }),
                (t.Frequency.prototype._noArg = function() {
                  return 0;
                }),
                (t.Frequency.prototype._frequencyToUnits = function(t) {
                  return t;
                }),
                (t.Frequency.prototype._ticksToUnits = function(e) {
                  return (
                    1 / ((60 * e) / (t.Transport.bpm.value * t.Transport.PPQ))
                  );
                }),
                (t.Frequency.prototype._beatsToUnits = function(e) {
                  return 1 / t.TimeBase.prototype._beatsToUnits.call(this, e);
                }),
                (t.Frequency.prototype._secondsToUnits = function(t) {
                  return 1 / t;
                }),
                (t.Frequency.prototype._defaultUnits = "hz");
              var e = {
                  cbb: -2,
                  cb: -1,
                  c: 0,
                  "c#": 1,
                  cx: 2,
                  dbb: 0,
                  db: 1,
                  d: 2,
                  "d#": 3,
                  dx: 4,
                  ebb: 2,
                  eb: 3,
                  e: 4,
                  "e#": 5,
                  ex: 6,
                  fbb: 3,
                  fb: 4,
                  f: 5,
                  "f#": 6,
                  fx: 7,
                  gbb: 5,
                  gb: 6,
                  g: 7,
                  "g#": 8,
                  gx: 9,
                  abb: 7,
                  ab: 8,
                  a: 9,
                  "a#": 10,
                  ax: 11,
                  bbb: 9,
                  bb: 10,
                  b: 11,
                  "b#": 12,
                  bx: 13
                },
                n = [
                  "C",
                  "C#",
                  "D",
                  "D#",
                  "E",
                  "F",
                  "F#",
                  "G",
                  "G#",
                  "A",
                  "A#",
                  "B"
                ];
              return (
                (t.Frequency.A4 = 440),
                (t.Frequency.mtof = function(e) {
                  return t.Frequency.A4 * Math.pow(2, (e - 69) / 12);
                }),
                (t.Frequency.ftom = function(e) {
                  return 69 + Math.round(12 * Math.log2(e / t.Frequency.A4));
                }),
                t.Frequency
              );
            }),
            n(function(t) {
              return (
                (t.Time = function(e, n) {
                  if (!(this instanceof t.Time)) return new t.Time(e, n);
                  t.TimeBase.call(this, e, n);
                }),
                t.extend(t.Time, t.TimeBase),
                (t.Time.prototype._expressions = Object.assign(
                  {},
                  t.TimeBase.prototype._expressions,
                  {
                    quantize: {
                      regexp: /^@(.+)/,
                      method: function(e) {
                        if (t.Transport) {
                          var n = new this.constructor(e);
                          return t.Transport.nextSubdivision(n);
                        }
                        return 0;
                      }
                    },
                    now: {
                      regexp: /^\+(.+)/,
                      method: function(t) {
                        return this._now() + new this.constructor(t);
                      }
                    }
                  }
                )),
                (t.Time.prototype.quantize = function(e, n) {
                  n = t.defaultArg(n, 1);
                  var r = new this.constructor(e),
                    i = this.valueOf();
                  return i + (Math.round(i / r) * r - i) * n;
                }),
                (t.Time.prototype.toNotation = function() {
                  for (
                    var e = this.toSeconds(), n = ["1m"], r = 1;
                    r < 8;
                    r++
                  ) {
                    var i = Math.pow(2, r);
                    n.push(i + "n."), n.push(i + "n"), n.push(i + "t");
                  }
                  n.push("0");
                  var o = n[0],
                    a = t.Time(n[0]).toSeconds();
                  return (
                    n.forEach(function(n) {
                      var r = t.Time(n).toSeconds();
                      Math.abs(r - e) < Math.abs(a - e) && ((o = n), (a = r));
                    }),
                    o
                  );
                }),
                (t.Time.prototype.toBarsBeatsSixteenths = function() {
                  var t = this._beatsToUnits(1),
                    e = this.valueOf() / t,
                    n = Math.floor(e / this._getTimeSignature()),
                    r = (e % 1) * 4;
                  return (
                    (e = Math.floor(e) % this._getTimeSignature()),
                    (r = r.toString()).length > 3 &&
                      (r = parseFloat(parseFloat(r).toFixed(3))),
                    [n, e, r].join(":")
                  );
                }),
                (t.Time.prototype.toTicks = function() {
                  var t = this._beatsToUnits(1),
                    e = this.valueOf() / t;
                  return Math.round(e * this._getPPQ());
                }),
                (t.Time.prototype.toSeconds = function() {
                  return this.valueOf();
                }),
                (t.Time.prototype.toMidi = function() {
                  return t.Frequency.ftom(this.toFrequency());
                }),
                t.Time
              );
            }),
            n(function(t) {
              return (
                (t.TransportTime = function(e, n) {
                  if (!(this instanceof t.TransportTime))
                    return new t.TransportTime(e, n);
                  t.Time.call(this, e, n);
                }),
                t.extend(t.TransportTime, t.Time),
                (t.TransportTime.prototype._now = function() {
                  return t.Transport.seconds;
                }),
                t.TransportTime
              );
            }),
            n(function(t) {
              return (
                (t.Type = {
                  Default: "number",
                  Time: "time",
                  Frequency: "frequency",
                  TransportTime: "transportTime",
                  Ticks: "ticks",
                  NormalRange: "normalRange",
                  AudioRange: "audioRange",
                  Decibels: "db",
                  Interval: "interval",
                  BPM: "bpm",
                  Positive: "positive",
                  Gain: "gain",
                  Cents: "cents",
                  Degrees: "degrees",
                  MIDI: "midi",
                  BarsBeatsSixteenths: "barsBeatsSixteenths",
                  Samples: "samples",
                  Hertz: "hertz",
                  Note: "note",
                  Milliseconds: "milliseconds",
                  Seconds: "seconds",
                  Notation: "notation"
                }),
                (t.prototype.toSeconds = function(e) {
                  return t.isNumber(e)
                    ? e
                    : t.isUndef(e)
                    ? this.now()
                    : t.isString(e)
                    ? new t.Time(e).toSeconds()
                    : e instanceof t.TimeBase
                    ? e.toSeconds()
                    : void 0;
                }),
                (t.prototype.toFrequency = function(e) {
                  return t.isNumber(e)
                    ? e
                    : t.isString(e) || t.isUndef(e)
                    ? new t.Frequency(e).valueOf()
                    : e instanceof t.TimeBase
                    ? e.toFrequency()
                    : void 0;
                }),
                (t.prototype.toTicks = function(e) {
                  return t.isNumber(e) || t.isString(e)
                    ? new t.TransportTime(e).toTicks()
                    : t.isUndef(e)
                    ? t.Transport.ticks
                    : e instanceof t.TimeBase
                    ? e.toTicks()
                    : void 0;
                }),
                t
              );
            }),
            n(function(t) {
              return (
                (t.Param = function() {
                  var e = t.defaults(
                    arguments,
                    ["param", "units", "convert"],
                    t.Param
                  );
                  t.AudioNode.call(this),
                    (this._param = this.input = e.param),
                    (this.units = e.units),
                    (this.convert = e.convert),
                    (this.overridden = !1),
                    (this._events = new t.Timeline(1e3)),
                    t.isDefined(e.value) &&
                      this._param &&
                      (this.value = e.value);
                }),
                t.extend(t.Param, t.AudioNode),
                (t.Param.defaults = {
                  units: t.Type.Default,
                  convert: !0,
                  param: void 0
                }),
                Object.defineProperty(t.Param.prototype, "value", {
                  get: function() {
                    var t = this.now();
                    return this._toUnits(this.getValueAtTime(t));
                  },
                  set: function(t) {
                    (this._initialValue = this._fromUnits(t)),
                      this.cancelScheduledValues(this.context.currentTime),
                      this.setValueAtTime(t, this.context.currentTime);
                  }
                }),
                Object.defineProperty(t.Param.prototype, "minValue", {
                  get: function() {
                    return this.units === t.Type.Time ||
                      this.units === t.Type.Frequency ||
                      this.units === t.Type.NormalRange ||
                      this.units === t.Type.Positive ||
                      this.units === t.Type.BPM
                      ? 0
                      : this.units === t.Type.AudioRange
                      ? -1
                      : this.units === t.Type.Decibels
                      ? -1 / 0
                      : this._param.minValue;
                  }
                }),
                Object.defineProperty(t.Param.prototype, "maxValue", {
                  get: function() {
                    return this.units === t.Type.NormalRange ||
                      this.units === t.Type.AudioRange
                      ? 1
                      : this._param.maxValue;
                  }
                }),
                (t.Param.prototype._fromUnits = function(e) {
                  if (
                    (!this.convert && !t.isUndef(this.convert)) ||
                    this.overridden
                  )
                    return e;
                  switch (this.units) {
                    case t.Type.Time:
                      return this.toSeconds(e);
                    case t.Type.Frequency:
                      return this.toFrequency(e);
                    case t.Type.Decibels:
                      return t.dbToGain(e);
                    case t.Type.NormalRange:
                      return Math.min(Math.max(e, 0), 1);
                    case t.Type.AudioRange:
                      return Math.min(Math.max(e, -1), 1);
                    case t.Type.Positive:
                      return Math.max(e, 0);
                    default:
                      return e;
                  }
                }),
                (t.Param.prototype._toUnits = function(e) {
                  if (!this.convert && !t.isUndef(this.convert)) return e;
                  switch (this.units) {
                    case t.Type.Decibels:
                      return t.gainToDb(e);
                    default:
                      return e;
                  }
                }),
                (t.Param.prototype._minOutput = 1e-5),
                (t.Param.AutomationType = {
                  Linear: "linearRampToValueAtTime",
                  Exponential: "exponentialRampToValueAtTime",
                  Target: "setTargetAtTime",
                  SetValue: "setValueAtTime"
                }),
                (t.Param.prototype.setValueAtTime = function(e, n) {
                  return (
                    (n = this.toSeconds(n)),
                    (e = this._fromUnits(e)),
                    this._events.add({
                      type: t.Param.AutomationType.SetValue,
                      value: e,
                      time: n
                    }),
                    this._param.setValueAtTime(e, n),
                    this
                  );
                }),
                (t.Param.prototype.getValueAtTime = function(e) {
                  e = this.toSeconds(e);
                  var n = this._events.getAfter(e),
                    r = this._events.get(e),
                    i = t.defaultArg(
                      this._initialValue,
                      this._param.defaultValue
                    ),
                    o = i;
                  if (null === r) o = i;
                  else if (r.type === t.Param.AutomationType.Target) {
                    var a,
                      s = this._events.getBefore(r.time);
                    (a = null === s ? i : s.value),
                      (o = this._exponentialApproach(
                        r.time,
                        a,
                        r.value,
                        r.constant,
                        e
                      ));
                  } else
                    o =
                      null === n
                        ? r.value
                        : n.type === t.Param.AutomationType.Linear
                        ? this._linearInterpolate(
                            r.time,
                            r.value,
                            n.time,
                            n.value,
                            e
                          )
                        : n.type === t.Param.AutomationType.Exponential
                        ? this._exponentialInterpolate(
                            r.time,
                            r.value,
                            n.time,
                            n.value,
                            e
                          )
                        : r.value;
                  return o;
                }),
                (t.Param.prototype.setRampPoint = function(t) {
                  t = this.toSeconds(t);
                  var e = this.getValueAtTime(t);
                  return (
                    this.cancelAndHoldAtTime(t),
                    0 === e && (e = this._minOutput),
                    this.setValueAtTime(this._toUnits(e), t),
                    this
                  );
                }),
                (t.Param.prototype.linearRampToValueAtTime = function(e, n) {
                  return (
                    (e = this._fromUnits(e)),
                    (n = this.toSeconds(n)),
                    this._events.add({
                      type: t.Param.AutomationType.Linear,
                      value: e,
                      time: n
                    }),
                    this._param.linearRampToValueAtTime(e, n),
                    this
                  );
                }),
                (t.Param.prototype.exponentialRampToValueAtTime = function(
                  e,
                  n
                ) {
                  return (
                    (e = this._fromUnits(e)),
                    (e = Math.max(this._minOutput, e)),
                    (n = this.toSeconds(n)),
                    this._events.add({
                      type: t.Param.AutomationType.Exponential,
                      time: n,
                      value: e
                    }),
                    this._param.exponentialRampToValueAtTime(e, n),
                    this
                  );
                }),
                (t.Param.prototype.exponentialRampTo = function(t, e, n) {
                  return (
                    (n = this.toSeconds(n)),
                    this.setRampPoint(n),
                    this.exponentialRampToValueAtTime(t, n + this.toSeconds(e)),
                    this
                  );
                }),
                (t.Param.prototype.linearRampTo = function(t, e, n) {
                  return (
                    (n = this.toSeconds(n)),
                    this.setRampPoint(n),
                    this.linearRampToValueAtTime(t, n + this.toSeconds(e)),
                    this
                  );
                }),
                (t.Param.prototype.targetRampTo = function(t, e, n) {
                  return (
                    (n = this.toSeconds(n)),
                    this.setRampPoint(n),
                    this.exponentialApproachValueAtTime(t, n, e),
                    this
                  );
                }),
                (t.Param.prototype.exponentialApproachValueAtTime = function(
                  t,
                  e,
                  n
                ) {
                  var r = Math.log(this.toSeconds(n) + 1) / Math.log(200);
                  return (e = this.toSeconds(e)), this.setTargetAtTime(t, e, r);
                }),
                (t.Param.prototype.setTargetAtTime = function(e, n, r) {
                  if (((e = this._fromUnits(e)), r <= 0))
                    throw new Error("timeConstant must be greater than 0");
                  return (
                    (n = this.toSeconds(n)),
                    this._events.add({
                      type: t.Param.AutomationType.Target,
                      value: e,
                      time: n,
                      constant: r
                    }),
                    this._param.setTargetAtTime(e, n, r),
                    this
                  );
                }),
                (t.Param.prototype.setValueCurveAtTime = function(e, n, r, i) {
                  (i = t.defaultArg(i, 1)),
                    (r = this.toSeconds(r)),
                    (n = this.toSeconds(n)),
                    this.setValueAtTime(e[0] * i, n);
                  for (var o = r / (e.length - 1), a = 1; a < e.length; a++)
                    this.linearRampToValueAtTime(e[a] * i, n + a * o);
                  return this;
                }),
                (t.Param.prototype.cancelScheduledValues = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._events.cancel(t),
                    this._param.cancelScheduledValues(t),
                    this
                  );
                }),
                (t.Param.prototype.cancelAndHoldAtTime = function(e) {
                  var n = this.getValueAtTime(e),
                    r = this._events.get(e),
                    i = this._events.getAfter(e);
                  return (
                    r && r.time === e
                      ? i
                        ? this._events.cancel(i.time)
                        : this._events.cancel(e + 1e-6)
                      : i &&
                        (this._events.cancel(i.time),
                        this._param.cancelAndHoldAtTime ||
                          this._param.cancelScheduledValues(e),
                        i.type === t.Param.AutomationType.Linear
                          ? this._param.cancelAndHoldAtTime
                            ? this._events.add({
                                type: t.Param.AutomationType.Linear,
                                value: n,
                                time: e
                              })
                            : this.linearRampToValueAtTime(n, e)
                          : i.type === t.Param.AutomationType.Exponential &&
                            (this._param.cancelAndHoldAtTime
                              ? this._events.add({
                                  type: t.Param.AutomationType.Exponential,
                                  value: n,
                                  time: e
                                })
                              : this.exponentialRampToValueAtTime(n, e))),
                    this._events.add({
                      type: t.Param.AutomationType.SetValue,
                      value: n,
                      time: e
                    }),
                    this._param.cancelAndHoldAtTime
                      ? this._param.cancelAndHoldAtTime(e)
                      : this._param.setValueAtTime(n, e),
                    this
                  );
                }),
                (t.Param.prototype.rampTo = function(e, n, r) {
                  return (
                    (n = t.defaultArg(n, 0.1)),
                    this.units === t.Type.Frequency ||
                    this.units === t.Type.BPM ||
                    this.units === t.Type.Decibels
                      ? this.exponentialRampTo(e, n, r)
                      : this.linearRampTo(e, n, r),
                    this
                  );
                }),
                (t.Param.prototype._exponentialApproach = function(
                  t,
                  e,
                  n,
                  r,
                  i
                ) {
                  return n + (e - n) * Math.exp(-(i - t) / r);
                }),
                (t.Param.prototype._linearInterpolate = function(
                  t,
                  e,
                  n,
                  r,
                  i
                ) {
                  return e + ((i - t) / (n - t)) * (r - e);
                }),
                (t.Param.prototype._exponentialInterpolate = function(
                  t,
                  e,
                  n,
                  r,
                  i
                ) {
                  return e * Math.pow(r / e, (i - t) / (n - t));
                }),
                (t.Param.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    (this._param = null),
                    (this._events = null),
                    this
                  );
                }),
                t.Param
              );
            }),
            n(function(t) {
              return (
                (t.OfflineContext = function(e, n, r) {
                  var i = new OfflineAudioContext(e, n * r, r);
                  t.Context.call(this, {
                    context: i,
                    clockSource: "offline",
                    lookAhead: 0,
                    updateInterval: 128 / r
                  }),
                    (this._duration = n),
                    (this._currentTime = 0);
                }),
                t.extend(t.OfflineContext, t.Context),
                (t.OfflineContext.prototype.now = function() {
                  return this._currentTime;
                }),
                (t.OfflineContext.prototype.render = function() {
                  for (; this._duration - this._currentTime >= 0; )
                    this.emit("tick"), (this._currentTime += this.blockTime);
                  return this._context.startRendering();
                }),
                (t.OfflineContext.prototype.close = function() {
                  return (this._context = null), Promise.resolve();
                }),
                t.OfflineContext
              );
            }),
            n(function(t) {
              if (t.supported) {
                var e = navigator.userAgent.toLowerCase();
                e.includes("safari") &&
                  !e.includes("chrome") &&
                  e.includes("mobile") &&
                  (t.OfflineContext.prototype.createBufferSource = function() {
                    var t = this._context.createBufferSource(),
                      e = t.start;
                    return (
                      (t.start = function(n) {
                        this.setTimeout(
                          function() {
                            e.call(t, n);
                          }.bind(this),
                          0
                        );
                      }.bind(this)),
                      t
                    );
                  });
              }
            }),
            n(function(t) {
              return (
                (t.Gain = function() {
                  var e = t.defaults(arguments, ["gain", "units"], t.Gain);
                  t.AudioNode.call(this),
                    (this.input = this.output = this._gainNode = this.context.createGain()),
                    (this.gain = new t.Param({
                      param: this._gainNode.gain,
                      units: e.units,
                      value: e.gain,
                      convert: e.convert
                    })),
                    this._readOnly("gain");
                }),
                t.extend(t.Gain, t.AudioNode),
                (t.Gain.defaults = { gain: 1, convert: !0 }),
                (t.Gain.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this),
                    this._gainNode.disconnect(),
                    (this._gainNode = null),
                    this._writable("gain"),
                    this.gain.dispose(),
                    (this.gain = null);
                }),
                t.Gain
              );
            }),
            n(function(t) {
              if (t.supported && !AudioContext.prototype.createConstantSource) {
                var e = function(t) {
                  this.context = t;
                  for (
                    var e = t.createBuffer(1, 128, t.sampleRate),
                      n = e.getChannelData(0),
                      r = 0;
                    r < n.length;
                    r++
                  )
                    n[r] = 1;
                  (this._bufferSource = t.createBufferSource()),
                    (this._bufferSource.channelCount = 1),
                    (this._bufferSource.channelCountMode = "explicit"),
                    (this._bufferSource.buffer = e),
                    (this._bufferSource.loop = !0);
                  var i = (this._output = t.createGain());
                  (this.offset = i.gain), this._bufferSource.connect(i);
                };
                (e.prototype.start = function(t) {
                  return this._bufferSource.start(t), this;
                }),
                  (e.prototype.stop = function(t) {
                    return this._bufferSource.stop(t), this;
                  }),
                  (e.prototype.connect = function() {
                    return (
                      this._output.connect.apply(this._output, arguments), this
                    );
                  }),
                  (e.prototype.disconnect = function() {
                    return (
                      this._output.disconnect.apply(this._output, arguments),
                      this
                    );
                  }),
                  (AudioContext.prototype.createConstantSource = function() {
                    return new e(this);
                  }),
                  (t.Context.prototype.createConstantSource = function() {
                    return new e(this);
                  });
              }
            }),
            n(function(t) {
              return (
                (t.Signal = function() {
                  var e = t.defaults(arguments, ["value", "units"], t.Signal);
                  t.Param.call(this, e),
                    (this._proxies = []),
                    (this._sourceStarted = !1),
                    (this._constantSource = this.context.createConstantSource()),
                    (this._param = this._constantSource.offset),
                    (this.value = e.value),
                    (this.output = this._constantSource),
                    (this.input = this._param = this.output.offset);
                }),
                t.extend(t.Signal, t.Param),
                (t.Signal.defaults = {
                  value: 0,
                  units: t.Type.Default,
                  convert: !0
                }),
                (t.Signal.prototype.connect = function(e) {
                  return (
                    this._isParam(e) && !this._sourceStarted
                      ? (this._proxies.push(e),
                        (e.overridden = !0),
                        this._applyAutomations(e))
                      : (t.SignalBase.prototype.connect.apply(this, arguments),
                        this._sourceStarted ||
                          ((this._sourceStarted = !0),
                          this._constantSource.start(0))),
                    this
                  );
                }),
                (t.Signal.prototype._isParam = function(e) {
                  return (
                    (t.Param && t.Param === e.constructor) ||
                    e instanceof AudioParam
                  );
                }),
                (t.Signal.prototype._connectProxies = function() {
                  this._sourceStarted ||
                    ((this._sourceStarted = !0), this._constantSource.start(0)),
                    this._proxies.forEach(
                      function(e) {
                        t.SignalBase.prototype.connect.call(this, e),
                          e._proxies && e._connectProxies();
                      }.bind(this)
                    );
                }),
                (t.Signal.prototype._onConnect = function(t) {
                  this._isParam(t) || this._connectProxies();
                }),
                (t.Signal.prototype._applyAutomations = function(t) {
                  var e = this.context.currentTime;
                  t.cancelScheduledValues(e);
                  var n = this.getValueAtTime(e);
                  t.setValueAtTime(n, e),
                    this._events.forEachFrom(e, function(e) {
                      t[e.type](e.value, e.time, e.constant);
                    });
                }),
                (t.Signal.prototype.disconnect = function(e) {
                  if (this._proxies.includes(e)) {
                    var n = this._proxies.indexOf(e);
                    this._proxies.splice(n, 1);
                  } else e || (this._proxies = []);
                  return t.SignalBase.prototype.disconnect.apply(
                    this,
                    arguments
                  );
                }),
                (t.Signal.prototype.getValueAtTime = function(e) {
                  return this._param.getValueAtTime
                    ? this._param.getValueAtTime(e)
                    : t.Param.prototype.getValueAtTime.call(this, e);
                }),
                [
                  "setValueAtTime",
                  "linearRampToValueAtTime",
                  "exponentialRampToValueAtTime",
                  "setTargetAtTime"
                ].forEach(function(e) {
                  var n = t.Signal.prototype[e];
                  t.Signal.prototype[e] = function() {
                    var t = arguments;
                    n.apply(this, arguments),
                      (t[0] = this._fromUnits(t[0])),
                      (t[1] = this.toSeconds(t[1])),
                      this._proxies.forEach(function(n) {
                        n[e].apply(n, t);
                      });
                  };
                }),
                ["cancelScheduledValues", "cancelAndHoldAtTime"].forEach(
                  function(e) {
                    var n = t.Signal.prototype[e];
                    t.Signal.prototype[e] = function() {
                      var t = arguments;
                      n.apply(this, arguments),
                        (t[0] = this.toSeconds(t[0])),
                        this._proxies.forEach(function(n) {
                          n[e].apply(n, t);
                        });
                    };
                  }
                ),
                (t.Signal.prototype.dispose = function() {
                  return (
                    t.Param.prototype.dispose.call(this),
                    this._constantSource.disconnect(),
                    (this._constantSource = null),
                    (this._proxies = null),
                    this
                  );
                }),
                t.Signal
              );
            }),
            n(function(t) {
              return (
                (t.Pow = function(e) {
                  t.SignalBase.call(this),
                    (this._exp = t.defaultArg(e, 1)),
                    (this._expScaler = this.input = this.output = new t.WaveShaper(
                      this._expFunc(this._exp),
                      8192
                    ));
                }),
                t.extend(t.Pow, t.SignalBase),
                Object.defineProperty(t.Pow.prototype, "value", {
                  get: function() {
                    return this._exp;
                  },
                  set: function(t) {
                    (this._exp = t),
                      this._expScaler.setMap(this._expFunc(this._exp));
                  }
                }),
                (t.Pow.prototype._expFunc = function(t) {
                  return function(e) {
                    return Math.pow(Math.abs(e), t);
                  };
                }),
                (t.Pow.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._expScaler.dispose(),
                    (this._expScaler = null),
                    this
                  );
                }),
                t.Pow
              );
            }),
            n(function(t) {
              return (
                (t.Envelope = function() {
                  var e = t.defaults(
                    arguments,
                    ["attack", "decay", "sustain", "release"],
                    t.Envelope
                  );
                  t.AudioNode.call(this),
                    (this.attack = e.attack),
                    (this.decay = e.decay),
                    (this.sustain = e.sustain),
                    (this.release = e.release),
                    (this._attackCurve = "linear"),
                    (this._releaseCurve = "exponential"),
                    (this._sig = this.output = new t.Signal(0)),
                    (this.attackCurve = e.attackCurve),
                    (this.releaseCurve = e.releaseCurve);
                }),
                t.extend(t.Envelope, t.AudioNode),
                (t.Envelope.defaults = {
                  attack: 0.01,
                  decay: 0.1,
                  sustain: 0.5,
                  release: 1,
                  attackCurve: "linear",
                  releaseCurve: "exponential"
                }),
                Object.defineProperty(t.Envelope.prototype, "value", {
                  get: function() {
                    return this.getValueAtTime(this.now());
                  }
                }),
                Object.defineProperty(t.Envelope.prototype, "attackCurve", {
                  get: function() {
                    if (t.isString(this._attackCurve)) return this._attackCurve;
                    if (t.isArray(this._attackCurve)) {
                      for (var e in t.Envelope.Type)
                        if (t.Envelope.Type[e].In === this._attackCurve)
                          return e;
                      return this._attackCurve;
                    }
                  },
                  set: function(e) {
                    if (t.Envelope.Type.hasOwnProperty(e)) {
                      var n = t.Envelope.Type[e];
                      t.isObject(n)
                        ? (this._attackCurve = n.In)
                        : (this._attackCurve = n);
                    } else {
                      if (!t.isArray(e))
                        throw new Error("Tone.Envelope: invalid curve: " + e);
                      this._attackCurve = e;
                    }
                  }
                }),
                Object.defineProperty(t.Envelope.prototype, "releaseCurve", {
                  get: function() {
                    if (t.isString(this._releaseCurve))
                      return this._releaseCurve;
                    if (t.isArray(this._releaseCurve)) {
                      for (var e in t.Envelope.Type)
                        if (t.Envelope.Type[e].Out === this._releaseCurve)
                          return e;
                      return this._releaseCurve;
                    }
                  },
                  set: function(e) {
                    if (t.Envelope.Type.hasOwnProperty(e)) {
                      var n = t.Envelope.Type[e];
                      t.isObject(n)
                        ? (this._releaseCurve = n.Out)
                        : (this._releaseCurve = n);
                    } else {
                      if (!t.isArray(e))
                        throw new Error("Tone.Envelope: invalid curve: " + e);
                      this._releaseCurve = e;
                    }
                  }
                }),
                (t.Envelope.prototype.triggerAttack = function(e, n) {
                  e = this.toSeconds(e);
                  var r = this.toSeconds(this.attack),
                    i = r,
                    o = this.toSeconds(this.decay);
                  n = t.defaultArg(n, 1);
                  var a = this.getValueAtTime(e);
                  if (
                    (a > 0 && (i = (1 - a) / (1 / i)),
                    "linear" === this._attackCurve)
                  )
                    this._sig.linearRampTo(n, i, e);
                  else if ("exponential" === this._attackCurve)
                    this._sig.targetRampTo(n, i, e);
                  else if (i > 0) {
                    this._sig.cancelAndHoldAtTime(e);
                    var s = this._attackCurve;
                    if (i < r) {
                      var u = 1 - i / r,
                        c = Math.floor(u * this._attackCurve.length);
                      (s = this._attackCurve.slice(c))[0] = a;
                    }
                    this._sig.setValueCurveAtTime(s, e, i, n);
                  }
                  return (
                    o && this._sig.targetRampTo(n * this.sustain, o, i + e),
                    this
                  );
                }),
                (t.Envelope.prototype.triggerRelease = function(e) {
                  e = this.toSeconds(e);
                  var n = this.getValueAtTime(e);
                  if (n > 0) {
                    var r = this.toSeconds(this.release);
                    if ("linear" === this._releaseCurve)
                      this._sig.linearRampTo(0, r, e);
                    else if ("exponential" === this._releaseCurve)
                      this._sig.targetRampTo(0, r, e);
                    else {
                      var i = this._releaseCurve;
                      t.isArray(i) &&
                        (this._sig.cancelAndHoldAtTime(e),
                        this._sig.setValueCurveAtTime(i, e, r, n));
                    }
                  }
                  return this;
                }),
                (t.Envelope.prototype.getValueAtTime = function(t) {
                  return this._sig.getValueAtTime(t);
                }),
                (t.Envelope.prototype.triggerAttackRelease = function(t, e, n) {
                  return (
                    (e = this.toSeconds(e)),
                    this.triggerAttack(e, n),
                    this.triggerRelease(e + this.toSeconds(t)),
                    this
                  );
                }),
                (t.Envelope.prototype.cancel = function(t) {
                  return this._sig.cancelScheduledValues(t), this;
                }),
                (t.Envelope.prototype.connect = t.SignalBase.prototype.connect),
                (function() {
                  var e,
                    n,
                    r = [];
                  for (e = 0; e < 128; e++)
                    r[e] = Math.sin((e / 127) * (Math.PI / 2));
                  var i = [];
                  for (e = 0; e < 127; e++) {
                    n = e / 127;
                    var o = Math.sin(n * (2 * Math.PI) * 6.4 - Math.PI / 2) + 1;
                    i[e] = o / 10 + 0.83 * n;
                  }
                  i[127] = 1;
                  var a = [];
                  for (e = 0; e < 128; e++) a[e] = Math.ceil((e / 127) * 5) / 5;
                  var s = [];
                  for (e = 0; e < 128; e++)
                    (n = e / 127), (s[e] = 0.5 * (1 - Math.cos(Math.PI * n)));
                  var u,
                    c = [];
                  for (e = 0; e < 128; e++) {
                    n = e / 127;
                    var l = 4 * Math.pow(n, 3) + 0.2,
                      h = Math.cos(l * Math.PI * 2 * n);
                    c[e] = Math.abs(h * (1 - n));
                  }
                  function f(t) {
                    for (var e = new Array(t.length), n = 0; n < t.length; n++)
                      e[n] = 1 - t[n];
                    return e;
                  }
                  t.Envelope.Type = {
                    linear: "linear",
                    exponential: "exponential",
                    bounce: { In: f(c), Out: c },
                    cosine: { In: r, Out: ((u = r), u.slice(0).reverse()) },
                    step: { In: a, Out: f(a) },
                    ripple: { In: i, Out: f(i) },
                    sine: { In: s, Out: f(s) }
                  };
                })(),
                (t.Envelope.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._sig.dispose(),
                    (this._sig = null),
                    (this._attackCurve = null),
                    (this._releaseCurve = null),
                    this
                  );
                }),
                t.Envelope
              );
            }),
            n(function(t) {
              return (
                (t.AmplitudeEnvelope = function() {
                  t.Envelope.apply(this, arguments),
                    (this.input = this.output = new t.Gain()),
                    this._sig.connect(this.output.gain);
                }),
                t.extend(t.AmplitudeEnvelope, t.Envelope),
                (t.AmplitudeEnvelope.prototype.dispose = function() {
                  return t.Envelope.prototype.dispose.call(this), this;
                }),
                t.AmplitudeEnvelope
              );
            }),
            n(function(t) {
              t.supported &&
                (AnalyserNode.prototype.getFloatTimeDomainData ||
                  (AnalyserNode.prototype.getFloatTimeDomainData = function(t) {
                    var e = new Uint8Array(t.length);
                    this.getByteTimeDomainData(e);
                    for (var n = 0; n < e.length; n++)
                      t[n] = (e[n] - 128) / 128;
                  }));
            }),
            n(function(t) {
              return (
                (t.Analyser = function() {
                  var e = t.defaults(arguments, ["type", "size"], t.Analyser);
                  t.AudioNode.call(this),
                    (this._analyser = this.input = this.output = this.context.createAnalyser()),
                    (this._type = e.type),
                    (this._buffer = null),
                    (this.size = e.size),
                    (this.type = e.type);
                }),
                t.extend(t.Analyser, t.AudioNode),
                (t.Analyser.defaults = {
                  size: 1024,
                  type: "fft",
                  smoothing: 0.8
                }),
                (t.Analyser.Type = { Waveform: "waveform", FFT: "fft" }),
                (t.Analyser.prototype.getValue = function() {
                  return (
                    this._type === t.Analyser.Type.FFT
                      ? this._analyser.getFloatFrequencyData(this._buffer)
                      : this._type === t.Analyser.Type.Waveform &&
                        this._analyser.getFloatTimeDomainData(this._buffer),
                    this._buffer
                  );
                }),
                Object.defineProperty(t.Analyser.prototype, "size", {
                  get: function() {
                    return this._analyser.frequencyBinCount;
                  },
                  set: function(t) {
                    (this._analyser.fftSize = 2 * t),
                      (this._buffer = new Float32Array(t));
                  }
                }),
                Object.defineProperty(t.Analyser.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(e) {
                    if (
                      e !== t.Analyser.Type.Waveform &&
                      e !== t.Analyser.Type.FFT
                    )
                      throw new TypeError("Tone.Analyser: invalid type: " + e);
                    this._type = e;
                  }
                }),
                Object.defineProperty(t.Analyser.prototype, "smoothing", {
                  get: function() {
                    return this._analyser.smoothingTimeConstant;
                  },
                  set: function(t) {
                    this._analyser.smoothingTimeConstant = t;
                  }
                }),
                (t.Analyser.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this),
                    this._analyser.disconnect(),
                    (this._analyser = null),
                    (this._buffer = null);
                }),
                t.Analyser
              );
            }),
            n(function(t) {
              return (
                (t.Compressor = function() {
                  var e = t.defaults(
                    arguments,
                    ["threshold", "ratio"],
                    t.Compressor
                  );
                  t.AudioNode.call(this),
                    (this._compressor = this.input = this.output = this.context.createDynamicsCompressor()),
                    (this.threshold = new t.Param({
                      param: this._compressor.threshold,
                      units: t.Type.Decibels,
                      convert: !1
                    })),
                    (this.attack = new t.Param(
                      this._compressor.attack,
                      t.Type.Time
                    )),
                    (this.release = new t.Param(
                      this._compressor.release,
                      t.Type.Time
                    )),
                    (this.knee = new t.Param({
                      param: this._compressor.knee,
                      units: t.Type.Decibels,
                      convert: !1
                    })),
                    (this.ratio = new t.Param({
                      param: this._compressor.ratio,
                      convert: !1
                    })),
                    this._readOnly([
                      "knee",
                      "release",
                      "attack",
                      "ratio",
                      "threshold"
                    ]),
                    this.set(e);
                }),
                t.extend(t.Compressor, t.AudioNode),
                (t.Compressor.defaults = {
                  ratio: 12,
                  threshold: -24,
                  release: 0.25,
                  attack: 0.003,
                  knee: 30
                }),
                (t.Compressor.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable([
                      "knee",
                      "release",
                      "attack",
                      "ratio",
                      "threshold"
                    ]),
                    this._compressor.disconnect(),
                    (this._compressor = null),
                    this.attack.dispose(),
                    (this.attack = null),
                    this.release.dispose(),
                    (this.release = null),
                    this.threshold.dispose(),
                    (this.threshold = null),
                    this.ratio.dispose(),
                    (this.ratio = null),
                    this.knee.dispose(),
                    (this.knee = null),
                    this
                  );
                }),
                t.Compressor
              );
            }),
            n(function(t) {
              return (
                (t.Add = function(e) {
                  t.Signal.call(this),
                    this.createInsOuts(2, 0),
                    (this._sum = this.input[0] = this.input[1] = this.output = new t.Gain()),
                    (this._param = this.input[1] = new t.Signal(e)),
                    this._param.connect(this._sum);
                }),
                t.extend(t.Add, t.Signal),
                (t.Add.prototype.dispose = function() {
                  return (
                    t.Signal.prototype.dispose.call(this),
                    this._sum.dispose(),
                    (this._sum = null),
                    this
                  );
                }),
                t.Add
              );
            }),
            n(function(t) {
              return (
                (t.Multiply = function(e) {
                  t.Signal.call(this),
                    this.createInsOuts(2, 0),
                    (this._mult = this.input[0] = this.output = new t.Gain()),
                    (this._param = this.input[1] = this.output.gain),
                    (this.value = t.defaultArg(e, 0));
                }),
                t.extend(t.Multiply, t.Signal),
                (t.Multiply.prototype.dispose = function() {
                  return (
                    t.Signal.prototype.dispose.call(this),
                    this._mult.dispose(),
                    (this._mult = null),
                    (this._param = null),
                    this
                  );
                }),
                t.Multiply
              );
            }),
            n(function(t) {
              return (
                (t.Negate = function() {
                  t.SignalBase.call(this),
                    (this._multiply = this.input = this.output = new t.Multiply(
                      -1
                    ));
                }),
                t.extend(t.Negate, t.SignalBase),
                (t.Negate.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._multiply.dispose(),
                    (this._multiply = null),
                    this
                  );
                }),
                t.Negate
              );
            }),
            n(function(t) {
              return (
                (t.Subtract = function(e) {
                  t.Signal.call(this),
                    this.createInsOuts(2, 0),
                    (this._sum = this.input[0] = this.output = new t.Gain()),
                    (this._neg = new t.Negate()),
                    (this._param = this.input[1] = new t.Signal(e)),
                    this._param.chain(this._neg, this._sum);
                }),
                t.extend(t.Subtract, t.Signal),
                (t.Subtract.prototype.dispose = function() {
                  return (
                    t.Signal.prototype.dispose.call(this),
                    this._neg.dispose(),
                    (this._neg = null),
                    this._sum.disconnect(),
                    (this._sum = null),
                    this
                  );
                }),
                t.Subtract
              );
            }),
            n(function(t) {
              return (
                (t.EqualPowerGain = function() {
                  t.SignalBase.call(this),
                    (this._eqPower = this.input = this.output = new t.WaveShaper(
                      function(e) {
                        return Math.abs(e) < 0.001 ? 0 : t.equalPowerScale(e);
                      }.bind(this),
                      4096
                    ));
                }),
                t.extend(t.EqualPowerGain, t.SignalBase),
                (t.EqualPowerGain.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._eqPower.dispose(),
                    (this._eqPower = null),
                    this
                  );
                }),
                t.EqualPowerGain
              );
            }),
            n(function(t) {
              return (
                (t.CrossFade = function(e) {
                  t.AudioNode.call(this),
                    this.createInsOuts(2, 1),
                    (this.a = this.input[0] = new t.Gain()),
                    (this.b = this.input[1] = new t.Gain()),
                    (this.fade = new t.Signal(
                      t.defaultArg(e, 0.5),
                      t.Type.NormalRange
                    )),
                    (this._equalPowerA = new t.EqualPowerGain()),
                    (this._equalPowerB = new t.EqualPowerGain()),
                    (this._one = this.context.getConstant(1)),
                    (this._invert = new t.Subtract()),
                    this.a.connect(this.output),
                    this.b.connect(this.output),
                    this.fade.chain(this._equalPowerB, this.b.gain),
                    this._one.connect(this._invert, 0, 0),
                    this.fade.connect(this._invert, 0, 1),
                    this._invert.chain(this._equalPowerA, this.a.gain),
                    this._readOnly("fade");
                }),
                t.extend(t.CrossFade, t.AudioNode),
                (t.CrossFade.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable("fade"),
                    this._equalPowerA.dispose(),
                    (this._equalPowerA = null),
                    this._equalPowerB.dispose(),
                    (this._equalPowerB = null),
                    this.fade.dispose(),
                    (this.fade = null),
                    this._invert.dispose(),
                    (this._invert = null),
                    (this._one = null),
                    this.a.dispose(),
                    (this.a = null),
                    this.b.dispose(),
                    (this.b = null),
                    this
                  );
                }),
                t.CrossFade
              );
            }),
            n(function(t) {
              return (
                (t.Filter = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "type", "rolloff"],
                    t.Filter
                  );
                  t.AudioNode.call(this),
                    this.createInsOuts(1, 1),
                    (this._filters = []),
                    (this.frequency = new t.Signal(
                      e.frequency,
                      t.Type.Frequency
                    )),
                    (this.detune = new t.Signal(0, t.Type.Cents)),
                    (this.gain = new t.Signal({ value: e.gain, convert: !1 })),
                    (this.Q = new t.Signal(e.Q)),
                    (this._type = e.type),
                    (this._rolloff = e.rolloff),
                    (this.rolloff = e.rolloff),
                    this._readOnly(["detune", "frequency", "gain", "Q"]);
                }),
                t.extend(t.Filter, t.AudioNode),
                (t.Filter.defaults = {
                  type: "lowpass",
                  frequency: 350,
                  rolloff: -12,
                  Q: 1,
                  gain: 0
                }),
                Object.defineProperty(t.Filter.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(t) {
                    if (
                      -1 ===
                      [
                        "lowpass",
                        "highpass",
                        "bandpass",
                        "lowshelf",
                        "highshelf",
                        "notch",
                        "allpass",
                        "peaking"
                      ].indexOf(t)
                    )
                      throw new TypeError("Tone.Filter: invalid type " + t);
                    this._type = t;
                    for (var e = 0; e < this._filters.length; e++)
                      this._filters[e].type = t;
                  }
                }),
                Object.defineProperty(t.Filter.prototype, "rolloff", {
                  get: function() {
                    return this._rolloff;
                  },
                  set: function(e) {
                    e = parseInt(e, 10);
                    var n = [-12, -24, -48, -96].indexOf(e);
                    if (-1 === n)
                      throw new RangeError(
                        "Tone.Filter: rolloff can only be -12, -24, -48 or -96"
                      );
                    (n += 1), (this._rolloff = e), this.input.disconnect();
                    for (var r = 0; r < this._filters.length; r++)
                      this._filters[r].disconnect(), (this._filters[r] = null);
                    this._filters = new Array(n);
                    for (var i = 0; i < n; i++) {
                      var o = this.context.createBiquadFilter();
                      (o.type = this._type),
                        this.frequency.connect(o.frequency),
                        this.detune.connect(o.detune),
                        this.Q.connect(o.Q),
                        this.gain.connect(o.gain),
                        (this._filters[i] = o);
                    }
                    var a = [this.input]
                      .concat(this._filters)
                      .concat([this.output]);
                    t.connectSeries.apply(t, a);
                  }
                }),
                (t.Filter.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this);
                  for (var e = 0; e < this._filters.length; e++)
                    this._filters[e].disconnect(), (this._filters[e] = null);
                  return (
                    (this._filters = null),
                    this._writable(["detune", "frequency", "gain", "Q"]),
                    this.frequency.dispose(),
                    this.Q.dispose(),
                    (this.frequency = null),
                    (this.Q = null),
                    this.detune.dispose(),
                    (this.detune = null),
                    this.gain.dispose(),
                    (this.gain = null),
                    this
                  );
                }),
                t.Filter
              );
            }),
            n(function(t) {
              return (
                (t.MultibandSplit = function() {
                  var e = t.defaults(
                    arguments,
                    ["lowFrequency", "highFrequency"],
                    t.MultibandSplit
                  );
                  t.AudioNode.call(this),
                    (this.input = new t.Gain()),
                    (this.output = new Array(3)),
                    (this.low = this.output[0] = new t.Filter(0, "lowpass")),
                    (this._lowMidFilter = new t.Filter(0, "highpass")),
                    (this.mid = this.output[1] = new t.Filter(0, "lowpass")),
                    (this.high = this.output[2] = new t.Filter(0, "highpass")),
                    (this.lowFrequency = new t.Signal(
                      e.lowFrequency,
                      t.Type.Frequency
                    )),
                    (this.highFrequency = new t.Signal(
                      e.highFrequency,
                      t.Type.Frequency
                    )),
                    (this.Q = new t.Signal(e.Q)),
                    this.input.fan(this.low, this.high),
                    this.input.chain(this._lowMidFilter, this.mid),
                    this.lowFrequency.connect(this.low.frequency),
                    this.lowFrequency.connect(this._lowMidFilter.frequency),
                    this.highFrequency.connect(this.mid.frequency),
                    this.highFrequency.connect(this.high.frequency),
                    this.Q.connect(this.low.Q),
                    this.Q.connect(this._lowMidFilter.Q),
                    this.Q.connect(this.mid.Q),
                    this.Q.connect(this.high.Q),
                    this._readOnly([
                      "high",
                      "mid",
                      "low",
                      "highFrequency",
                      "lowFrequency"
                    ]);
                }),
                t.extend(t.MultibandSplit, t.AudioNode),
                (t.MultibandSplit.defaults = {
                  lowFrequency: 400,
                  highFrequency: 2500,
                  Q: 1
                }),
                (t.MultibandSplit.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable([
                      "high",
                      "mid",
                      "low",
                      "highFrequency",
                      "lowFrequency"
                    ]),
                    this.low.dispose(),
                    (this.low = null),
                    this._lowMidFilter.dispose(),
                    (this._lowMidFilter = null),
                    this.mid.dispose(),
                    (this.mid = null),
                    this.high.dispose(),
                    (this.high = null),
                    this.lowFrequency.dispose(),
                    (this.lowFrequency = null),
                    this.highFrequency.dispose(),
                    (this.highFrequency = null),
                    this.Q.dispose(),
                    (this.Q = null),
                    this
                  );
                }),
                t.MultibandSplit
              );
            }),
            n(function(t) {
              return (
                (t.EQ3 = function() {
                  var e = t.defaults(arguments, ["low", "mid", "high"], t.EQ3);
                  t.AudioNode.call(this),
                    (this.output = new t.Gain()),
                    (this._multibandSplit = this.input = new t.MultibandSplit({
                      lowFrequency: e.lowFrequency,
                      highFrequency: e.highFrequency
                    })),
                    (this._lowGain = new t.Gain(e.low, t.Type.Decibels)),
                    (this._midGain = new t.Gain(e.mid, t.Type.Decibels)),
                    (this._highGain = new t.Gain(e.high, t.Type.Decibels)),
                    (this.low = this._lowGain.gain),
                    (this.mid = this._midGain.gain),
                    (this.high = this._highGain.gain),
                    (this.Q = this._multibandSplit.Q),
                    (this.lowFrequency = this._multibandSplit.lowFrequency),
                    (this.highFrequency = this._multibandSplit.highFrequency),
                    this._multibandSplit.low.chain(this._lowGain, this.output),
                    this._multibandSplit.mid.chain(this._midGain, this.output),
                    this._multibandSplit.high.chain(
                      this._highGain,
                      this.output
                    ),
                    this._readOnly([
                      "low",
                      "mid",
                      "high",
                      "lowFrequency",
                      "highFrequency"
                    ]);
                }),
                t.extend(t.EQ3, t.AudioNode),
                (t.EQ3.defaults = {
                  low: 0,
                  mid: 0,
                  high: 0,
                  lowFrequency: 400,
                  highFrequency: 2500
                }),
                (t.EQ3.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable([
                      "low",
                      "mid",
                      "high",
                      "lowFrequency",
                      "highFrequency"
                    ]),
                    this._multibandSplit.dispose(),
                    (this._multibandSplit = null),
                    (this.lowFrequency = null),
                    (this.highFrequency = null),
                    this._lowGain.dispose(),
                    (this._lowGain = null),
                    this._midGain.dispose(),
                    (this._midGain = null),
                    this._highGain.dispose(),
                    (this._highGain = null),
                    (this.low = null),
                    (this.mid = null),
                    (this.high = null),
                    (this.Q = null),
                    this
                  );
                }),
                t.EQ3
              );
            }),
            n(function(t) {
              return (
                (t.Scale = function(e, n) {
                  t.SignalBase.call(this),
                    (this._outputMin = t.defaultArg(e, 0)),
                    (this._outputMax = t.defaultArg(n, 1)),
                    (this._scale = this.input = new t.Multiply(1)),
                    (this._add = this.output = new t.Add(0)),
                    this._scale.connect(this._add),
                    this._setRange();
                }),
                t.extend(t.Scale, t.SignalBase),
                Object.defineProperty(t.Scale.prototype, "min", {
                  get: function() {
                    return this._outputMin;
                  },
                  set: function(t) {
                    (this._outputMin = t), this._setRange();
                  }
                }),
                Object.defineProperty(t.Scale.prototype, "max", {
                  get: function() {
                    return this._outputMax;
                  },
                  set: function(t) {
                    (this._outputMax = t), this._setRange();
                  }
                }),
                (t.Scale.prototype._setRange = function() {
                  (this._add.value = this._outputMin),
                    (this._scale.value = this._outputMax - this._outputMin);
                }),
                (t.Scale.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._add.dispose(),
                    (this._add = null),
                    this._scale.dispose(),
                    (this._scale = null),
                    this
                  );
                }),
                t.Scale
              );
            }),
            n(function(t) {
              return (
                (t.ScaleExp = function(e, n, r) {
                  t.SignalBase.call(this),
                    (this._scale = this.output = new t.Scale(e, n)),
                    (this._exp = this.input = new t.Pow(t.defaultArg(r, 2))),
                    this._exp.connect(this._scale);
                }),
                t.extend(t.ScaleExp, t.SignalBase),
                Object.defineProperty(t.ScaleExp.prototype, "exponent", {
                  get: function() {
                    return this._exp.value;
                  },
                  set: function(t) {
                    this._exp.value = t;
                  }
                }),
                Object.defineProperty(t.ScaleExp.prototype, "min", {
                  get: function() {
                    return this._scale.min;
                  },
                  set: function(t) {
                    this._scale.min = t;
                  }
                }),
                Object.defineProperty(t.ScaleExp.prototype, "max", {
                  get: function() {
                    return this._scale.max;
                  },
                  set: function(t) {
                    this._scale.max = t;
                  }
                }),
                (t.ScaleExp.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._scale.dispose(),
                    (this._scale = null),
                    this._exp.dispose(),
                    (this._exp = null),
                    this
                  );
                }),
                t.ScaleExp
              );
            }),
            n(function(t) {
              return (
                (t.Delay = function() {
                  var e = t.defaults(
                    arguments,
                    ["delayTime", "maxDelay"],
                    t.Delay
                  );
                  t.AudioNode.call(this),
                    (this._maxDelay = Math.max(
                      this.toSeconds(e.maxDelay),
                      this.toSeconds(e.delayTime)
                    )),
                    (this._delayNode = this.input = this.output = this.context.createDelay(
                      this._maxDelay
                    )),
                    (this.delayTime = new t.Param({
                      param: this._delayNode.delayTime,
                      units: t.Type.Time,
                      value: e.delayTime
                    })),
                    this._readOnly("delayTime");
                }),
                t.extend(t.Delay, t.AudioNode),
                (t.Delay.defaults = { maxDelay: 1, delayTime: 0 }),
                Object.defineProperty(t.Delay.prototype, "maxDelay", {
                  get: function() {
                    return this._maxDelay;
                  }
                }),
                (t.Delay.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._delayNode.disconnect(),
                    (this._delayNode = null),
                    this._writable("delayTime"),
                    (this.delayTime = null),
                    this
                  );
                }),
                t.Delay
              );
            }),
            n(function(t) {
              return (
                (t.FeedbackCombFilter = function() {
                  var e = t.defaults(
                    arguments,
                    ["delayTime", "resonance"],
                    t.FeedbackCombFilter
                  );
                  t.AudioNode.call(this),
                    (this._delay = this.input = this.output = new t.Delay(
                      e.delayTime
                    )),
                    (this.delayTime = this._delay.delayTime),
                    (this._feedback = new t.Gain(
                      e.resonance,
                      t.Type.NormalRange
                    )),
                    (this.resonance = this._feedback.gain),
                    this._delay.chain(this._feedback, this._delay),
                    this._readOnly(["resonance", "delayTime"]);
                }),
                t.extend(t.FeedbackCombFilter, t.AudioNode),
                (t.FeedbackCombFilter.defaults = {
                  delayTime: 0.1,
                  resonance: 0.5
                }),
                (t.FeedbackCombFilter.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable(["resonance", "delayTime"]),
                    this._delay.dispose(),
                    (this._delay = null),
                    (this.delayTime = null),
                    this._feedback.dispose(),
                    (this._feedback = null),
                    (this.resonance = null),
                    this
                  );
                }),
                t.FeedbackCombFilter
              );
            }),
            n(function(t) {
              return (
                (t.FFT = function() {
                  var e = t.defaults(arguments, ["size"], t.FFT);
                  (e.type = t.Analyser.Type.FFT),
                    t.AudioNode.call(this),
                    (this._analyser = this.input = this.output = new t.Analyser(
                      e
                    ));
                }),
                t.extend(t.FFT, t.AudioNode),
                (t.FFT.defaults = { size: 1024 }),
                (t.FFT.prototype.getValue = function() {
                  return this._analyser.getValue();
                }),
                Object.defineProperty(t.FFT.prototype, "size", {
                  get: function() {
                    return this._analyser.size;
                  },
                  set: function(t) {
                    this._analyser.size = t;
                  }
                }),
                (t.FFT.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this),
                    this._analyser.dispose(),
                    (this._analyser = null);
                }),
                t.FFT
              );
            }),
            n(function(t) {
              return (
                (t.Abs = function() {
                  t.SignalBase.call(this),
                    (this._abs = this.input = this.output = new t.WaveShaper(
                      function(t) {
                        return Math.abs(t) < 0.001 ? 0 : Math.abs(t);
                      },
                      1024
                    ));
                }),
                t.extend(t.Abs, t.SignalBase),
                (t.Abs.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._abs.dispose(),
                    (this._abs = null),
                    this
                  );
                }),
                t.Abs
              );
            }),
            n(function(t) {
              return (
                (t.Follower = function() {
                  var e = t.defaults(
                    arguments,
                    ["attack", "release"],
                    t.Follower
                  );
                  t.AudioNode.call(this),
                    this.createInsOuts(1, 1),
                    (this._abs = new t.Abs()),
                    (this._filter = this.context.createBiquadFilter()),
                    (this._filter.type = "lowpass"),
                    (this._filter.frequency.value = 0),
                    (this._filter.Q.value = -100),
                    (this._frequencyValues = new t.WaveShaper()),
                    (this._sub = new t.Subtract()),
                    (this._delay = new t.Delay(this.blockTime)),
                    (this._mult = new t.Multiply(1e4)),
                    (this._attack = e.attack),
                    (this._release = e.release),
                    this.input.chain(this._abs, this._filter, this.output),
                    this._abs.connect(this._sub, 0, 1),
                    this._filter.chain(this._delay, this._sub),
                    this._sub.chain(
                      this._mult,
                      this._frequencyValues,
                      this._filter.frequency
                    ),
                    this._setAttackRelease(this._attack, this._release);
                }),
                t.extend(t.Follower, t.AudioNode),
                (t.Follower.defaults = { attack: 0.05, release: 0.5 }),
                (t.Follower.prototype._setAttackRelease = function(e, n) {
                  var r = this.blockTime;
                  (e = t.Time(e).toFrequency()),
                    (n = t.Time(n).toFrequency()),
                    (e = Math.max(e, r)),
                    (n = Math.max(n, r)),
                    this._frequencyValues.setMap(function(t) {
                      return t <= 0 ? e : n;
                    });
                }),
                Object.defineProperty(t.Follower.prototype, "attack", {
                  get: function() {
                    return this._attack;
                  },
                  set: function(t) {
                    (this._attack = t),
                      this._setAttackRelease(this._attack, this._release);
                  }
                }),
                Object.defineProperty(t.Follower.prototype, "release", {
                  get: function() {
                    return this._release;
                  },
                  set: function(t) {
                    (this._release = t),
                      this._setAttackRelease(this._attack, this._release);
                  }
                }),
                (t.Follower.prototype.connect = t.SignalBase.prototype.connect),
                (t.Follower.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._filter.disconnect(),
                    (this._filter = null),
                    this._frequencyValues.disconnect(),
                    (this._frequencyValues = null),
                    this._delay.dispose(),
                    (this._delay = null),
                    this._sub.disconnect(),
                    (this._sub = null),
                    this._abs.dispose(),
                    (this._abs = null),
                    this._mult.dispose(),
                    (this._mult = null),
                    (this._curve = null),
                    this
                  );
                }),
                t.Follower
              );
            }),
            n(function(t) {
              return (
                (t.ScaledEnvelope = function() {
                  var e = t.defaults(
                    arguments,
                    ["attack", "decay", "sustain", "release"],
                    t.Envelope
                  );
                  t.Envelope.call(this, e),
                    (e = t.defaultArg(e, t.ScaledEnvelope.defaults)),
                    (this._exp = this.output = new t.Pow(e.exponent)),
                    (this._scale = this.output = new t.Scale(e.min, e.max)),
                    this._sig.chain(this._exp, this._scale);
                }),
                t.extend(t.ScaledEnvelope, t.Envelope),
                (t.ScaledEnvelope.defaults = { min: 0, max: 1, exponent: 1 }),
                Object.defineProperty(t.ScaledEnvelope.prototype, "min", {
                  get: function() {
                    return this._scale.min;
                  },
                  set: function(t) {
                    this._scale.min = t;
                  }
                }),
                Object.defineProperty(t.ScaledEnvelope.prototype, "max", {
                  get: function() {
                    return this._scale.max;
                  },
                  set: function(t) {
                    this._scale.max = t;
                  }
                }),
                Object.defineProperty(t.ScaledEnvelope.prototype, "exponent", {
                  get: function() {
                    return this._exp.value;
                  },
                  set: function(t) {
                    this._exp.value = t;
                  }
                }),
                (t.ScaledEnvelope.prototype.dispose = function() {
                  return (
                    t.Envelope.prototype.dispose.call(this),
                    this._scale.dispose(),
                    (this._scale = null),
                    this._exp.dispose(),
                    (this._exp = null),
                    this
                  );
                }),
                t.ScaledEnvelope
              );
            }),
            n(function(t) {
              return (
                (t.FrequencyEnvelope = function() {
                  var e = t.defaults(
                    arguments,
                    ["attack", "decay", "sustain", "release"],
                    t.Envelope
                  );
                  t.ScaledEnvelope.call(this, e),
                    (e = t.defaultArg(e, t.FrequencyEnvelope.defaults)),
                    (this._octaves = e.octaves),
                    (this.baseFrequency = e.baseFrequency),
                    (this.octaves = e.octaves);
                }),
                t.extend(t.FrequencyEnvelope, t.Envelope),
                (t.FrequencyEnvelope.defaults = {
                  baseFrequency: 200,
                  octaves: 4,
                  exponent: 2
                }),
                Object.defineProperty(
                  t.FrequencyEnvelope.prototype,
                  "baseFrequency",
                  {
                    get: function() {
                      return this._scale.min;
                    },
                    set: function(t) {
                      (this._scale.min = this.toFrequency(t)),
                        (this.octaves = this._octaves);
                    }
                  }
                ),
                Object.defineProperty(
                  t.FrequencyEnvelope.prototype,
                  "octaves",
                  {
                    get: function() {
                      return this._octaves;
                    },
                    set: function(t) {
                      (this._octaves = t),
                        (this._scale.max = this.baseFrequency * Math.pow(2, t));
                    }
                  }
                ),
                Object.defineProperty(
                  t.FrequencyEnvelope.prototype,
                  "exponent",
                  {
                    get: function() {
                      return this._exp.value;
                    },
                    set: function(t) {
                      this._exp.value = t;
                    }
                  }
                ),
                (t.FrequencyEnvelope.prototype.dispose = function() {
                  return t.ScaledEnvelope.prototype.dispose.call(this), this;
                }),
                t.FrequencyEnvelope
              );
            }),
            n(function(t) {
              return (
                (t.GreaterThanZero = function() {
                  t.SignalBase.call(this),
                    (this._thresh = this.output = new t.WaveShaper(function(t) {
                      return t <= 0 ? 0 : 1;
                    }, 127)),
                    (this._scale = this.input = new t.Multiply(1e4)),
                    this._scale.connect(this._thresh);
                }),
                t.extend(t.GreaterThanZero, t.SignalBase),
                (t.GreaterThanZero.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._scale.dispose(),
                    (this._scale = null),
                    this._thresh.dispose(),
                    (this._thresh = null),
                    this
                  );
                }),
                t.GreaterThanZero
              );
            }),
            n(function(t) {
              return (
                (t.GreaterThan = function(e) {
                  t.Signal.call(this),
                    this.createInsOuts(2, 0),
                    (this._param = this.input[0] = new t.Subtract(e)),
                    (this.input[1] = this._param.input[1]),
                    (this._gtz = this.output = new t.GreaterThanZero()),
                    this._param.connect(this._gtz);
                }),
                t.extend(t.GreaterThan, t.Signal),
                (t.GreaterThan.prototype.dispose = function() {
                  return (
                    t.Signal.prototype.dispose.call(this),
                    this._gtz.dispose(),
                    (this._gtz = null),
                    this
                  );
                }),
                t.GreaterThan
              );
            }),
            n(function(t) {
              return (
                (t.Gate = function() {
                  var e = t.defaults(
                    arguments,
                    ["threshold", "attack", "release"],
                    t.Gate
                  );
                  t.AudioNode.call(this),
                    this.createInsOuts(1, 1),
                    (this._follower = new t.Follower(e.attack, e.release)),
                    (this._gt = new t.GreaterThan(t.dbToGain(e.threshold))),
                    this.input.connect(this.output),
                    this.input.chain(
                      this._gt,
                      this._follower,
                      this.output.gain
                    );
                }),
                t.extend(t.Gate, t.AudioNode),
                (t.Gate.defaults = {
                  attack: 0.1,
                  release: 0.1,
                  threshold: -40
                }),
                Object.defineProperty(t.Gate.prototype, "threshold", {
                  get: function() {
                    return t.gainToDb(this._gt.value);
                  },
                  set: function(e) {
                    this._gt.value = t.dbToGain(e);
                  }
                }),
                Object.defineProperty(t.Gate.prototype, "attack", {
                  get: function() {
                    return this._follower.attack;
                  },
                  set: function(t) {
                    this._follower.attack = t;
                  }
                }),
                Object.defineProperty(t.Gate.prototype, "release", {
                  get: function() {
                    return this._follower.release;
                  },
                  set: function(t) {
                    this._follower.release = t;
                  }
                }),
                (t.Gate.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._follower.dispose(),
                    this._gt.dispose(),
                    (this._follower = null),
                    (this._gt = null),
                    this
                  );
                }),
                t.Gate
              );
            }),
            n(function(t) {
              function e(t) {
                return function(e, n) {
                  (n = this.toSeconds(n)), t.apply(this, arguments);
                  var r = this._events.get(n),
                    i = this._events.previousEvent(r),
                    o = this._getTicksUntilEvent(i, n);
                  return (r.ticks = Math.max(o, 0)), this;
                };
              }
              return (
                (t.TickSignal = function(e) {
                  (e = t.defaultArg(e, 1)),
                    t.Signal.call(this, { units: t.Type.Ticks, value: e }),
                    (this._events.memory = 1 / 0),
                    this.cancelScheduledValues(0),
                    this._events.add({
                      type: t.Param.AutomationType.SetValue,
                      time: 0,
                      value: e
                    });
                }),
                t.extend(t.TickSignal, t.Signal),
                (t.TickSignal.prototype.setValueAtTime = e(
                  t.Signal.prototype.setValueAtTime
                )),
                (t.TickSignal.prototype.linearRampToValueAtTime = e(
                  t.Signal.prototype.linearRampToValueAtTime
                )),
                (t.TickSignal.prototype.setTargetAtTime = function(t, e, n) {
                  (e = this.toSeconds(e)),
                    this.setRampPoint(e),
                    (t = this._fromUnits(t));
                  for (
                    var r = this._events.get(e),
                      i = Math.round(Math.max(1 / n, 1)),
                      o = 0;
                    o <= i;
                    o++
                  ) {
                    var a = n * o + e,
                      s = this._exponentialApproach(r.time, r.value, t, n, a);
                    this.linearRampToValueAtTime(this._toUnits(s), a);
                  }
                  return this;
                }),
                (t.TickSignal.prototype.exponentialRampToValueAtTime = function(
                  t,
                  e
                ) {
                  (e = this.toSeconds(e)), (t = this._fromUnits(t));
                  var n = this._events.get(e);
                  null === n && (n = { value: this._initialValue, time: 0 });
                  for (
                    var r = Math.round(Math.max(10 * (e - n.time), 1)),
                      i = (e - n.time) / r,
                      o = 0;
                    o <= r;
                    o++
                  ) {
                    var a = i * o + n.time,
                      s = this._exponentialInterpolate(
                        n.time,
                        n.value,
                        e,
                        t,
                        a
                      );
                    this.linearRampToValueAtTime(this._toUnits(s), a);
                  }
                  return this;
                }),
                (t.TickSignal.prototype._getTicksUntilEvent = function(e, n) {
                  if (null === e) e = { ticks: 0, time: 0 };
                  else if (t.isUndef(e.ticks)) {
                    var r = this._events.previousEvent(e);
                    e.ticks = this._getTicksUntilEvent(r, e.time);
                  }
                  var i = this.getValueAtTime(e.time),
                    o = this.getValueAtTime(n);
                  return (
                    this._events.get(n).time === n &&
                      this._events.get(n).type ===
                        t.Param.AutomationType.SetValue &&
                      (o = this.getValueAtTime(n - this.sampleTime)),
                    0.5 * (n - e.time) * (i + o) + e.ticks
                  );
                }),
                (t.TickSignal.prototype.getTicksAtTime = function(t) {
                  t = this.toSeconds(t);
                  var e = this._events.get(t);
                  return Math.max(this._getTicksUntilEvent(e, t), 0);
                }),
                (t.TickSignal.prototype.getDurationOfTicks = function(t, e) {
                  e = this.toSeconds(e);
                  var n = this.getTicksAtTime(e);
                  return this.getTimeOfTick(n + t) - e;
                }),
                (t.TickSignal.prototype.getTimeOfTick = function(e) {
                  var n = this._events.get(e, "ticks"),
                    r = this._events.getAfter(e, "ticks");
                  if (n && n.ticks === e) return n.time;
                  if (
                    n &&
                    r &&
                    r.type === t.Param.AutomationType.Linear &&
                    n.value !== r.value
                  ) {
                    var i = this.getValueAtTime(n.time),
                      o = (this.getValueAtTime(r.time) - i) / (r.time - n.time),
                      a = Math.sqrt(Math.pow(i, 2) - 2 * o * (n.ticks - e)),
                      s = (-i + a) / o;
                    return (s > 0 ? s : (-i - a) / o) + n.time;
                  }
                  return n
                    ? 0 === n.value
                      ? 1 / 0
                      : n.time + (e - n.ticks) / n.value
                    : e / this._initialValue;
                }),
                (t.TickSignal.prototype.ticksToTime = function(e, n) {
                  return (
                    (n = this.toSeconds(n)),
                    new t.Time(this.getDurationOfTicks(e, n))
                  );
                }),
                (t.TickSignal.prototype.timeToTicks = function(e, n) {
                  (n = this.toSeconds(n)), (e = this.toSeconds(e));
                  var r = this.getTicksAtTime(n),
                    i = this.getTicksAtTime(n + e);
                  return new t.Ticks(i - r);
                }),
                t.TickSignal
              );
            }),
            n(function(t) {
              return (
                (t.TimelineState = function(e) {
                  t.Timeline.call(this), (this._initial = e);
                }),
                t.extend(t.TimelineState, t.Timeline),
                (t.TimelineState.prototype.getValueAtTime = function(t) {
                  var e = this.get(t);
                  return null !== e ? e.state : this._initial;
                }),
                (t.TimelineState.prototype.setStateAtTime = function(t, e) {
                  return this.add({ state: t, time: e }), this;
                }),
                (t.TimelineState.prototype.getLastState = function(t, e) {
                  e = this.toSeconds(e);
                  for (var n = this._search(e); n >= 0; n--) {
                    var r = this._timeline[n];
                    if (r.state === t) return r;
                  }
                }),
                (t.TimelineState.prototype.getNextState = function(t, e) {
                  e = this.toSeconds(e);
                  var n = this._search(e);
                  if (-1 !== n)
                    for (var r = n; r < this._timeline.length; r++) {
                      var i = this._timeline[r];
                      if (i.state === t) return i;
                    }
                }),
                t.TimelineState
              );
            }),
            n(function(t) {
              return (
                (t.TickSource = function() {
                  var e = t.defaults(arguments, ["frequency"], t.TickSource);
                  (this.frequency = new t.TickSignal(
                    e.frequency,
                    t.Type.Frequency
                  )),
                    this._readOnly("frequency"),
                    (this._state = new t.TimelineState(t.State.Stopped)),
                    this._state.setStateAtTime(t.State.Stopped, 0),
                    (this._tickOffset = new t.Timeline()),
                    this.setTicksAtTime(0, 0);
                }),
                t.extend(t.TickSource),
                (t.TickSource.defaults = { frequency: 1 }),
                Object.defineProperty(t.TickSource.prototype, "state", {
                  get: function() {
                    return this._state.getValueAtTime(this.now());
                  }
                }),
                (t.TickSource.prototype.start = function(e, n) {
                  return (
                    (e = this.toSeconds(e)),
                    this._state.getValueAtTime(e) !== t.State.Started &&
                      (this._state.setStateAtTime(t.State.Started, e),
                      t.isDefined(n) && this.setTicksAtTime(n, e)),
                    this
                  );
                }),
                (t.TickSource.prototype.stop = function(e) {
                  if (
                    ((e = this.toSeconds(e)),
                    this._state.getValueAtTime(e) === t.State.Stopped)
                  ) {
                    var n = this._state.get(e);
                    n.time > 0 &&
                      (this._tickOffset.cancel(n.time),
                      this._state.cancel(n.time));
                  }
                  return (
                    this._state.cancel(e),
                    this._state.setStateAtTime(t.State.Stopped, e),
                    this.setTicksAtTime(0, e),
                    this
                  );
                }),
                (t.TickSource.prototype.pause = function(e) {
                  return (
                    (e = this.toSeconds(e)),
                    this._state.getValueAtTime(e) === t.State.Started &&
                      this._state.setStateAtTime(t.State.Paused, e),
                    this
                  );
                }),
                (t.TickSource.prototype.cancel = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._state.cancel(t),
                    this._tickOffset.cancel(t),
                    this
                  );
                }),
                (t.TickSource.prototype.getTicksAtTime = function(e) {
                  e = this.toSeconds(e);
                  var n = this._state.getLastState(t.State.Stopped, e),
                    r = { state: t.State.Paused, time: e };
                  this._state.add(r);
                  var i = n,
                    o = 0;
                  return (
                    this._state.forEachBetween(
                      n.time,
                      e + this.sampleTime,
                      function(e) {
                        var n = i.time,
                          r = this._tickOffset.get(e.time);
                        r.time >= i.time && ((o = r.ticks), (n = r.time)),
                          i.state === t.State.Started &&
                            e.state !== t.State.Started &&
                            (o +=
                              this.frequency.getTicksAtTime(e.time) -
                              this.frequency.getTicksAtTime(n)),
                          (i = e);
                      }.bind(this)
                    ),
                    this._state.remove(r),
                    o
                  );
                }),
                Object.defineProperty(t.TickSource.prototype, "ticks", {
                  get: function() {
                    return this.getTicksAtTime(this.now());
                  },
                  set: function(t) {
                    this.setTicksAtTime(t, this.now());
                  }
                }),
                Object.defineProperty(t.TickSource.prototype, "seconds", {
                  get: function() {
                    return this.getSecondsAtTime(this.now());
                  },
                  set: function(t) {
                    var e = this.now(),
                      n = this.frequency.timeToTicks(t, e);
                    this.setTicksAtTime(n, e);
                  }
                }),
                (t.TickSource.prototype.getSecondsAtTime = function(e) {
                  e = this.toSeconds(e);
                  var n = this._state.getLastState(t.State.Stopped, e),
                    r = { state: t.State.Paused, time: e };
                  this._state.add(r);
                  var i = n,
                    o = 0;
                  return (
                    this._state.forEachBetween(
                      n.time,
                      e + this.sampleTime,
                      function(e) {
                        var n = i.time,
                          r = this._tickOffset.get(e.time);
                        r.time >= i.time && ((o = r.seconds), (n = r.time)),
                          i.state === t.State.Started &&
                            e.state !== t.State.Started &&
                            (o += e.time - n),
                          (i = e);
                      }.bind(this)
                    ),
                    this._state.remove(r),
                    o
                  );
                }),
                (t.TickSource.prototype.setTicksAtTime = function(t, e) {
                  return (
                    (e = this.toSeconds(e)),
                    this._tickOffset.cancel(e),
                    this._tickOffset.add({
                      time: e,
                      ticks: t,
                      seconds: this.frequency.getDurationOfTicks(t, e)
                    }),
                    this
                  );
                }),
                (t.TickSource.prototype.getStateAtTime = function(t) {
                  return (t = this.toSeconds(t)), this._state.getValueAtTime(t);
                }),
                (t.TickSource.prototype.getTimeOfTick = function(e, n) {
                  n = t.defaultArg(n, this.now());
                  var r = this._tickOffset.get(n),
                    i = this._state.get(n),
                    o = Math.max(r.time, i.time),
                    a = this.frequency.getTicksAtTime(o) + e - r.ticks;
                  return this.frequency.getTimeOfTick(a);
                }),
                (t.TickSource.prototype.forEachTickBetween = function(e, n, r) {
                  var i = this._state.get(e);
                  if (
                    (this._state.forEachBetween(
                      e,
                      n,
                      function(n) {
                        i.state === t.State.Started &&
                          n.state !== t.State.Started &&
                          this.forEachTickBetween(
                            Math.max(i.time, e),
                            n.time - this.sampleTime,
                            r
                          ),
                          (i = n);
                      }.bind(this)
                    ),
                    (e = Math.max(i.time, e)),
                    i.state === t.State.Started && this._state)
                  ) {
                    var o = this.frequency.getTicksAtTime(e),
                      a = (o - this.frequency.getTicksAtTime(i.time)) % 1;
                    0 !== a && (a = 1 - a);
                    for (
                      var s = this.frequency.getTimeOfTick(o + a), u = null;
                      s < n && this._state;

                    ) {
                      try {
                        r(s, Math.round(this.getTicksAtTime(s)));
                      } catch (t) {
                        u = t;
                        break;
                      }
                      this._state &&
                        (s += this.frequency.getDurationOfTicks(1, s));
                    }
                  }
                  if (u) throw u;
                  return this;
                }),
                (t.TickSource.prototype.dispose = function() {
                  return (
                    t.Param.prototype.dispose.call(this),
                    this._state.dispose(),
                    (this._state = null),
                    this._tickOffset.dispose(),
                    (this._tickOffset = null),
                    this._writable("frequency"),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this
                  );
                }),
                t.TickSource
              );
            }),
            n(function(t) {
              return (
                (t.Clock = function() {
                  var e = t.defaults(
                    arguments,
                    ["callback", "frequency"],
                    t.Clock
                  );
                  t.Emitter.call(this),
                    (this.callback = e.callback),
                    (this._nextTick = 0),
                    (this._tickSource = new t.TickSource(e.frequency)),
                    (this._lastUpdate = 0),
                    (this.frequency = this._tickSource.frequency),
                    this._readOnly("frequency"),
                    (this._state = new t.TimelineState(t.State.Stopped)),
                    this._state.setStateAtTime(t.State.Stopped, 0),
                    (this._boundLoop = this._loop.bind(this)),
                    this.context.on("tick", this._boundLoop);
                }),
                t.extend(t.Clock, t.Emitter),
                (t.Clock.defaults = { callback: t.noOp, frequency: 1 }),
                Object.defineProperty(t.Clock.prototype, "state", {
                  get: function() {
                    return this._state.getValueAtTime(this.now());
                  }
                }),
                (t.Clock.prototype.start = function(e, n) {
                  return (
                    (e = this.toSeconds(e)),
                    this._state.getValueAtTime(e) !== t.State.Started &&
                      (this._state.setStateAtTime(t.State.Started, e),
                      this._tickSource.start(e, n),
                      e < this._lastUpdate && this.emit("start", e, n)),
                    this
                  );
                }),
                (t.Clock.prototype.stop = function(e) {
                  return (
                    (e = this.toSeconds(e)),
                    this._state.cancel(e),
                    this._state.setStateAtTime(t.State.Stopped, e),
                    this._tickSource.stop(e),
                    e < this._lastUpdate && this.emit("stop", e),
                    this
                  );
                }),
                (t.Clock.prototype.pause = function(e) {
                  return (
                    (e = this.toSeconds(e)),
                    this._state.getValueAtTime(e) === t.State.Started &&
                      (this._state.setStateAtTime(t.State.Paused, e),
                      this._tickSource.pause(e),
                      e < this._lastUpdate && this.emit("pause", e)),
                    this
                  );
                }),
                Object.defineProperty(t.Clock.prototype, "ticks", {
                  get: function() {
                    return Math.ceil(this.getTicksAtTime(this.now()));
                  },
                  set: function(t) {
                    this._tickSource.ticks = t;
                  }
                }),
                Object.defineProperty(t.Clock.prototype, "seconds", {
                  get: function() {
                    return this._tickSource.seconds;
                  },
                  set: function(t) {
                    this._tickSource.seconds = t;
                  }
                }),
                (t.Clock.prototype.getSecondsAtTime = function(t) {
                  return this._tickSource.getSecondsAtTime(t);
                }),
                (t.Clock.prototype.setTicksAtTime = function(t, e) {
                  return this._tickSource.setTicksAtTime(t, e), this;
                }),
                (t.Clock.prototype.getTicksAtTime = function(t) {
                  return this._tickSource.getTicksAtTime(t);
                }),
                (t.Clock.prototype.nextTickTime = function(t, e) {
                  e = this.toSeconds(e);
                  var n = this.getTicksAtTime(e);
                  return this._tickSource.getTimeOfTick(n + t, e);
                }),
                (t.Clock.prototype._loop = function() {
                  var e = this._lastUpdate,
                    n = this.now();
                  (this._lastUpdate = n),
                    e !== n &&
                      (this._state.forEachBetween(
                        e,
                        n,
                        function(e) {
                          switch (e.state) {
                            case t.State.Started:
                              var n = this._tickSource.getTicksAtTime(e.time);
                              this.emit("start", e.time, n);
                              break;
                            case t.State.Stopped:
                              0 !== e.time && this.emit("stop", e.time);
                              break;
                            case t.State.Paused:
                              this.emit("pause", e.time);
                          }
                        }.bind(this)
                      ),
                      this._tickSource.forEachTickBetween(
                        e,
                        n,
                        function(t, e) {
                          this.callback(t, e);
                        }.bind(this)
                      ));
                }),
                (t.Clock.prototype.getStateAtTime = function(t) {
                  return (t = this.toSeconds(t)), this._state.getValueAtTime(t);
                }),
                (t.Clock.prototype.dispose = function() {
                  t.Emitter.prototype.dispose.call(this),
                    this.context.off("tick", this._boundLoop),
                    this._writable("frequency"),
                    this._tickSource.dispose(),
                    (this._tickSource = null),
                    (this.frequency = null),
                    (this._boundLoop = null),
                    (this._nextTick = 1 / 0),
                    (this.callback = null),
                    this._state.dispose(),
                    (this._state = null);
                }),
                t.Clock
              );
            }),
            n(function(t) {
              (t.IntervalTimeline = function() {
                t.call(this), (this._root = null), (this._length = 0);
              }),
                t.extend(t.IntervalTimeline),
                (t.IntervalTimeline.prototype.add = function(n) {
                  if (t.isUndef(n.time) || t.isUndef(n.duration))
                    throw new Error(
                      "Tone.IntervalTimeline: events must have time and duration parameters"
                    );
                  n.time = n.time.valueOf();
                  var r = new e(n.time, n.time + n.duration, n);
                  for (
                    null === this._root
                      ? (this._root = r)
                      : this._root.insert(r),
                      this._length++;
                    null !== r;

                  )
                    r.updateHeight(),
                      r.updateMax(),
                      this._rebalance(r),
                      (r = r.parent);
                  return this;
                }),
                (t.IntervalTimeline.prototype.remove = function(t) {
                  if (null !== this._root) {
                    var e = [];
                    this._root.search(t.time, e);
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n];
                      if (r.event === t) {
                        this._removeNode(r), this._length--;
                        break;
                      }
                    }
                  }
                  return this;
                }),
                Object.defineProperty(t.IntervalTimeline.prototype, "length", {
                  get: function() {
                    return this._length;
                  }
                }),
                (t.IntervalTimeline.prototype.cancel = function(t) {
                  return (
                    this.forEachFrom(
                      t,
                      function(t) {
                        this.remove(t);
                      }.bind(this)
                    ),
                    this
                  );
                }),
                (t.IntervalTimeline.prototype._setRoot = function(t) {
                  (this._root = t),
                    null !== this._root && (this._root.parent = null);
                }),
                (t.IntervalTimeline.prototype._replaceNodeInParent = function(
                  t,
                  e
                ) {
                  null !== t.parent
                    ? (t.isLeftChild()
                        ? (t.parent.left = e)
                        : (t.parent.right = e),
                      this._rebalance(t.parent))
                    : this._setRoot(e);
                }),
                (t.IntervalTimeline.prototype._removeNode = function(t) {
                  if (null === t.left && null === t.right)
                    this._replaceNodeInParent(t, null);
                  else if (null === t.right)
                    this._replaceNodeInParent(t, t.left);
                  else if (null === t.left)
                    this._replaceNodeInParent(t, t.right);
                  else {
                    var e, n;
                    if (t.getBalance() > 0)
                      if (null === t.left.right)
                        ((e = t.left).right = t.right), (n = e);
                      else {
                        for (e = t.left.right; null !== e.right; ) e = e.right;
                        (e.parent.right = e.left),
                          (n = e.parent),
                          (e.left = t.left),
                          (e.right = t.right);
                      }
                    else if (null === t.right.left)
                      ((e = t.right).left = t.left), (n = e);
                    else {
                      for (e = t.right.left; null !== e.left; ) e = e.left;
                      (e.parent = e.parent),
                        (e.parent.left = e.right),
                        (n = e.parent),
                        (e.left = t.left),
                        (e.right = t.right);
                    }
                    null !== t.parent
                      ? t.isLeftChild()
                        ? (t.parent.left = e)
                        : (t.parent.right = e)
                      : this._setRoot(e),
                      this._rebalance(n);
                  }
                  t.dispose();
                }),
                (t.IntervalTimeline.prototype._rotateLeft = function(t) {
                  var e = t.parent,
                    n = t.isLeftChild(),
                    r = t.right;
                  (t.right = r.left),
                    (r.left = t),
                    null !== e
                      ? n
                        ? (e.left = r)
                        : (e.right = r)
                      : this._setRoot(r);
                }),
                (t.IntervalTimeline.prototype._rotateRight = function(t) {
                  var e = t.parent,
                    n = t.isLeftChild(),
                    r = t.left;
                  (t.left = r.right),
                    (r.right = t),
                    null !== e
                      ? n
                        ? (e.left = r)
                        : (e.right = r)
                      : this._setRoot(r);
                }),
                (t.IntervalTimeline.prototype._rebalance = function(t) {
                  var e = t.getBalance();
                  e > 1
                    ? t.left.getBalance() < 0
                      ? this._rotateLeft(t.left)
                      : this._rotateRight(t)
                    : e < -1 &&
                      (t.right.getBalance() > 0
                        ? this._rotateRight(t.right)
                        : this._rotateLeft(t));
                }),
                (t.IntervalTimeline.prototype.get = function(t) {
                  if (null !== this._root) {
                    var e = [];
                    if ((this._root.search(t, e), e.length > 0)) {
                      for (var n = e[0], r = 1; r < e.length; r++)
                        e[r].low > n.low && (n = e[r]);
                      return n.event;
                    }
                  }
                  return null;
                }),
                (t.IntervalTimeline.prototype.forEach = function(t) {
                  if (null !== this._root) {
                    var e = [];
                    this._root.traverse(function(t) {
                      e.push(t);
                    });
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n].event;
                      r && t(r);
                    }
                  }
                  return this;
                }),
                (t.IntervalTimeline.prototype.forEachAtTime = function(t, e) {
                  if (null !== this._root) {
                    var n = [];
                    this._root.search(t, n);
                    for (var r = n.length - 1; r >= 0; r--) {
                      var i = n[r].event;
                      i && e(i);
                    }
                  }
                  return this;
                }),
                (t.IntervalTimeline.prototype.forEachFrom = function(t, e) {
                  if (null !== this._root) {
                    var n = [];
                    this._root.searchAfter(t, n);
                    for (var r = n.length - 1; r >= 0; r--) e(n[r].event);
                  }
                  return this;
                }),
                (t.IntervalTimeline.prototype.dispose = function() {
                  var t = [];
                  null !== this._root &&
                    this._root.traverse(function(e) {
                      t.push(e);
                    });
                  for (var e = 0; e < t.length; e++) t[e].dispose();
                  return (t = null), (this._root = null), this;
                });
              var e = function(t, e, n) {
                (this.event = n),
                  (this.low = t),
                  (this.high = e),
                  (this.max = this.high),
                  (this._left = null),
                  (this._right = null),
                  (this.parent = null),
                  (this.height = 0);
              };
              return (
                (e.prototype.insert = function(t) {
                  t.low <= this.low
                    ? null === this.left
                      ? (this.left = t)
                      : this.left.insert(t)
                    : null === this.right
                    ? (this.right = t)
                    : this.right.insert(t);
                }),
                (e.prototype.search = function(t, e) {
                  t > this.max ||
                    (null !== this.left && this.left.search(t, e),
                    this.low <= t && this.high > t && e.push(this),
                    this.low > t ||
                      (null !== this.right && this.right.search(t, e)));
                }),
                (e.prototype.searchAfter = function(t, e) {
                  this.low >= t &&
                    (e.push(this),
                    null !== this.left && this.left.searchAfter(t, e)),
                    null !== this.right && this.right.searchAfter(t, e);
                }),
                (e.prototype.traverse = function(t) {
                  t(this),
                    null !== this.left && this.left.traverse(t),
                    null !== this.right && this.right.traverse(t);
                }),
                (e.prototype.updateHeight = function() {
                  null !== this.left && null !== this.right
                    ? (this.height =
                        Math.max(this.left.height, this.right.height) + 1)
                    : null !== this.right
                    ? (this.height = this.right.height + 1)
                    : null !== this.left
                    ? (this.height = this.left.height + 1)
                    : (this.height = 0);
                }),
                (e.prototype.updateMax = function() {
                  (this.max = this.high),
                    null !== this.left &&
                      (this.max = Math.max(this.max, this.left.max)),
                    null !== this.right &&
                      (this.max = Math.max(this.max, this.right.max));
                }),
                (e.prototype.getBalance = function() {
                  var t = 0;
                  return (
                    null !== this.left && null !== this.right
                      ? (t = this.left.height - this.right.height)
                      : null !== this.left
                      ? (t = this.left.height + 1)
                      : null !== this.right && (t = -(this.right.height + 1)),
                    t
                  );
                }),
                (e.prototype.isLeftChild = function() {
                  return null !== this.parent && this.parent.left === this;
                }),
                Object.defineProperty(e.prototype, "left", {
                  get: function() {
                    return this._left;
                  },
                  set: function(t) {
                    (this._left = t),
                      null !== t && (t.parent = this),
                      this.updateHeight(),
                      this.updateMax();
                  }
                }),
                Object.defineProperty(e.prototype, "right", {
                  get: function() {
                    return this._right;
                  },
                  set: function(t) {
                    (this._right = t),
                      null !== t && (t.parent = this),
                      this.updateHeight(),
                      this.updateMax();
                  }
                }),
                (e.prototype.dispose = function() {
                  (this.parent = null),
                    (this._left = null),
                    (this._right = null),
                    (this.event = null);
                }),
                t.IntervalTimeline
              );
            }),
            n(function(t) {
              return (
                (t.Ticks = function(e, n) {
                  if (!(this instanceof t.Ticks)) return new t.Ticks(e, n);
                  t.TransportTime.call(this, e, n);
                }),
                t.extend(t.Ticks, t.TransportTime),
                (t.Ticks.prototype._defaultUnits = "i"),
                (t.Ticks.prototype._now = function() {
                  return t.Transport.ticks;
                }),
                (t.Ticks.prototype._beatsToUnits = function(t) {
                  return this._getPPQ() * t;
                }),
                (t.Ticks.prototype._secondsToUnits = function(t) {
                  return (t / (60 / this._getBpm())) * this._getPPQ();
                }),
                (t.Ticks.prototype._ticksToUnits = function(t) {
                  return t;
                }),
                (t.Ticks.prototype.toTicks = function() {
                  return this.valueOf();
                }),
                (t.Ticks.prototype.toSeconds = function() {
                  return (
                    (this.valueOf() / this._getPPQ()) * (60 / this._getBpm())
                  );
                }),
                t.Ticks
              );
            }),
            n(function(t) {
              return (
                (t.TransportEvent = function(e, n) {
                  (n = t.defaultArg(n, t.TransportEvent.defaults)),
                    t.call(this),
                    (this.Transport = e),
                    (this.id = t.TransportEvent._eventId++),
                    (this.time = t.Ticks(n.time)),
                    (this.callback = n.callback),
                    (this._once = n.once);
                }),
                t.extend(t.TransportEvent),
                (t.TransportEvent.defaults = { once: !1, callback: t.noOp }),
                (t.TransportEvent._eventId = 0),
                (t.TransportEvent.prototype.invoke = function(t) {
                  this.callback &&
                    (this.callback(t),
                    this._once &&
                      this.Transport &&
                      this.Transport.clear(this.id));
                }),
                (t.TransportEvent.prototype.dispose = function() {
                  return (
                    t.prototype.dispose.call(this),
                    (this.Transport = null),
                    (this.callback = null),
                    (this.time = null),
                    this
                  );
                }),
                t.TransportEvent
              );
            }),
            n(function(t) {
              return (
                (t.TransportRepeatEvent = function(e, n) {
                  t.TransportEvent.call(this, e, n),
                    (n = t.defaultArg(n, t.TransportRepeatEvent.defaults)),
                    (this.duration = t.Ticks(n.duration)),
                    (this._interval = t.Ticks(n.interval)),
                    (this._currentId = -1),
                    (this._nextId = -1),
                    (this._nextTick = this.time),
                    (this._boundRestart = this._restart.bind(this)),
                    this.Transport.on("start loopStart", this._boundRestart),
                    this._restart();
                }),
                t.extend(t.TransportRepeatEvent, t.TransportEvent),
                (t.TransportRepeatEvent.defaults = {
                  duration: 1 / 0,
                  interval: 1
                }),
                (t.TransportRepeatEvent.prototype.invoke = function(e) {
                  this._createEvents(e),
                    t.TransportEvent.prototype.invoke.call(this, e);
                }),
                (t.TransportRepeatEvent.prototype._createEvents = function(e) {
                  var n = this.Transport.getTicksAtTime(e);
                  n >= this.time &&
                    n >= this._nextTick &&
                    this._nextTick + this._interval <
                      this.time + this.duration &&
                    ((this._nextTick += this._interval),
                    (this._currentId = this._nextId),
                    (this._nextId = this.Transport.scheduleOnce(
                      this.invoke.bind(this),
                      t.Ticks(this._nextTick)
                    )));
                }),
                (t.TransportRepeatEvent.prototype._restart = function(e) {
                  this.Transport.clear(this._currentId),
                    this.Transport.clear(this._nextId),
                    (this._nextTick = this.time);
                  var n = this.Transport.getTicksAtTime(e);
                  n > this.time &&
                    (this._nextTick =
                      this.time +
                      Math.ceil((n - this.time) / this._interval) *
                        this._interval),
                    (this._currentId = this.Transport.scheduleOnce(
                      this.invoke.bind(this),
                      t.Ticks(this._nextTick)
                    )),
                    (this._nextTick += this._interval),
                    (this._nextId = this.Transport.scheduleOnce(
                      this.invoke.bind(this),
                      t.Ticks(this._nextTick)
                    ));
                }),
                (t.TransportRepeatEvent.prototype.dispose = function() {
                  return (
                    this.Transport.clear(this._currentId),
                    this.Transport.clear(this._nextId),
                    this.Transport.off("start loopStart", this._boundRestart),
                    (this._boundCreateEvents = null),
                    t.TransportEvent.prototype.dispose.call(this),
                    (this.duration = null),
                    (this._interval = null),
                    this
                  );
                }),
                t.TransportRepeatEvent
              );
            }),
            n(function(t) {
              (t.Transport = function() {
                t.Emitter.call(this),
                  t.getContext(
                    function() {
                      (this.loop = !1),
                        (this._loopStart = 0),
                        (this._loopEnd = 0),
                        (this._ppq = e.defaults.PPQ),
                        (this._clock = new t.Clock({
                          callback: this._processTick.bind(this),
                          frequency: 0
                        })),
                        this._bindClockEvents(),
                        (this.bpm = this._clock.frequency),
                        (this.bpm._toUnits = this._toUnits.bind(this)),
                        (this.bpm._fromUnits = this._fromUnits.bind(this)),
                        (this.bpm.units = t.Type.BPM),
                        (this.bpm.value = e.defaults.bpm),
                        this._readOnly("bpm"),
                        (this._timeSignature = e.defaults.timeSignature),
                        (this._scheduledEvents = {}),
                        (this._timeline = new t.Timeline()),
                        (this._repeatedEvents = new t.IntervalTimeline()),
                        (this._syncedSignals = []),
                        (this._swingTicks = e.defaults.PPQ / 2),
                        (this._swingAmount = 0);
                    }.bind(this)
                  );
              }),
                t.extend(t.Transport, t.Emitter),
                (t.Transport.defaults = {
                  bpm: 120,
                  swing: 0,
                  swingSubdivision: "8n",
                  timeSignature: 4,
                  loopStart: 0,
                  loopEnd: "4m",
                  PPQ: 192
                }),
                (t.Transport.prototype._processTick = function(e, n) {
                  if (
                    this._swingAmount > 0 &&
                    n % this._ppq != 0 &&
                    n % (2 * this._swingTicks) != 0
                  ) {
                    var r =
                        (n % (2 * this._swingTicks)) / (2 * this._swingTicks),
                      i = Math.sin(r * Math.PI) * this._swingAmount;
                    e += t.Ticks((2 * this._swingTicks) / 3).toSeconds() * i;
                  }
                  this.loop &&
                    n >= this._loopEnd &&
                    (this.emit("loopEnd", e),
                    this._clock.setTicksAtTime(this._loopStart, e),
                    (n = this._loopStart),
                    this.emit("loopStart", e, this._clock.getSecondsAtTime(e)),
                    this.emit("loop", e)),
                    this._timeline.forEachAtTime(n, function(t) {
                      t.invoke(e);
                    });
                }),
                (t.Transport.prototype.schedule = function(e, n) {
                  var r = new t.TransportEvent(this, {
                    time: t.TransportTime(n),
                    callback: e
                  });
                  return this._addEvent(r, this._timeline);
                }),
                (t.Transport.prototype.scheduleRepeat = function(e, n, r, i) {
                  var o = new t.TransportRepeatEvent(this, {
                    callback: e,
                    interval: t.Time(n),
                    time: t.TransportTime(r),
                    duration: t.Time(t.defaultArg(i, 1 / 0))
                  });
                  return this._addEvent(o, this._repeatedEvents);
                }),
                (t.Transport.prototype.scheduleOnce = function(e, n) {
                  var r = new t.TransportEvent(this, {
                    time: t.TransportTime(n),
                    callback: e,
                    once: !0
                  });
                  return this._addEvent(r, this._timeline);
                }),
                (t.Transport.prototype.clear = function(t) {
                  if (this._scheduledEvents.hasOwnProperty(t)) {
                    var e = this._scheduledEvents[t.toString()];
                    e.timeline.remove(e.event),
                      e.event.dispose(),
                      delete this._scheduledEvents[t.toString()];
                  }
                  return this;
                }),
                (t.Transport.prototype._addEvent = function(t, e) {
                  return (
                    (this._scheduledEvents[t.id.toString()] = {
                      event: t,
                      timeline: e
                    }),
                    e.add(t),
                    t.id
                  );
                }),
                (t.Transport.prototype.cancel = function(e) {
                  return (
                    (e = t.defaultArg(e, 0)),
                    (e = this.toTicks(e)),
                    this._timeline.forEachFrom(
                      e,
                      function(t) {
                        this.clear(t.id);
                      }.bind(this)
                    ),
                    this._repeatedEvents.forEachFrom(
                      e,
                      function(t) {
                        this.clear(t.id);
                      }.bind(this)
                    ),
                    this
                  );
                }),
                (t.Transport.prototype._bindClockEvents = function() {
                  this._clock.on(
                    "start",
                    function(e, n) {
                      (n = t.Ticks(n).toSeconds()), this.emit("start", e, n);
                    }.bind(this)
                  ),
                    this._clock.on(
                      "stop",
                      function(t) {
                        this.emit("stop", t);
                      }.bind(this)
                    ),
                    this._clock.on(
                      "pause",
                      function(t) {
                        this.emit("pause", t);
                      }.bind(this)
                    );
                }),
                Object.defineProperty(t.Transport.prototype, "state", {
                  get: function() {
                    return this._clock.getStateAtTime(this.now());
                  }
                }),
                (t.Transport.prototype.start = function(e, n) {
                  return (
                    t.isDefined(n) && (n = this.toTicks(n)),
                    this._clock.start(e, n),
                    this
                  );
                }),
                (t.Transport.prototype.stop = function(t) {
                  return this._clock.stop(t), this;
                }),
                (t.Transport.prototype.pause = function(t) {
                  return this._clock.pause(t), this;
                }),
                (t.Transport.prototype.toggle = function(e) {
                  return (
                    (e = this.toSeconds(e)),
                    this._clock.getStateAtTime(e) !== t.State.Started
                      ? this.start(e)
                      : this.stop(e),
                    this
                  );
                }),
                Object.defineProperty(t.Transport.prototype, "timeSignature", {
                  get: function() {
                    return this._timeSignature;
                  },
                  set: function(e) {
                    t.isArray(e) && (e = (e[0] / e[1]) * 4),
                      (this._timeSignature = e);
                  }
                }),
                Object.defineProperty(t.Transport.prototype, "loopStart", {
                  get: function() {
                    return t.Ticks(this._loopStart).toSeconds();
                  },
                  set: function(t) {
                    this._loopStart = this.toTicks(t);
                  }
                }),
                Object.defineProperty(t.Transport.prototype, "loopEnd", {
                  get: function() {
                    return t.Ticks(this._loopEnd).toSeconds();
                  },
                  set: function(t) {
                    this._loopEnd = this.toTicks(t);
                  }
                }),
                (t.Transport.prototype.setLoopPoints = function(t, e) {
                  return (this.loopStart = t), (this.loopEnd = e), this;
                }),
                Object.defineProperty(t.Transport.prototype, "swing", {
                  get: function() {
                    return this._swingAmount;
                  },
                  set: function(t) {
                    this._swingAmount = t;
                  }
                }),
                Object.defineProperty(
                  t.Transport.prototype,
                  "swingSubdivision",
                  {
                    get: function() {
                      return t.Ticks(this._swingTicks).toNotation();
                    },
                    set: function(t) {
                      this._swingTicks = this.toTicks(t);
                    }
                  }
                ),
                Object.defineProperty(t.Transport.prototype, "position", {
                  get: function() {
                    var e = this.now(),
                      n = this._clock.getTicksAtTime(e);
                    return t.Ticks(n).toBarsBeatsSixteenths();
                  },
                  set: function(t) {
                    var e = this.toTicks(t);
                    this.ticks = e;
                  }
                }),
                Object.defineProperty(t.Transport.prototype, "seconds", {
                  get: function() {
                    return this._clock.seconds;
                  },
                  set: function(t) {
                    var e = this.now(),
                      n = this.bpm.timeToTicks(t, e);
                    this.ticks = n;
                  }
                }),
                Object.defineProperty(t.Transport.prototype, "progress", {
                  get: function() {
                    if (this.loop) {
                      var t = this.now();
                      return (
                        (this._clock.getTicksAtTime(t) - this._loopStart) /
                        (this._loopEnd - this._loopStart)
                      );
                    }
                    return 0;
                  }
                }),
                Object.defineProperty(t.Transport.prototype, "ticks", {
                  get: function() {
                    return this._clock.ticks;
                  },
                  set: function(e) {
                    if (this._clock.ticks !== e) {
                      var n = this.now();
                      this.state === t.State.Started
                        ? (this.emit("stop", n),
                          this._clock.setTicksAtTime(e, n),
                          this.emit("start", n, this.seconds))
                        : this._clock.setTicksAtTime(e, n);
                    }
                  }
                }),
                (t.Transport.prototype.getTicksAtTime = function(t) {
                  return Math.round(this._clock.getTicksAtTime(t));
                }),
                (t.Transport.prototype.getSecondsAtTime = function(t) {
                  return this._clock.getSecondsAtTime(t);
                }),
                Object.defineProperty(t.Transport.prototype, "PPQ", {
                  get: function() {
                    return this._ppq;
                  },
                  set: function(t) {
                    var e = this.bpm.value;
                    (this._ppq = t), (this.bpm.value = e);
                  }
                }),
                (t.Transport.prototype._fromUnits = function(t) {
                  return 1 / (60 / t / this.PPQ);
                }),
                (t.Transport.prototype._toUnits = function(t) {
                  return (t / this.PPQ) * 60;
                }),
                (t.Transport.prototype.nextSubdivision = function(e) {
                  if (((e = this.toTicks(e)), this.state !== t.State.Started))
                    return 0;
                  var n = this.now(),
                    r = e - (this.getTicksAtTime(n) % e);
                  return this._clock.nextTickTime(r, n);
                }),
                (t.Transport.prototype.syncSignal = function(e, n) {
                  if (!n) {
                    var r = this.now();
                    n =
                      0 !== e.getValueAtTime(r)
                        ? e.getValueAtTime(r) / this.bpm.getValueAtTime(r)
                        : 0;
                  }
                  var i = new t.Gain(n);
                  return (
                    this.bpm.chain(i, e._param),
                    this._syncedSignals.push({
                      ratio: i,
                      signal: e,
                      initial: e.value
                    }),
                    (e.value = 0),
                    this
                  );
                }),
                (t.Transport.prototype.unsyncSignal = function(t) {
                  for (var e = this._syncedSignals.length - 1; e >= 0; e--) {
                    var n = this._syncedSignals[e];
                    n.signal === t &&
                      (n.ratio.dispose(),
                      (n.signal.value = n.initial),
                      this._syncedSignals.splice(e, 1));
                  }
                  return this;
                }),
                (t.Transport.prototype.dispose = function() {
                  return (
                    t.Emitter.prototype.dispose.call(this),
                    this._clock.dispose(),
                    (this._clock = null),
                    this._writable("bpm"),
                    (this.bpm = null),
                    this._timeline.dispose(),
                    (this._timeline = null),
                    this._repeatedEvents.dispose(),
                    (this._repeatedEvents = null),
                    this
                  );
                });
              var e = t.Transport;
              return (
                (t.Transport = new e()),
                t.Context.on("init", function(n) {
                  n.Transport instanceof e
                    ? (t.Transport = n.Transport)
                    : (t.Transport = new e()),
                    (n.Transport = t.Transport);
                }),
                t.Context.on("close", function(t) {
                  t.Transport instanceof e && t.Transport.dispose();
                }),
                t.Transport
              );
            }),
            n(function(t) {
              return (
                (t.Volume = function() {
                  var e = t.defaults(arguments, ["volume"], t.Volume);
                  t.AudioNode.call(this),
                    (this.output = this.input = new t.Gain(
                      e.volume,
                      t.Type.Decibels
                    )),
                    (this._unmutedVolume = e.volume),
                    (this.volume = this.output.gain),
                    this._readOnly("volume"),
                    (this.mute = e.mute);
                }),
                t.extend(t.Volume, t.AudioNode),
                (t.Volume.defaults = { volume: 0, mute: !1 }),
                Object.defineProperty(t.Volume.prototype, "mute", {
                  get: function() {
                    return this.volume.value === -1 / 0;
                  },
                  set: function(t) {
                    !this.mute && t
                      ? ((this._unmutedVolume = this.volume.value),
                        (this.volume.value = -1 / 0))
                      : this.mute &&
                        !t &&
                        (this.volume.value = this._unmutedVolume);
                  }
                }),
                (t.Volume.prototype.dispose = function() {
                  return (
                    this.input.dispose(),
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable("volume"),
                    this.volume.dispose(),
                    (this.volume = null),
                    this
                  );
                }),
                t.Volume
              );
            }),
            n(function(t) {
              (t.Master = function() {
                t.AudioNode.call(this),
                  t.getContext(
                    function() {
                      this.createInsOuts(1, 0),
                        (this._volume = this.output = new t.Volume()),
                        (this.volume = this._volume.volume),
                        this._readOnly("volume"),
                        this.input.chain(this.output, this.context.destination);
                    }.bind(this)
                  );
              }),
                t.extend(t.Master, t.AudioNode),
                (t.Master.defaults = { volume: 0, mute: !1 }),
                Object.defineProperty(t.Master.prototype, "mute", {
                  get: function() {
                    return this._volume.mute;
                  },
                  set: function(t) {
                    this._volume.mute = t;
                  }
                }),
                (t.Master.prototype.chain = function() {
                  this.input.disconnect(),
                    this.input.chain.apply(this.input, arguments),
                    arguments[arguments.length - 1].connect(this.output);
                }),
                (t.Master.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this),
                    this._writable("volume"),
                    this._volume.dispose(),
                    (this._volume = null),
                    (this.volume = null);
                }),
                (t.AudioNode.prototype.toMaster = function() {
                  return this.connect(t.Master), this;
                }),
                window.AudioNode &&
                  (AudioNode.prototype.toMaster = function() {
                    return this.connect(t.Master), this;
                  });
              var e = t.Master;
              return (
                (t.Master = new e()),
                t.Context.on("init", function(n) {
                  n.Master instanceof e
                    ? (t.Master = n.Master)
                    : (t.Master = new e()),
                    (n.Master = t.Master);
                }),
                t.Context.on("close", function(t) {
                  t.Master instanceof e && t.Master.dispose();
                }),
                t.Master
              );
            }),
            n(function(t) {
              return (
                (t.Source = function(e) {
                  (e = t.defaultArg(e, t.Source.defaults)),
                    t.AudioNode.call(this),
                    (this._volume = this.output = new t.Volume(e.volume)),
                    (this.volume = this._volume.volume),
                    this._readOnly("volume"),
                    (this._state = new t.TimelineState(t.State.Stopped)),
                    (this._state.memory = 100),
                    (this._synced = !1),
                    (this._scheduled = []),
                    (this._volume.output.output.channelCount = 2),
                    (this._volume.output.output.channelCountMode = "explicit"),
                    (this.mute = e.mute);
                }),
                t.extend(t.Source, t.AudioNode),
                (t.Source.defaults = { volume: 0, mute: !1 }),
                Object.defineProperty(t.Source.prototype, "state", {
                  get: function() {
                    return this._synced
                      ? t.Transport.state === t.State.Started
                        ? this._state.getValueAtTime(t.Transport.seconds)
                        : t.State.Stopped
                      : this._state.getValueAtTime(this.now());
                  }
                }),
                Object.defineProperty(t.Source.prototype, "mute", {
                  get: function() {
                    return this._volume.mute;
                  },
                  set: function(t) {
                    this._volume.mute = t;
                  }
                }),
                (t.Source.prototype._start = t.noOp),
                (t.Source.prototype.restart = t.noOp),
                (t.Source.prototype._stop = t.noOp),
                (t.Source.prototype.start = function(e, n, r) {
                  if (
                    ((e =
                      t.isUndef(e) && this._synced
                        ? t.Transport.seconds
                        : this.toSeconds(e)),
                    this._state.getValueAtTime(e) === t.State.Started)
                  )
                    this._state.cancel(e),
                      this._state.setStateAtTime(t.State.Started, e),
                      this.restart(e, n, r);
                  else if (
                    (this._state.setStateAtTime(t.State.Started, e),
                    this._synced)
                  ) {
                    var i = this._state.get(e);
                    (i.offset = t.defaultArg(n, 0)), (i.duration = r);
                    var o = t.Transport.schedule(
                      function(t) {
                        this._start(t, n, r);
                      }.bind(this),
                      e
                    );
                    this._scheduled.push(o),
                      t.Transport.state === t.State.Started &&
                        this._syncedStart(this.now(), t.Transport.seconds);
                  } else this._start.apply(this, arguments);
                  return this;
                }),
                (t.Source.prototype.stop = function(e) {
                  if (
                    ((e =
                      t.isUndef(e) && this._synced
                        ? t.Transport.seconds
                        : this.toSeconds(e)),
                    this._synced)
                  ) {
                    var n = t.Transport.schedule(this._stop.bind(this), e);
                    this._scheduled.push(n);
                  } else this._stop.apply(this, arguments);
                  return (
                    this._state.cancel(e),
                    this._state.setStateAtTime(t.State.Stopped, e),
                    this
                  );
                }),
                (t.Source.prototype.sync = function() {
                  return (
                    (this._synced = !0),
                    (this._syncedStart = function(e, n) {
                      if (n > 0) {
                        var r = this._state.get(n);
                        if (r && r.state === t.State.Started && r.time !== n) {
                          var i,
                            o = n - this.toSeconds(r.time);
                          r.duration && (i = this.toSeconds(r.duration) - o),
                            this._start(e, this.toSeconds(r.offset) + o, i);
                        }
                      }
                    }.bind(this)),
                    (this._syncedStop = function(e) {
                      var n = t.Transport.getSecondsAtTime(
                        Math.max(e - this.sampleTime, 0)
                      );
                      this._state.getValueAtTime(n) === t.State.Started &&
                        this._stop(e);
                    }.bind(this)),
                    t.Transport.on("start loopStart", this._syncedStart),
                    t.Transport.on("stop pause loopEnd", this._syncedStop),
                    this
                  );
                }),
                (t.Source.prototype.unsync = function() {
                  this._synced &&
                    (t.Transport.off("stop pause loopEnd", this._syncedStop),
                    t.Transport.off("start loopStart", this._syncedStart)),
                    (this._synced = !1);
                  for (var e = 0; e < this._scheduled.length; e++) {
                    var n = this._scheduled[e];
                    t.Transport.clear(n);
                  }
                  return (this._scheduled = []), this._state.cancel(0), this;
                }),
                (t.Source.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this),
                    this.unsync(),
                    (this._scheduled = null),
                    this._writable("volume"),
                    this._volume.dispose(),
                    (this._volume = null),
                    (this.volume = null),
                    this._state.dispose(),
                    (this._state = null);
                }),
                t.Source
              );
            }),
            n(function(t) {
              t.supported &&
                (AudioBuffer.prototype.copyToChannel ||
                  ((AudioBuffer.prototype.copyToChannel = function(t, e, n) {
                    var r = this.getChannelData(e);
                    n = n || 0;
                    for (var i = 0; i < r.length; i++) r[i + n] = t[i];
                  }),
                  (AudioBuffer.prototype.copyFromChannel = function(t, e, n) {
                    var r = this.getChannelData(e);
                    n = n || 0;
                    for (var i = 0; i < t.length; i++) t[i] = r[i + n];
                  })));
            }),
            n(function(t) {
              return (
                (t.Buffer = function() {
                  var e = t.defaults(
                    arguments,
                    ["url", "onload", "onerror"],
                    t.Buffer
                  );
                  t.call(this),
                    (this._buffer = null),
                    (this._reversed = e.reverse),
                    (this._xhr = null),
                    (this._onload = t.noOp),
                    e.url instanceof AudioBuffer || e.url instanceof t.Buffer
                      ? (this.set(e.url),
                        e.onload &&
                          (this.loaded
                            ? e.onload(this)
                            : (this._onload = e.onload)))
                      : t.isString(e.url) &&
                        this.load(e.url)
                          .then(e.onload)
                          .catch(e.onerror);
                }),
                t.extend(t.Buffer),
                (t.Buffer.defaults = {
                  url: void 0,
                  reverse: !1,
                  onload: t.noOp,
                  onerror: t.noOp
                }),
                (t.Buffer.prototype.set = function(e) {
                  return (
                    e instanceof t.Buffer
                      ? e.loaded
                        ? (this._buffer = e.get())
                        : (e._onload = function() {
                            this.set(e), this._onload(this);
                          }.bind(this))
                      : (this._buffer = e),
                    this
                  );
                }),
                (t.Buffer.prototype.get = function() {
                  return this._buffer;
                }),
                (t.Buffer.prototype.load = function(e, n, r) {
                  return new Promise(
                    function(i, o) {
                      this._xhr = t.Buffer.load(
                        e,
                        function(t) {
                          (this._xhr = null),
                            this.set(t),
                            i(this),
                            this._onload(this),
                            n && n(this);
                        }.bind(this),
                        function(t) {
                          (this._xhr = null), o(t), r && r(t);
                        }.bind(this)
                      );
                    }.bind(this)
                  );
                }),
                (t.Buffer.prototype.dispose = function() {
                  return (
                    t.prototype.dispose.call(this),
                    (this._buffer = null),
                    this._xhr &&
                      (t.Buffer._removeFromDownloadQueue(this._xhr),
                      this._xhr.abort(),
                      (this._xhr = null)),
                    this
                  );
                }),
                Object.defineProperty(t.Buffer.prototype, "loaded", {
                  get: function() {
                    return this.length > 0;
                  }
                }),
                Object.defineProperty(t.Buffer.prototype, "duration", {
                  get: function() {
                    return this._buffer ? this._buffer.duration : 0;
                  }
                }),
                Object.defineProperty(t.Buffer.prototype, "length", {
                  get: function() {
                    return this._buffer ? this._buffer.length : 0;
                  }
                }),
                Object.defineProperty(t.Buffer.prototype, "numberOfChannels", {
                  get: function() {
                    return this._buffer ? this._buffer.numberOfChannels : 0;
                  }
                }),
                (t.Buffer.prototype.fromArray = function(t) {
                  var e = t[0].length > 0,
                    n = e ? t.length : 1,
                    r = e ? t[0].length : t.length,
                    i = this.context.createBuffer(
                      n,
                      r,
                      this.context.sampleRate
                    );
                  e || 1 !== n || (t = [t]);
                  for (var o = 0; o < n; o++) i.copyToChannel(t[o], o);
                  return (this._buffer = i), this;
                }),
                (t.Buffer.prototype.toMono = function(e) {
                  if (t.isNumber(e)) this.fromArray(this.toArray(e));
                  else {
                    for (
                      var n = new Float32Array(this.length),
                        r = this.numberOfChannels,
                        i = 0;
                      i < r;
                      i++
                    )
                      for (var o = this.toArray(i), a = 0; a < o.length; a++)
                        n[a] += o[a];
                    (n = n.map(function(t) {
                      return t / r;
                    })),
                      this.fromArray(n);
                  }
                  return this;
                }),
                (t.Buffer.prototype.toArray = function(e) {
                  if (t.isNumber(e)) return this.getChannelData(e);
                  if (1 === this.numberOfChannels) return this.toArray(0);
                  for (var n = [], r = 0; r < this.numberOfChannels; r++)
                    n[r] = this.getChannelData(r);
                  return n;
                }),
                (t.Buffer.prototype.getChannelData = function(t) {
                  return this._buffer.getChannelData(t);
                }),
                (t.Buffer.prototype.slice = function(e, n) {
                  n = t.defaultArg(n, this.duration);
                  for (
                    var r = Math.floor(
                        this.context.sampleRate * this.toSeconds(e)
                      ),
                      i = Math.floor(
                        this.context.sampleRate * this.toSeconds(n)
                      ),
                      o = [],
                      a = 0;
                    a < this.numberOfChannels;
                    a++
                  )
                    o[a] = this.toArray(a).slice(r, i);
                  return new t.Buffer().fromArray(o);
                }),
                (t.Buffer.prototype._reverse = function() {
                  if (this.loaded)
                    for (var t = 0; t < this.numberOfChannels; t++)
                      Array.prototype.reverse.call(this.getChannelData(t));
                  return this;
                }),
                Object.defineProperty(t.Buffer.prototype, "reverse", {
                  get: function() {
                    return this._reversed;
                  },
                  set: function(t) {
                    this._reversed !== t &&
                      ((this._reversed = t), this._reverse());
                  }
                }),
                t.Emitter.mixin(t.Buffer),
                (t.Buffer._downloadQueue = []),
                (t.Buffer.baseUrl = ""),
                (t.Buffer.fromArray = function(e) {
                  return new t.Buffer().fromArray(e);
                }),
                (t.Buffer.fromUrl = function(e) {
                  var n = new t.Buffer();
                  return n.load(e).then(function() {
                    return n;
                  });
                }),
                (t.Buffer._removeFromDownloadQueue = function(e) {
                  var n = t.Buffer._downloadQueue.indexOf(e);
                  -1 !== n && t.Buffer._downloadQueue.splice(n, 1);
                }),
                (t.Buffer.load = function(e, n, r) {
                  n = t.defaultArg(n, t.noOp);
                  var i = e.match(/\[(.+\|?)+\]$/);
                  if (i) {
                    for (
                      var o = i[1].split("|"), a = o[0], s = 0;
                      s < o.length;
                      s++
                    )
                      if (t.Buffer.supportsType(o[s])) {
                        a = o[s];
                        break;
                      }
                    e = e.replace(i[0], a);
                  }
                  function u(e) {
                    if (
                      (t.Buffer._removeFromDownloadQueue(l),
                      t.Buffer.emit("error", e),
                      !r)
                    )
                      throw e;
                    r(e);
                  }
                  function c() {
                    for (
                      var e = 0, n = 0;
                      n < t.Buffer._downloadQueue.length;
                      n++
                    )
                      e += t.Buffer._downloadQueue[n].progress;
                    t.Buffer.emit(
                      "progress",
                      e / t.Buffer._downloadQueue.length
                    );
                  }
                  var l = new XMLHttpRequest();
                  return (
                    l.open("GET", t.Buffer.baseUrl + e, !0),
                    (l.responseType = "arraybuffer"),
                    (l.progress = 0),
                    t.Buffer._downloadQueue.push(l),
                    l.addEventListener("load", function() {
                      200 === l.status
                        ? t.context
                            .decodeAudioData(l.response)
                            .then(function(e) {
                              (l.progress = 1),
                                c(),
                                n(e),
                                t.Buffer._removeFromDownloadQueue(l),
                                0 === t.Buffer._downloadQueue.length &&
                                  t.Buffer.emit("load");
                            })
                            .catch(function() {
                              t.Buffer._removeFromDownloadQueue(l),
                                u(
                                  "Tone.Buffer: could not decode audio data: " +
                                    e
                                );
                            })
                        : u("Tone.Buffer: could not locate file: " + e);
                    }),
                    l.addEventListener("error", u),
                    l.addEventListener("progress", function(t) {
                      t.lengthComputable &&
                        ((l.progress = (t.loaded / t.total) * 0.95), c());
                    }),
                    l.send(),
                    l
                  );
                }),
                (t.Buffer.cancelDownloads = function() {
                  return (
                    t.Buffer._downloadQueue.slice().forEach(function(e) {
                      t.Buffer._removeFromDownloadQueue(e), e.abort();
                    }),
                    t.Buffer
                  );
                }),
                (t.Buffer.supportsType = function(t) {
                  var e = t.split(".");
                  return (
                    (e = e[e.length - 1]),
                    "" !==
                      document.createElement("audio").canPlayType("audio/" + e)
                  );
                }),
                (t.loaded = function() {
                  var e, n;
                  function r() {
                    t.Buffer.off("load", e), t.Buffer.off("error", n);
                  }
                  return new Promise(function(r, i) {
                    (e = function() {
                      r();
                    }),
                      (n = function() {
                        i();
                      }),
                      t.Buffer.on("load", e),
                      t.Buffer.on("error", n);
                  })
                    .then(r)
                    .catch(function(t) {
                      throw (r(), new Error(t));
                    });
                }),
                t.Buffer
              );
            }),
            n(function(t) {
              return (
                (t.OscillatorNode = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "type"],
                    t.OscillatorNode
                  );
                  t.AudioNode.call(this, e),
                    (this.onended = e.onended),
                    (this._startTime = -1),
                    (this._stopTime = -1),
                    (this._gainNode = this.output = new t.Gain()),
                    this._gainNode.gain.setValueAtTime(
                      0,
                      this.context.currentTime
                    ),
                    (this._oscillator = this.context.createOscillator()),
                    this._oscillator.connect(this._gainNode),
                    (this.type = e.type),
                    (this.frequency = new t.Param(
                      this._oscillator.frequency,
                      t.Type.Frequency
                    )),
                    (this.frequency.value = e.frequency),
                    (this.detune = new t.Param(
                      this._oscillator.detune,
                      t.Type.Cents
                    )),
                    (this.detune.value = e.detune),
                    (this._gain = 1);
                }),
                t.extend(t.OscillatorNode, t.AudioNode),
                (t.OscillatorNode.defaults = {
                  frequency: 440,
                  detune: 0,
                  type: "sine",
                  onended: t.noOp
                }),
                Object.defineProperty(t.OscillatorNode.prototype, "state", {
                  get: function() {
                    return this.getStateAtTime(this.now());
                  }
                }),
                (t.OscillatorNode.prototype.getStateAtTime = function(e) {
                  return (
                    (e = this.toSeconds(e)),
                    -1 !== this._startTime &&
                    e >= this._startTime &&
                    (-1 === this._stopTime || e <= this._stopTime)
                      ? t.State.Started
                      : t.State.Stopped
                  );
                }),
                (t.OscillatorNode.prototype.start = function(t) {
                  if (-1 !== this._startTime)
                    throw new Error(
                      "cannot call OscillatorNode.start more than once"
                    );
                  (this._startTime = this.toSeconds(t)),
                    this._oscillator.start(this._startTime);
                  var e = this.context.currentTime;
                  return (
                    this._gainNode.gain.cancelScheduledValues(e),
                    this._gainNode.gain.setValueAtTime(0, e),
                    this._gainNode.gain.setValueAtTime(1, this._startTime),
                    this
                  );
                }),
                (t.OscillatorNode.prototype.setPeriodicWave = function(t) {
                  return this._oscillator.setPeriodicWave(t), this;
                }),
                (t.OscillatorNode.prototype.stop = function(t) {
                  return (
                    this.cancelStop(),
                    (this._stopTime = this.toSeconds(t)),
                    this._gainNode.gain.setValueAtTime(0, this._stopTime),
                    this.context.clearTimeout(this._timeout),
                    (this._timeout = this.context.setTimeout(
                      function() {
                        this._oscillator.stop(this.now()), this.onended();
                      }.bind(this),
                      this._stopTime - this.now()
                    )),
                    this
                  );
                }),
                (t.OscillatorNode.prototype.cancelStop = function() {
                  return (
                    -1 !== this._startTime &&
                      (this._gainNode.gain.cancelScheduledValues(
                        this._startTime + this.sampleTime
                      ),
                      this._gainNode.gain.setValueAtTime(
                        1,
                        Math.max(this.now(), this._startTime)
                      ),
                      this.context.clearTimeout(this._timeout),
                      (this._stopTime = -1)),
                    this
                  );
                }),
                Object.defineProperty(t.OscillatorNode.prototype, "type", {
                  get: function() {
                    return this._oscillator.type;
                  },
                  set: function(t) {
                    this._oscillator.type = t;
                  }
                }),
                (t.OscillatorNode.prototype.dispose = function() {
                  return (
                    this.context.clearTimeout(this._timeout),
                    t.AudioNode.prototype.dispose.call(this),
                    (this.onended = null),
                    this._oscillator.disconnect(),
                    (this._oscillator = null),
                    this._gainNode.dispose(),
                    (this._gainNode = null),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this.detune.dispose(),
                    (this.detune = null),
                    this
                  );
                }),
                t.OscillatorNode
              );
            }),
            n(function(t) {
              return (
                (t.Oscillator = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "type"],
                    t.Oscillator
                  );
                  t.Source.call(this, e),
                    (this._oscillator = null),
                    (this.frequency = new t.Signal(
                      e.frequency,
                      t.Type.Frequency
                    )),
                    (this.detune = new t.Signal(e.detune, t.Type.Cents)),
                    (this._wave = null),
                    (this._partials = t.defaultArg(e.partials, [1])),
                    (this._phase = e.phase),
                    (this._type = null),
                    (this.type = e.type),
                    (this.phase = this._phase),
                    this._readOnly(["frequency", "detune"]);
                }),
                t.extend(t.Oscillator, t.Source),
                (t.Oscillator.defaults = {
                  type: "sine",
                  frequency: 440,
                  detune: 0,
                  phase: 0,
                  partials: []
                }),
                (t.Oscillator.Type = {
                  Sine: "sine",
                  Triangle: "triangle",
                  Sawtooth: "sawtooth",
                  Square: "square",
                  Custom: "custom"
                }),
                (t.Oscillator.prototype._start = function(e) {
                  (this._oscillator = new t.OscillatorNode()),
                    this._wave
                      ? this._oscillator.setPeriodicWave(this._wave)
                      : (this._oscillator.type = this._type),
                    this._oscillator.connect(this.output),
                    this.frequency.connect(this._oscillator.frequency),
                    this.detune.connect(this._oscillator.detune),
                    (e = this.toSeconds(e)),
                    this._oscillator.start(e);
                }),
                (t.Oscillator.prototype._stop = function(t) {
                  return (
                    this._oscillator &&
                      ((t = this.toSeconds(t)), this._oscillator.stop(t)),
                    this
                  );
                }),
                (t.Oscillator.prototype.restart = function(t) {
                  return (
                    this._oscillator.cancelStop(),
                    this._state.cancel(this.toSeconds(t)),
                    this
                  );
                }),
                (t.Oscillator.prototype.syncFrequency = function() {
                  return t.Transport.syncSignal(this.frequency), this;
                }),
                (t.Oscillator.prototype.unsyncFrequency = function() {
                  return t.Transport.unsyncSignal(this.frequency), this;
                }),
                Object.defineProperty(t.Oscillator.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(e) {
                    var n = [
                      t.Oscillator.Type.Sine,
                      t.Oscillator.Type.Square,
                      t.Oscillator.Type.Triangle,
                      t.Oscillator.Type.Sawtooth
                    ].includes(e);
                    if (0 === this._phase && n)
                      (this._wave = null),
                        null !== this._oscillator && this._oscillator.type;
                    else {
                      var r = this._getRealImaginary(e, this._phase),
                        i = this.context.createPeriodicWave(r[0], r[1]);
                      (this._wave = i),
                        null !== this._oscillator &&
                          this._oscillator.setPeriodicWave(this._wave);
                    }
                    this._type = e;
                  }
                }),
                (t.Oscillator.prototype._getRealImaginary = function(e, n) {
                  var r = 2048,
                    i = new Float32Array(r),
                    o = new Float32Array(r),
                    a = 1;
                  if (e === t.Oscillator.Type.Custom)
                    r = a = this._partials.length + 1;
                  else {
                    var s = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);
                    s &&
                      ((a = parseInt(s[2]) + 1),
                      (e = s[1]),
                      (r = a = Math.max(a, 2)));
                  }
                  for (var u = 1; u < r; ++u) {
                    var c,
                      l = 2 / (u * Math.PI);
                    switch (e) {
                      case t.Oscillator.Type.Sine:
                        c = u <= a ? 1 : 0;
                        break;
                      case t.Oscillator.Type.Square:
                        c = 1 & u ? 2 * l : 0;
                        break;
                      case t.Oscillator.Type.Sawtooth:
                        c = l * (1 & u ? 1 : -1);
                        break;
                      case t.Oscillator.Type.Triangle:
                        c =
                          1 & u ? l * l * 2 * (((u - 1) >> 1) & 1 ? -1 : 1) : 0;
                        break;
                      case t.Oscillator.Type.Custom:
                        c = this._partials[u - 1];
                        break;
                      default:
                        throw new TypeError(
                          "Tone.Oscillator: invalid type: " + e
                        );
                    }
                    0 !== c
                      ? ((i[u] = -c * Math.sin(n * u)),
                        (o[u] = c * Math.cos(n * u)))
                      : ((i[u] = 0), (o[u] = 0));
                  }
                  return [i, o];
                }),
                (t.Oscillator.prototype._inverseFFT = function(t, e, n) {
                  for (var r = 0, i = t.length, o = 0; o < i; o++)
                    r += t[o] * Math.cos(o * n) + e[o] * Math.sin(o * n);
                  return r;
                }),
                (t.Oscillator.prototype._getInitialValue = function() {
                  for (
                    var t = this._getRealImaginary(this._type, 0),
                      e = t[0],
                      n = t[1],
                      r = 0,
                      i = 2 * Math.PI,
                      o = 0;
                    o < 8;
                    o++
                  )
                    r = Math.max(this._inverseFFT(e, n, (o / 8) * i), r);
                  return -this._inverseFFT(e, n, this._phase) / r;
                }),
                Object.defineProperty(t.Oscillator.prototype, "partials", {
                  get: function() {
                    return this._type !== t.Oscillator.Type.Custom
                      ? []
                      : this._partials;
                  },
                  set: function(e) {
                    (this._partials = e),
                      (this.type = t.Oscillator.Type.Custom);
                  }
                }),
                Object.defineProperty(t.Oscillator.prototype, "phase", {
                  get: function() {
                    return this._phase * (180 / Math.PI);
                  },
                  set: function(t) {
                    (this._phase = (t * Math.PI) / 180),
                      (this.type = this._type);
                  }
                }),
                (t.Oscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    null !== this._oscillator &&
                      (this._oscillator.dispose(), (this._oscillator = null)),
                    (this._wave = null),
                    this._writable(["frequency", "detune"]),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this.detune.dispose(),
                    (this.detune = null),
                    (this._partials = null),
                    this
                  );
                }),
                t.Oscillator
              );
            }),
            n(function(t) {
              return (
                (t.AudioToGain = function() {
                  t.SignalBase.call(this),
                    (this._norm = this.input = this.output = new t.WaveShaper(
                      function(t) {
                        return (t + 1) / 2;
                      }
                    ));
                }),
                t.extend(t.AudioToGain, t.SignalBase),
                (t.AudioToGain.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._norm.dispose(),
                    (this._norm = null),
                    this
                  );
                }),
                t.AudioToGain
              );
            }),
            n(function(t) {
              return (
                (t.Zero = function() {
                  t.SignalBase.call(this),
                    (this._gain = this.input = this.output = new t.Gain()),
                    this.context.getConstant(0).connect(this._gain);
                }),
                t.extend(t.Zero, t.SignalBase),
                (t.Zero.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._gain.dispose(),
                    (this._gain = null),
                    this
                  );
                }),
                t.Zero
              );
            }),
            n(function(t) {
              return (
                (t.LFO = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "min", "max"],
                    t.LFO
                  );
                  t.AudioNode.call(this),
                    (this._oscillator = new t.Oscillator({
                      frequency: e.frequency,
                      type: e.type
                    })),
                    (this.frequency = this._oscillator.frequency),
                    (this.amplitude = this._oscillator.volume),
                    (this.amplitude.units = t.Type.NormalRange),
                    (this.amplitude.value = e.amplitude),
                    (this._stoppedSignal = new t.Signal(0, t.Type.AudioRange)),
                    (this._zeros = new t.Zero()),
                    (this._stoppedValue = 0),
                    (this._a2g = new t.AudioToGain()),
                    (this._scaler = this.output = new t.Scale(e.min, e.max)),
                    (this._units = t.Type.Default),
                    (this.units = e.units),
                    this._oscillator.chain(this._a2g, this._scaler),
                    this._zeros.connect(this._a2g),
                    this._stoppedSignal.connect(this._a2g),
                    this._readOnly(["amplitude", "frequency"]),
                    (this.phase = e.phase);
                }),
                t.extend(t.LFO, t.AudioNode),
                (t.LFO.defaults = {
                  type: "sine",
                  min: 0,
                  max: 1,
                  phase: 0,
                  frequency: "4n",
                  amplitude: 1,
                  units: t.Type.Default
                }),
                (t.LFO.prototype.start = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._stoppedSignal.setValueAtTime(0, t),
                    this._oscillator.start(t),
                    this
                  );
                }),
                (t.LFO.prototype.stop = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._stoppedSignal.setValueAtTime(this._stoppedValue, t),
                    this._oscillator.stop(t),
                    this
                  );
                }),
                (t.LFO.prototype.sync = function() {
                  return (
                    this._oscillator.sync(),
                    this._oscillator.syncFrequency(),
                    this
                  );
                }),
                (t.LFO.prototype.unsync = function() {
                  return (
                    this._oscillator.unsync(),
                    this._oscillator.unsyncFrequency(),
                    this
                  );
                }),
                Object.defineProperty(t.LFO.prototype, "min", {
                  get: function() {
                    return this._toUnits(this._scaler.min);
                  },
                  set: function(t) {
                    (t = this._fromUnits(t)), (this._scaler.min = t);
                  }
                }),
                Object.defineProperty(t.LFO.prototype, "max", {
                  get: function() {
                    return this._toUnits(this._scaler.max);
                  },
                  set: function(t) {
                    (t = this._fromUnits(t)), (this._scaler.max = t);
                  }
                }),
                Object.defineProperty(t.LFO.prototype, "type", {
                  get: function() {
                    return this._oscillator.type;
                  },
                  set: function(t) {
                    (this._oscillator.type = t),
                      (this._stoppedValue = this._oscillator._getInitialValue()),
                      (this._stoppedSignal.value = this._stoppedValue);
                  }
                }),
                Object.defineProperty(t.LFO.prototype, "phase", {
                  get: function() {
                    return this._oscillator.phase;
                  },
                  set: function(t) {
                    (this._oscillator.phase = t),
                      (this._stoppedValue = this._oscillator._getInitialValue()),
                      (this._stoppedSignal.value = this._stoppedValue);
                  }
                }),
                Object.defineProperty(t.LFO.prototype, "units", {
                  get: function() {
                    return this._units;
                  },
                  set: function(t) {
                    var e = this.min,
                      n = this.max;
                    (this._units = t), (this.min = e), (this.max = n);
                  }
                }),
                Object.defineProperty(t.LFO.prototype, "mute", {
                  get: function() {
                    return this._oscillator.mute;
                  },
                  set: function(t) {
                    this._oscillator.mute = t;
                  }
                }),
                Object.defineProperty(t.LFO.prototype, "state", {
                  get: function() {
                    return this._oscillator.state;
                  }
                }),
                (t.LFO.prototype.connect = function(e) {
                  return (
                    (e.constructor !== t.Signal && e.constructor !== t.Param) ||
                      ((this.convert = e.convert), (this.units = e.units)),
                    t.SignalBase.prototype.connect.apply(this, arguments),
                    this
                  );
                }),
                (t.LFO.prototype._fromUnits = t.Param.prototype._fromUnits),
                (t.LFO.prototype._toUnits = t.Param.prototype._toUnits),
                (t.LFO.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable(["amplitude", "frequency"]),
                    this._oscillator.dispose(),
                    (this._oscillator = null),
                    this._stoppedSignal.dispose(),
                    (this._stoppedSignal = null),
                    this._zeros.dispose(),
                    (this._zeros = null),
                    this._scaler.dispose(),
                    (this._scaler = null),
                    this._a2g.dispose(),
                    (this._a2g = null),
                    (this.frequency = null),
                    (this.amplitude = null),
                    this
                  );
                }),
                t.LFO
              );
            }),
            n(function(t) {
              return (
                (t.Limiter = function() {
                  var e = t.defaults(arguments, ["threshold"], t.Limiter);
                  t.AudioNode.call(this),
                    (this._compressor = this.input = this.output = new t.Compressor(
                      { attack: 0.001, decay: 0.001, threshold: e.threshold }
                    )),
                    (this.threshold = this._compressor.threshold),
                    this._readOnly("threshold");
                }),
                t.extend(t.Limiter, t.AudioNode),
                (t.Limiter.defaults = { threshold: -12 }),
                (t.Limiter.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._compressor.dispose(),
                    (this._compressor = null),
                    this._writable("threshold"),
                    (this.threshold = null),
                    this
                  );
                }),
                t.Limiter
              );
            }),
            n(function(t) {
              return (
                (t.LowpassCombFilter = function() {
                  var e = t.defaults(
                    arguments,
                    ["delayTime", "resonance", "dampening"],
                    t.LowpassCombFilter
                  );
                  t.AudioNode.call(this),
                    this.createInsOuts(1, 1),
                    (this._delay = this.input = new t.Delay(e.delayTime)),
                    (this.delayTime = this._delay.delayTime),
                    (this._lowpass = this.output = this.context.createBiquadFilter()),
                    (this._lowpass.Q.value = -3.0102999566398125),
                    (this._lowpass.type = "lowpass"),
                    (this.dampening = new t.Param({
                      param: this._lowpass.frequency,
                      units: t.Type.Frequency,
                      value: e.dampening
                    })),
                    (this._feedback = new t.Gain(
                      e.resonance,
                      t.Type.NormalRange
                    )),
                    (this.resonance = this._feedback.gain),
                    this._delay.chain(
                      this._lowpass,
                      this._feedback,
                      this._delay
                    ),
                    this._readOnly(["dampening", "resonance", "delayTime"]);
                }),
                t.extend(t.LowpassCombFilter, t.AudioNode),
                (t.LowpassCombFilter.defaults = {
                  delayTime: 0.1,
                  resonance: 0.5,
                  dampening: 3e3
                }),
                (t.LowpassCombFilter.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable(["dampening", "resonance", "delayTime"]),
                    this.dampening.dispose(),
                    (this.dampening = null),
                    this.resonance.dispose(),
                    (this.resonance = null),
                    this._delay.dispose(),
                    (this._delay = null),
                    (this.delayTime = null),
                    this._lowpass.disconnect(),
                    (this._lowpass = null),
                    this._feedback.disconnect(),
                    (this._feedback = null),
                    this
                  );
                }),
                t.LowpassCombFilter
              );
            }),
            n(function(t) {
              return (
                (t.Merge = function() {
                  t.AudioNode.call(this),
                    this.createInsOuts(2, 0),
                    (this.left = this.input[0] = new t.Gain()),
                    (this.right = this.input[1] = new t.Gain()),
                    (this._merger = this.output = this.context.createChannelMerger(
                      2
                    )),
                    this.left.connect(this._merger, 0, 0),
                    this.right.connect(this._merger, 0, 1),
                    (this.left.channelCount = 1),
                    (this.right.channelCount = 1),
                    (this.left.channelCountMode = "explicit"),
                    (this.right.channelCountMode = "explicit");
                }),
                t.extend(t.Merge, t.AudioNode),
                (t.Merge.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this.left.dispose(),
                    (this.left = null),
                    this.right.dispose(),
                    (this.right = null),
                    this._merger.disconnect(),
                    (this._merger = null),
                    this
                  );
                }),
                t.Merge
              );
            }),
            n(function(t) {
              return (
                (t.Meter = function() {
                  var e = t.defaults(arguments, ["smoothing"], t.Meter);
                  t.AudioNode.call(this),
                    (this.input = this.output = this._analyser = new t.Analyser(
                      "waveform",
                      1024
                    )),
                    (this.smoothing = e.smoothing);
                }),
                t.extend(t.Meter, t.AudioNode),
                (t.Meter.defaults = { smoothing: 0.8 }),
                (t.Meter.prototype.getLevel = function() {
                  this._analyser.type = "fft";
                  var t = this._analyser.getValue();
                  return Math.max.apply(this, t) + 28;
                }),
                (t.Meter.prototype.getValue = function() {
                  return (
                    (this._analyser.type = "waveform"),
                    this._analyser.getValue()[0]
                  );
                }),
                Object.defineProperty(t.Meter.prototype, "smoothing", {
                  get: function() {
                    return this._analyser.smoothing;
                  },
                  set: function(t) {
                    this._analyser.smoothing = t;
                  }
                }),
                (t.Meter.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._analyser.dispose(),
                    (this._analyser = null),
                    this
                  );
                }),
                t.Meter
              );
            }),
            n(function(t) {
              return (
                (t.Split = function() {
                  t.AudioNode.call(this),
                    this.createInsOuts(0, 2),
                    (this._splitter = this.input = this.context.createChannelSplitter(
                      2
                    )),
                    (this._splitter.channelCount = 2),
                    (this._splitter.channelCountMode = "explicit"),
                    (this.left = this.output[0] = new t.Gain()),
                    (this.right = this.output[1] = new t.Gain()),
                    this._splitter.connect(this.left, 0, 0),
                    this._splitter.connect(this.right, 1, 0);
                }),
                t.extend(t.Split, t.AudioNode),
                (t.Split.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._splitter.disconnect(),
                    this.left.dispose(),
                    (this.left = null),
                    this.right.dispose(),
                    (this.right = null),
                    (this._splitter = null),
                    this
                  );
                }),
                t.Split
              );
            }),
            n(function(t) {
              return (
                (t.MidSideSplit = function() {
                  t.AudioNode.call(this),
                    this.createInsOuts(0, 2),
                    (this._split = this.input = new t.Split()),
                    (this._midAdd = new t.Add()),
                    (this.mid = this.output[0] = new t.Multiply(Math.SQRT1_2)),
                    (this._sideSubtract = new t.Subtract()),
                    (this.side = this.output[1] = new t.Multiply(Math.SQRT1_2)),
                    this._split.connect(this._midAdd, 0, 0),
                    this._split.connect(this._midAdd, 1, 1),
                    this._split.connect(this._sideSubtract, 0, 0),
                    this._split.connect(this._sideSubtract, 1, 1),
                    this._midAdd.connect(this.mid),
                    this._sideSubtract.connect(this.side);
                }),
                t.extend(t.MidSideSplit, t.AudioNode),
                (t.MidSideSplit.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this.mid.dispose(),
                    (this.mid = null),
                    this.side.dispose(),
                    (this.side = null),
                    this._midAdd.dispose(),
                    (this._midAdd = null),
                    this._sideSubtract.dispose(),
                    (this._sideSubtract = null),
                    this._split.dispose(),
                    (this._split = null),
                    this
                  );
                }),
                t.MidSideSplit
              );
            }),
            n(function(t) {
              return (
                (t.MidSideMerge = function() {
                  t.AudioNode.call(this),
                    this.createInsOuts(2, 0),
                    (this.mid = this.input[0] = new t.Gain()),
                    (this._left = new t.Add()),
                    (this._timesTwoLeft = new t.Multiply(Math.SQRT1_2)),
                    (this.side = this.input[1] = new t.Gain()),
                    (this._right = new t.Subtract()),
                    (this._timesTwoRight = new t.Multiply(Math.SQRT1_2)),
                    (this._merge = this.output = new t.Merge()),
                    this.mid.connect(this._left, 0, 0),
                    this.side.connect(this._left, 0, 1),
                    this.mid.connect(this._right, 0, 0),
                    this.side.connect(this._right, 0, 1),
                    this._left.connect(this._timesTwoLeft),
                    this._right.connect(this._timesTwoRight),
                    this._timesTwoLeft.connect(this._merge, 0, 0),
                    this._timesTwoRight.connect(this._merge, 0, 1);
                }),
                t.extend(t.MidSideMerge, t.AudioNode),
                (t.MidSideMerge.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this.mid.dispose(),
                    (this.mid = null),
                    this.side.dispose(),
                    (this.side = null),
                    this._left.dispose(),
                    (this._left = null),
                    this._timesTwoLeft.dispose(),
                    (this._timesTwoLeft = null),
                    this._right.dispose(),
                    (this._right = null),
                    this._timesTwoRight.dispose(),
                    (this._timesTwoRight = null),
                    this._merge.dispose(),
                    (this._merge = null),
                    this
                  );
                }),
                t.MidSideMerge
              );
            }),
            n(function(t) {
              return (
                (t.MidSideCompressor = function(e) {
                  t.AudioNode.call(this),
                    (e = t.defaultArg(e, t.MidSideCompressor.defaults)),
                    (this._midSideSplit = this.input = new t.MidSideSplit()),
                    (this._midSideMerge = this.output = new t.MidSideMerge()),
                    (this.mid = new t.Compressor(e.mid)),
                    (this.side = new t.Compressor(e.side)),
                    this._midSideSplit.mid.chain(
                      this.mid,
                      this._midSideMerge.mid
                    ),
                    this._midSideSplit.side.chain(
                      this.side,
                      this._midSideMerge.side
                    ),
                    this._readOnly(["mid", "side"]);
                }),
                t.extend(t.MidSideCompressor, t.AudioNode),
                (t.MidSideCompressor.defaults = {
                  mid: {
                    ratio: 3,
                    threshold: -24,
                    release: 0.03,
                    attack: 0.02,
                    knee: 16
                  },
                  side: {
                    ratio: 6,
                    threshold: -30,
                    release: 0.25,
                    attack: 0.03,
                    knee: 10
                  }
                }),
                (t.MidSideCompressor.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable(["mid", "side"]),
                    this.mid.dispose(),
                    (this.mid = null),
                    this.side.dispose(),
                    (this.side = null),
                    this._midSideSplit.dispose(),
                    (this._midSideSplit = null),
                    this._midSideMerge.dispose(),
                    (this._midSideMerge = null),
                    this
                  );
                }),
                t.MidSideCompressor
              );
            }),
            n(function(t) {
              return (
                (t.Mono = function() {
                  t.AudioNode.call(this),
                    this.createInsOuts(1, 0),
                    (this._merge = this.output = new t.Merge()),
                    this.input.connect(this._merge, 0, 0),
                    this.input.connect(this._merge, 0, 1);
                }),
                t.extend(t.Mono, t.AudioNode),
                (t.Mono.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._merge.dispose(),
                    (this._merge = null),
                    this
                  );
                }),
                t.Mono
              );
            }),
            n(function(t) {
              return (
                (t.MultibandCompressor = function(e) {
                  t.AudioNode.call(this),
                    (e = t.defaultArg(
                      arguments,
                      t.MultibandCompressor.defaults
                    )),
                    (this._splitter = this.input = new t.MultibandSplit({
                      lowFrequency: e.lowFrequency,
                      highFrequency: e.highFrequency
                    })),
                    (this.lowFrequency = this._splitter.lowFrequency),
                    (this.highFrequency = this._splitter.highFrequency),
                    (this.output = new t.Gain()),
                    (this.low = new t.Compressor(e.low)),
                    (this.mid = new t.Compressor(e.mid)),
                    (this.high = new t.Compressor(e.high)),
                    this._splitter.low.chain(this.low, this.output),
                    this._splitter.mid.chain(this.mid, this.output),
                    this._splitter.high.chain(this.high, this.output),
                    this._readOnly([
                      "high",
                      "mid",
                      "low",
                      "highFrequency",
                      "lowFrequency"
                    ]);
                }),
                t.extend(t.MultibandCompressor, t.AudioNode),
                (t.MultibandCompressor.defaults = {
                  low: t.Compressor.defaults,
                  mid: t.Compressor.defaults,
                  high: t.Compressor.defaults,
                  lowFrequency: 250,
                  highFrequency: 2e3
                }),
                (t.MultibandCompressor.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._splitter.dispose(),
                    this._writable([
                      "high",
                      "mid",
                      "low",
                      "highFrequency",
                      "lowFrequency"
                    ]),
                    this.low.dispose(),
                    this.mid.dispose(),
                    this.high.dispose(),
                    (this._splitter = null),
                    (this.low = null),
                    (this.mid = null),
                    (this.high = null),
                    (this.lowFrequency = null),
                    (this.highFrequency = null),
                    this
                  );
                }),
                t.MultibandCompressor
              );
            }),
            n(function(t) {
              if (t.supported && !window.StereoPannerNode) {
                var e = function(e) {
                  (this.context = e),
                    (this.pan = new t.Signal(0, t.Type.AudioRange));
                  var n = new t.WaveShaper(function(e) {
                      return t.equalPowerScale((e + 1) / 2);
                    }, 4096),
                    r = new t.WaveShaper(function(e) {
                      return t.equalPowerScale(1 - (e + 1) / 2);
                    }, 4096),
                    i = new t.Gain(),
                    o = new t.Gain(),
                    a = (this.input = new t.Split());
                  new t.Zero().fan(n, r);
                  var s = (this.output = new t.Merge());
                  a.left.chain(i, s.left),
                    a.right.chain(o, s.right),
                    this.pan.chain(r, i.gain),
                    this.pan.chain(n, o.gain);
                };
                (e.prototype.disconnect = function() {
                  this.output.disconnect.apply(this.output, arguments);
                }),
                  (e.prototype.connect = function() {
                    this.output.connect.apply(this.output, arguments);
                  }),
                  (AudioContext.prototype.createStereoPanner = function() {
                    return new e(this);
                  }),
                  (t.Context.prototype.createStereoPanner = function() {
                    return new e(this);
                  });
              }
            }),
            n(function(t) {
              return (
                (t.Panner = function(e) {
                  t.AudioNode.call(this),
                    (this._panner = this.input = this.output = this.context.createStereoPanner()),
                    (this.pan = this._panner.pan),
                    (this.pan.value = t.defaultArg(e, 0)),
                    this._readOnly("pan");
                }),
                t.extend(t.Panner, t.AudioNode),
                (t.Panner.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable("pan"),
                    this._panner.disconnect(),
                    (this._panner = null),
                    (this.pan = null),
                    this
                  );
                }),
                t.Panner
              );
            }),
            n(function(t) {
              return (
                (t.Panner3D = function() {
                  var e = t.defaults(
                    arguments,
                    ["positionX", "positionY", "positionZ"],
                    t.Panner3D
                  );
                  t.AudioNode.call(this),
                    (this._panner = this.input = this.output = this.context.createPanner()),
                    (this._panner.panningModel = e.panningModel),
                    (this._panner.maxDistance = e.maxDistance),
                    (this._panner.distanceModel = e.distanceModel),
                    (this._panner.coneOuterGain = e.coneOuterGain),
                    (this._panner.coneOuterAngle = e.coneOuterAngle),
                    (this._panner.coneInnerAngle = e.coneInnerAngle),
                    (this._panner.refDistance = e.refDistance),
                    (this._panner.rolloffFactor = e.rolloffFactor),
                    (this._orientation = [
                      e.orientationX,
                      e.orientationY,
                      e.orientationZ
                    ]),
                    (this._position = [e.positionX, e.positionY, e.positionZ]),
                    (this.orientationX = e.orientationX),
                    (this.orientationY = e.orientationY),
                    (this.orientationZ = e.orientationZ),
                    (this.positionX = e.positionX),
                    (this.positionY = e.positionY),
                    (this.positionZ = e.positionZ);
                }),
                t.extend(t.Panner3D, t.AudioNode),
                (t.Panner3D.defaults = {
                  positionX: 0,
                  positionY: 0,
                  positionZ: 0,
                  orientationX: 0,
                  orientationY: 0,
                  orientationZ: 0,
                  panningModel: "equalpower",
                  maxDistance: 1e4,
                  distanceModel: "inverse",
                  coneOuterGain: 0,
                  coneOuterAngle: 360,
                  coneInnerAngle: 360,
                  refDistance: 1,
                  rolloffFactor: 1
                }),
                (t.Panner3D.prototype._rampTimeConstant = 0.01),
                (t.Panner3D.prototype.setPosition = function(t, e, n) {
                  if (this._panner.positionX) {
                    var r = this.now();
                    this._panner.positionX.setTargetAtTime(
                      t,
                      r,
                      this._rampTimeConstant
                    ),
                      this._panner.positionY.setTargetAtTime(
                        e,
                        r,
                        this._rampTimeConstant
                      ),
                      this._panner.positionZ.setTargetAtTime(
                        n,
                        r,
                        this._rampTimeConstant
                      );
                  } else this._panner.setPosition(t, e, n);
                  return (
                    (this._position = Array.prototype.slice.call(arguments)),
                    this
                  );
                }),
                (t.Panner3D.prototype.setOrientation = function(t, e, n) {
                  if (this._panner.orientationX) {
                    var r = this.now();
                    this._panner.orientationX.setTargetAtTime(
                      t,
                      r,
                      this._rampTimeConstant
                    ),
                      this._panner.orientationY.setTargetAtTime(
                        e,
                        r,
                        this._rampTimeConstant
                      ),
                      this._panner.orientationZ.setTargetAtTime(
                        n,
                        r,
                        this._rampTimeConstant
                      );
                  } else this._panner.setOrientation(t, e, n);
                  return (
                    (this._orientation = Array.prototype.slice.call(arguments)),
                    this
                  );
                }),
                Object.defineProperty(t.Panner3D.prototype, "positionX", {
                  set: function(t) {
                    (this._position[0] = t),
                      this.setPosition.apply(this, this._position);
                  },
                  get: function() {
                    return this._position[0];
                  }
                }),
                Object.defineProperty(t.Panner3D.prototype, "positionY", {
                  set: function(t) {
                    (this._position[1] = t),
                      this.setPosition.apply(this, this._position);
                  },
                  get: function() {
                    return this._position[1];
                  }
                }),
                Object.defineProperty(t.Panner3D.prototype, "positionZ", {
                  set: function(t) {
                    (this._position[2] = t),
                      this.setPosition.apply(this, this._position);
                  },
                  get: function() {
                    return this._position[2];
                  }
                }),
                Object.defineProperty(t.Panner3D.prototype, "orientationX", {
                  set: function(t) {
                    (this._orientation[0] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[0];
                  }
                }),
                Object.defineProperty(t.Panner3D.prototype, "orientationY", {
                  set: function(t) {
                    (this._orientation[1] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[1];
                  }
                }),
                Object.defineProperty(t.Panner3D.prototype, "orientationZ", {
                  set: function(t) {
                    (this._orientation[2] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[2];
                  }
                }),
                (t.Panner3D._aliasProperty = function(e) {
                  Object.defineProperty(t.Panner3D.prototype, e, {
                    set: function(t) {
                      this._panner[e] = t;
                    },
                    get: function() {
                      return this._panner[e];
                    }
                  });
                }),
                t.Panner3D._aliasProperty("panningModel"),
                t.Panner3D._aliasProperty("refDistance"),
                t.Panner3D._aliasProperty("rolloffFactor"),
                t.Panner3D._aliasProperty("distanceModel"),
                t.Panner3D._aliasProperty("coneInnerAngle"),
                t.Panner3D._aliasProperty("coneOuterAngle"),
                t.Panner3D._aliasProperty("coneOuterGain"),
                t.Panner3D._aliasProperty("maxDistance"),
                (t.Panner3D.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._panner.disconnect(),
                    (this._panner = null),
                    (this._orientation = null),
                    (this._position = null),
                    this
                  );
                }),
                t.Panner3D
              );
            }),
            n(function(t) {
              return (
                (t.PanVol = function() {
                  var e = t.defaults(arguments, ["pan", "volume"], t.PanVol);
                  t.AudioNode.call(this),
                    (this._panner = this.input = new t.Panner(e.pan)),
                    (this.pan = this._panner.pan),
                    (this._volume = this.output = new t.Volume(e.volume)),
                    (this.volume = this._volume.volume),
                    this._panner.connect(this._volume),
                    (this.mute = e.mute),
                    this._readOnly(["pan", "volume"]);
                }),
                t.extend(t.PanVol, t.AudioNode),
                (t.PanVol.defaults = { pan: 0, volume: 0, mute: !1 }),
                Object.defineProperty(t.PanVol.prototype, "mute", {
                  get: function() {
                    return this._volume.mute;
                  },
                  set: function(t) {
                    this._volume.mute = t;
                  }
                }),
                (t.PanVol.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._writable(["pan", "volume"]),
                    this._panner.dispose(),
                    (this._panner = null),
                    (this.pan = null),
                    this._volume.dispose(),
                    (this._volume = null),
                    (this.volume = null),
                    this
                  );
                }),
                t.PanVol
              );
            }),
            n(function(t) {
              return (
                (t.Solo = function() {
                  var e = t.defaults(arguments, ["solo"], t.Solo);
                  t.AudioNode.call(this),
                    (this.input = this.output = new t.Gain()),
                    (this._soloBind = this._soloed.bind(this)),
                    this.context.on("solo", this._soloBind),
                    (this.solo = e.solo);
                }),
                t.extend(t.Solo, t.AudioNode),
                (t.Solo.defaults = { solo: !1 }),
                Object.defineProperty(t.Solo.prototype, "solo", {
                  get: function() {
                    return this._isSoloed();
                  },
                  set: function(t) {
                    t ? this._addSolo() : this._removeSolo(),
                      this.context.emit("solo", this);
                  }
                }),
                Object.defineProperty(t.Solo.prototype, "muted", {
                  get: function() {
                    return 0 === this.input.gain.value;
                  }
                }),
                (t.Solo.prototype._addSolo = function() {
                  t.isArray(this.context._currentSolo) ||
                    (this.context._currentSolo = []),
                    this._isSoloed() || this.context._currentSolo.push(this);
                }),
                (t.Solo.prototype._removeSolo = function() {
                  if (this._isSoloed()) {
                    var t = this.context._currentSolo.indexOf(this);
                    this.context._currentSolo.splice(t, 1);
                  }
                }),
                (t.Solo.prototype._isSoloed = function() {
                  return (
                    !!t.isArray(this.context._currentSolo) &&
                    0 !== this.context._currentSolo.length &&
                    -1 !== this.context._currentSolo.indexOf(this)
                  );
                }),
                (t.Solo.prototype._noSolos = function() {
                  return (
                    !t.isArray(this.context._currentSolo) ||
                    0 === this.context._currentSolo.length
                  );
                }),
                (t.Solo.prototype._soloed = function() {
                  this._isSoloed()
                    ? (this.input.gain.value = 1)
                    : this._noSolos()
                    ? (this.input.gain.value = 1)
                    : (this.input.gain.value = 0);
                }),
                (t.Solo.prototype.dispose = function() {
                  return (
                    this.context.off("solo", this._soloBind),
                    this._removeSolo(),
                    (this._soloBind = null),
                    t.AudioNode.prototype.dispose.call(this),
                    this
                  );
                }),
                t.Solo
              );
            }),
            n(function(t) {
              return (
                (t.Waveform = function() {
                  var e = t.defaults(arguments, ["size"], t.Waveform);
                  (e.type = t.Analyser.Type.Waveform),
                    t.AudioNode.call(this),
                    (this._analyser = this.input = this.output = new t.Analyser(
                      e
                    ));
                }),
                t.extend(t.Waveform, t.AudioNode),
                (t.Waveform.defaults = { size: 1024 }),
                (t.Waveform.prototype.getValue = function() {
                  return this._analyser.getValue();
                }),
                Object.defineProperty(t.Waveform.prototype, "size", {
                  get: function() {
                    return this._analyser.size;
                  },
                  set: function(t) {
                    this._analyser.size = t;
                  }
                }),
                (t.Waveform.prototype.dispose = function() {
                  t.AudioNode.prototype.dispose.call(this),
                    this._analyser.dispose(),
                    (this._analyser = null);
                }),
                t.Waveform
              );
            }),
            n(function(t) {
              return (
                (t.CtrlInterpolate = function() {
                  var e = t.defaults(
                    arguments,
                    ["values", "index"],
                    t.CtrlInterpolate
                  );
                  t.call(this),
                    (this.values = e.values),
                    (this.index = e.index);
                }),
                t.extend(t.CtrlInterpolate),
                (t.CtrlInterpolate.defaults = { index: 0, values: [] }),
                Object.defineProperty(t.CtrlInterpolate.prototype, "value", {
                  get: function() {
                    var t = this.index;
                    t = Math.min(t, this.values.length - 1);
                    var e = Math.floor(t),
                      n = this.values[e],
                      r = this.values[Math.ceil(t)];
                    return this._interpolate(t - e, n, r);
                  }
                }),
                (t.CtrlInterpolate.prototype._interpolate = function(e, n, r) {
                  if (t.isArray(n)) {
                    for (var i = [], o = 0; o < n.length; o++)
                      i[o] = this._interpolate(e, n[o], r[o]);
                    return i;
                  }
                  if (t.isObject(n)) {
                    var a = {};
                    for (var s in n) a[s] = this._interpolate(e, n[s], r[s]);
                    return a;
                  }
                  return (
                    (1 - e) * (n = this._toNumber(n)) +
                    e * (r = this._toNumber(r))
                  );
                }),
                (t.CtrlInterpolate.prototype._toNumber = function(e) {
                  return t.isNumber(e) ? e : this.toSeconds(e);
                }),
                (t.CtrlInterpolate.prototype.dispose = function() {
                  this.values = null;
                }),
                t.CtrlInterpolate
              );
            }),
            n(function(t) {
              return (
                (t.CtrlMarkov = function(e, n) {
                  t.call(this),
                    (this.values = t.defaultArg(e, {})),
                    (this.value = t.defaultArg(n, Object.keys(this.values)[0]));
                }),
                t.extend(t.CtrlMarkov),
                (t.CtrlMarkov.prototype.next = function() {
                  if (this.values.hasOwnProperty(this.value)) {
                    var e = this.values[this.value];
                    if (t.isArray(e))
                      for (
                        var n = this._getProbDistribution(e),
                          r = Math.random(),
                          i = 0,
                          o = 0;
                        o < n.length;
                        o++
                      ) {
                        var a = n[o];
                        if (r > i && r < i + a) {
                          var s = e[o];
                          t.isObject(s)
                            ? (this.value = s.value)
                            : (this.value = s);
                        }
                        i += a;
                      }
                    else this.value = e;
                  }
                  return this.value;
                }),
                (t.CtrlMarkov.prototype._getProbDistribution = function(e) {
                  for (var n = [], r = 0, i = !1, o = 0; o < e.length; o++) {
                    var a = e[o];
                    t.isObject(a)
                      ? ((i = !0), (n[o] = a.probability))
                      : (n[o] = 1 / e.length),
                      (r += n[o]);
                  }
                  if (i) for (var s = 0; s < n.length; s++) n[s] = n[s] / r;
                  return n;
                }),
                (t.CtrlMarkov.prototype.dispose = function() {
                  this.values = null;
                }),
                t.CtrlMarkov
              );
            }),
            n(function(t) {
              return (
                (t.CtrlPattern = function() {
                  var e = t.defaults(
                    arguments,
                    ["values", "type"],
                    t.CtrlPattern
                  );
                  t.call(this),
                    (this.values = e.values),
                    (this.index = 0),
                    (this._type = null),
                    (this._shuffled = null),
                    (this._direction = null),
                    (this.type = e.type);
                }),
                t.extend(t.CtrlPattern),
                (t.CtrlPattern.Type = {
                  Up: "up",
                  Down: "down",
                  UpDown: "upDown",
                  DownUp: "downUp",
                  AlternateUp: "alternateUp",
                  AlternateDown: "alternateDown",
                  Random: "random",
                  RandomWalk: "randomWalk",
                  RandomOnce: "randomOnce"
                }),
                (t.CtrlPattern.defaults = {
                  type: t.CtrlPattern.Type.Up,
                  values: []
                }),
                Object.defineProperty(t.CtrlPattern.prototype, "value", {
                  get: function() {
                    if (0 !== this.values.length) {
                      if (1 === this.values.length) return this.values[0];
                      this.index = Math.min(this.index, this.values.length - 1);
                      var e = this.values[this.index];
                      return (
                        this.type === t.CtrlPattern.Type.RandomOnce &&
                          (this.values.length !== this._shuffled.length &&
                            this._shuffleValues(),
                          (e = this.values[this._shuffled[this.index]])),
                        e
                      );
                    }
                  }
                }),
                Object.defineProperty(t.CtrlPattern.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(e) {
                    (this._type = e),
                      (this._shuffled = null),
                      this._type === t.CtrlPattern.Type.Up ||
                      this._type === t.CtrlPattern.Type.UpDown ||
                      this._type === t.CtrlPattern.Type.RandomOnce ||
                      this._type === t.CtrlPattern.Type.AlternateUp
                        ? (this.index = 0)
                        : (this._type !== t.CtrlPattern.Type.Down &&
                            this._type !== t.CtrlPattern.Type.DownUp &&
                            this._type !== t.CtrlPattern.Type.AlternateDown) ||
                          (this.index = this.values.length - 1),
                      this._type === t.CtrlPattern.Type.UpDown ||
                      this._type === t.CtrlPattern.Type.AlternateUp
                        ? (this._direction = t.CtrlPattern.Type.Up)
                        : (this._type !== t.CtrlPattern.Type.DownUp &&
                            this._type !== t.CtrlPattern.Type.AlternateDown) ||
                          (this._direction = t.CtrlPattern.Type.Down),
                      this._type === t.CtrlPattern.Type.RandomOnce
                        ? this._shuffleValues()
                        : this._type === t.CtrlPattern.Random &&
                          (this.index = Math.floor(
                            Math.random() * this.values.length
                          ));
                  }
                }),
                (t.CtrlPattern.prototype.next = function() {
                  var e = this.type;
                  return (
                    e === t.CtrlPattern.Type.Up
                      ? (this.index++,
                        this.index >= this.values.length && (this.index = 0))
                      : e === t.CtrlPattern.Type.Down
                      ? (this.index--,
                        this.index < 0 && (this.index = this.values.length - 1))
                      : e === t.CtrlPattern.Type.UpDown ||
                        e === t.CtrlPattern.Type.DownUp
                      ? (this._direction === t.CtrlPattern.Type.Up
                          ? this.index++
                          : this.index--,
                        this.index < 0
                          ? ((this.index = 1),
                            (this._direction = t.CtrlPattern.Type.Up))
                          : this.index >= this.values.length &&
                            ((this.index = this.values.length - 2),
                            (this._direction = t.CtrlPattern.Type.Down)))
                      : e === t.CtrlPattern.Type.Random
                      ? (this.index = Math.floor(
                          Math.random() * this.values.length
                        ))
                      : e === t.CtrlPattern.Type.RandomWalk
                      ? Math.random() < 0.5
                        ? (this.index--, (this.index = Math.max(this.index, 0)))
                        : (this.index++,
                          (this.index = Math.min(
                            this.index,
                            this.values.length - 1
                          )))
                      : e === t.CtrlPattern.Type.RandomOnce
                      ? (this.index++,
                        this.index >= this.values.length &&
                          ((this.index = 0), this._shuffleValues()))
                      : e === t.CtrlPattern.Type.AlternateUp
                      ? (this._direction === t.CtrlPattern.Type.Up
                          ? ((this.index += 2),
                            (this._direction = t.CtrlPattern.Type.Down))
                          : ((this.index -= 1),
                            (this._direction = t.CtrlPattern.Type.Up)),
                        this.index >= this.values.length &&
                          ((this.index = 0),
                          (this._direction = t.CtrlPattern.Type.Up)))
                      : e === t.CtrlPattern.Type.AlternateDown &&
                        (this._direction === t.CtrlPattern.Type.Up
                          ? ((this.index += 1),
                            (this._direction = t.CtrlPattern.Type.Down))
                          : ((this.index -= 2),
                            (this._direction = t.CtrlPattern.Type.Up)),
                        this.index < 0 &&
                          ((this.index = this.values.length - 1),
                          (this._direction = t.CtrlPattern.Type.Down))),
                    this.value
                  );
                }),
                (t.CtrlPattern.prototype._shuffleValues = function() {
                  var t = [];
                  this._shuffled = [];
                  for (var e = 0; e < this.values.length; e++) t[e] = e;
                  for (; t.length > 0; ) {
                    var n = t.splice(Math.floor(t.length * Math.random()), 1);
                    this._shuffled.push(n[0]);
                  }
                }),
                (t.CtrlPattern.prototype.dispose = function() {
                  (this._shuffled = null), (this.values = null);
                }),
                t.CtrlPattern
              );
            }),
            n(function(t) {
              return (
                (t.CtrlRandom = function() {
                  var e = t.defaults(arguments, ["min", "max"], t.CtrlRandom);
                  t.call(this),
                    (this.min = e.min),
                    (this.max = e.max),
                    (this.integer = e.integer);
                }),
                t.extend(t.CtrlRandom),
                (t.CtrlRandom.defaults = { min: 0, max: 1, integer: !1 }),
                Object.defineProperty(t.CtrlRandom.prototype, "value", {
                  get: function() {
                    var t = this.toSeconds(this.min),
                      e = this.toSeconds(this.max),
                      n = Math.random(),
                      r = n * t + (1 - n) * e;
                    return this.integer && (r = Math.floor(r)), r;
                  }
                }),
                t.CtrlRandom
              );
            }),
            n(function(t) {
              return (
                (t.Buffers = function(e) {
                  var n = Array.prototype.slice.call(arguments);
                  n.shift();
                  var r = t.defaults(n, ["onload", "baseUrl"], t.Buffers);
                  for (var i in (t.call(this),
                  (this._buffers = {}),
                  (this.baseUrl = r.baseUrl),
                  (this._loadingCount = 0),
                  e))
                    this._loadingCount++,
                      this.add(
                        i,
                        e[i],
                        this._bufferLoaded.bind(this, r.onload)
                      );
                }),
                t.extend(t.Buffers),
                (t.Buffers.defaults = { onload: t.noOp, baseUrl: "" }),
                (t.Buffers.prototype.has = function(t) {
                  return this._buffers.hasOwnProperty(t);
                }),
                (t.Buffers.prototype.get = function(t) {
                  if (this.has(t)) return this._buffers[t];
                  throw new Error("Tone.Buffers: no buffer named " + t);
                }),
                (t.Buffers.prototype._bufferLoaded = function(t) {
                  this._loadingCount--,
                    0 === this._loadingCount && t && t(this);
                }),
                Object.defineProperty(t.Buffers.prototype, "loaded", {
                  get: function() {
                    var t = !0;
                    for (var e in this._buffers) {
                      var n = this.get(e);
                      t = t && n.loaded;
                    }
                    return t;
                  }
                }),
                (t.Buffers.prototype.add = function(e, n, r) {
                  return (
                    (r = t.defaultArg(r, t.noOp)),
                    n instanceof t.Buffer
                      ? ((this._buffers[e] = n), r(this))
                      : n instanceof AudioBuffer
                      ? ((this._buffers[e] = new t.Buffer(n)), r(this))
                      : t.isString(n) &&
                        (this._buffers[e] = new t.Buffer(this.baseUrl + n, r)),
                    this
                  );
                }),
                (t.Buffers.prototype.dispose = function() {
                  for (var e in (t.prototype.dispose.call(this), this._buffers))
                    this._buffers[e].dispose();
                  return (this._buffers = null), this;
                }),
                t.Buffers
              );
            }),
            n(function(t) {
              var e = {};
              return (
                (t.prototype.send = function(n, r) {
                  e.hasOwnProperty(n) || (e[n] = this.context.createGain()),
                    (r = t.defaultArg(r, 0));
                  var i = new t.Gain(r, t.Type.Decibels);
                  return this.connect(i), i.connect(e[n]), i;
                }),
                (t.prototype.receive = function(t, n) {
                  return (
                    e.hasOwnProperty(t) || (e[t] = this.context.createGain()),
                    e[t].connect(this, 0, n),
                    this
                  );
                }),
                t.Context.on("init", function(t) {
                  t.Buses ? (e = t.Buses) : ((e = {}), (t.Buses = e));
                }),
                t
              );
            }),
            n(function(t) {
              return (
                (t.Draw = function() {
                  t.call(this),
                    (this._events = new t.Timeline()),
                    (this.expiration = 0.25),
                    (this.anticipation = 0.008),
                    (this._boundDrawLoop = this._drawLoop.bind(this));
                }),
                t.extend(t.Draw),
                (t.Draw.prototype.schedule = function(t, e) {
                  return (
                    this._events.add({ callback: t, time: this.toSeconds(e) }),
                    1 === this._events.length &&
                      requestAnimationFrame(this._boundDrawLoop),
                    this
                  );
                }),
                (t.Draw.prototype.cancel = function(t) {
                  return this._events.cancel(this.toSeconds(t)), this;
                }),
                (t.Draw.prototype._drawLoop = function() {
                  for (
                    var e = t.now();
                    this._events.length &&
                    this._events.peek().time - this.anticipation <= e;

                  ) {
                    var n = this._events.shift();
                    e - n.time <= this.expiration && n.callback();
                  }
                  this._events.length > 0 &&
                    requestAnimationFrame(this._boundDrawLoop);
                }),
                (t.Draw = new t.Draw()),
                t.Draw
              );
            }),
            n(function(t) {
              (t.Listener = function() {
                t.call(this),
                  (this._orientation = [0, 0, 0, 0, 0, 0]),
                  (this._position = [0, 0, 0]),
                  t.getContext(
                    function() {
                      this.set(e.defaults);
                    }.bind(this)
                  );
              }),
                t.extend(t.Listener),
                (t.Listener.defaults = {
                  positionX: 0,
                  positionY: 0,
                  positionZ: 0,
                  forwardX: 0,
                  forwardY: 0,
                  forwardZ: 1,
                  upX: 0,
                  upY: 1,
                  upZ: 0
                }),
                (t.Listener.prototype._rampTimeConstant = 0.01),
                (t.Listener.prototype.setPosition = function(t, e, n) {
                  if (this.context.listener.positionX) {
                    var r = this.now();
                    this.context.listener.positionX.setTargetAtTime(
                      t,
                      r,
                      this._rampTimeConstant
                    ),
                      this.context.listener.positionY.setTargetAtTime(
                        e,
                        r,
                        this._rampTimeConstant
                      ),
                      this.context.listener.positionZ.setTargetAtTime(
                        n,
                        r,
                        this._rampTimeConstant
                      );
                  } else this.context.listener.setPosition(t, e, n);
                  return (
                    (this._position = Array.prototype.slice.call(arguments)),
                    this
                  );
                }),
                (t.Listener.prototype.setOrientation = function(
                  t,
                  e,
                  n,
                  r,
                  i,
                  o
                ) {
                  if (this.context.listener.forwardX) {
                    var a = this.now();
                    this.context.listener.forwardX.setTargetAtTime(
                      t,
                      a,
                      this._rampTimeConstant
                    ),
                      this.context.listener.forwardY.setTargetAtTime(
                        e,
                        a,
                        this._rampTimeConstant
                      ),
                      this.context.listener.forwardZ.setTargetAtTime(
                        n,
                        a,
                        this._rampTimeConstant
                      ),
                      this.context.listener.upX.setTargetAtTime(
                        r,
                        a,
                        this._rampTimeConstant
                      ),
                      this.context.listener.upY.setTargetAtTime(
                        i,
                        a,
                        this._rampTimeConstant
                      ),
                      this.context.listener.upZ.setTargetAtTime(
                        o,
                        a,
                        this._rampTimeConstant
                      );
                  } else this.context.listener.setOrientation(t, e, n, r, i, o);
                  return (
                    (this._orientation = Array.prototype.slice.call(arguments)),
                    this
                  );
                }),
                Object.defineProperty(t.Listener.prototype, "positionX", {
                  set: function(t) {
                    (this._position[0] = t),
                      this.setPosition.apply(this, this._position);
                  },
                  get: function() {
                    return this._position[0];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "positionY", {
                  set: function(t) {
                    (this._position[1] = t),
                      this.setPosition.apply(this, this._position);
                  },
                  get: function() {
                    return this._position[1];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "positionZ", {
                  set: function(t) {
                    (this._position[2] = t),
                      this.setPosition.apply(this, this._position);
                  },
                  get: function() {
                    return this._position[2];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "forwardX", {
                  set: function(t) {
                    (this._orientation[0] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[0];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "forwardY", {
                  set: function(t) {
                    (this._orientation[1] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[1];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "forwardZ", {
                  set: function(t) {
                    (this._orientation[2] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[2];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "upX", {
                  set: function(t) {
                    (this._orientation[3] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[3];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "upY", {
                  set: function(t) {
                    (this._orientation[4] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[4];
                  }
                }),
                Object.defineProperty(t.Listener.prototype, "upZ", {
                  set: function(t) {
                    (this._orientation[5] = t),
                      this.setOrientation.apply(this, this._orientation);
                  },
                  get: function() {
                    return this._orientation[5];
                  }
                }),
                (t.Listener.prototype.dispose = function() {
                  return (
                    (this._orientation = null), (this._position = null), this
                  );
                });
              var e = t.Listener;
              return (
                (t.Listener = new e()),
                t.Context.on("init", function(n) {
                  n.Listener instanceof e
                    ? (t.Listener = n.Listener)
                    : (t.Listener = new e()),
                    (n.Listener = t.Listener);
                }),
                t.Listener
              );
            }),
            n(function(t) {
              return (
                (t.Offline = function(e, n) {
                  var r,
                    i = t.context.sampleRate,
                    o = t.context,
                    a = (function e(n, r, i, o) {
                      o = t.defaultArg(o, 0);
                      var a = new t.OfflineContext(2, r, i);
                      t.context = a;
                      var s = n(t.Transport);
                      return a.currentTime > 0 && o < 1e3
                        ? e(n, r, i, ++o)
                        : { response: s, context: a };
                    })(e, n, i),
                    s = a.response,
                    u = a.context;
                  return (
                    (r =
                      s instanceof Promise
                        ? s.then(function() {
                            return u.render();
                          })
                        : u.render()),
                    (t.context = o),
                    r.then(function(e) {
                      return new t.Buffer(e);
                    })
                  );
                }),
                t.Offline
              );
            }),
            n(function(t) {
              return (
                (t.Effect = function() {
                  var e = t.defaults(arguments, ["wet"], t.Effect);
                  t.AudioNode.call(this),
                    this.createInsOuts(1, 1),
                    (this._dryWet = new t.CrossFade(e.wet)),
                    (this.wet = this._dryWet.fade),
                    (this.effectSend = new t.Gain()),
                    (this.effectReturn = new t.Gain()),
                    this.input.connect(this._dryWet.a),
                    this.input.connect(this.effectSend),
                    this.effectReturn.connect(this._dryWet.b),
                    this._dryWet.connect(this.output),
                    this._readOnly(["wet"]);
                }),
                t.extend(t.Effect, t.AudioNode),
                (t.Effect.defaults = { wet: 1 }),
                (t.Effect.prototype.connectEffect = function(t) {
                  return this.effectSend.chain(t, this.effectReturn), this;
                }),
                (t.Effect.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._dryWet.dispose(),
                    (this._dryWet = null),
                    this.effectSend.dispose(),
                    (this.effectSend = null),
                    this.effectReturn.dispose(),
                    (this.effectReturn = null),
                    this._writable(["wet"]),
                    (this.wet = null),
                    this
                  );
                }),
                t.Effect
              );
            }),
            n(function(t) {
              return (
                (t.AutoFilter = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "baseFrequency", "octaves"],
                    t.AutoFilter
                  );
                  t.Effect.call(this, e),
                    (this._lfo = new t.LFO({
                      frequency: e.frequency,
                      amplitude: e.depth
                    })),
                    (this.depth = this._lfo.amplitude),
                    (this.frequency = this._lfo.frequency),
                    (this.filter = new t.Filter(e.filter)),
                    (this._octaves = 0),
                    this.connectEffect(this.filter),
                    this._lfo.connect(this.filter.frequency),
                    (this.type = e.type),
                    this._readOnly(["frequency", "depth"]),
                    (this.octaves = e.octaves),
                    (this.baseFrequency = e.baseFrequency);
                }),
                t.extend(t.AutoFilter, t.Effect),
                (t.AutoFilter.defaults = {
                  frequency: 1,
                  type: "sine",
                  depth: 1,
                  baseFrequency: 200,
                  octaves: 2.6,
                  filter: { type: "lowpass", rolloff: -12, Q: 1 }
                }),
                (t.AutoFilter.prototype.start = function(t) {
                  return this._lfo.start(t), this;
                }),
                (t.AutoFilter.prototype.stop = function(t) {
                  return this._lfo.stop(t), this;
                }),
                (t.AutoFilter.prototype.sync = function(t) {
                  return this._lfo.sync(t), this;
                }),
                (t.AutoFilter.prototype.unsync = function() {
                  return this._lfo.unsync(), this;
                }),
                Object.defineProperty(t.AutoFilter.prototype, "type", {
                  get: function() {
                    return this._lfo.type;
                  },
                  set: function(t) {
                    this._lfo.type = t;
                  }
                }),
                Object.defineProperty(t.AutoFilter.prototype, "baseFrequency", {
                  get: function() {
                    return this._lfo.min;
                  },
                  set: function(t) {
                    (this._lfo.min = this.toFrequency(t)),
                      (this.octaves = this._octaves);
                  }
                }),
                Object.defineProperty(t.AutoFilter.prototype, "octaves", {
                  get: function() {
                    return this._octaves;
                  },
                  set: function(t) {
                    (this._octaves = t),
                      (this._lfo.max = this.baseFrequency * Math.pow(2, t));
                  }
                }),
                (t.AutoFilter.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._lfo.dispose(),
                    (this._lfo = null),
                    this.filter.dispose(),
                    (this.filter = null),
                    this._writable(["frequency", "depth"]),
                    (this.frequency = null),
                    (this.depth = null),
                    this
                  );
                }),
                t.AutoFilter
              );
            }),
            n(function(t) {
              return (
                (t.AutoPanner = function() {
                  var e = t.defaults(arguments, ["frequency"], t.AutoPanner);
                  t.Effect.call(this, e),
                    (this._lfo = new t.LFO({
                      frequency: e.frequency,
                      amplitude: e.depth,
                      min: -1,
                      max: 1
                    })),
                    (this.depth = this._lfo.amplitude),
                    (this._panner = new t.Panner()),
                    (this.frequency = this._lfo.frequency),
                    this.connectEffect(this._panner),
                    this._lfo.connect(this._panner.pan),
                    (this.type = e.type),
                    this._readOnly(["depth", "frequency"]);
                }),
                t.extend(t.AutoPanner, t.Effect),
                (t.AutoPanner.defaults = {
                  frequency: 1,
                  type: "sine",
                  depth: 1
                }),
                (t.AutoPanner.prototype.start = function(t) {
                  return this._lfo.start(t), this;
                }),
                (t.AutoPanner.prototype.stop = function(t) {
                  return this._lfo.stop(t), this;
                }),
                (t.AutoPanner.prototype.sync = function(t) {
                  return this._lfo.sync(t), this;
                }),
                (t.AutoPanner.prototype.unsync = function() {
                  return this._lfo.unsync(), this;
                }),
                Object.defineProperty(t.AutoPanner.prototype, "type", {
                  get: function() {
                    return this._lfo.type;
                  },
                  set: function(t) {
                    this._lfo.type = t;
                  }
                }),
                (t.AutoPanner.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._lfo.dispose(),
                    (this._lfo = null),
                    this._panner.dispose(),
                    (this._panner = null),
                    this._writable(["depth", "frequency"]),
                    (this.frequency = null),
                    (this.depth = null),
                    this
                  );
                }),
                t.AutoPanner
              );
            }),
            n(function(t) {
              return (
                (t.AutoWah = function() {
                  var e = t.defaults(
                    arguments,
                    ["baseFrequency", "octaves", "sensitivity"],
                    t.AutoWah
                  );
                  t.Effect.call(this, e),
                    (this.follower = new t.Follower(e.follower)),
                    (this._sweepRange = new t.ScaleExp(0, 1, 0.5)),
                    (this._baseFrequency = e.baseFrequency),
                    (this._octaves = e.octaves),
                    (this._inputBoost = new t.Gain()),
                    (this._bandpass = new t.Filter({
                      rolloff: -48,
                      frequency: 0,
                      Q: e.Q
                    })),
                    (this._peaking = new t.Filter(0, "peaking")),
                    (this._peaking.gain.value = e.gain),
                    (this.gain = this._peaking.gain),
                    (this.Q = this._bandpass.Q),
                    this.effectSend.chain(
                      this._inputBoost,
                      this.follower,
                      this._sweepRange
                    ),
                    this._sweepRange.connect(this._bandpass.frequency),
                    this._sweepRange.connect(this._peaking.frequency),
                    this.effectSend.chain(
                      this._bandpass,
                      this._peaking,
                      this.effectReturn
                    ),
                    this._setSweepRange(),
                    (this.sensitivity = e.sensitivity),
                    this._readOnly(["gain", "Q"]);
                }),
                t.extend(t.AutoWah, t.Effect),
                (t.AutoWah.defaults = {
                  baseFrequency: 100,
                  octaves: 6,
                  sensitivity: 0,
                  Q: 2,
                  gain: 2,
                  follower: { attack: 0.3, release: 0.5 }
                }),
                Object.defineProperty(t.AutoWah.prototype, "octaves", {
                  get: function() {
                    return this._octaves;
                  },
                  set: function(t) {
                    (this._octaves = t), this._setSweepRange();
                  }
                }),
                Object.defineProperty(t.AutoWah.prototype, "baseFrequency", {
                  get: function() {
                    return this._baseFrequency;
                  },
                  set: function(t) {
                    (this._baseFrequency = t), this._setSweepRange();
                  }
                }),
                Object.defineProperty(t.AutoWah.prototype, "sensitivity", {
                  get: function() {
                    return t.gainToDb(1 / this._inputBoost.gain.value);
                  },
                  set: function(e) {
                    this._inputBoost.gain.value = 1 / t.dbToGain(e);
                  }
                }),
                (t.AutoWah.prototype._setSweepRange = function() {
                  (this._sweepRange.min = this._baseFrequency),
                    (this._sweepRange.max = Math.min(
                      this._baseFrequency * Math.pow(2, this._octaves),
                      this.context.sampleRate / 2
                    ));
                }),
                (t.AutoWah.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this.follower.dispose(),
                    (this.follower = null),
                    this._sweepRange.dispose(),
                    (this._sweepRange = null),
                    this._bandpass.dispose(),
                    (this._bandpass = null),
                    this._peaking.dispose(),
                    (this._peaking = null),
                    this._inputBoost.dispose(),
                    (this._inputBoost = null),
                    this._writable(["gain", "Q"]),
                    (this.gain = null),
                    (this.Q = null),
                    this
                  );
                }),
                t.AutoWah
              );
            }),
            n(function(t) {
              return (
                (t.Modulo = function(e) {
                  t.SignalBase.call(this),
                    this.createInsOuts(1, 0),
                    (this._shaper = new t.WaveShaper(Math.pow(2, 16))),
                    (this._multiply = new t.Multiply()),
                    (this._subtract = this.output = new t.Subtract()),
                    (this._modSignal = new t.Signal(e)),
                    this.input.fan(this._shaper, this._subtract),
                    this._modSignal.connect(this._multiply, 0, 0),
                    this._shaper.connect(this._multiply, 0, 1),
                    this._multiply.connect(this._subtract, 0, 1),
                    this._setWaveShaper(e);
                }),
                t.extend(t.Modulo, t.SignalBase),
                (t.Modulo.prototype._setWaveShaper = function(t) {
                  this._shaper.setMap(function(e) {
                    return Math.floor((e + 1e-4) / t);
                  });
                }),
                Object.defineProperty(t.Modulo.prototype, "value", {
                  get: function() {
                    return this._modSignal.value;
                  },
                  set: function(t) {
                    (this._modSignal.value = t), this._setWaveShaper(t);
                  }
                }),
                (t.Modulo.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._shaper.dispose(),
                    (this._shaper = null),
                    this._multiply.dispose(),
                    (this._multiply = null),
                    this._subtract.dispose(),
                    (this._subtract = null),
                    this._modSignal.dispose(),
                    (this._modSignal = null),
                    this
                  );
                }),
                t.Modulo
              );
            }),
            n(function(t) {
              return (
                (t.BitCrusher = function() {
                  var e = t.defaults(arguments, ["bits"], t.BitCrusher);
                  t.Effect.call(this, e);
                  var n = 1 / Math.pow(2, e.bits - 1);
                  (this._subtract = new t.Subtract()),
                    (this._modulo = new t.Modulo(n)),
                    (this._bits = e.bits),
                    this.effectSend.fan(this._subtract, this._modulo),
                    this._modulo.connect(this._subtract, 0, 1),
                    this._subtract.connect(this.effectReturn);
                }),
                t.extend(t.BitCrusher, t.Effect),
                (t.BitCrusher.defaults = { bits: 4 }),
                Object.defineProperty(t.BitCrusher.prototype, "bits", {
                  get: function() {
                    return this._bits;
                  },
                  set: function(t) {
                    this._bits = t;
                    var e = 1 / Math.pow(2, t - 1);
                    this._modulo.value = e;
                  }
                }),
                (t.BitCrusher.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._subtract.dispose(),
                    (this._subtract = null),
                    this._modulo.dispose(),
                    (this._modulo = null),
                    this
                  );
                }),
                t.BitCrusher
              );
            }),
            n(function(t) {
              return (
                (t.Chebyshev = function() {
                  var e = t.defaults(arguments, ["order"], t.Chebyshev);
                  t.Effect.call(this, e),
                    (this._shaper = new t.WaveShaper(4096)),
                    (this._order = e.order),
                    this.connectEffect(this._shaper),
                    (this.order = e.order),
                    (this.oversample = e.oversample);
                }),
                t.extend(t.Chebyshev, t.Effect),
                (t.Chebyshev.defaults = { order: 1, oversample: "none" }),
                (t.Chebyshev.prototype._getCoefficient = function(t, e, n) {
                  return n.hasOwnProperty(e)
                    ? n[e]
                    : ((n[e] =
                        0 === e
                          ? 0
                          : 1 === e
                          ? t
                          : 2 * t * this._getCoefficient(t, e - 1, n) -
                            this._getCoefficient(t, e - 2, n)),
                      n[e]);
                }),
                Object.defineProperty(t.Chebyshev.prototype, "order", {
                  get: function() {
                    return this._order;
                  },
                  set: function(t) {
                    this._order = t;
                    for (
                      var e = new Array(4096), n = e.length, r = 0;
                      r < n;
                      ++r
                    ) {
                      var i = (2 * r) / n - 1;
                      e[r] = 0 === i ? 0 : this._getCoefficient(i, t, {});
                    }
                    this._shaper.curve = e;
                  }
                }),
                Object.defineProperty(t.Chebyshev.prototype, "oversample", {
                  get: function() {
                    return this._shaper.oversample;
                  },
                  set: function(t) {
                    this._shaper.oversample = t;
                  }
                }),
                (t.Chebyshev.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._shaper.dispose(),
                    (this._shaper = null),
                    this
                  );
                }),
                t.Chebyshev
              );
            }),
            n(function(t) {
              return (
                (t.StereoEffect = function() {
                  t.AudioNode.call(this);
                  var e = t.defaults(arguments, ["wet"], t.Effect);
                  this.createInsOuts(1, 1),
                    (this._dryWet = new t.CrossFade(e.wet)),
                    (this.wet = this._dryWet.fade),
                    (this._split = new t.Split()),
                    (this.effectSendL = this._split.left),
                    (this.effectSendR = this._split.right),
                    (this._merge = new t.Merge()),
                    (this.effectReturnL = this._merge.left),
                    (this.effectReturnR = this._merge.right),
                    this.input.connect(this._split),
                    this.input.connect(this._dryWet, 0, 0),
                    this._merge.connect(this._dryWet, 0, 1),
                    this._dryWet.connect(this.output),
                    this._readOnly(["wet"]);
                }),
                t.extend(t.StereoEffect, t.Effect),
                (t.StereoEffect.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._dryWet.dispose(),
                    (this._dryWet = null),
                    this._split.dispose(),
                    (this._split = null),
                    this._merge.dispose(),
                    (this._merge = null),
                    (this.effectSendL = null),
                    (this.effectSendR = null),
                    (this.effectReturnL = null),
                    (this.effectReturnR = null),
                    this._writable(["wet"]),
                    (this.wet = null),
                    this
                  );
                }),
                t.StereoEffect
              );
            }),
            n(function(t) {
              return (
                (t.Chorus = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "delayTime", "depth"],
                    t.Chorus
                  );
                  t.StereoEffect.call(this, e),
                    (this._depth = e.depth),
                    (this._delayTime = e.delayTime / 1e3),
                    (this._lfoL = new t.LFO({
                      frequency: e.frequency,
                      min: 0,
                      max: 1
                    })),
                    (this._lfoR = new t.LFO({
                      frequency: e.frequency,
                      min: 0,
                      max: 1,
                      phase: 180
                    })),
                    (this._delayNodeL = new t.Delay()),
                    (this._delayNodeR = new t.Delay()),
                    (this.frequency = this._lfoL.frequency),
                    this.effectSendL.chain(
                      this._delayNodeL,
                      this.effectReturnL
                    ),
                    this.effectSendR.chain(
                      this._delayNodeR,
                      this.effectReturnR
                    ),
                    this.effectSendL.connect(this.effectReturnL),
                    this.effectSendR.connect(this.effectReturnR),
                    this._lfoL.connect(this._delayNodeL.delayTime),
                    this._lfoR.connect(this._delayNodeR.delayTime),
                    this._lfoL.start(),
                    this._lfoR.start(),
                    this._lfoL.frequency.connect(this._lfoR.frequency),
                    (this.depth = this._depth),
                    (this.frequency.value = e.frequency),
                    (this.type = e.type),
                    this._readOnly(["frequency"]),
                    (this.spread = e.spread);
                }),
                t.extend(t.Chorus, t.StereoEffect),
                (t.Chorus.defaults = {
                  frequency: 1.5,
                  delayTime: 3.5,
                  depth: 0.7,
                  type: "sine",
                  spread: 180
                }),
                Object.defineProperty(t.Chorus.prototype, "depth", {
                  get: function() {
                    return this._depth;
                  },
                  set: function(t) {
                    this._depth = t;
                    var e = this._delayTime * t;
                    (this._lfoL.min = Math.max(this._delayTime - e, 0)),
                      (this._lfoL.max = this._delayTime + e),
                      (this._lfoR.min = Math.max(this._delayTime - e, 0)),
                      (this._lfoR.max = this._delayTime + e);
                  }
                }),
                Object.defineProperty(t.Chorus.prototype, "delayTime", {
                  get: function() {
                    return 1e3 * this._delayTime;
                  },
                  set: function(t) {
                    (this._delayTime = t / 1e3), (this.depth = this._depth);
                  }
                }),
                Object.defineProperty(t.Chorus.prototype, "type", {
                  get: function() {
                    return this._lfoL.type;
                  },
                  set: function(t) {
                    (this._lfoL.type = t), (this._lfoR.type = t);
                  }
                }),
                Object.defineProperty(t.Chorus.prototype, "spread", {
                  get: function() {
                    return this._lfoR.phase - this._lfoL.phase;
                  },
                  set: function(t) {
                    (this._lfoL.phase = 90 - t / 2),
                      (this._lfoR.phase = t / 2 + 90);
                  }
                }),
                (t.Chorus.prototype.dispose = function() {
                  return (
                    t.StereoEffect.prototype.dispose.call(this),
                    this._lfoL.dispose(),
                    (this._lfoL = null),
                    this._lfoR.dispose(),
                    (this._lfoR = null),
                    this._delayNodeL.dispose(),
                    (this._delayNodeL = null),
                    this._delayNodeR.dispose(),
                    (this._delayNodeR = null),
                    this._writable("frequency"),
                    (this.frequency = null),
                    this
                  );
                }),
                t.Chorus
              );
            }),
            n(function(t) {
              return (
                (t.Convolver = function() {
                  var e = t.defaults(arguments, ["url", "onload"], t.Convolver);
                  t.Effect.call(this, e),
                    (this._convolver = this.context.createConvolver()),
                    (this._buffer = new t.Buffer(
                      e.url,
                      function(t) {
                        (this._convolver.buffer = t.get()), e.onload();
                      }.bind(this)
                    )),
                    this.connectEffect(this._convolver);
                }),
                t.extend(t.Convolver, t.Effect),
                (t.Convolver.defaults = { onload: t.noOp }),
                Object.defineProperty(t.Convolver.prototype, "buffer", {
                  get: function() {
                    return this._buffer.get();
                  },
                  set: function(t) {
                    this._buffer.set(t),
                      (this._convolver.buffer = this._buffer.get());
                  }
                }),
                (t.Convolver.prototype.load = function(t, e) {
                  return this._buffer.load(
                    t,
                    function(t) {
                      (this.buffer = t), e && e();
                    }.bind(this)
                  );
                }),
                (t.Convolver.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._convolver.disconnect(),
                    (this._convolver = null),
                    this._buffer.dispose(),
                    (this._buffer = null),
                    this
                  );
                }),
                t.Convolver
              );
            }),
            n(function(t) {
              return (
                (t.Distortion = function() {
                  var e = t.defaults(arguments, ["distortion"], t.Distortion);
                  t.Effect.call(this, e),
                    (this._shaper = new t.WaveShaper(4096)),
                    (this._distortion = e.distortion),
                    this.connectEffect(this._shaper),
                    (this.distortion = e.distortion),
                    (this.oversample = e.oversample);
                }),
                t.extend(t.Distortion, t.Effect),
                (t.Distortion.defaults = {
                  distortion: 0.4,
                  oversample: "none"
                }),
                Object.defineProperty(t.Distortion.prototype, "distortion", {
                  get: function() {
                    return this._distortion;
                  },
                  set: function(t) {
                    this._distortion = t;
                    var e = 100 * t,
                      n = Math.PI / 180;
                    this._shaper.setMap(function(t) {
                      return Math.abs(t) < 0.001
                        ? 0
                        : ((3 + e) * t * 20 * n) / (Math.PI + e * Math.abs(t));
                    });
                  }
                }),
                Object.defineProperty(t.Distortion.prototype, "oversample", {
                  get: function() {
                    return this._shaper.oversample;
                  },
                  set: function(t) {
                    this._shaper.oversample = t;
                  }
                }),
                (t.Distortion.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._shaper.dispose(),
                    (this._shaper = null),
                    this
                  );
                }),
                t.Distortion
              );
            }),
            n(function(t) {
              return (
                (t.FeedbackEffect = function() {
                  var e = t.defaults(arguments, ["feedback"], t.FeedbackEffect);
                  t.Effect.call(this, e),
                    (this._feedbackGain = new t.Gain(
                      e.feedback,
                      t.Type.NormalRange
                    )),
                    (this.feedback = this._feedbackGain.gain),
                    this.effectReturn.chain(
                      this._feedbackGain,
                      this.effectSend
                    ),
                    this._readOnly(["feedback"]);
                }),
                t.extend(t.FeedbackEffect, t.Effect),
                (t.FeedbackEffect.defaults = { feedback: 0.125 }),
                (t.FeedbackEffect.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._writable(["feedback"]),
                    this._feedbackGain.dispose(),
                    (this._feedbackGain = null),
                    (this.feedback = null),
                    this
                  );
                }),
                t.FeedbackEffect
              );
            }),
            n(function(t) {
              return (
                (t.FeedbackDelay = function() {
                  var e = t.defaults(
                    arguments,
                    ["delayTime", "feedback"],
                    t.FeedbackDelay
                  );
                  t.FeedbackEffect.call(this, e),
                    (this._delayNode = new t.Delay(e.delayTime, e.maxDelay)),
                    (this.delayTime = this._delayNode.delayTime),
                    this.connectEffect(this._delayNode),
                    this._readOnly(["delayTime"]);
                }),
                t.extend(t.FeedbackDelay, t.FeedbackEffect),
                (t.FeedbackDelay.defaults = { delayTime: 0.25, maxDelay: 1 }),
                (t.FeedbackDelay.prototype.dispose = function() {
                  return (
                    t.FeedbackEffect.prototype.dispose.call(this),
                    this._delayNode.dispose(),
                    (this._delayNode = null),
                    this._writable(["delayTime"]),
                    (this.delayTime = null),
                    this
                  );
                }),
                t.FeedbackDelay
              );
            }),
            n(function(t) {
              var e = [
                  1557 / 44100,
                  1617 / 44100,
                  1491 / 44100,
                  1422 / 44100,
                  1277 / 44100,
                  1356 / 44100,
                  1188 / 44100,
                  1116 / 44100
                ],
                n = [225, 556, 441, 341];
              return (
                (t.Freeverb = function() {
                  var r = t.defaults(
                    arguments,
                    ["roomSize", "dampening"],
                    t.Freeverb
                  );
                  t.StereoEffect.call(this, r),
                    (this.roomSize = new t.Signal(
                      r.roomSize,
                      t.Type.NormalRange
                    )),
                    (this.dampening = new t.Signal(
                      r.dampening,
                      t.Type.Frequency
                    )),
                    (this._combFilters = []),
                    (this._allpassFiltersL = []),
                    (this._allpassFiltersR = []);
                  for (var i = 0; i < n.length; i++) {
                    var o = this.context.createBiquadFilter();
                    (o.type = "allpass"),
                      (o.frequency.value = n[i]),
                      this._allpassFiltersL.push(o);
                  }
                  for (var a = 0; a < n.length; a++) {
                    var s = this.context.createBiquadFilter();
                    (s.type = "allpass"),
                      (s.frequency.value = n[a]),
                      this._allpassFiltersR.push(s);
                  }
                  for (var u = 0; u < e.length; u++) {
                    var c = new t.LowpassCombFilter(e[u]);
                    u < e.length / 2
                      ? this.effectSendL.chain(c, this._allpassFiltersL[0])
                      : this.effectSendR.chain(c, this._allpassFiltersR[0]),
                      this.roomSize.connect(c.resonance),
                      this.dampening.connect(c.dampening),
                      this._combFilters.push(c);
                  }
                  t.connectSeries.apply(t, this._allpassFiltersL),
                    t.connectSeries.apply(t, this._allpassFiltersR),
                    this._allpassFiltersL[
                      this._allpassFiltersL.length - 1
                    ].connect(this.effectReturnL),
                    this._allpassFiltersR[
                      this._allpassFiltersR.length - 1
                    ].connect(this.effectReturnR),
                    this._readOnly(["roomSize", "dampening"]);
                }),
                t.extend(t.Freeverb, t.StereoEffect),
                (t.Freeverb.defaults = { roomSize: 0.7, dampening: 3e3 }),
                (t.Freeverb.prototype.dispose = function() {
                  t.StereoEffect.prototype.dispose.call(this);
                  for (var e = 0; e < this._allpassFiltersL.length; e++)
                    this._allpassFiltersL[e].disconnect(),
                      (this._allpassFiltersL[e] = null);
                  this._allpassFiltersL = null;
                  for (var n = 0; n < this._allpassFiltersR.length; n++)
                    this._allpassFiltersR[n].disconnect(),
                      (this._allpassFiltersR[n] = null);
                  this._allpassFiltersR = null;
                  for (var r = 0; r < this._combFilters.length; r++)
                    this._combFilters[r].dispose(),
                      (this._combFilters[r] = null);
                  return (
                    (this._combFilters = null),
                    this._writable(["roomSize", "dampening"]),
                    this.roomSize.dispose(),
                    (this.roomSize = null),
                    this.dampening.dispose(),
                    (this.dampening = null),
                    this
                  );
                }),
                t.Freeverb
              );
            }),
            n(function(t) {
              var e = [0.06748, 0.06404, 0.08212, 0.09004],
                n = [0.773, 0.802, 0.753, 0.733],
                r = [347, 113, 37];
              return (
                (t.JCReverb = function() {
                  var i = t.defaults(arguments, ["roomSize"], t.JCReverb);
                  t.StereoEffect.call(this, i),
                    (this.roomSize = new t.Signal(
                      i.roomSize,
                      t.Type.NormalRange
                    )),
                    (this._scaleRoomSize = new t.Scale(-0.733, 0.197)),
                    (this._allpassFilters = []),
                    (this._feedbackCombFilters = []);
                  for (var o = 0; o < r.length; o++) {
                    var a = this.context.createBiquadFilter();
                    (a.type = "allpass"),
                      (a.frequency.value = r[o]),
                      this._allpassFilters.push(a);
                  }
                  for (var s = 0; s < e.length; s++) {
                    var u = new t.FeedbackCombFilter(e[s], 0.1);
                    this._scaleRoomSize.connect(u.resonance),
                      (u.resonance.value = n[s]),
                      this._allpassFilters[
                        this._allpassFilters.length - 1
                      ].connect(u),
                      s < e.length / 2
                        ? u.connect(this.effectReturnL)
                        : u.connect(this.effectReturnR),
                      this._feedbackCombFilters.push(u);
                  }
                  this.roomSize.connect(this._scaleRoomSize),
                    t.connectSeries.apply(t, this._allpassFilters),
                    this.effectSendL.connect(this._allpassFilters[0]),
                    this.effectSendR.connect(this._allpassFilters[0]),
                    this._readOnly(["roomSize"]);
                }),
                t.extend(t.JCReverb, t.StereoEffect),
                (t.JCReverb.defaults = { roomSize: 0.5 }),
                (t.JCReverb.prototype.dispose = function() {
                  t.StereoEffect.prototype.dispose.call(this);
                  for (var e = 0; e < this._allpassFilters.length; e++)
                    this._allpassFilters[e].disconnect(),
                      (this._allpassFilters[e] = null);
                  this._allpassFilters = null;
                  for (var n = 0; n < this._feedbackCombFilters.length; n++)
                    this._feedbackCombFilters[n].dispose(),
                      (this._feedbackCombFilters[n] = null);
                  return (
                    (this._feedbackCombFilters = null),
                    this._writable(["roomSize"]),
                    this.roomSize.dispose(),
                    (this.roomSize = null),
                    this._scaleRoomSize.dispose(),
                    (this._scaleRoomSize = null),
                    this
                  );
                }),
                t.JCReverb
              );
            }),
            n(function(t) {
              return (
                (t.MidSideEffect = function() {
                  t.Effect.apply(this, arguments),
                    (this._midSideSplit = new t.MidSideSplit()),
                    (this._midSideMerge = new t.MidSideMerge()),
                    (this.midSend = this._midSideSplit.mid),
                    (this.sideSend = this._midSideSplit.side),
                    (this.midReturn = this._midSideMerge.mid),
                    (this.sideReturn = this._midSideMerge.side),
                    this.effectSend.connect(this._midSideSplit),
                    this._midSideMerge.connect(this.effectReturn);
                }),
                t.extend(t.MidSideEffect, t.Effect),
                (t.MidSideEffect.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._midSideSplit.dispose(),
                    (this._midSideSplit = null),
                    this._midSideMerge.dispose(),
                    (this._midSideMerge = null),
                    (this.midSend = null),
                    (this.sideSend = null),
                    (this.midReturn = null),
                    (this.sideReturn = null),
                    this
                  );
                }),
                t.MidSideEffect
              );
            }),
            n(function(t) {
              return (
                (t.Phaser = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "octaves", "baseFrequency"],
                    t.Phaser
                  );
                  t.StereoEffect.call(this, e),
                    (this._lfoL = new t.LFO(e.frequency, 0, 1)),
                    (this._lfoR = new t.LFO(e.frequency, 0, 1)),
                    (this._lfoR.phase = 180),
                    (this._baseFrequency = e.baseFrequency),
                    (this._octaves = e.octaves),
                    (this.Q = new t.Signal(e.Q, t.Type.Positive)),
                    (this._filtersL = this._makeFilters(
                      e.stages,
                      this._lfoL,
                      this.Q
                    )),
                    (this._filtersR = this._makeFilters(
                      e.stages,
                      this._lfoR,
                      this.Q
                    )),
                    (this.frequency = this._lfoL.frequency),
                    (this.frequency.value = e.frequency),
                    this.effectSendL.connect(this._filtersL[0]),
                    this.effectSendR.connect(this._filtersR[0]),
                    this._filtersL[e.stages - 1].connect(this.effectReturnL),
                    this._filtersR[e.stages - 1].connect(this.effectReturnR),
                    this._lfoL.frequency.connect(this._lfoR.frequency),
                    (this.baseFrequency = e.baseFrequency),
                    (this.octaves = e.octaves),
                    this._lfoL.start(),
                    this._lfoR.start(),
                    this._readOnly(["frequency", "Q"]);
                }),
                t.extend(t.Phaser, t.StereoEffect),
                (t.Phaser.defaults = {
                  frequency: 0.5,
                  octaves: 3,
                  stages: 10,
                  Q: 10,
                  baseFrequency: 350
                }),
                (t.Phaser.prototype._makeFilters = function(e, n, r) {
                  for (var i = new Array(e), o = 0; o < e; o++) {
                    var a = this.context.createBiquadFilter();
                    (a.type = "allpass"),
                      r.connect(a.Q),
                      n.connect(a.frequency),
                      (i[o] = a);
                  }
                  return t.connectSeries.apply(t, i), i;
                }),
                Object.defineProperty(t.Phaser.prototype, "octaves", {
                  get: function() {
                    return this._octaves;
                  },
                  set: function(t) {
                    this._octaves = t;
                    var e = this._baseFrequency * Math.pow(2, t);
                    (this._lfoL.max = e), (this._lfoR.max = e);
                  }
                }),
                Object.defineProperty(t.Phaser.prototype, "baseFrequency", {
                  get: function() {
                    return this._baseFrequency;
                  },
                  set: function(t) {
                    (this._baseFrequency = t),
                      (this._lfoL.min = t),
                      (this._lfoR.min = t),
                      (this.octaves = this._octaves);
                  }
                }),
                (t.Phaser.prototype.dispose = function() {
                  t.StereoEffect.prototype.dispose.call(this),
                    this._writable(["frequency", "Q"]),
                    this.Q.dispose(),
                    (this.Q = null),
                    this._lfoL.dispose(),
                    (this._lfoL = null),
                    this._lfoR.dispose(),
                    (this._lfoR = null);
                  for (var e = 0; e < this._filtersL.length; e++)
                    this._filtersL[e].disconnect(), (this._filtersL[e] = null);
                  this._filtersL = null;
                  for (var n = 0; n < this._filtersR.length; n++)
                    this._filtersR[n].disconnect(), (this._filtersR[n] = null);
                  return (this._filtersR = null), (this.frequency = null), this;
                }),
                t.Phaser
              );
            }),
            n(function(t) {
              return (
                (t.StereoXFeedbackEffect = function() {
                  var e = t.defaults(arguments, ["feedback"], t.FeedbackEffect);
                  t.StereoEffect.call(this, e),
                    (this.feedback = new t.Signal(
                      e.feedback,
                      t.Type.NormalRange
                    )),
                    (this._feedbackLR = new t.Gain()),
                    (this._feedbackRL = new t.Gain()),
                    this.effectReturnL.chain(
                      this._feedbackLR,
                      this.effectSendR
                    ),
                    this.effectReturnR.chain(
                      this._feedbackRL,
                      this.effectSendL
                    ),
                    this.feedback.fan(
                      this._feedbackLR.gain,
                      this._feedbackRL.gain
                    ),
                    this._readOnly(["feedback"]);
                }),
                t.extend(t.StereoXFeedbackEffect, t.StereoEffect),
                (t.StereoXFeedbackEffect.prototype.dispose = function() {
                  return (
                    t.StereoEffect.prototype.dispose.call(this),
                    this._writable(["feedback"]),
                    this.feedback.dispose(),
                    (this.feedback = null),
                    this._feedbackLR.dispose(),
                    (this._feedbackLR = null),
                    this._feedbackRL.dispose(),
                    (this._feedbackRL = null),
                    this
                  );
                }),
                t.StereoXFeedbackEffect
              );
            }),
            n(function(t) {
              return (
                (t.PingPongDelay = function() {
                  var e = t.defaults(
                    arguments,
                    ["delayTime", "feedback"],
                    t.PingPongDelay
                  );
                  t.StereoXFeedbackEffect.call(this, e),
                    (this._leftDelay = new t.Delay(0, e.maxDelayTime)),
                    (this._rightDelay = new t.Delay(0, e.maxDelayTime)),
                    (this._rightPreDelay = new t.Delay(0, e.maxDelayTime)),
                    (this.delayTime = new t.Signal(e.delayTime, t.Type.Time)),
                    this.effectSendL.chain(this._leftDelay, this.effectReturnL),
                    this.effectSendR.chain(
                      this._rightPreDelay,
                      this._rightDelay,
                      this.effectReturnR
                    ),
                    this.delayTime.fan(
                      this._leftDelay.delayTime,
                      this._rightDelay.delayTime,
                      this._rightPreDelay.delayTime
                    ),
                    this._feedbackLR.disconnect(),
                    this._feedbackLR.connect(this._rightDelay),
                    this._readOnly(["delayTime"]);
                }),
                t.extend(t.PingPongDelay, t.StereoXFeedbackEffect),
                (t.PingPongDelay.defaults = {
                  delayTime: 0.25,
                  maxDelayTime: 1
                }),
                (t.PingPongDelay.prototype.dispose = function() {
                  return (
                    t.StereoXFeedbackEffect.prototype.dispose.call(this),
                    this._leftDelay.dispose(),
                    (this._leftDelay = null),
                    this._rightDelay.dispose(),
                    (this._rightDelay = null),
                    this._rightPreDelay.dispose(),
                    (this._rightPreDelay = null),
                    this._writable(["delayTime"]),
                    this.delayTime.dispose(),
                    (this.delayTime = null),
                    this
                  );
                }),
                t.PingPongDelay
              );
            }),
            n(function(t) {
              return (
                (t.PitchShift = function() {
                  var e = t.defaults(arguments, ["pitch"], t.PitchShift);
                  t.FeedbackEffect.call(this, e),
                    (this._frequency = new t.Signal(0)),
                    (this._delayA = new t.Delay(0, 1)),
                    (this._lfoA = new t.LFO({
                      min: 0,
                      max: 0.1,
                      type: "sawtooth"
                    }).connect(this._delayA.delayTime)),
                    (this._delayB = new t.Delay(0, 1)),
                    (this._lfoB = new t.LFO({
                      min: 0,
                      max: 0.1,
                      type: "sawtooth",
                      phase: 180
                    }).connect(this._delayB.delayTime)),
                    (this._crossFade = new t.CrossFade()),
                    (this._crossFadeLFO = new t.LFO({
                      min: 0,
                      max: 1,
                      type: "triangle",
                      phase: 90
                    }).connect(this._crossFade.fade)),
                    (this._feedbackDelay = new t.Delay(e.delayTime)),
                    (this.delayTime = this._feedbackDelay.delayTime),
                    this._readOnly("delayTime"),
                    (this._pitch = e.pitch),
                    (this._windowSize = e.windowSize),
                    this._delayA.connect(this._crossFade.a),
                    this._delayB.connect(this._crossFade.b),
                    this._frequency.fan(
                      this._lfoA.frequency,
                      this._lfoB.frequency,
                      this._crossFadeLFO.frequency
                    ),
                    this.effectSend.fan(this._delayA, this._delayB),
                    this._crossFade.chain(
                      this._feedbackDelay,
                      this.effectReturn
                    );
                  var n = this.now();
                  this._lfoA.start(n),
                    this._lfoB.start(n),
                    this._crossFadeLFO.start(n),
                    (this.windowSize = this._windowSize);
                }),
                t.extend(t.PitchShift, t.FeedbackEffect),
                (t.PitchShift.defaults = {
                  pitch: 0,
                  windowSize: 0.1,
                  delayTime: 0,
                  feedback: 0
                }),
                Object.defineProperty(t.PitchShift.prototype, "pitch", {
                  get: function() {
                    return this._pitch;
                  },
                  set: function(e) {
                    this._pitch = e;
                    var n = 0;
                    e < 0
                      ? ((this._lfoA.min = 0),
                        (this._lfoA.max = this._windowSize),
                        (this._lfoB.min = 0),
                        (this._lfoB.max = this._windowSize),
                        (n = t.intervalToFrequencyRatio(e - 1) + 1))
                      : ((this._lfoA.min = this._windowSize),
                        (this._lfoA.max = 0),
                        (this._lfoB.min = this._windowSize),
                        (this._lfoB.max = 0),
                        (n = t.intervalToFrequencyRatio(e) - 1)),
                      (this._frequency.value = n * (1.2 / this._windowSize));
                  }
                }),
                Object.defineProperty(t.PitchShift.prototype, "windowSize", {
                  get: function() {
                    return this._windowSize;
                  },
                  set: function(t) {
                    (this._windowSize = this.toSeconds(t)),
                      (this.pitch = this._pitch);
                  }
                }),
                (t.PitchShift.prototype.dispose = function() {
                  return (
                    t.FeedbackEffect.prototype.dispose.call(this),
                    this._frequency.dispose(),
                    (this._frequency = null),
                    this._delayA.disconnect(),
                    (this._delayA = null),
                    this._delayB.disconnect(),
                    (this._delayB = null),
                    this._lfoA.dispose(),
                    (this._lfoA = null),
                    this._lfoB.dispose(),
                    (this._lfoB = null),
                    this._crossFade.dispose(),
                    (this._crossFade = null),
                    this._crossFadeLFO.dispose(),
                    (this._crossFadeLFO = null),
                    this._writable("delayTime"),
                    this._feedbackDelay.dispose(),
                    (this._feedbackDelay = null),
                    (this.delayTime = null),
                    this
                  );
                }),
                t.PitchShift
              );
            }),
            n(function(t) {
              return (
                (t.BufferSource = function() {
                  var e = t.defaults(
                    arguments,
                    ["buffer", "onload"],
                    t.BufferSource
                  );
                  t.AudioNode.call(this, e),
                    (this.onended = e.onended),
                    (this._startTime = -1),
                    (this._sourceStarted = !1),
                    (this._sourceStopped = !1),
                    (this._stopTime = -1),
                    (this._gainNode = this.output = new t.Gain()),
                    (this._source = this.context.createBufferSource()),
                    this._source.connect(this._gainNode),
                    (this._source.onended = this._onended.bind(this)),
                    (this._buffer = new t.Buffer(e.buffer, e.onload)),
                    (this.playbackRate = new t.Param(
                      this._source.playbackRate,
                      t.Type.Positive
                    )),
                    (this.fadeIn = e.fadeIn),
                    (this.fadeOut = e.fadeOut),
                    (this.curve = e.curve),
                    (this._gain = 1),
                    (this._onendedTimeout = -1),
                    (this.loop = e.loop),
                    (this.loopStart = e.loopStart),
                    (this.loopEnd = e.loopEnd),
                    (this.playbackRate.value = e.playbackRate);
                }),
                t.extend(t.BufferSource, t.AudioNode),
                (t.BufferSource.defaults = {
                  onended: t.noOp,
                  onload: t.noOp,
                  loop: !1,
                  loopStart: 0,
                  loopEnd: 0,
                  fadeIn: 0,
                  fadeOut: 0,
                  curve: "linear",
                  playbackRate: 1
                }),
                Object.defineProperty(t.BufferSource.prototype, "state", {
                  get: function() {
                    return this.getStateAtTime(this.now());
                  }
                }),
                (t.BufferSource.prototype.getStateAtTime = function(e) {
                  return (
                    (e = this.toSeconds(e)),
                    -1 !== this._startTime &&
                    e >= this._startTime &&
                    !this._sourceStopped
                      ? t.State.Started
                      : t.State.Stopped
                  );
                }),
                (t.BufferSource.prototype.start = function(e, n, r, i, o) {
                  if (-1 !== this._startTime)
                    throw new Error(
                      "Tone.BufferSource can only be started once."
                    );
                  if (!this.buffer.loaded)
                    throw new Error(
                      "Tone.BufferSource: buffer is either not set or not loaded."
                    );
                  (e = this.toSeconds(e)),
                    (n = this.loop
                      ? t.defaultArg(n, this.loopStart)
                      : t.defaultArg(n, 0)),
                    (n = this.toSeconds(n)),
                    (i = t.defaultArg(i, 1)),
                    (this._gain = i),
                    (o = this.toSeconds(t.defaultArg(o, this.fadeIn))),
                    (this.fadeIn = o),
                    o > 0
                      ? (this._gainNode.gain.setValueAtTime(0, e),
                        "linear" === this.curve
                          ? this._gainNode.gain.linearRampToValueAtTime(
                              this._gain,
                              e + o
                            )
                          : this._gainNode.gain.exponentialApproachValueAtTime(
                              this._gain,
                              e,
                              o
                            ))
                      : this._gainNode.gain.setValueAtTime(i, e),
                    (this._startTime = e);
                  var a = this.toSeconds(
                    t.defaultArg(
                      r,
                      this.buffer.duration - (n % this.buffer.duration)
                    )
                  );
                  if (
                    ((a = Math.max(a, 0)),
                    t.isDefined(r) &&
                      (this.loop ||
                        (a = Math.min(
                          a,
                          this.buffer.duration - (n % this.buffer.duration)
                        )),
                      this.stop(e + a, this.fadeOut)),
                    this.loop)
                  ) {
                    var s = this.loopEnd || this.buffer.duration,
                      u = this.loopStart;
                    n >= s && (n = ((n - u) % (s - u)) + u);
                  }
                  return (
                    (this._source.buffer = this.buffer.get()),
                    (this._source.loopEnd =
                      this.loopEnd || this.buffer.duration),
                    n < this.buffer.duration &&
                      ((this._sourceStarted = !0), this._source.start(e, n)),
                    this
                  );
                }),
                (t.BufferSource.prototype.stop = function(e, n) {
                  if (!this.buffer.loaded)
                    throw new Error(
                      "Tone.BufferSource: buffer is either not set or not loaded."
                    );
                  if (!this._sourceStopped) {
                    if (
                      ((e = this.toSeconds(e)),
                      -1 !== this._stopTime && this.cancelStop(),
                      e <= this._startTime)
                    )
                      return (
                        this._gainNode.gain.cancelScheduledValues(e),
                        (this._gainNode.gain.value = 0),
                        this
                      );
                    (e = Math.max(
                      this._startTime + this.fadeIn + this.sampleTime,
                      e
                    )),
                      this._gainNode.gain.cancelScheduledValues(e),
                      (this._stopTime = e),
                      (n = this.toSeconds(t.defaultArg(n, this.fadeOut)));
                    var r = e - this._startTime - this.fadeIn - this.sampleTime;
                    this.loop || (r = Math.min(r, this.buffer.duration));
                    var i = e - (n = Math.min(r, n));
                    return (
                      n > this.sampleTime
                        ? (this._gainNode.gain.setValueAtTime(this._gain, i),
                          "linear" === this.curve
                            ? this._gainNode.gain.linearRampToValueAtTime(0, e)
                            : this._gainNode.gain.exponentialApproachValueAtTime(
                                0,
                                i,
                                n
                              ))
                        : this._gainNode.gain.setValueAtTime(0, e),
                      t.context.clearTimeout(this._onendedTimeout),
                      (this._onendedTimeout = t.context.setTimeout(
                        this._onended.bind(this),
                        this._stopTime - this.now()
                      )),
                      this
                    );
                  }
                }),
                (t.BufferSource.prototype.cancelStop = function() {
                  if (-1 !== this._startTime && !this._sourceStopped) {
                    var t = this.toSeconds(this.fadeIn);
                    this._gainNode.gain.cancelScheduledValues(
                      this._startTime + t + this.sampleTime
                    ),
                      this._gainNode.gain.setValueAtTime(
                        1,
                        Math.max(
                          this.now(),
                          this._startTime + t + this.sampleTime
                        )
                      ),
                      this.context.clearTimeout(this._onendedTimeout),
                      (this._stopTime = -1);
                  }
                  return this;
                }),
                (t.BufferSource.prototype._onended = function() {
                  if (!this._sourceStopped) {
                    this._sourceStopped = !0;
                    var t = "exponential" === this.curve ? 2 * this.fadeOut : 0;
                    this._sourceStarted &&
                      -1 !== this._stopTime &&
                      this._source.stop(this._stopTime + t),
                      this.onended(this);
                  }
                }),
                Object.defineProperty(t.BufferSource.prototype, "loopStart", {
                  get: function() {
                    return this._source.loopStart;
                  },
                  set: function(t) {
                    this._source.loopStart = this.toSeconds(t);
                  }
                }),
                Object.defineProperty(t.BufferSource.prototype, "loopEnd", {
                  get: function() {
                    return this._source.loopEnd;
                  },
                  set: function(t) {
                    this._source.loopEnd = this.toSeconds(t);
                  }
                }),
                Object.defineProperty(t.BufferSource.prototype, "buffer", {
                  get: function() {
                    return this._buffer;
                  },
                  set: function(t) {
                    this._buffer.set(t);
                  }
                }),
                Object.defineProperty(t.BufferSource.prototype, "loop", {
                  get: function() {
                    return this._source.loop;
                  },
                  set: function(t) {
                    (this._source.loop = t), this.cancelStop();
                  }
                }),
                (t.BufferSource.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    (this.onended = null),
                    (this._source.onended = null),
                    this._source.disconnect(),
                    (this._source = null),
                    this._gainNode.dispose(),
                    (this._gainNode = null),
                    this._buffer.dispose(),
                    (this._buffer = null),
                    (this._startTime = -1),
                    (this.playbackRate = null),
                    t.context.clearTimeout(this._onendedTimeout),
                    this
                  );
                }),
                t.BufferSource
              );
            }),
            n(function(t) {
              (t.Noise = function() {
                var e = t.defaults(arguments, ["type"], t.Noise);
                t.Source.call(this, e),
                  (this._source = null),
                  (this._type = e.type),
                  (this._playbackRate = e.playbackRate);
              }),
                t.extend(t.Noise, t.Source),
                (t.Noise.defaults = { type: "white", playbackRate: 1 }),
                Object.defineProperty(t.Noise.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(e) {
                    if (this._type !== e) {
                      if (!(e in n))
                        throw new TypeError("Tone.Noise: invalid type: " + e);
                      if (((this._type = e), this.state === t.State.Started)) {
                        var r = this.now();
                        this._stop(r), this._start(r);
                      }
                    }
                  }
                }),
                Object.defineProperty(t.Noise.prototype, "playbackRate", {
                  get: function() {
                    return this._playbackRate;
                  },
                  set: function(t) {
                    (this._playbackRate = t),
                      this._source && (this._source.playbackRate.value = t);
                  }
                }),
                (t.Noise.prototype._start = function(e) {
                  var r = n[this._type];
                  (this._source = new t.BufferSource(r).connect(this.output)),
                    (this._source.loop = !0),
                    (this._source.playbackRate.value = this._playbackRate),
                    this._source.start(
                      this.toSeconds(e),
                      Math.random() * (r.duration - 0.001)
                    );
                }),
                (t.Noise.prototype._stop = function(t) {
                  this._source &&
                    (this._source.stop(this.toSeconds(t)),
                    (this._source = null));
                }),
                (t.Noise.prototype.restart = function(t) {
                  this._stop(t), this._start(t);
                }),
                (t.Noise.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    null !== this._source &&
                      (this._source.disconnect(), (this._source = null)),
                    (this._buffer = null),
                    this
                  );
                });
              var e = {
                  pink: (function() {
                    for (var t = [], e = 0; e < 2; e++) {
                      var n,
                        r,
                        i,
                        o,
                        a,
                        s,
                        u,
                        c = new Float32Array(220500);
                      (t[e] = c), (n = r = i = o = a = s = u = 0);
                      for (var l = 0; l < 220500; l++) {
                        var h = 2 * Math.random() - 1;
                        (n = 0.99886 * n + 0.0555179 * h),
                          (r = 0.99332 * r + 0.0750759 * h),
                          (i = 0.969 * i + 0.153852 * h),
                          (o = 0.8665 * o + 0.3104856 * h),
                          (a = 0.55 * a + 0.5329522 * h),
                          (s = -0.7616 * s - 0.016898 * h),
                          (c[l] = n + r + i + o + a + s + u + 0.5362 * h),
                          (c[l] *= 0.11),
                          (u = 0.115926 * h);
                      }
                    }
                    return t;
                  })(),
                  brown: (function() {
                    for (var t = [], e = 0; e < 2; e++) {
                      var n = new Float32Array(220500);
                      t[e] = n;
                      for (var r = 0, i = 0; i < 220500; i++) {
                        var o = 2 * Math.random() - 1;
                        (n[i] = (r + 0.02 * o) / 1.02),
                          (r = n[i]),
                          (n[i] *= 3.5);
                      }
                    }
                    return t;
                  })(),
                  white: (function() {
                    for (var t = [], e = 0; e < 2; e++) {
                      var n = new Float32Array(220500);
                      t[e] = n;
                      for (var r = 0; r < 220500; r++)
                        n[r] = 2 * Math.random() - 1;
                    }
                    return t;
                  })()
                },
                n = {};
              function r() {
                for (var r in e) n[r] = new t.Buffer().fromArray(e[r]);
              }
              return t.getContext(r), t.Context.on("init", r), t.Noise;
            }),
            n(function(t) {
              return (
                (t.Reverb = function() {
                  var e = t.defaults(arguments, ["decay"], t.Reverb);
                  t.Effect.call(this, e),
                    (this._convolver = this.context.createConvolver()),
                    (this.decay = e.decay),
                    (this.preDelay = e.preDelay),
                    this.connectEffect(this._convolver);
                }),
                t.extend(t.Reverb, t.Effect),
                (t.Reverb.defaults = { decay: 1.5, preDelay: 0.01 }),
                (t.Reverb.prototype.generate = function() {
                  return t
                    .Offline(
                      function() {
                        var e = new t.Noise(),
                          n = new t.Noise(),
                          r = new t.Merge();
                        e.connect(r.left), n.connect(r.right);
                        var i = new t.Gain().toMaster();
                        r.connect(i),
                          e.start(0),
                          n.start(0),
                          i.gain.setValueAtTime(0, 0),
                          i.gain.linearRampToValueAtTime(1, this.preDelay),
                          i.gain.exponentialApproachValueAtTime(
                            0,
                            this.preDelay,
                            this.decay - this.preDelay
                          );
                      }.bind(this),
                      this.decay
                    )
                    .then(
                      function(t) {
                        return (this._convolver.buffer = t.get()), this;
                      }.bind(this)
                    );
                }),
                (t.Reverb.prototype.dispose = function() {
                  return (
                    t.Effect.prototype.dispose.call(this),
                    this._convolver.disconnect(),
                    (this._convolver = null),
                    this
                  );
                }),
                t.Reverb
              );
            }),
            n(function(t) {
              return (
                (t.StereoFeedbackEffect = function() {
                  var e = t.defaults(arguments, ["feedback"], t.FeedbackEffect);
                  t.StereoEffect.call(this, e),
                    (this.feedback = new t.Signal(
                      e.feedback,
                      t.Type.NormalRange
                    )),
                    (this._feedbackL = new t.Gain()),
                    (this._feedbackR = new t.Gain()),
                    this.effectReturnL.chain(this._feedbackL, this.effectSendL),
                    this.effectReturnR.chain(this._feedbackR, this.effectSendR),
                    this.feedback.fan(
                      this._feedbackL.gain,
                      this._feedbackR.gain
                    ),
                    this._readOnly(["feedback"]);
                }),
                t.extend(t.StereoFeedbackEffect, t.StereoEffect),
                (t.StereoFeedbackEffect.prototype.dispose = function() {
                  return (
                    t.StereoEffect.prototype.dispose.call(this),
                    this._writable(["feedback"]),
                    this.feedback.dispose(),
                    (this.feedback = null),
                    this._feedbackL.dispose(),
                    (this._feedbackL = null),
                    this._feedbackR.dispose(),
                    (this._feedbackR = null),
                    this
                  );
                }),
                t.StereoFeedbackEffect
              );
            }),
            n(function(t) {
              return (
                (t.StereoWidener = function() {
                  var e = t.defaults(arguments, ["width"], t.StereoWidener);
                  t.MidSideEffect.call(this, e),
                    (this.width = new t.Signal(e.width, t.Type.NormalRange)),
                    this._readOnly(["width"]),
                    (this._twoTimesWidthMid = new t.Multiply(2)),
                    (this._twoTimesWidthSide = new t.Multiply(2)),
                    (this._midMult = new t.Multiply()),
                    this._twoTimesWidthMid.connect(this._midMult, 0, 1),
                    this.midSend.chain(this._midMult, this.midReturn),
                    (this._oneMinusWidth = new t.Subtract()),
                    this._oneMinusWidth.connect(this._twoTimesWidthMid),
                    this.context
                      .getConstant(1)
                      .connect(this._oneMinusWidth, 0, 0),
                    this.width.connect(this._oneMinusWidth, 0, 1),
                    (this._sideMult = new t.Multiply()),
                    this.width.connect(this._twoTimesWidthSide),
                    this._twoTimesWidthSide.connect(this._sideMult, 0, 1),
                    this.sideSend.chain(this._sideMult, this.sideReturn);
                }),
                t.extend(t.StereoWidener, t.MidSideEffect),
                (t.StereoWidener.defaults = { width: 0.5 }),
                (t.StereoWidener.prototype.dispose = function() {
                  return (
                    t.MidSideEffect.prototype.dispose.call(this),
                    this._writable(["width"]),
                    this.width.dispose(),
                    (this.width = null),
                    this._midMult.dispose(),
                    (this._midMult = null),
                    this._sideMult.dispose(),
                    (this._sideMult = null),
                    this._twoTimesWidthMid.dispose(),
                    (this._twoTimesWidthMid = null),
                    this._twoTimesWidthSide.dispose(),
                    (this._twoTimesWidthSide = null),
                    this._oneMinusWidth.dispose(),
                    (this._oneMinusWidth = null),
                    this
                  );
                }),
                t.StereoWidener
              );
            }),
            n(function(t) {
              return (
                (t.Tremolo = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "depth"],
                    t.Tremolo
                  );
                  t.StereoEffect.call(this, e),
                    (this._lfoL = new t.LFO({
                      phase: e.spread,
                      min: 1,
                      max: 0
                    })),
                    (this._lfoR = new t.LFO({
                      phase: e.spread,
                      min: 1,
                      max: 0
                    })),
                    (this._amplitudeL = new t.Gain()),
                    (this._amplitudeR = new t.Gain()),
                    (this.frequency = new t.Signal(
                      e.frequency,
                      t.Type.Frequency
                    )),
                    (this.depth = new t.Signal(e.depth, t.Type.NormalRange)),
                    this._readOnly(["frequency", "depth"]),
                    this.effectSendL.chain(
                      this._amplitudeL,
                      this.effectReturnL
                    ),
                    this.effectSendR.chain(
                      this._amplitudeR,
                      this.effectReturnR
                    ),
                    this._lfoL.connect(this._amplitudeL.gain),
                    this._lfoR.connect(this._amplitudeR.gain),
                    this.frequency.fan(
                      this._lfoL.frequency,
                      this._lfoR.frequency
                    ),
                    this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude),
                    (this.type = e.type),
                    (this.spread = e.spread);
                }),
                t.extend(t.Tremolo, t.StereoEffect),
                (t.Tremolo.defaults = {
                  frequency: 10,
                  type: "sine",
                  depth: 0.5,
                  spread: 180
                }),
                (t.Tremolo.prototype.start = function(t) {
                  return this._lfoL.start(t), this._lfoR.start(t), this;
                }),
                (t.Tremolo.prototype.stop = function(t) {
                  return this._lfoL.stop(t), this._lfoR.stop(t), this;
                }),
                (t.Tremolo.prototype.sync = function(e) {
                  return (
                    this._lfoL.sync(e),
                    this._lfoR.sync(e),
                    t.Transport.syncSignal(this.frequency),
                    this
                  );
                }),
                (t.Tremolo.prototype.unsync = function() {
                  return (
                    this._lfoL.unsync(),
                    this._lfoR.unsync(),
                    t.Transport.unsyncSignal(this.frequency),
                    this
                  );
                }),
                Object.defineProperty(t.Tremolo.prototype, "type", {
                  get: function() {
                    return this._lfoL.type;
                  },
                  set: function(t) {
                    (this._lfoL.type = t), (this._lfoR.type = t);
                  }
                }),
                Object.defineProperty(t.Tremolo.prototype, "spread", {
                  get: function() {
                    return this._lfoR.phase - this._lfoL.phase;
                  },
                  set: function(t) {
                    (this._lfoL.phase = 90 - t / 2),
                      (this._lfoR.phase = t / 2 + 90);
                  }
                }),
                (t.Tremolo.prototype.dispose = function() {
                  return (
                    t.StereoEffect.prototype.dispose.call(this),
                    this._writable(["frequency", "depth"]),
                    this._lfoL.dispose(),
                    (this._lfoL = null),
                    this._lfoR.dispose(),
                    (this._lfoR = null),
                    this._amplitudeL.dispose(),
                    (this._amplitudeL = null),
                    this._amplitudeR.dispose(),
                    (this._amplitudeR = null),
                    (this.frequency = null),
                    (this.depth = null),
                    this
                  );
                }),
                t.Tremolo
              );
            }),
            n(function(t) {
              return (
                (t.Vibrato = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "depth"],
                    t.Vibrato
                  );
                  t.Effect.call(this, e),
                    (this._delayNode = new t.Delay(0, e.maxDelay)),
                    (this._lfo = new t.LFO({
                      type: e.type,
                      min: 0,
                      max: e.maxDelay,
                      frequency: e.frequency,
                      phase: -90
                    })
                      .start()
                      .connect(this._delayNode.delayTime)),
                    (this.frequency = this._lfo.frequency),
                    (this.depth = this._lfo.amplitude),
                    (this.depth.value = e.depth),
                    this._readOnly(["frequency", "depth"]),
                    this.effectSend.chain(this._delayNode, this.effectReturn);
                }),
                t.extend(t.Vibrato, t.Effect),
                (t.Vibrato.defaults = {
                  maxDelay: 0.005,
                  frequency: 5,
                  depth: 0.1,
                  type: "sine"
                }),
                Object.defineProperty(t.Vibrato.prototype, "type", {
                  get: function() {
                    return this._lfo.type;
                  },
                  set: function(t) {
                    this._lfo.type = t;
                  }
                }),
                (t.Vibrato.prototype.dispose = function() {
                  t.Effect.prototype.dispose.call(this),
                    this._delayNode.dispose(),
                    (this._delayNode = null),
                    this._lfo.dispose(),
                    (this._lfo = null),
                    this._writable(["frequency", "depth"]),
                    (this.frequency = null),
                    (this.depth = null);
                }),
                t.Vibrato
              );
            }),
            n(function(t) {
              return (
                (t.Event = function() {
                  var e = t.defaults(arguments, ["callback", "value"], t.Event);
                  t.call(this),
                    (this._loop = e.loop),
                    (this.callback = e.callback),
                    (this.value = e.value),
                    (this._loopStart = this.toTicks(e.loopStart)),
                    (this._loopEnd = this.toTicks(e.loopEnd)),
                    (this._state = new t.TimelineState(t.State.Stopped)),
                    (this._playbackRate = 1),
                    (this._startOffset = 0),
                    (this._probability = e.probability),
                    (this._humanize = e.humanize),
                    (this.mute = e.mute),
                    (this.playbackRate = e.playbackRate);
                }),
                t.extend(t.Event),
                (t.Event.defaults = {
                  callback: t.noOp,
                  loop: !1,
                  loopEnd: "1m",
                  loopStart: 0,
                  playbackRate: 1,
                  value: null,
                  probability: 1,
                  mute: !1,
                  humanize: !1
                }),
                (t.Event.prototype._rescheduleEvents = function(e) {
                  return (
                    (e = t.defaultArg(e, -1)),
                    this._state.forEachFrom(
                      e,
                      function(e) {
                        var n;
                        if (e.state === t.State.Started) {
                          t.isDefined(e.id) && t.Transport.clear(e.id);
                          var r =
                            e.time +
                            Math.round(this.startOffset / this._playbackRate);
                          if (this._loop) {
                            (n = 1 / 0),
                              t.isNumber(this._loop) &&
                                (n = this._loop * this._getLoopDuration());
                            var i = this._state.getAfter(r);
                            null !== i && (n = Math.min(n, i.time - r)),
                              n !== 1 / 0 &&
                                (this._state.setStateAtTime(
                                  t.State.Stopped,
                                  r + n + 1
                                ),
                                (n = t.Ticks(n)));
                            var o = t.Ticks(this._getLoopDuration());
                            e.id = t.Transport.scheduleRepeat(
                              this._tick.bind(this),
                              o,
                              t.Ticks(r),
                              n
                            );
                          } else
                            e.id = t.Transport.schedule(
                              this._tick.bind(this),
                              t.Ticks(r)
                            );
                        }
                      }.bind(this)
                    ),
                    this
                  );
                }),
                Object.defineProperty(t.Event.prototype, "state", {
                  get: function() {
                    return this._state.getValueAtTime(t.Transport.ticks);
                  }
                }),
                Object.defineProperty(t.Event.prototype, "startOffset", {
                  get: function() {
                    return this._startOffset;
                  },
                  set: function(t) {
                    this._startOffset = t;
                  }
                }),
                Object.defineProperty(t.Event.prototype, "probability", {
                  get: function() {
                    return this._probability;
                  },
                  set: function(t) {
                    this._probability = t;
                  }
                }),
                Object.defineProperty(t.Event.prototype, "humanize", {
                  get: function() {
                    return this._humanize;
                  },
                  set: function(t) {
                    this._humanize = t;
                  }
                }),
                (t.Event.prototype.start = function(e) {
                  return (
                    (e = this.toTicks(e)),
                    this._state.getValueAtTime(e) === t.State.Stopped &&
                      (this._state.add({
                        state: t.State.Started,
                        time: e,
                        id: void 0
                      }),
                      this._rescheduleEvents(e)),
                    this
                  );
                }),
                (t.Event.prototype.stop = function(e) {
                  if (
                    (this.cancel(e),
                    (e = this.toTicks(e)),
                    this._state.getValueAtTime(e) === t.State.Started)
                  ) {
                    this._state.setStateAtTime(t.State.Stopped, e);
                    var n = this._state.getBefore(e),
                      r = e;
                    null !== n && (r = n.time), this._rescheduleEvents(r);
                  }
                  return this;
                }),
                (t.Event.prototype.cancel = function(e) {
                  return (
                    (e = t.defaultArg(e, -1 / 0)),
                    (e = this.toTicks(e)),
                    this._state.forEachFrom(e, function(e) {
                      t.Transport.clear(e.id);
                    }),
                    this._state.cancel(e),
                    this
                  );
                }),
                (t.Event.prototype._tick = function(e) {
                  var n = t.Transport.getTicksAtTime(e);
                  if (
                    !this.mute &&
                    this._state.getValueAtTime(n) === t.State.Started
                  ) {
                    if (
                      this.probability < 1 &&
                      Math.random() > this.probability
                    )
                      return;
                    if (this.humanize) {
                      var r = 0.02;
                      t.isBoolean(this.humanize) ||
                        (r = this.toSeconds(this.humanize)),
                        (e += (2 * Math.random() - 1) * r);
                    }
                    this.callback(e, this.value);
                  }
                }),
                (t.Event.prototype._getLoopDuration = function() {
                  return Math.round(
                    (this._loopEnd - this._loopStart) / this._playbackRate
                  );
                }),
                Object.defineProperty(t.Event.prototype, "loop", {
                  get: function() {
                    return this._loop;
                  },
                  set: function(t) {
                    (this._loop = t), this._rescheduleEvents();
                  }
                }),
                Object.defineProperty(t.Event.prototype, "playbackRate", {
                  get: function() {
                    return this._playbackRate;
                  },
                  set: function(t) {
                    (this._playbackRate = t), this._rescheduleEvents();
                  }
                }),
                Object.defineProperty(t.Event.prototype, "loopEnd", {
                  get: function() {
                    return t.Ticks(this._loopEnd).toSeconds();
                  },
                  set: function(t) {
                    (this._loopEnd = this.toTicks(t)),
                      this._loop && this._rescheduleEvents();
                  }
                }),
                Object.defineProperty(t.Event.prototype, "loopStart", {
                  get: function() {
                    return t.Ticks(this._loopStart).toSeconds();
                  },
                  set: function(t) {
                    (this._loopStart = this.toTicks(t)),
                      this._loop && this._rescheduleEvents();
                  }
                }),
                Object.defineProperty(t.Event.prototype, "progress", {
                  get: function() {
                    if (this._loop) {
                      var e = t.Transport.ticks,
                        n = this._state.get(e);
                      if (null !== n && n.state === t.State.Started) {
                        var r = this._getLoopDuration();
                        return ((e - n.time) % r) / r;
                      }
                      return 0;
                    }
                    return 0;
                  }
                }),
                (t.Event.prototype.dispose = function() {
                  this.cancel(),
                    this._state.dispose(),
                    (this._state = null),
                    (this.callback = null),
                    (this.value = null);
                }),
                t.Event
              );
            }),
            n(function(t) {
              return (
                (t.Loop = function() {
                  var e = t.defaults(
                    arguments,
                    ["callback", "interval"],
                    t.Loop
                  );
                  t.call(this),
                    (this._event = new t.Event({
                      callback: this._tick.bind(this),
                      loop: !0,
                      loopEnd: e.interval,
                      playbackRate: e.playbackRate,
                      probability: e.probability
                    })),
                    (this.callback = e.callback),
                    (this.iterations = e.iterations);
                }),
                t.extend(t.Loop),
                (t.Loop.defaults = {
                  interval: "4n",
                  callback: t.noOp,
                  playbackRate: 1,
                  iterations: 1 / 0,
                  probability: !0,
                  mute: !1
                }),
                (t.Loop.prototype.start = function(t) {
                  return this._event.start(t), this;
                }),
                (t.Loop.prototype.stop = function(t) {
                  return this._event.stop(t), this;
                }),
                (t.Loop.prototype.cancel = function(t) {
                  return this._event.cancel(t), this;
                }),
                (t.Loop.prototype._tick = function(t) {
                  this.callback(t);
                }),
                Object.defineProperty(t.Loop.prototype, "state", {
                  get: function() {
                    return this._event.state;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "progress", {
                  get: function() {
                    return this._event.progress;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "interval", {
                  get: function() {
                    return this._event.loopEnd;
                  },
                  set: function(t) {
                    this._event.loopEnd = t;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "playbackRate", {
                  get: function() {
                    return this._event.playbackRate;
                  },
                  set: function(t) {
                    this._event.playbackRate = t;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "humanize", {
                  get: function() {
                    return this._event.humanize;
                  },
                  set: function(t) {
                    this._event.humanize = t;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "probability", {
                  get: function() {
                    return this._event.probability;
                  },
                  set: function(t) {
                    this._event.probability = t;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "mute", {
                  get: function() {
                    return this._event.mute;
                  },
                  set: function(t) {
                    this._event.mute = t;
                  }
                }),
                Object.defineProperty(t.Loop.prototype, "iterations", {
                  get: function() {
                    return !0 === this._event.loop ? 1 / 0 : this._event.loop;
                  },
                  set: function(t) {
                    this._event.loop = t === 1 / 0 || t;
                  }
                }),
                (t.Loop.prototype.dispose = function() {
                  this._event.dispose(),
                    (this._event = null),
                    (this.callback = null);
                }),
                t.Loop
              );
            }),
            n(function(t) {
              return (
                (t.Part = function() {
                  var e = t.defaults(arguments, ["callback", "events"], t.Part);
                  t.Event.call(this, e), (this._events = []);
                  for (var n = 0; n < e.events.length; n++)
                    Array.isArray(e.events[n])
                      ? this.add(e.events[n][0], e.events[n][1])
                      : this.add(e.events[n]);
                }),
                t.extend(t.Part, t.Event),
                (t.Part.defaults = {
                  callback: t.noOp,
                  loop: !1,
                  loopEnd: "1m",
                  loopStart: 0,
                  playbackRate: 1,
                  probability: 1,
                  humanize: !1,
                  mute: !1,
                  events: []
                }),
                (t.Part.prototype.start = function(e, n) {
                  var r = this.toTicks(e);
                  return (
                    this._state.getValueAtTime(r) !== t.State.Started &&
                      ((n = this._loop
                        ? t.defaultArg(n, this._loopStart)
                        : t.defaultArg(n, 0)),
                      (n = this.toTicks(n)),
                      this._state.add({
                        state: t.State.Started,
                        time: r,
                        offset: n
                      }),
                      this._forEach(function(t) {
                        this._startNote(t, r, n);
                      })),
                    this
                  );
                }),
                (t.Part.prototype._startNote = function(e, n, r) {
                  (n -= r),
                    this._loop
                      ? e.startOffset >= this._loopStart &&
                        e.startOffset < this._loopEnd
                        ? (e.startOffset < r && (n += this._getLoopDuration()),
                          e.start(t.Ticks(n)))
                        : e.startOffset < this._loopStart &&
                          e.startOffset >= r &&
                          ((e.loop = !1), e.start(t.Ticks(n)))
                      : e.startOffset >= r && e.start(t.Ticks(n));
                }),
                Object.defineProperty(t.Part.prototype, "startOffset", {
                  get: function() {
                    return this._startOffset;
                  },
                  set: function(t) {
                    (this._startOffset = t),
                      this._forEach(function(t) {
                        t.startOffset += this._startOffset;
                      });
                  }
                }),
                (t.Part.prototype.stop = function(e) {
                  var n = this.toTicks(e);
                  return (
                    this._state.cancel(n),
                    this._state.setStateAtTime(t.State.Stopped, n),
                    this._forEach(function(t) {
                      t.stop(e);
                    }),
                    this
                  );
                }),
                (t.Part.prototype.at = function(e, n) {
                  e = t.TransportTime(e);
                  for (
                    var r = t.Ticks(1).toSeconds(), i = 0;
                    i < this._events.length;
                    i++
                  ) {
                    var o = this._events[i];
                    if (Math.abs(e.toTicks() - o.startOffset) < r)
                      return t.isDefined(n) && (o.value = n), o;
                  }
                  return t.isDefined(n)
                    ? (this.add(e, n), this._events[this._events.length - 1])
                    : null;
                }),
                (t.Part.prototype.add = function(e, n) {
                  var r;
                  return (
                    e.hasOwnProperty("time") && (e = (n = e).time),
                    (e = this.toTicks(e)),
                    n instanceof t.Event
                      ? ((r = n).callback = this._tick.bind(this))
                      : (r = new t.Event({
                          callback: this._tick.bind(this),
                          value: n
                        })),
                    (r.startOffset = e),
                    r.set({
                      loopEnd: this.loopEnd,
                      loopStart: this.loopStart,
                      loop: this.loop,
                      humanize: this.humanize,
                      playbackRate: this.playbackRate,
                      probability: this.probability
                    }),
                    this._events.push(r),
                    this._restartEvent(r),
                    this
                  );
                }),
                (t.Part.prototype._restartEvent = function(e) {
                  this._state.forEach(
                    function(n) {
                      n.state === t.State.Started
                        ? this._startNote(e, n.time, n.offset)
                        : e.stop(t.Ticks(n.time));
                    }.bind(this)
                  );
                }),
                (t.Part.prototype.remove = function(e, n) {
                  e.hasOwnProperty("time") && (e = (n = e).time),
                    (e = this.toTicks(e));
                  for (var r = this._events.length - 1; r >= 0; r--) {
                    var i = this._events[r];
                    i instanceof t.Part
                      ? i.remove(e, n)
                      : i.startOffset === e &&
                        (t.isUndef(n) || (t.isDefined(n) && i.value === n)) &&
                        (this._events.splice(r, 1), i.dispose());
                  }
                  return this;
                }),
                (t.Part.prototype.removeAll = function() {
                  return (
                    this._forEach(function(t) {
                      t.dispose();
                    }),
                    (this._events = []),
                    this
                  );
                }),
                (t.Part.prototype.cancel = function(t) {
                  return (
                    this._forEach(function(e) {
                      e.cancel(t);
                    }),
                    this._state.cancel(this.toTicks(t)),
                    this
                  );
                }),
                (t.Part.prototype._forEach = function(e, n) {
                  if (this._events) {
                    n = t.defaultArg(n, this);
                    for (var r = this._events.length - 1; r >= 0; r--) {
                      var i = this._events[r];
                      i instanceof t.Part ? i._forEach(e, n) : e.call(n, i);
                    }
                  }
                  return this;
                }),
                (t.Part.prototype._setAll = function(t, e) {
                  this._forEach(function(n) {
                    n[t] = e;
                  });
                }),
                (t.Part.prototype._tick = function(t, e) {
                  this.mute || this.callback(t, e);
                }),
                (t.Part.prototype._testLoopBoundries = function(e) {
                  e.startOffset < this._loopStart ||
                  e.startOffset >= this._loopEnd
                    ? e.cancel(0)
                    : e.state === t.State.Stopped && this._restartEvent(e);
                }),
                Object.defineProperty(t.Part.prototype, "probability", {
                  get: function() {
                    return this._probability;
                  },
                  set: function(t) {
                    (this._probability = t), this._setAll("probability", t);
                  }
                }),
                Object.defineProperty(t.Part.prototype, "humanize", {
                  get: function() {
                    return this._humanize;
                  },
                  set: function(t) {
                    (this._humanize = t), this._setAll("humanize", t);
                  }
                }),
                Object.defineProperty(t.Part.prototype, "loop", {
                  get: function() {
                    return this._loop;
                  },
                  set: function(t) {
                    (this._loop = t),
                      this._forEach(function(e) {
                        (e._loopStart = this._loopStart),
                          (e._loopEnd = this._loopEnd),
                          (e.loop = t),
                          this._testLoopBoundries(e);
                      });
                  }
                }),
                Object.defineProperty(t.Part.prototype, "loopEnd", {
                  get: function() {
                    return t.Ticks(this._loopEnd).toSeconds();
                  },
                  set: function(t) {
                    (this._loopEnd = this.toTicks(t)),
                      this._loop &&
                        this._forEach(function(e) {
                          (e.loopEnd = t), this._testLoopBoundries(e);
                        });
                  }
                }),
                Object.defineProperty(t.Part.prototype, "loopStart", {
                  get: function() {
                    return t.Ticks(this._loopStart).toSeconds();
                  },
                  set: function(t) {
                    (this._loopStart = this.toTicks(t)),
                      this._loop &&
                        this._forEach(function(t) {
                          (t.loopStart = this.loopStart),
                            this._testLoopBoundries(t);
                        });
                  }
                }),
                Object.defineProperty(t.Part.prototype, "playbackRate", {
                  get: function() {
                    return this._playbackRate;
                  },
                  set: function(t) {
                    (this._playbackRate = t), this._setAll("playbackRate", t);
                  }
                }),
                Object.defineProperty(t.Part.prototype, "length", {
                  get: function() {
                    return this._events.length;
                  }
                }),
                (t.Part.prototype.dispose = function() {
                  return (
                    this.removeAll(),
                    this._state.dispose(),
                    (this._state = null),
                    (this.callback = null),
                    (this._events = null),
                    this
                  );
                }),
                t.Part
              );
            }),
            n(function(t) {
              return (
                (t.Pattern = function() {
                  var e = t.defaults(
                    arguments,
                    ["callback", "values", "pattern"],
                    t.Pattern
                  );
                  t.Loop.call(this, e),
                    (this._pattern = new t.CtrlPattern({
                      values: e.values,
                      type: e.pattern,
                      index: e.index
                    }));
                }),
                t.extend(t.Pattern, t.Loop),
                (t.Pattern.defaults = {
                  pattern: t.CtrlPattern.Type.Up,
                  callback: t.noOp,
                  values: []
                }),
                (t.Pattern.prototype._tick = function(t) {
                  this.callback(t, this._pattern.value), this._pattern.next();
                }),
                Object.defineProperty(t.Pattern.prototype, "index", {
                  get: function() {
                    return this._pattern.index;
                  },
                  set: function(t) {
                    this._pattern.index = t;
                  }
                }),
                Object.defineProperty(t.Pattern.prototype, "values", {
                  get: function() {
                    return this._pattern.values;
                  },
                  set: function(t) {
                    this._pattern.values = t;
                  }
                }),
                Object.defineProperty(t.Pattern.prototype, "value", {
                  get: function() {
                    return this._pattern.value;
                  }
                }),
                Object.defineProperty(t.Pattern.prototype, "pattern", {
                  get: function() {
                    return this._pattern.type;
                  },
                  set: function(t) {
                    this._pattern.type = t;
                  }
                }),
                (t.Pattern.prototype.dispose = function() {
                  t.Loop.prototype.dispose.call(this),
                    this._pattern.dispose(),
                    (this._pattern = null);
                }),
                t.Pattern
              );
            }),
            n(function(t) {
              return (
                (t.Sequence = function() {
                  var e = t.defaults(
                      arguments,
                      ["callback", "events", "subdivision"],
                      t.Sequence
                    ),
                    n = e.events;
                  if (
                    (delete e.events,
                    t.Part.call(this, e),
                    (this._subdivision = this.toTicks(e.subdivision)),
                    t.isUndef(e.loopEnd) &&
                      t.isDefined(n) &&
                      (this._loopEnd = n.length * this._subdivision),
                    (this._loop = !0),
                    t.isDefined(n))
                  )
                    for (var r = 0; r < n.length; r++) this.add(r, n[r]);
                }),
                t.extend(t.Sequence, t.Part),
                (t.Sequence.defaults = { subdivision: "4n" }),
                Object.defineProperty(t.Sequence.prototype, "subdivision", {
                  get: function() {
                    return t.Ticks(this._subdivision).toSeconds();
                  }
                }),
                (t.Sequence.prototype.at = function(e, n) {
                  return (
                    t.isArray(n) && this.remove(e),
                    t.Part.prototype.at.call(this, this._indexTime(e), n)
                  );
                }),
                (t.Sequence.prototype.add = function(e, n) {
                  if (null === n) return this;
                  if (t.isArray(n)) {
                    var r = Math.round(this._subdivision / n.length);
                    n = new t.Sequence(this._tick.bind(this), n, t.Ticks(r));
                  }
                  return (
                    t.Part.prototype.add.call(this, this._indexTime(e), n), this
                  );
                }),
                (t.Sequence.prototype.remove = function(e, n) {
                  return (
                    t.Part.prototype.remove.call(this, this._indexTime(e), n),
                    this
                  );
                }),
                (t.Sequence.prototype._indexTime = function(e) {
                  return e instanceof t.TransportTime
                    ? e
                    : t
                        .Ticks(e * this._subdivision + this.startOffset)
                        .toSeconds();
                }),
                (t.Sequence.prototype.dispose = function() {
                  return t.Part.prototype.dispose.call(this), this;
                }),
                t.Sequence
              );
            }),
            n(function(t) {
              return (
                (t.PulseOscillator = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "width"],
                    t.Oscillator
                  );
                  t.Source.call(this, e),
                    (this.width = new t.Signal(e.width, t.Type.NormalRange)),
                    (this._widthGate = new t.Gain()),
                    (this._sawtooth = new t.Oscillator({
                      frequency: e.frequency,
                      detune: e.detune,
                      type: "sawtooth",
                      phase: e.phase
                    })),
                    (this.frequency = this._sawtooth.frequency),
                    (this.detune = this._sawtooth.detune),
                    (this._thresh = new t.WaveShaper(function(t) {
                      return t < 0 ? -1 : 1;
                    })),
                    this._sawtooth.chain(this._thresh, this.output),
                    this.width.chain(this._widthGate, this._thresh),
                    this._readOnly(["width", "frequency", "detune"]);
                }),
                t.extend(t.PulseOscillator, t.Source),
                (t.PulseOscillator.defaults = {
                  frequency: 440,
                  detune: 0,
                  phase: 0,
                  width: 0.2
                }),
                (t.PulseOscillator.prototype._start = function(t) {
                  (t = this.toSeconds(t)),
                    this._sawtooth.start(t),
                    this._widthGate.gain.setValueAtTime(1, t);
                }),
                (t.PulseOscillator.prototype._stop = function(t) {
                  (t = this.toSeconds(t)),
                    this._sawtooth.stop(t),
                    this._widthGate.gain.setValueAtTime(0, t);
                }),
                (t.PulseOscillator.prototype.restart = function(t) {
                  this._sawtooth.restart(t);
                }),
                Object.defineProperty(t.PulseOscillator.prototype, "phase", {
                  get: function() {
                    return this._sawtooth.phase;
                  },
                  set: function(t) {
                    this._sawtooth.phase = t;
                  }
                }),
                Object.defineProperty(t.PulseOscillator.prototype, "type", {
                  get: function() {
                    return "pulse";
                  }
                }),
                Object.defineProperty(t.PulseOscillator.prototype, "partials", {
                  get: function() {
                    return [];
                  }
                }),
                (t.PulseOscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this._sawtooth.dispose(),
                    (this._sawtooth = null),
                    this._writable(["width", "frequency", "detune"]),
                    this.width.dispose(),
                    (this.width = null),
                    this._widthGate.dispose(),
                    (this._widthGate = null),
                    this._thresh.dispose(),
                    (this._thresh = null),
                    (this.frequency = null),
                    (this.detune = null),
                    this
                  );
                }),
                t.PulseOscillator
              );
            }),
            n(function(t) {
              return (
                (t.PWMOscillator = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "modulationFrequency"],
                    t.PWMOscillator
                  );
                  t.Source.call(this, e),
                    (this._pulse = new t.PulseOscillator(
                      e.modulationFrequency
                    )),
                    (this._pulse._sawtooth.type = "sine"),
                    (this._modulator = new t.Oscillator({
                      frequency: e.frequency,
                      detune: e.detune,
                      phase: e.phase
                    })),
                    (this._scale = new t.Multiply(2)),
                    (this.frequency = this._modulator.frequency),
                    (this.detune = this._modulator.detune),
                    (this.modulationFrequency = this._pulse.frequency),
                    this._modulator.chain(this._scale, this._pulse.width),
                    this._pulse.connect(this.output),
                    this._readOnly([
                      "modulationFrequency",
                      "frequency",
                      "detune"
                    ]);
                }),
                t.extend(t.PWMOscillator, t.Source),
                (t.PWMOscillator.defaults = {
                  frequency: 440,
                  detune: 0,
                  phase: 0,
                  modulationFrequency: 0.4
                }),
                (t.PWMOscillator.prototype._start = function(t) {
                  (t = this.toSeconds(t)),
                    this._modulator.start(t),
                    this._pulse.start(t);
                }),
                (t.PWMOscillator.prototype._stop = function(t) {
                  (t = this.toSeconds(t)),
                    this._modulator.stop(t),
                    this._pulse.stop(t);
                }),
                (t.PWMOscillator.prototype.restart = function(t) {
                  this._modulator.restart(t), this._pulse.restart(t);
                }),
                Object.defineProperty(t.PWMOscillator.prototype, "type", {
                  get: function() {
                    return "pwm";
                  }
                }),
                Object.defineProperty(t.PWMOscillator.prototype, "partials", {
                  get: function() {
                    return [];
                  }
                }),
                Object.defineProperty(t.PWMOscillator.prototype, "phase", {
                  get: function() {
                    return this._modulator.phase;
                  },
                  set: function(t) {
                    this._modulator.phase = t;
                  }
                }),
                (t.PWMOscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this._pulse.dispose(),
                    (this._pulse = null),
                    this._scale.dispose(),
                    (this._scale = null),
                    this._modulator.dispose(),
                    (this._modulator = null),
                    this._writable([
                      "modulationFrequency",
                      "frequency",
                      "detune"
                    ]),
                    (this.frequency = null),
                    (this.detune = null),
                    (this.modulationFrequency = null),
                    this
                  );
                }),
                t.PWMOscillator
              );
            }),
            n(function(t) {
              return (
                (t.FMOscillator = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "type", "modulationType"],
                    t.FMOscillator
                  );
                  t.Source.call(this, e),
                    (this._carrier = new t.Oscillator(e.frequency, e.type)),
                    (this.frequency = new t.Signal(
                      e.frequency,
                      t.Type.Frequency
                    )),
                    (this.detune = this._carrier.detune),
                    (this.detune.value = e.detune),
                    (this.modulationIndex = new t.Multiply(e.modulationIndex)),
                    (this.modulationIndex.units = t.Type.Positive),
                    (this._modulator = new t.Oscillator(
                      e.frequency,
                      e.modulationType
                    )),
                    (this.harmonicity = new t.Multiply(e.harmonicity)),
                    (this.harmonicity.units = t.Type.Positive),
                    (this._modulationNode = new t.Gain(0)),
                    this.frequency.connect(this._carrier.frequency),
                    this.frequency.chain(
                      this.harmonicity,
                      this._modulator.frequency
                    ),
                    this.frequency.chain(
                      this.modulationIndex,
                      this._modulationNode
                    ),
                    this._modulator.connect(this._modulationNode.gain),
                    this._modulationNode.connect(this._carrier.frequency),
                    this._carrier.connect(this.output),
                    this.detune.connect(this._modulator.detune),
                    (this.phase = e.phase),
                    this._readOnly([
                      "modulationIndex",
                      "frequency",
                      "detune",
                      "harmonicity"
                    ]);
                }),
                t.extend(t.FMOscillator, t.Source),
                (t.FMOscillator.defaults = {
                  frequency: 440,
                  detune: 0,
                  phase: 0,
                  modulationIndex: 2,
                  modulationType: "square",
                  harmonicity: 1
                }),
                (t.FMOscillator.prototype._start = function(t) {
                  this._modulator.start(t), this._carrier.start(t);
                }),
                (t.FMOscillator.prototype._stop = function(t) {
                  this._modulator.stop(t), this._carrier.stop(t);
                }),
                (t.FMOscillator.prototype.restart = function(t) {
                  this._modulator.restart(t), this._carrier.restart(t);
                }),
                Object.defineProperty(t.FMOscillator.prototype, "type", {
                  get: function() {
                    return this._carrier.type;
                  },
                  set: function(t) {
                    this._carrier.type = t;
                  }
                }),
                Object.defineProperty(
                  t.FMOscillator.prototype,
                  "modulationType",
                  {
                    get: function() {
                      return this._modulator.type;
                    },
                    set: function(t) {
                      this._modulator.type = t;
                    }
                  }
                ),
                Object.defineProperty(t.FMOscillator.prototype, "phase", {
                  get: function() {
                    return this._carrier.phase;
                  },
                  set: function(t) {
                    (this._carrier.phase = t), (this._modulator.phase = t);
                  }
                }),
                Object.defineProperty(t.FMOscillator.prototype, "partials", {
                  get: function() {
                    return this._carrier.partials;
                  },
                  set: function(t) {
                    this._carrier.partials = t;
                  }
                }),
                (t.FMOscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this._writable([
                      "modulationIndex",
                      "frequency",
                      "detune",
                      "harmonicity"
                    ]),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    (this.detune = null),
                    this.harmonicity.dispose(),
                    (this.harmonicity = null),
                    this._carrier.dispose(),
                    (this._carrier = null),
                    this._modulator.dispose(),
                    (this._modulator = null),
                    this._modulationNode.dispose(),
                    (this._modulationNode = null),
                    this.modulationIndex.dispose(),
                    (this.modulationIndex = null),
                    this
                  );
                }),
                t.FMOscillator
              );
            }),
            n(function(t) {
              return (
                (t.AMOscillator = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "type", "modulationType"],
                    t.AMOscillator
                  );
                  t.Source.call(this, e),
                    (this._carrier = new t.Oscillator(e.frequency, e.type)),
                    (this.frequency = this._carrier.frequency),
                    (this.detune = this._carrier.detune),
                    (this.detune.value = e.detune),
                    (this._modulator = new t.Oscillator(
                      e.frequency,
                      e.modulationType
                    )),
                    (this._modulationScale = new t.AudioToGain()),
                    (this.harmonicity = new t.Multiply(e.harmonicity)),
                    (this.harmonicity.units = t.Type.Positive),
                    (this._modulationNode = new t.Gain(0)),
                    this.frequency.chain(
                      this.harmonicity,
                      this._modulator.frequency
                    ),
                    this.detune.connect(this._modulator.detune),
                    this._modulator.chain(
                      this._modulationScale,
                      this._modulationNode.gain
                    ),
                    this._carrier.chain(this._modulationNode, this.output),
                    (this.phase = e.phase),
                    this._readOnly(["frequency", "detune", "harmonicity"]);
                }),
                t.extend(t.AMOscillator, t.Oscillator),
                (t.AMOscillator.defaults = {
                  frequency: 440,
                  detune: 0,
                  phase: 0,
                  modulationType: "square",
                  harmonicity: 1
                }),
                (t.AMOscillator.prototype._start = function(t) {
                  this._modulator.start(t), this._carrier.start(t);
                }),
                (t.AMOscillator.prototype._stop = function(t) {
                  this._modulator.stop(t), this._carrier.stop(t);
                }),
                (t.AMOscillator.prototype.restart = function(t) {
                  this._modulator.restart(t), this._carrier.restart(t);
                }),
                Object.defineProperty(t.AMOscillator.prototype, "type", {
                  get: function() {
                    return this._carrier.type;
                  },
                  set: function(t) {
                    this._carrier.type = t;
                  }
                }),
                Object.defineProperty(
                  t.AMOscillator.prototype,
                  "modulationType",
                  {
                    get: function() {
                      return this._modulator.type;
                    },
                    set: function(t) {
                      this._modulator.type = t;
                    }
                  }
                ),
                Object.defineProperty(t.AMOscillator.prototype, "phase", {
                  get: function() {
                    return this._carrier.phase;
                  },
                  set: function(t) {
                    (this._carrier.phase = t), (this._modulator.phase = t);
                  }
                }),
                Object.defineProperty(t.AMOscillator.prototype, "partials", {
                  get: function() {
                    return this._carrier.partials;
                  },
                  set: function(t) {
                    this._carrier.partials = t;
                  }
                }),
                (t.AMOscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this._writable(["frequency", "detune", "harmonicity"]),
                    (this.frequency = null),
                    (this.detune = null),
                    this.harmonicity.dispose(),
                    (this.harmonicity = null),
                    this._carrier.dispose(),
                    (this._carrier = null),
                    this._modulator.dispose(),
                    (this._modulator = null),
                    this._modulationNode.dispose(),
                    (this._modulationNode = null),
                    this._modulationScale.dispose(),
                    (this._modulationScale = null),
                    this
                  );
                }),
                t.AMOscillator
              );
            }),
            n(function(t) {
              return (
                (t.FatOscillator = function() {
                  var e = t.defaults(
                    arguments,
                    ["frequency", "type", "spread"],
                    t.FatOscillator
                  );
                  t.Source.call(this, e),
                    (this.frequency = new t.Signal(
                      e.frequency,
                      t.Type.Frequency
                    )),
                    (this.detune = new t.Signal(e.detune, t.Type.Cents)),
                    (this._oscillators = []),
                    (this._spread = e.spread),
                    (this._type = e.type),
                    (this._phase = e.phase),
                    (this._partials = t.defaultArg(e.partials, [])),
                    (this.count = e.count),
                    this._readOnly(["frequency", "detune"]);
                }),
                t.extend(t.FatOscillator, t.Source),
                (t.FatOscillator.defaults = {
                  frequency: 440,
                  detune: 0,
                  phase: 0,
                  spread: 20,
                  count: 3,
                  type: "sawtooth"
                }),
                (t.FatOscillator.prototype._start = function(t) {
                  (t = this.toSeconds(t)),
                    this._forEach(function(e) {
                      e.start(t);
                    });
                }),
                (t.FatOscillator.prototype._stop = function(t) {
                  (t = this.toSeconds(t)),
                    this._forEach(function(e) {
                      e.stop(t);
                    });
                }),
                (t.FatOscillator.prototype.restart = function(t) {
                  (t = this.toSeconds(t)),
                    this._forEach(function(e) {
                      e.restart(t);
                    });
                }),
                (t.FatOscillator.prototype._forEach = function(t) {
                  for (var e = 0; e < this._oscillators.length; e++)
                    t.call(this, this._oscillators[e], e);
                }),
                Object.defineProperty(t.FatOscillator.prototype, "type", {
                  get: function() {
                    return this._type;
                  },
                  set: function(t) {
                    (this._type = t),
                      this._forEach(function(e) {
                        e.type = t;
                      });
                  }
                }),
                Object.defineProperty(t.FatOscillator.prototype, "spread", {
                  get: function() {
                    return this._spread;
                  },
                  set: function(t) {
                    if (((this._spread = t), this._oscillators.length > 1)) {
                      var e = -t / 2,
                        n = t / (this._oscillators.length - 1);
                      this._forEach(function(t, r) {
                        t.detune.value = e + n * r;
                      });
                    }
                  }
                }),
                Object.defineProperty(t.FatOscillator.prototype, "count", {
                  get: function() {
                    return this._oscillators.length;
                  },
                  set: function(e) {
                    if (
                      ((e = Math.max(e, 1)), this._oscillators.length !== e)
                    ) {
                      this._forEach(function(t) {
                        t.dispose();
                      }),
                        (this._oscillators = []);
                      for (var n = 0; n < e; n++) {
                        var r = new t.Oscillator();
                        this.type === t.Oscillator.Type.Custom
                          ? (r.partials = this._partials)
                          : (r.type = this._type),
                          (r.phase = this._phase),
                          (r.volume.value = -6 - 1.1 * e),
                          this.frequency.connect(r.frequency),
                          this.detune.connect(r.detune),
                          r.connect(this.output),
                          (this._oscillators[n] = r);
                      }
                      (this.spread = this._spread),
                        this.state === t.State.Started &&
                          this._forEach(function(t) {
                            t.start();
                          });
                    }
                  }
                }),
                Object.defineProperty(t.FatOscillator.prototype, "phase", {
                  get: function() {
                    return this._phase;
                  },
                  set: function(t) {
                    (this._phase = t),
                      this._forEach(function(e) {
                        e.phase = t;
                      });
                  }
                }),
                Object.defineProperty(t.FatOscillator.prototype, "partials", {
                  get: function() {
                    return this._partials;
                  },
                  set: function(e) {
                    (this._partials = e),
                      (this._type = t.Oscillator.Type.Custom),
                      this._forEach(function(t) {
                        t.partials = e;
                      });
                  }
                }),
                (t.FatOscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this._writable(["frequency", "detune"]),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this.detune.dispose(),
                    (this.detune = null),
                    this._forEach(function(t) {
                      t.dispose();
                    }),
                    (this._oscillators = null),
                    (this._partials = null),
                    this
                  );
                }),
                t.FatOscillator
              );
            }),
            n(function(t) {
              (t.OmniOscillator = function() {
                var e = t.defaults(
                  arguments,
                  ["frequency", "type"],
                  t.OmniOscillator
                );
                t.Source.call(this, e),
                  (this.frequency = new t.Signal(
                    e.frequency,
                    t.Type.Frequency
                  )),
                  (this.detune = new t.Signal(e.detune, t.Type.Cents)),
                  (this._sourceType = void 0),
                  (this._oscillator = null),
                  (this.type = e.type),
                  this._readOnly(["frequency", "detune"]),
                  this.set(e);
              }),
                t.extend(t.OmniOscillator, t.Source),
                (t.OmniOscillator.defaults = {
                  frequency: 440,
                  detune: 0,
                  type: "sine",
                  phase: 0
                });
              var e = "PulseOscillator",
                n = "PWMOscillator",
                r = "Oscillator",
                i = "FMOscillator",
                o = "AMOscillator",
                a = "FatOscillator";
              return (
                (t.OmniOscillator.prototype._start = function(t) {
                  this._oscillator.start(t);
                }),
                (t.OmniOscillator.prototype._stop = function(t) {
                  this._oscillator.stop(t);
                }),
                (t.OmniOscillator.prototype.restart = function(t) {
                  this._oscillator.restart(t);
                }),
                Object.defineProperty(t.OmniOscillator.prototype, "type", {
                  get: function() {
                    var t = "";
                    return (
                      this._sourceType === i
                        ? (t = "fm")
                        : this._sourceType === o
                        ? (t = "am")
                        : this._sourceType === a && (t = "fat"),
                      t + this._oscillator.type
                    );
                  },
                  set: function(t) {
                    "fm" === t.substr(0, 2)
                      ? (this._createNewOscillator(i),
                        (this._oscillator.type = t.substr(2)))
                      : "am" === t.substr(0, 2)
                      ? (this._createNewOscillator(o),
                        (this._oscillator.type = t.substr(2)))
                      : "fat" === t.substr(0, 3)
                      ? (this._createNewOscillator(a),
                        (this._oscillator.type = t.substr(3)))
                      : "pwm" === t
                      ? this._createNewOscillator(n)
                      : "pulse" === t
                      ? this._createNewOscillator(e)
                      : (this._createNewOscillator(r),
                        (this._oscillator.type = t));
                  }
                }),
                Object.defineProperty(t.OmniOscillator.prototype, "partials", {
                  get: function() {
                    return this._oscillator.partials;
                  },
                  set: function(t) {
                    this._oscillator.partials = t;
                  }
                }),
                (t.OmniOscillator.prototype.set = function(e, n) {
                  return (
                    "type" === e
                      ? (this.type = n)
                      : t.isObject(e) &&
                        e.hasOwnProperty("type") &&
                        (this.type = e.type),
                    t.prototype.set.apply(this, arguments),
                    this
                  );
                }),
                (t.OmniOscillator.prototype._createNewOscillator = function(e) {
                  if (e !== this._sourceType) {
                    this._sourceType = e;
                    var n = t[e],
                      r = this.now();
                    if (null !== this._oscillator) {
                      var i = this._oscillator;
                      i.stop(r),
                        this.context.setTimeout(function() {
                          i.dispose(), (i = null);
                        }, this.blockTime);
                    }
                    (this._oscillator = new n()),
                      this.frequency.connect(this._oscillator.frequency),
                      this.detune.connect(this._oscillator.detune),
                      this._oscillator.connect(this.output),
                      this.state === t.State.Started &&
                        this._oscillator.start(r);
                  }
                }),
                Object.defineProperty(t.OmniOscillator.prototype, "phase", {
                  get: function() {
                    return this._oscillator.phase;
                  },
                  set: function(t) {
                    this._oscillator.phase = t;
                  }
                }),
                Object.defineProperty(t.OmniOscillator.prototype, "width", {
                  get: function() {
                    if (this._sourceType === e) return this._oscillator.width;
                  }
                }),
                Object.defineProperty(t.OmniOscillator.prototype, "count", {
                  get: function() {
                    if (this._sourceType === a) return this._oscillator.count;
                  },
                  set: function(t) {
                    this._sourceType === a && (this._oscillator.count = t);
                  }
                }),
                Object.defineProperty(t.OmniOscillator.prototype, "spread", {
                  get: function() {
                    if (this._sourceType === a) return this._oscillator.spread;
                  },
                  set: function(t) {
                    this._sourceType === a && (this._oscillator.spread = t);
                  }
                }),
                Object.defineProperty(
                  t.OmniOscillator.prototype,
                  "modulationType",
                  {
                    get: function() {
                      if (this._sourceType === i || this._sourceType === o)
                        return this._oscillator.modulationType;
                    },
                    set: function(t) {
                      (this._sourceType !== i && this._sourceType !== o) ||
                        (this._oscillator.modulationType = t);
                    }
                  }
                ),
                Object.defineProperty(
                  t.OmniOscillator.prototype,
                  "modulationIndex",
                  {
                    get: function() {
                      if (this._sourceType === i)
                        return this._oscillator.modulationIndex;
                    }
                  }
                ),
                Object.defineProperty(
                  t.OmniOscillator.prototype,
                  "harmonicity",
                  {
                    get: function() {
                      if (this._sourceType === i || this._sourceType === o)
                        return this._oscillator.harmonicity;
                    }
                  }
                ),
                Object.defineProperty(
                  t.OmniOscillator.prototype,
                  "modulationFrequency",
                  {
                    get: function() {
                      if (this._sourceType === n)
                        return this._oscillator.modulationFrequency;
                    }
                  }
                ),
                (t.OmniOscillator.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this._writable(["frequency", "detune"]),
                    this.detune.dispose(),
                    (this.detune = null),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this._oscillator.dispose(),
                    (this._oscillator = null),
                    (this._sourceType = null),
                    this
                  );
                }),
                t.OmniOscillator
              );
            }),
            n(function(t) {
              return (
                (t.Instrument = function(e) {
                  (e = t.defaultArg(e, t.Instrument.defaults)),
                    t.AudioNode.call(this),
                    (this._volume = this.output = new t.Volume(e.volume)),
                    (this.volume = this._volume.volume),
                    this._readOnly("volume"),
                    (this._scheduledEvents = []);
                }),
                t.extend(t.Instrument, t.AudioNode),
                (t.Instrument.defaults = { volume: 0 }),
                (t.Instrument.prototype.triggerAttack = t.noOp),
                (t.Instrument.prototype.triggerRelease = t.noOp),
                (t.Instrument.prototype.sync = function() {
                  return (
                    this._syncMethod("triggerAttack", 1),
                    this._syncMethod("triggerRelease", 0),
                    this
                  );
                }),
                (t.Instrument.prototype._syncMethod = function(e, n) {
                  var r = (this["_original_" + e] = this[e]);
                  this[e] = function() {
                    var e = Array.prototype.slice.call(arguments),
                      i = e[n],
                      o = t.Transport.schedule(
                        function(t) {
                          (e[n] = t), r.apply(this, e);
                        }.bind(this),
                        i
                      );
                    this._scheduledEvents.push(o);
                  }.bind(this);
                }),
                (t.Instrument.prototype.unsync = function() {
                  return (
                    this._scheduledEvents.forEach(function(e) {
                      t.Transport.clear(e);
                    }),
                    (this._scheduledEvents = []),
                    this._original_triggerAttack &&
                      ((this.triggerAttack = this._original_triggerAttack),
                      (this.triggerRelease = this._original_triggerRelease)),
                    this
                  );
                }),
                (t.Instrument.prototype.triggerAttackRelease = function(
                  t,
                  e,
                  n,
                  r
                ) {
                  return (
                    (n = this.toSeconds(n)),
                    (e = this.toSeconds(e)),
                    this.triggerAttack(t, n, r),
                    this.triggerRelease(n + e),
                    this
                  );
                }),
                (t.Instrument.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._volume.dispose(),
                    (this._volume = null),
                    this._writable(["volume"]),
                    (this.volume = null),
                    this.unsync(),
                    (this._scheduledEvents = null),
                    this
                  );
                }),
                t.Instrument
              );
            }),
            n(function(t) {
              return (
                (t.Monophonic = function(e) {
                  (e = t.defaultArg(e, t.Monophonic.defaults)),
                    t.Instrument.call(this, e),
                    (this.portamento = e.portamento);
                }),
                t.extend(t.Monophonic, t.Instrument),
                (t.Monophonic.defaults = { portamento: 0 }),
                (t.Monophonic.prototype.triggerAttack = function(t, e, n) {
                  return (
                    (e = this.toSeconds(e)),
                    this._triggerEnvelopeAttack(e, n),
                    this.setNote(t, e),
                    this
                  );
                }),
                (t.Monophonic.prototype.triggerRelease = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._triggerEnvelopeRelease(t),
                    this
                  );
                }),
                (t.Monophonic.prototype._triggerEnvelopeAttack = function() {}),
                (t.Monophonic.prototype._triggerEnvelopeRelease = function() {}),
                (t.Monophonic.prototype.getLevelAtTime = function(t) {
                  return (
                    (t = this.toSeconds(t)), this.envelope.getValueAtTime(t)
                  );
                }),
                (t.Monophonic.prototype.setNote = function(t, e) {
                  if (
                    ((e = this.toSeconds(e)),
                    this.portamento > 0 && this.getLevelAtTime(e) > 0.05)
                  ) {
                    var n = this.toSeconds(this.portamento);
                    this.frequency.exponentialRampTo(t, n, e);
                  } else this.frequency.setValueAtTime(t, e);
                  return this;
                }),
                t.Monophonic
              );
            }),
            n(function(t) {
              return (
                (t.Synth = function(e) {
                  (e = t.defaultArg(e, t.Synth.defaults)),
                    t.Monophonic.call(this, e),
                    (this.oscillator = new t.OmniOscillator(e.oscillator)),
                    (this.frequency = this.oscillator.frequency),
                    (this.detune = this.oscillator.detune),
                    (this.envelope = new t.AmplitudeEnvelope(e.envelope)),
                    this.oscillator.chain(this.envelope, this.output),
                    this._readOnly([
                      "oscillator",
                      "frequency",
                      "detune",
                      "envelope"
                    ]);
                }),
                t.extend(t.Synth, t.Monophonic),
                (t.Synth.defaults = {
                  oscillator: { type: "triangle" },
                  envelope: {
                    attack: 0.005,
                    decay: 0.1,
                    sustain: 0.3,
                    release: 1
                  }
                }),
                (t.Synth.prototype._triggerEnvelopeAttack = function(t, e) {
                  return (
                    this.envelope.triggerAttack(t, e),
                    this.oscillator.start(t),
                    0 === this.envelope.sustain &&
                      this.oscillator.stop(
                        t + this.envelope.attack + this.envelope.decay
                      ),
                    this
                  );
                }),
                (t.Synth.prototype._triggerEnvelopeRelease = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this.envelope.triggerRelease(t),
                    this.oscillator.stop(t + this.envelope.release),
                    this
                  );
                }),
                (t.Synth.prototype.dispose = function() {
                  return (
                    t.Monophonic.prototype.dispose.call(this),
                    this._writable([
                      "oscillator",
                      "frequency",
                      "detune",
                      "envelope"
                    ]),
                    this.oscillator.dispose(),
                    (this.oscillator = null),
                    this.envelope.dispose(),
                    (this.envelope = null),
                    (this.frequency = null),
                    (this.detune = null),
                    this
                  );
                }),
                t.Synth
              );
            }),
            n(function(t) {
              return (
                (t.AMSynth = function(e) {
                  (e = t.defaultArg(e, t.AMSynth.defaults)),
                    t.Monophonic.call(this, e),
                    (this._carrier = new t.Synth()),
                    (this._carrier.volume.value = -10),
                    (this.oscillator = this._carrier.oscillator),
                    (this.envelope = this._carrier.envelope.set(e.envelope)),
                    (this._modulator = new t.Synth()),
                    (this._modulator.volume.value = -10),
                    (this.modulation = this._modulator.oscillator.set(
                      e.modulation
                    )),
                    (this.modulationEnvelope = this._modulator.envelope.set(
                      e.modulationEnvelope
                    )),
                    (this.frequency = new t.Signal(440, t.Type.Frequency)),
                    (this.detune = new t.Signal(e.detune, t.Type.Cents)),
                    (this.harmonicity = new t.Multiply(e.harmonicity)),
                    (this.harmonicity.units = t.Type.Positive),
                    (this._modulationScale = new t.AudioToGain()),
                    (this._modulationNode = new t.Gain()),
                    this.frequency.connect(this._carrier.frequency),
                    this.frequency.chain(
                      this.harmonicity,
                      this._modulator.frequency
                    ),
                    this.detune.fan(
                      this._carrier.detune,
                      this._modulator.detune
                    ),
                    this._modulator.chain(
                      this._modulationScale,
                      this._modulationNode.gain
                    ),
                    this._carrier.chain(this._modulationNode, this.output),
                    this._readOnly([
                      "frequency",
                      "harmonicity",
                      "oscillator",
                      "envelope",
                      "modulation",
                      "modulationEnvelope",
                      "detune"
                    ]);
                }),
                t.extend(t.AMSynth, t.Monophonic),
                (t.AMSynth.defaults = {
                  harmonicity: 3,
                  detune: 0,
                  oscillator: { type: "sine" },
                  envelope: {
                    attack: 0.01,
                    decay: 0.01,
                    sustain: 1,
                    release: 0.5
                  },
                  modulation: { type: "square" },
                  modulationEnvelope: {
                    attack: 0.5,
                    decay: 0,
                    sustain: 1,
                    release: 0.5
                  }
                }),
                (t.AMSynth.prototype._triggerEnvelopeAttack = function(t, e) {
                  return (
                    (t = this.toSeconds(t)),
                    this._carrier._triggerEnvelopeAttack(t, e),
                    this._modulator._triggerEnvelopeAttack(t),
                    this
                  );
                }),
                (t.AMSynth.prototype._triggerEnvelopeRelease = function(t) {
                  return (
                    this._carrier._triggerEnvelopeRelease(t),
                    this._modulator._triggerEnvelopeRelease(t),
                    this
                  );
                }),
                (t.AMSynth.prototype.dispose = function() {
                  return (
                    t.Monophonic.prototype.dispose.call(this),
                    this._writable([
                      "frequency",
                      "harmonicity",
                      "oscillator",
                      "envelope",
                      "modulation",
                      "modulationEnvelope",
                      "detune"
                    ]),
                    this._carrier.dispose(),
                    (this._carrier = null),
                    this._modulator.dispose(),
                    (this._modulator = null),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this.detune.dispose(),
                    (this.detune = null),
                    this.harmonicity.dispose(),
                    (this.harmonicity = null),
                    this._modulationScale.dispose(),
                    (this._modulationScale = null),
                    this._modulationNode.dispose(),
                    (this._modulationNode = null),
                    (this.oscillator = null),
                    (this.envelope = null),
                    (this.modulationEnvelope = null),
                    (this.modulation = null),
                    this
                  );
                }),
                t.AMSynth
              );
            }),
            n(function(t) {
              return (
                (t.MonoSynth = function(e) {
                  (e = t.defaultArg(e, t.MonoSynth.defaults)),
                    t.Monophonic.call(this, e),
                    (this.oscillator = new t.OmniOscillator(e.oscillator)),
                    (this.frequency = this.oscillator.frequency),
                    (this.detune = this.oscillator.detune),
                    (this.filter = new t.Filter(e.filter)),
                    (this.filterEnvelope = new t.FrequencyEnvelope(
                      e.filterEnvelope
                    )),
                    (this.envelope = new t.AmplitudeEnvelope(e.envelope)),
                    this.oscillator.chain(
                      this.filter,
                      this.envelope,
                      this.output
                    ),
                    this.filterEnvelope.connect(this.filter.frequency),
                    this._readOnly([
                      "oscillator",
                      "frequency",
                      "detune",
                      "filter",
                      "filterEnvelope",
                      "envelope"
                    ]);
                }),
                t.extend(t.MonoSynth, t.Monophonic),
                (t.MonoSynth.defaults = {
                  frequency: "C4",
                  detune: 0,
                  oscillator: { type: "square" },
                  filter: { Q: 6, type: "lowpass", rolloff: -24 },
                  envelope: {
                    attack: 0.005,
                    decay: 0.1,
                    sustain: 0.9,
                    release: 1
                  },
                  filterEnvelope: {
                    attack: 0.06,
                    decay: 0.2,
                    sustain: 0.5,
                    release: 2,
                    baseFrequency: 200,
                    octaves: 7,
                    exponent: 2
                  }
                }),
                (t.MonoSynth.prototype._triggerEnvelopeAttack = function(t, e) {
                  return (
                    (t = this.toSeconds(t)),
                    this.envelope.triggerAttack(t, e),
                    this.filterEnvelope.triggerAttack(t),
                    this.oscillator.start(t),
                    0 === this.envelope.sustain &&
                      this.oscillator.stop(
                        t + this.envelope.attack + this.envelope.decay
                      ),
                    this
                  );
                }),
                (t.MonoSynth.prototype._triggerEnvelopeRelease = function(t) {
                  return (
                    this.envelope.triggerRelease(t),
                    this.filterEnvelope.triggerRelease(t),
                    this.oscillator.stop(t + this.envelope.release),
                    this
                  );
                }),
                (t.MonoSynth.prototype.dispose = function() {
                  return (
                    t.Monophonic.prototype.dispose.call(this),
                    this._writable([
                      "oscillator",
                      "frequency",
                      "detune",
                      "filter",
                      "filterEnvelope",
                      "envelope"
                    ]),
                    this.oscillator.dispose(),
                    (this.oscillator = null),
                    this.envelope.dispose(),
                    (this.envelope = null),
                    this.filterEnvelope.dispose(),
                    (this.filterEnvelope = null),
                    this.filter.dispose(),
                    (this.filter = null),
                    (this.frequency = null),
                    (this.detune = null),
                    this
                  );
                }),
                t.MonoSynth
              );
            }),
            n(function(t) {
              return (
                (t.DuoSynth = function(e) {
                  (e = t.defaultArg(e, t.DuoSynth.defaults)),
                    t.Monophonic.call(this, e),
                    (this.voice0 = new t.MonoSynth(e.voice0)),
                    (this.voice0.volume.value = -10),
                    (this.voice1 = new t.MonoSynth(e.voice1)),
                    (this.voice1.volume.value = -10),
                    (this._vibrato = new t.LFO(e.vibratoRate, -50, 50)),
                    this._vibrato.start(),
                    (this.vibratoRate = this._vibrato.frequency),
                    (this._vibratoGain = new t.Gain(
                      e.vibratoAmount,
                      t.Type.Positive
                    )),
                    (this.vibratoAmount = this._vibratoGain.gain),
                    (this.frequency = new t.Signal(440, t.Type.Frequency)),
                    (this.harmonicity = new t.Multiply(e.harmonicity)),
                    (this.harmonicity.units = t.Type.Positive),
                    this.frequency.connect(this.voice0.frequency),
                    this.frequency.chain(
                      this.harmonicity,
                      this.voice1.frequency
                    ),
                    this._vibrato.connect(this._vibratoGain),
                    this._vibratoGain.fan(
                      this.voice0.detune,
                      this.voice1.detune
                    ),
                    this.voice0.connect(this.output),
                    this.voice1.connect(this.output),
                    this._readOnly([
                      "voice0",
                      "voice1",
                      "frequency",
                      "vibratoAmount",
                      "vibratoRate"
                    ]);
                }),
                t.extend(t.DuoSynth, t.Monophonic),
                (t.DuoSynth.defaults = {
                  vibratoAmount: 0.5,
                  vibratoRate: 5,
                  harmonicity: 1.5,
                  voice0: {
                    volume: -10,
                    portamento: 0,
                    oscillator: { type: "sine" },
                    filterEnvelope: {
                      attack: 0.01,
                      decay: 0,
                      sustain: 1,
                      release: 0.5
                    },
                    envelope: {
                      attack: 0.01,
                      decay: 0,
                      sustain: 1,
                      release: 0.5
                    }
                  },
                  voice1: {
                    volume: -10,
                    portamento: 0,
                    oscillator: { type: "sine" },
                    filterEnvelope: {
                      attack: 0.01,
                      decay: 0,
                      sustain: 1,
                      release: 0.5
                    },
                    envelope: {
                      attack: 0.01,
                      decay: 0,
                      sustain: 1,
                      release: 0.5
                    }
                  }
                }),
                (t.DuoSynth.prototype._triggerEnvelopeAttack = function(t, e) {
                  return (
                    (t = this.toSeconds(t)),
                    this.voice0._triggerEnvelopeAttack(t, e),
                    this.voice1._triggerEnvelopeAttack(t, e),
                    this
                  );
                }),
                (t.DuoSynth.prototype._triggerEnvelopeRelease = function(t) {
                  return (
                    this.voice0._triggerEnvelopeRelease(t),
                    this.voice1._triggerEnvelopeRelease(t),
                    this
                  );
                }),
                (t.DuoSynth.prototype.getLevelAtTime = function(t) {
                  return (
                    (this.voice0.getLevelAtTime(t) +
                      this.voice1.getLevelAtTime(t)) /
                    2
                  );
                }),
                (t.DuoSynth.prototype.dispose = function() {
                  return (
                    t.Monophonic.prototype.dispose.call(this),
                    this._writable([
                      "voice0",
                      "voice1",
                      "frequency",
                      "vibratoAmount",
                      "vibratoRate"
                    ]),
                    this.voice0.dispose(),
                    (this.voice0 = null),
                    this.voice1.dispose(),
                    (this.voice1 = null),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this._vibratoGain.dispose(),
                    (this._vibratoGain = null),
                    (this._vibrato = null),
                    this.harmonicity.dispose(),
                    (this.harmonicity = null),
                    this.vibratoAmount.dispose(),
                    (this.vibratoAmount = null),
                    (this.vibratoRate = null),
                    this
                  );
                }),
                t.DuoSynth
              );
            }),
            n(function(t) {
              return (
                (t.FMSynth = function(e) {
                  (e = t.defaultArg(e, t.FMSynth.defaults)),
                    t.Monophonic.call(this, e),
                    (this._carrier = new t.Synth(e.carrier)),
                    (this._carrier.volume.value = -10),
                    (this.oscillator = this._carrier.oscillator),
                    (this.envelope = this._carrier.envelope.set(e.envelope)),
                    (this._modulator = new t.Synth(e.modulator)),
                    (this._modulator.volume.value = -10),
                    (this.modulation = this._modulator.oscillator.set(
                      e.modulation
                    )),
                    (this.modulationEnvelope = this._modulator.envelope.set(
                      e.modulationEnvelope
                    )),
                    (this.frequency = new t.Signal(440, t.Type.Frequency)),
                    (this.detune = new t.Signal(e.detune, t.Type.Cents)),
                    (this.harmonicity = new t.Multiply(e.harmonicity)),
                    (this.harmonicity.units = t.Type.Positive),
                    (this.modulationIndex = new t.Multiply(e.modulationIndex)),
                    (this.modulationIndex.units = t.Type.Positive),
                    (this._modulationNode = new t.Gain(0)),
                    this.frequency.connect(this._carrier.frequency),
                    this.frequency.chain(
                      this.harmonicity,
                      this._modulator.frequency
                    ),
                    this.frequency.chain(
                      this.modulationIndex,
                      this._modulationNode
                    ),
                    this.detune.fan(
                      this._carrier.detune,
                      this._modulator.detune
                    ),
                    this._modulator.connect(this._modulationNode.gain),
                    this._modulationNode.connect(this._carrier.frequency),
                    this._carrier.connect(this.output),
                    this._readOnly([
                      "frequency",
                      "harmonicity",
                      "modulationIndex",
                      "oscillator",
                      "envelope",
                      "modulation",
                      "modulationEnvelope",
                      "detune"
                    ]);
                }),
                t.extend(t.FMSynth, t.Monophonic),
                (t.FMSynth.defaults = {
                  harmonicity: 3,
                  modulationIndex: 10,
                  detune: 0,
                  oscillator: { type: "sine" },
                  envelope: {
                    attack: 0.01,
                    decay: 0.01,
                    sustain: 1,
                    release: 0.5
                  },
                  modulation: { type: "square" },
                  modulationEnvelope: {
                    attack: 0.5,
                    decay: 0,
                    sustain: 1,
                    release: 0.5
                  }
                }),
                (t.FMSynth.prototype._triggerEnvelopeAttack = function(t, e) {
                  return (
                    (t = this.toSeconds(t)),
                    this._carrier._triggerEnvelopeAttack(t, e),
                    this._modulator._triggerEnvelopeAttack(t),
                    this
                  );
                }),
                (t.FMSynth.prototype._triggerEnvelopeRelease = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._carrier._triggerEnvelopeRelease(t),
                    this._modulator._triggerEnvelopeRelease(t),
                    this
                  );
                }),
                (t.FMSynth.prototype.dispose = function() {
                  return (
                    t.Monophonic.prototype.dispose.call(this),
                    this._writable([
                      "frequency",
                      "harmonicity",
                      "modulationIndex",
                      "oscillator",
                      "envelope",
                      "modulation",
                      "modulationEnvelope",
                      "detune"
                    ]),
                    this._carrier.dispose(),
                    (this._carrier = null),
                    this._modulator.dispose(),
                    (this._modulator = null),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this.detune.dispose(),
                    (this.detune = null),
                    this.modulationIndex.dispose(),
                    (this.modulationIndex = null),
                    this.harmonicity.dispose(),
                    (this.harmonicity = null),
                    this._modulationNode.dispose(),
                    (this._modulationNode = null),
                    (this.oscillator = null),
                    (this.envelope = null),
                    (this.modulationEnvelope = null),
                    (this.modulation = null),
                    this
                  );
                }),
                t.FMSynth
              );
            }),
            n(function(t) {
              return (
                (t.MembraneSynth = function(e) {
                  (e = t.defaultArg(e, t.MembraneSynth.defaults)),
                    t.Instrument.call(this, e),
                    (this.oscillator = new t.OmniOscillator(e.oscillator)),
                    (this.envelope = new t.AmplitudeEnvelope(e.envelope)),
                    (this.octaves = e.octaves),
                    (this.pitchDecay = e.pitchDecay),
                    this.oscillator.chain(this.envelope, this.output),
                    this._readOnly(["oscillator", "envelope"]);
                }),
                t.extend(t.MembraneSynth, t.Instrument),
                (t.MembraneSynth.defaults = {
                  pitchDecay: 0.05,
                  octaves: 10,
                  oscillator: { type: "sine" },
                  envelope: {
                    attack: 0.001,
                    decay: 0.4,
                    sustain: 0.01,
                    release: 1.4,
                    attackCurve: "exponential"
                  }
                }),
                (t.MembraneSynth.prototype.triggerAttack = function(t, e, n) {
                  e = this.toSeconds(e);
                  var r = (t = this.toFrequency(t)) * this.octaves;
                  return (
                    this.oscillator.frequency.setValueAtTime(r, e),
                    this.oscillator.frequency.exponentialRampToValueAtTime(
                      t,
                      e + this.toSeconds(this.pitchDecay)
                    ),
                    this.envelope.triggerAttack(e, n),
                    this.oscillator.start(e),
                    this
                  );
                }),
                (t.MembraneSynth.prototype.triggerRelease = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this.envelope.triggerRelease(t),
                    this.oscillator.stop(t + this.envelope.release),
                    this
                  );
                }),
                (t.MembraneSynth.prototype.dispose = function() {
                  return (
                    t.Instrument.prototype.dispose.call(this),
                    this._writable(["oscillator", "envelope"]),
                    this.oscillator.dispose(),
                    (this.oscillator = null),
                    this.envelope.dispose(),
                    (this.envelope = null),
                    this
                  );
                }),
                t.MembraneSynth
              );
            }),
            n(function(t) {
              var e = [1, 1.483, 1.932, 2.546, 2.63, 3.897];
              return (
                (t.MetalSynth = function(n) {
                  (n = t.defaultArg(n, t.MetalSynth.defaults)),
                    t.Instrument.call(this, n),
                    (this.frequency = new t.Signal(
                      n.frequency,
                      t.Type.Frequency
                    )),
                    (this._oscillators = []),
                    (this._freqMultipliers = []),
                    (this._amplitue = new t.Gain(0).connect(this.output)),
                    (this._highpass = new t.Filter({
                      type: "highpass",
                      Q: -3.0102999566398125
                    }).connect(this._amplitue)),
                    (this._octaves = n.octaves),
                    (this._filterFreqScaler = new t.Scale(n.resonance, 7e3)),
                    (this.envelope = new t.Envelope({
                      attack: n.envelope.attack,
                      attackCurve: "linear",
                      decay: n.envelope.decay,
                      sustain: 0,
                      release: n.envelope.release
                    }).chain(this._filterFreqScaler, this._highpass.frequency)),
                    this.envelope.connect(this._amplitue.gain);
                  for (var r = 0; r < e.length; r++) {
                    var i = new t.FMOscillator({
                      type: "square",
                      modulationType: "square",
                      harmonicity: n.harmonicity,
                      modulationIndex: n.modulationIndex
                    });
                    i.connect(this._highpass), (this._oscillators[r] = i);
                    var o = new t.Multiply(e[r]);
                    (this._freqMultipliers[r] = o),
                      this.frequency.chain(o, i.frequency);
                  }
                  this.octaves = n.octaves;
                }),
                t.extend(t.MetalSynth, t.Instrument),
                (t.MetalSynth.defaults = {
                  frequency: 200,
                  envelope: { attack: 0.001, decay: 1.4, release: 0.2 },
                  harmonicity: 5.1,
                  modulationIndex: 32,
                  resonance: 4e3,
                  octaves: 1.5
                }),
                (t.MetalSynth.prototype.triggerAttack = function(e, n) {
                  return (
                    (e = this.toSeconds(e)),
                    (n = t.defaultArg(n, 1)),
                    this.envelope.triggerAttack(e, n),
                    this._oscillators.forEach(function(t) {
                      t.start(e);
                    }),
                    0 === this.envelope.sustain &&
                      this._oscillators.forEach(
                        function(t) {
                          t.stop(
                            e + this.envelope.attack + this.envelope.decay
                          );
                        }.bind(this)
                      ),
                    this
                  );
                }),
                (t.MetalSynth.prototype.triggerRelease = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this.envelope.triggerRelease(t),
                    this._oscillators.forEach(
                      function(e) {
                        e.stop(t + this.envelope.release);
                      }.bind(this)
                    ),
                    this
                  );
                }),
                (t.MetalSynth.prototype.sync = function() {
                  return (
                    this._syncMethod("triggerAttack", 0),
                    this._syncMethod("triggerRelease", 0),
                    this
                  );
                }),
                (t.MetalSynth.prototype.triggerAttackRelease = function(
                  t,
                  e,
                  n
                ) {
                  return (
                    (e = this.toSeconds(e)),
                    (t = this.toSeconds(t)),
                    this.triggerAttack(e, n),
                    this.triggerRelease(e + t),
                    this
                  );
                }),
                Object.defineProperty(
                  t.MetalSynth.prototype,
                  "modulationIndex",
                  {
                    get: function() {
                      return this._oscillators[0].modulationIndex.value;
                    },
                    set: function(t) {
                      for (var e = 0; e < this._oscillators.length; e++)
                        this._oscillators[e].modulationIndex.value = t;
                    }
                  }
                ),
                Object.defineProperty(t.MetalSynth.prototype, "harmonicity", {
                  get: function() {
                    return this._oscillators[0].harmonicity.value;
                  },
                  set: function(t) {
                    for (var e = 0; e < this._oscillators.length; e++)
                      this._oscillators[e].harmonicity.value = t;
                  }
                }),
                Object.defineProperty(t.MetalSynth.prototype, "resonance", {
                  get: function() {
                    return this._filterFreqScaler.min;
                  },
                  set: function(t) {
                    (this._filterFreqScaler.min = t),
                      (this.octaves = this._octaves);
                  }
                }),
                Object.defineProperty(t.MetalSynth.prototype, "octaves", {
                  get: function() {
                    return this._octaves;
                  },
                  set: function(t) {
                    (this._octaves = t),
                      (this._filterFreqScaler.max =
                        this._filterFreqScaler.min * Math.pow(2, t));
                  }
                }),
                (t.MetalSynth.prototype.dispose = function() {
                  t.Instrument.prototype.dispose.call(this);
                  for (var e = 0; e < this._oscillators.length; e++)
                    this._oscillators[e].dispose(),
                      this._freqMultipliers[e].dispose();
                  (this._oscillators = null),
                    (this._freqMultipliers = null),
                    this.frequency.dispose(),
                    (this.frequency = null),
                    this._filterFreqScaler.dispose(),
                    (this._filterFreqScaler = null),
                    this._amplitue.dispose(),
                    (this._amplitue = null),
                    this.envelope.dispose(),
                    (this.envelope = null),
                    this._highpass.dispose(),
                    (this._highpass = null);
                }),
                t.MetalSynth
              );
            }),
            n(function(t) {
              return (
                (t.NoiseSynth = function(e) {
                  (e = t.defaultArg(e, t.NoiseSynth.defaults)),
                    t.Instrument.call(this, e),
                    (this.noise = new t.Noise()),
                    (this.envelope = new t.AmplitudeEnvelope(e.envelope)),
                    this.noise.chain(this.envelope, this.output),
                    this._readOnly(["noise", "envelope"]);
                }),
                t.extend(t.NoiseSynth, t.Instrument),
                (t.NoiseSynth.defaults = {
                  noise: { type: "white" },
                  envelope: { attack: 0.005, decay: 0.1, sustain: 0 }
                }),
                (t.NoiseSynth.prototype.triggerAttack = function(t, e) {
                  return (
                    this.envelope.triggerAttack(t, e),
                    this.noise.start(t),
                    0 === this.envelope.sustain &&
                      this.noise.stop(
                        (t = this.envelope.attack + this.envelope.decay)
                      ),
                    this
                  );
                }),
                (t.NoiseSynth.prototype.triggerRelease = function(t) {
                  return (
                    this.envelope.triggerRelease(t),
                    this.noise.stop(t + this.envelope.release),
                    this
                  );
                }),
                (t.NoiseSynth.prototype.sync = function() {
                  return (
                    this._syncMethod("triggerAttack", 0),
                    this._syncMethod("triggerRelease", 0),
                    this
                  );
                }),
                (t.NoiseSynth.prototype.triggerAttackRelease = function(
                  t,
                  e,
                  n
                ) {
                  return (
                    (e = this.toSeconds(e)),
                    (t = this.toSeconds(t)),
                    this.triggerAttack(e, n),
                    this.triggerRelease(e + t),
                    this
                  );
                }),
                (t.NoiseSynth.prototype.dispose = function() {
                  return (
                    t.Instrument.prototype.dispose.call(this),
                    this._writable(["noise", "envelope"]),
                    this.noise.dispose(),
                    (this.noise = null),
                    this.envelope.dispose(),
                    (this.envelope = null),
                    this
                  );
                }),
                t.NoiseSynth
              );
            }),
            n(function(t) {
              return (
                (t.PluckSynth = function(e) {
                  (e = t.defaultArg(e, t.PluckSynth.defaults)),
                    t.Instrument.call(this, e),
                    (this._noise = new t.Noise("pink")),
                    (this.attackNoise = e.attackNoise),
                    (this._lfcf = new t.LowpassCombFilter({
                      resonance: e.resonance,
                      dampening: e.dampening
                    })),
                    (this.resonance = this._lfcf.resonance),
                    (this.dampening = this._lfcf.dampening),
                    this._noise.connect(this._lfcf),
                    this._lfcf.connect(this.output),
                    this._readOnly(["resonance", "dampening"]);
                }),
                t.extend(t.PluckSynth, t.Instrument),
                (t.PluckSynth.defaults = {
                  attackNoise: 1,
                  dampening: 4e3,
                  resonance: 0.7
                }),
                (t.PluckSynth.prototype.triggerAttack = function(t, e) {
                  (t = this.toFrequency(t)), (e = this.toSeconds(e));
                  var n = 1 / t;
                  return (
                    this._lfcf.delayTime.setValueAtTime(n, e),
                    this._noise.start(e),
                    this._noise.stop(e + n * this.attackNoise),
                    this
                  );
                }),
                (t.PluckSynth.prototype.dispose = function() {
                  return (
                    t.Instrument.prototype.dispose.call(this),
                    this._noise.dispose(),
                    this._lfcf.dispose(),
                    (this._noise = null),
                    (this._lfcf = null),
                    this._writable(["resonance", "dampening"]),
                    (this.dampening = null),
                    (this.resonance = null),
                    this
                  );
                }),
                t.PluckSynth
              );
            }),
            n(function(t) {
              return (
                (t.PolySynth = function() {
                  var e = t.defaults(
                    arguments,
                    ["polyphony", "voice"],
                    t.PolySynth
                  );
                  t.Instrument.call(this, e),
                    ((e = t.defaultArg(
                      e,
                      t.Instrument.defaults
                    )).polyphony = Math.min(
                      t.PolySynth.MAX_POLYPHONY,
                      e.polyphony
                    )),
                    (this.voices = new Array(e.polyphony)),
                    (this._triggers = new Array(e.polyphony)),
                    (this.detune = new t.Signal(e.detune, t.Type.Cents)),
                    this._readOnly("detune");
                  for (var n = 0; n < e.polyphony; n++) {
                    var r = new e.voice(arguments[2], arguments[3]);
                    if (!(r instanceof t.Monophonic))
                      throw new Error(
                        "Synth constructor must be instance of Tone.Monophonic"
                      );
                    (this.voices[n] = r),
                      r.connect(this.output),
                      r.hasOwnProperty("detune") &&
                        this.detune.connect(r.detune),
                      (this._triggers[n] = {
                        release: -1,
                        note: null,
                        voice: r
                      });
                  }
                }),
                t.extend(t.PolySynth, t.Instrument),
                (t.PolySynth.defaults = {
                  polyphony: 4,
                  volume: 0,
                  detune: 0,
                  voice: t.Synth
                }),
                (t.PolySynth.prototype.triggerAttack = function(t, e, n) {
                  Array.isArray(t) || (t = [t]), (e = this.toSeconds(e));
                  for (var r = 0; r < t.length; r++) {
                    for (
                      var i = t[r], o = this._triggers[0], a = 1;
                      a < this._triggers.length;
                      a++
                    )
                      this._triggers[a].release < o.release &&
                        (o = this._triggers[a]);
                    (o.release = 1 / 0),
                      (o.note = JSON.stringify(i)),
                      o.voice.triggerAttack(i, e, n);
                  }
                  return this;
                }),
                (t.PolySynth.prototype.triggerAttackRelease = function(
                  e,
                  n,
                  r,
                  i
                ) {
                  if (
                    ((r = this.toSeconds(r)),
                    this.triggerAttack(e, r, i),
                    t.isArray(n) && t.isArray(e))
                  )
                    for (var o = 0; o < e.length; o++) {
                      var a = n[Math.min(o, n.length - 1)];
                      this.triggerRelease(e[o], r + this.toSeconds(a));
                    }
                  else this.triggerRelease(e, r + this.toSeconds(n));
                  return this;
                }),
                (t.PolySynth.prototype.triggerRelease = function(t, e) {
                  Array.isArray(t) || (t = [t]), (e = this.toSeconds(e));
                  for (var n = 0; n < t.length; n++)
                    for (
                      var r = JSON.stringify(t[n]), i = 0;
                      i < this._triggers.length;
                      i++
                    ) {
                      var o = this._triggers[i];
                      o.note === r &&
                        o.release > e &&
                        (o.voice.triggerRelease(e), (o.release = e));
                    }
                  return this;
                }),
                (t.PolySynth.prototype.sync = function() {
                  return (
                    this._syncMethod("triggerAttack", 1),
                    this._syncMethod("triggerRelease", 1),
                    this
                  );
                }),
                (t.PolySynth.prototype.set = function(t, e, n) {
                  for (var r = 0; r < this.voices.length; r++)
                    this.voices[r].set(t, e, n);
                  return this;
                }),
                (t.PolySynth.prototype.get = function(t) {
                  return this.voices[0].get(t);
                }),
                (t.PolySynth.prototype.releaseAll = function(t) {
                  t = this.toSeconds(t);
                  for (var e = 0; e < this._triggers.length; e++) {
                    var n = this._triggers[e];
                    n.release > t &&
                      ((n.release = t), n.voice.triggerRelease(t));
                  }
                  return this;
                }),
                (t.PolySynth.prototype.dispose = function() {
                  t.Instrument.prototype.dispose.call(this);
                  for (var e = 0; e < this.voices.length; e++)
                    this.voices[e].dispose(), (this.voices[e] = null);
                  return (
                    this._writable("detune"),
                    this.detune.dispose(),
                    (this.detune = null),
                    (this.voices = null),
                    (this._triggers = null),
                    this
                  );
                }),
                (t.PolySynth.MAX_POLYPHONY = 20),
                t.PolySynth
              );
            }),
            n(function(t) {
              return (
                (t.Sampler = function(e) {
                  var n = Array.prototype.slice.call(arguments);
                  n.shift();
                  var r = t.defaults(n, ["onload", "baseUrl"], t.Sampler);
                  t.Instrument.call(this, r);
                  var i = {};
                  for (var o in e)
                    if (t.isNote(o)) i[t.Frequency(o).toMidi()] = e[o];
                    else {
                      if (isNaN(parseFloat(o)))
                        throw new Error(
                          "Tone.Sampler: url keys must be the note's pitch"
                        );
                      i[o] = e[o];
                    }
                  (this._buffers = new t.Buffers(i, r.onload, r.baseUrl)),
                    (this._activeSources = {}),
                    (this.attack = r.attack),
                    (this.release = r.release);
                }),
                t.extend(t.Sampler, t.Instrument),
                (t.Sampler.defaults = {
                  attack: 0,
                  release: 0.1,
                  onload: t.noOp,
                  baseUrl: ""
                }),
                (t.Sampler.prototype._findClosest = function(t) {
                  for (var e = 0; e < 96; ) {
                    if (this._buffers.has(t + e)) return -e;
                    if (this._buffers.has(t - e)) return e;
                    e++;
                  }
                  return null;
                }),
                (t.Sampler.prototype.triggerAttack = function(e, n, r) {
                  var i = t.Frequency(e).toMidi(),
                    o = this._findClosest(i);
                  if (null !== o) {
                    var a = i - o,
                      s = this._buffers.get(a),
                      u = new t.BufferSource({
                        buffer: s,
                        playbackRate: t.intervalToFrequencyRatio(o),
                        fadeIn: this.attack,
                        fadeOut: this.release,
                        curve: "exponential"
                      }).connect(this.output);
                    u.start(n, 0, s.duration, r),
                      t.isArray(this._activeSources[i]) ||
                        (this._activeSources[i] = []),
                      this._activeSources[i].push({ note: i, source: u });
                  }
                  return this;
                }),
                (t.Sampler.prototype.triggerRelease = function(e, n) {
                  var r = t.Frequency(e).toMidi();
                  if (this._activeSources[r] && this._activeSources[r].length) {
                    var i = this._activeSources[r].shift().source;
                    (n = this.toSeconds(n)),
                      i.stop(n + this.release, this.release);
                  }
                  return this;
                }),
                (t.Sampler.prototype.releaseAll = function(t) {
                  for (var e in ((t = this.toSeconds(t)), this._activeSources))
                    for (var n = this._activeSources[e]; n.length; )
                      n.shift().source.stop(t + this.release, this.release);
                  return this;
                }),
                (t.Sampler.prototype.sync = function() {
                  return (
                    this._syncMethod("triggerAttack", 1),
                    this._syncMethod("triggerRelease", 1),
                    this
                  );
                }),
                (t.Sampler.prototype.triggerAttackRelease = function(
                  t,
                  e,
                  n,
                  r
                ) {
                  return (
                    (n = this.toSeconds(n)),
                    (e = this.toSeconds(e)),
                    this.triggerAttack(t, n, r),
                    this.triggerRelease(t, n + e),
                    this
                  );
                }),
                (t.Sampler.prototype.add = function(e, n, r) {
                  if (t.isNote(e)) {
                    var i = t.Frequency(e).toMidi();
                    this._buffers.add(i, n, r);
                  } else {
                    if (isNaN(parseFloat(e)))
                      throw new Error(
                        "Tone.Sampler: note must be the note's pitch. Instead got " +
                          e
                      );
                    this._buffers.add(e, n, r);
                  }
                }),
                Object.defineProperty(t.Sampler.prototype, "loaded", {
                  get: function() {
                    return this._buffers.loaded;
                  }
                }),
                (t.Sampler.prototype.dispose = function() {
                  for (var e in (t.Instrument.prototype.dispose.call(this),
                  this._buffers.dispose(),
                  (this._buffers = null),
                  this._activeSources))
                    this._activeSources[e].forEach(function(t) {
                      t.source.dispose();
                    });
                  return (this._activeSources = null), this;
                }),
                t.Sampler
              );
            }),
            n(function(t) {
              t.supported &&
                (OscillatorNode.prototype.setPeriodicWave ||
                  (OscillatorNode.prototype.setPeriodicWave =
                    OscillatorNode.prototype.setWaveTable),
                AudioContext.prototype.createPeriodicWave ||
                  (AudioContext.prototype.createPeriodicWave =
                    AudioContext.prototype.createWaveTable));
            }),
            n(function(t) {
              return (
                (t.GainToAudio = function() {
                  t.SignalBase.call(this),
                    (this._norm = this.input = this.output = new t.WaveShaper(
                      function(t) {
                        return 2 * Math.abs(t) - 1;
                      }
                    ));
                }),
                t.extend(t.GainToAudio, t.SignalBase),
                (t.GainToAudio.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._norm.dispose(),
                    (this._norm = null),
                    this
                  );
                }),
                t.GainToAudio
              );
            }),
            n(function(t) {
              return (
                (t.Normalize = function(e, n) {
                  t.SignalBase.call(this),
                    (this._inputMin = t.defaultArg(e, 0)),
                    (this._inputMax = t.defaultArg(n, 1)),
                    (this._sub = this.input = new t.Add(0)),
                    (this._div = this.output = new t.Multiply(1)),
                    this._sub.connect(this._div),
                    this._setRange();
                }),
                t.extend(t.Normalize, t.SignalBase),
                Object.defineProperty(t.Normalize.prototype, "min", {
                  get: function() {
                    return this._inputMin;
                  },
                  set: function(t) {
                    (this._inputMin = t), this._setRange();
                  }
                }),
                Object.defineProperty(t.Normalize.prototype, "max", {
                  get: function() {
                    return this._inputMax;
                  },
                  set: function(t) {
                    (this._inputMax = t), this._setRange();
                  }
                }),
                (t.Normalize.prototype._setRange = function() {
                  (this._sub.value = -this._inputMin),
                    (this._div.value = 1 / (this._inputMax - this._inputMin));
                }),
                (t.Normalize.prototype.dispose = function() {
                  return (
                    t.SignalBase.prototype.dispose.call(this),
                    this._sub.dispose(),
                    (this._sub = null),
                    this._div.dispose(),
                    (this._div = null),
                    this
                  );
                }),
                t.Normalize
              );
            }),
            n(function(t) {
              return (
                (t.TransportTimelineSignal = function() {
                  t.Signal.apply(this, arguments),
                    (this.output = this._outputSig = new t.Signal(
                      this._initialValue
                    )),
                    (this._lastVal = this.value),
                    (this._synced = t.Transport.scheduleRepeat(
                      this._onTick.bind(this),
                      "1i"
                    )),
                    (this._bindAnchorValue = this._anchorValue.bind(this)),
                    t.Transport.on("start stop pause", this._bindAnchorValue),
                    (this._events.memory = 1 / 0);
                }),
                t.extend(t.TransportTimelineSignal, t.Signal),
                (t.TransportTimelineSignal.prototype._onTick = function(e) {
                  var n = this.getValueAtTime(t.Transport.seconds);
                  this._lastVal !== n &&
                    ((this._lastVal = n),
                    this._outputSig.linearRampToValueAtTime(n, e));
                }),
                (t.TransportTimelineSignal.prototype._anchorValue = function(
                  e
                ) {
                  var n = this.getValueAtTime(t.Transport.seconds);
                  return (
                    (this._lastVal = n),
                    this._outputSig.cancelScheduledValues(e),
                    this._outputSig.setValueAtTime(n, e),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.getValueAtTime = function(
                  e
                ) {
                  return (
                    (e = t.TransportTime(e)),
                    t.Signal.prototype.getValueAtTime.call(this, e)
                  );
                }),
                (t.TransportTimelineSignal.prototype.setValueAtTime = function(
                  e,
                  n
                ) {
                  return (
                    (n = t.TransportTime(n)),
                    t.Signal.prototype.setValueAtTime.call(this, e, n),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.linearRampToValueAtTime = function(
                  e,
                  n
                ) {
                  return (
                    (n = t.TransportTime(n)),
                    t.Signal.prototype.linearRampToValueAtTime.call(this, e, n),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function(
                  e,
                  n
                ) {
                  return (
                    (n = t.TransportTime(n)),
                    t.Signal.prototype.exponentialRampToValueAtTime.call(
                      this,
                      e,
                      n
                    ),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.setTargetAtTime = function(
                  e,
                  n,
                  r
                ) {
                  return (
                    (n = t.TransportTime(n)),
                    t.Signal.prototype.setTargetAtTime.call(this, e, n, r),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.cancelScheduledValues = function(
                  e
                ) {
                  return (
                    (e = t.TransportTime(e)),
                    t.Signal.prototype.cancelScheduledValues.call(this, e),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.setValueCurveAtTime = function(
                  e,
                  n,
                  r,
                  i
                ) {
                  return (
                    (n = t.TransportTime(n)),
                    (r = t.TransportTime(r)),
                    t.Signal.prototype.setValueCurveAtTime.call(
                      this,
                      e,
                      n,
                      r,
                      i
                    ),
                    this
                  );
                }),
                (t.TransportTimelineSignal.prototype.cancelAndHoldAtTime = function(
                  e
                ) {
                  return t.Signal.prototype.cancelAndHoldAtTime.call(
                    this,
                    t.TransportTime(e)
                  );
                }),
                (t.TransportTimelineSignal.prototype.dispose = function() {
                  t.Transport.clear(this._synced),
                    t.Transport.off("start stop pause", this._syncedCallback),
                    this._events.cancel(0),
                    t.Signal.prototype.dispose.call(this),
                    this._outputSig.dispose(),
                    (this._outputSig = null);
                }),
                t.TransportTimelineSignal
              );
            }),
            n(function(t) {
              return (
                (t.GrainPlayer = function() {
                  var e = t.defaults(
                    arguments,
                    ["url", "onload"],
                    t.GrainPlayer
                  );
                  t.Source.call(this, e),
                    (this.buffer = new t.Buffer(e.url, e.onload)),
                    (this._clock = new t.Clock(
                      this._tick.bind(this),
                      e.grainSize
                    )),
                    (this._loopStart = 0),
                    (this._loopEnd = 0),
                    (this._activeSources = []),
                    (this._playbackRate = e.playbackRate),
                    (this._grainSize = e.grainSize),
                    (this._overlap = e.overlap),
                    (this.detune = e.detune),
                    (this.overlap = e.overlap),
                    (this.loop = e.loop),
                    (this.playbackRate = e.playbackRate),
                    (this.grainSize = e.grainSize),
                    (this.loopStart = e.loopStart),
                    (this.loopEnd = e.loopEnd),
                    (this.reverse = e.reverse),
                    this._clock.on("stop", this._onstop.bind(this));
                }),
                t.extend(t.GrainPlayer, t.Source),
                (t.GrainPlayer.defaults = {
                  onload: t.noOp,
                  overlap: 0.1,
                  grainSize: 0.2,
                  playbackRate: 1,
                  detune: 0,
                  loop: !1,
                  loopStart: 0,
                  loopEnd: 0,
                  reverse: !1
                }),
                (t.GrainPlayer.prototype._start = function(e, n, r) {
                  (n = t.defaultArg(n, 0)),
                    (n = this.toSeconds(n)),
                    (e = this.toSeconds(e)),
                    (this._offset = n),
                    this._clock.start(e),
                    r && this.stop(e + this.toSeconds(r));
                }),
                (t.GrainPlayer.prototype._stop = function(t) {
                  this._clock.stop(t);
                }),
                (t.GrainPlayer.prototype._onstop = function(t) {
                  this._activeSources.forEach(function(e) {
                    e.stop(t, 0);
                  });
                }),
                (t.GrainPlayer.prototype._tick = function(e) {
                  var n = this._offset < this._overlap ? 0 : this._overlap,
                    r = new t.BufferSource({
                      buffer: this.buffer,
                      fadeIn: n,
                      fadeOut: this._overlap,
                      loop: this.loop,
                      loopStart: this._loopStart,
                      loopEnd: this._loopEnd,
                      playbackRate: t.intervalToFrequencyRatio(
                        this.detune / 100
                      )
                    }).connect(this.output);
                  r.start(e, this._offset),
                    (this._offset += this.grainSize),
                    r.stop(e + this.grainSize),
                    this._activeSources.push(r),
                    (r.onended = function() {
                      var t = this._activeSources.indexOf(r);
                      -1 !== t && this._activeSources.splice(t, 1);
                    }.bind(this));
                }),
                (t.GrainPlayer.prototype.seek = function(t, e) {
                  return (
                    (this._offset = this.toSeconds(t)),
                    this._tick(this.toSeconds(e)),
                    this
                  );
                }),
                Object.defineProperty(t.GrainPlayer.prototype, "playbackRate", {
                  get: function() {
                    return this._playbackRate;
                  },
                  set: function(t) {
                    (this._playbackRate = t),
                      (this.grainSize = this._grainSize);
                  }
                }),
                Object.defineProperty(t.GrainPlayer.prototype, "loopStart", {
                  get: function() {
                    return this._loopStart;
                  },
                  set: function(t) {
                    this._loopStart = this.toSeconds(t);
                  }
                }),
                Object.defineProperty(t.GrainPlayer.prototype, "loopEnd", {
                  get: function() {
                    return this._loopEnd;
                  },
                  set: function(t) {
                    this._loopEnd = this.toSeconds(t);
                  }
                }),
                Object.defineProperty(t.GrainPlayer.prototype, "reverse", {
                  get: function() {
                    return this.buffer.reverse;
                  },
                  set: function(t) {
                    this.buffer.reverse = t;
                  }
                }),
                Object.defineProperty(t.GrainPlayer.prototype, "grainSize", {
                  get: function() {
                    return this._grainSize;
                  },
                  set: function(t) {
                    (this._grainSize = this.toSeconds(t)),
                      (this._clock.frequency.value =
                        this._playbackRate / this._grainSize);
                  }
                }),
                Object.defineProperty(t.GrainPlayer.prototype, "overlap", {
                  get: function() {
                    return this._overlap;
                  },
                  set: function(t) {
                    this._overlap = this.toSeconds(t);
                  }
                }),
                (t.GrainPlayer.prototype.dispose = function() {
                  return (
                    t.Source.prototype.dispose.call(this),
                    this.buffer.dispose(),
                    (this.buffer = null),
                    this._clock.dispose(),
                    (this._clock = null),
                    this._activeSources.forEach(function(t) {
                      t.dispose();
                    }),
                    (this._activeSources = null),
                    this
                  );
                }),
                t.GrainPlayer
              );
            }),
            n(function(t) {
              return (
                (t.Player = function(e) {
                  var n;
                  e instanceof t.Buffer && e.loaded
                    ? ((e = e.get()), (n = t.Player.defaults))
                    : (n = t.defaults(arguments, ["url", "onload"], t.Player)),
                    t.Source.call(this, n),
                    (this.autostart = n.autostart),
                    (this._buffer = new t.Buffer({
                      url: n.url,
                      onload: this._onload.bind(this, n.onload),
                      reverse: n.reverse
                    })),
                    e instanceof AudioBuffer && this._buffer.set(e),
                    (this._loop = n.loop),
                    (this._loopStart = n.loopStart),
                    (this._loopEnd = n.loopEnd),
                    (this._playbackRate = n.playbackRate),
                    (this._activeSources = []),
                    (this._elapsedTime = new t.TickSource(n.playbackRate)),
                    (this.fadeIn = n.fadeIn),
                    (this.fadeOut = n.fadeOut);
                }),
                t.extend(t.Player, t.Source),
                (t.Player.defaults = {
                  onload: t.noOp,
                  playbackRate: 1,
                  loop: !1,
                  autostart: !1,
                  loopStart: 0,
                  loopEnd: 0,
                  retrigger: !1,
                  reverse: !1,
                  fadeIn: 0,
                  fadeOut: 0
                }),
                (t.Player.prototype.load = function(t, e) {
                  return this._buffer.load(t, this._onload.bind(this, e));
                }),
                (t.Player.prototype._onload = function(e) {
                  (e = t.defaultArg(e, t.noOp))(this),
                    this.autostart && this.start();
                }),
                (t.Player.prototype._onSourceEnd = function(t) {
                  var e = this._activeSources.indexOf(t);
                  this._activeSources.splice(e, 1);
                }),
                (t.Player.prototype._start = function(e, n, r) {
                  (n = this._loop
                    ? t.defaultArg(n, this._loopStart)
                    : t.defaultArg(n, 0)),
                    (n = this.toSeconds(n));
                  var i = t.defaultArg(
                    r,
                    Math.max(this._buffer.duration - n, 0)
                  );
                  (i = this.toSeconds(i)),
                    (e = this.toSeconds(e)),
                    this._elapsedTime.start(e, n);
                  var o = new t.BufferSource({
                    buffer: this._buffer,
                    loop: this._loop,
                    loopStart: this._loopStart,
                    loopEnd: this._loopEnd,
                    onended: this._onSourceEnd.bind(this),
                    playbackRate: this._playbackRate,
                    fadeIn: this.fadeIn,
                    fadeOut: this.fadeOut
                  }).connect(this.output);
                  return (
                    this._loop ||
                      this._synced ||
                      this._state.setStateAtTime(
                        t.State.Stopped,
                        e + i / this._playbackRate
                      ),
                    this._activeSources.push(o),
                    this._loop && t.isUndef(r)
                      ? o.start(e, n)
                      : o.start(e, n, i),
                    this
                  );
                }),
                (t.Player.prototype._stop = function(t) {
                  return (
                    (t = this.toSeconds(t)),
                    this._elapsedTime.stop(t),
                    this._activeSources.forEach(function(e) {
                      e.stop(t);
                    }),
                    this
                  );
                }),
                (t.Player.prototype.restart = function(t, e, n) {
                  return this._stop(t), this._start(t, e, n), this;
                }),
                (t.Player.prototype.seek = function(e, n) {
                  return (
                    (n = this.toSeconds(n)),
                    this._state.getValueAtTime(n) === t.State.Started &&
                      ((e = this.toSeconds(e)),
                      this._stop(n),
                      this._start(n, e)),
                    this
                  );
                }),
                (t.Player.prototype.setLoopPoints = function(t, e) {
                  return (this.loopStart = t), (this.loopEnd = e), this;
                }),
                Object.defineProperty(t.Player.prototype, "loopStart", {
                  get: function() {
                    return this._loopStart;
                  },
                  set: function(t) {
                    (this._loopStart = t),
                      this._activeSources.forEach(function(e) {
                        e.loopStart = t;
                      });
                  }
                }),
                Object.defineProperty(t.Player.prototype, "loopEnd", {
                  get: function() {
                    return this._loopEnd;
                  },
                  set: function(t) {
                    (this._loopEnd = t),
                      this._activeSources.forEach(function(e) {
                        e.loopEnd = t;
                      });
                  }
                }),
                Object.defineProperty(t.Player.prototype, "buffer", {
                  get: function() {
                    return this._buffer;
                  },
                  set: function(t) {
                    this._buffer.set(t);
                  }
                }),
                Object.defineProperty(t.Player.prototype, "loop", {
                  get: function() {
                    return this._loop;
                  },
                  set: function(e) {
                    if (this._loop !== e) {
                      this._loop = e;
                      var n = this.now();
                      if (e) {
                        var r = this._state.getNextState(t.State.Stopped, n);
                        r &&
                          (this._activeSources.forEach(function(t) {
                            t.loop = e;
                          }),
                          this._state.cancel(r.time),
                          this._elapsedTime.cancel(r.time));
                      } else this._stopAtNextIteration(n);
                    }
                  }
                }),
                (t.Player.prototype._stopAtNextIteration = function(e) {
                  if (this._state.getValueAtTime(e) === t.State.Started) {
                    var n = this._state.getNextState(t.State.Stopped, e),
                      r = this._elapsedTime.getTicksAtTime(e),
                      i = Math.max(Math.ceil(r / this.buffer.duration), 1),
                      o = this._elapsedTime.getTimeOfTick(
                        i * this.buffer.duration,
                        n ? n.time - this.sampleTime : 1 / 0
                      );
                    this.stop(o);
                  }
                }),
                Object.defineProperty(t.Player.prototype, "playbackRate", {
                  get: function() {
                    return this._playbackRate;
                  },
                  set: function(t) {
                    this._playbackRate = t;
                    var e = this.now();
                    this._elapsedTime.frequency.setValueAtTime(t, e),
                      this._loop || this._stopAtNextIteration(e),
                      this._activeSources.forEach(function(n) {
                        n.playbackRate.setValueAtTime(t, e);
                      });
                  }
                }),
                Object.defineProperty(t.Player.prototype, "position", {
                  get: function() {
                    var e = this.now();
                    if (
                      this._state.getValueAtTime(e) === t.State.Started &&
                      this.loaded
                    ) {
                      var n = this.buffer.duration;
                      return this._elapsedTime.getTicksAtTime(e) % n;
                    }
                    return 0;
                  }
                }),
                Object.defineProperty(t.Player.prototype, "reverse", {
                  get: function() {
                    return this._buffer.reverse;
                  },
                  set: function(t) {
                    this._buffer.reverse = t;
                  }
                }),
                Object.defineProperty(t.Player.prototype, "loaded", {
                  get: function() {
                    return this._buffer.loaded;
                  }
                }),
                (t.Player.prototype.dispose = function() {
                  return (
                    this._activeSources.forEach(function(t) {
                      t.dispose();
                    }),
                    (this._activeSources = null),
                    t.Source.prototype.dispose.call(this),
                    this._buffer.dispose(),
                    (this._buffer = null),
                    this._elapsedTime.dispose(),
                    (this._elapsedTime = null),
                    this
                  );
                }),
                t.Player
              );
            }),
            n(function(t) {
              return (
                (t.Players = function(e) {
                  var n = Array.prototype.slice.call(arguments);
                  n.shift();
                  var r = t.defaults(n, ["onload"], t.Players);
                  for (var i in (t.call(this),
                  (this._volume = this.output = new t.Volume(r.volume)),
                  (this.volume = this._volume.volume),
                  this._readOnly("volume"),
                  (this._volume.output.output.channelCount = 2),
                  (this._volume.output.output.channelCountMode = "explicit"),
                  (this.mute = r.mute),
                  (this._players = {}),
                  (this._loadingCount = 0),
                  (this._fadeIn = r.fadeIn),
                  (this._fadeOut = r.fadeOut),
                  e))
                    this._loadingCount++,
                      this.add(
                        i,
                        e[i],
                        this._bufferLoaded.bind(this, r.onload)
                      );
                }),
                t.extend(t.Players, t.AudioNode),
                (t.Players.defaults = {
                  volume: 0,
                  mute: !1,
                  onload: t.noOp,
                  fadeIn: 0,
                  fadeOut: 0
                }),
                (t.Players.prototype._bufferLoaded = function(t) {
                  this._loadingCount--,
                    0 === this._loadingCount && t && t(this);
                }),
                Object.defineProperty(t.Players.prototype, "mute", {
                  get: function() {
                    return this._volume.mute;
                  },
                  set: function(t) {
                    this._volume.mute = t;
                  }
                }),
                Object.defineProperty(t.Players.prototype, "fadeIn", {
                  get: function() {
                    return this._fadeIn;
                  },
                  set: function(t) {
                    (this._fadeIn = t),
                      this._forEach(function(e) {
                        e.fadeIn = t;
                      });
                  }
                }),
                Object.defineProperty(t.Players.prototype, "fadeOut", {
                  get: function() {
                    return this._fadeOut;
                  },
                  set: function(t) {
                    (this._fadeOut = t),
                      this._forEach(function(e) {
                        e.fadeOut = t;
                      });
                  }
                }),
                Object.defineProperty(t.Players.prototype, "state", {
                  get: function() {
                    var e = !1;
                    return (
                      this._forEach(function(n) {
                        e = e || n.state === t.State.Started;
                      }),
                      e ? t.State.Started : t.State.Stopped
                    );
                  }
                }),
                (t.Players.prototype.has = function(t) {
                  return this._players.hasOwnProperty(t);
                }),
                (t.Players.prototype.get = function(t) {
                  if (this.has(t)) return this._players[t];
                  throw new Error("Tone.Players: no player named " + t);
                }),
                (t.Players.prototype._forEach = function(t) {
                  for (var e in this._players) t(this._players[e], e);
                  return this;
                }),
                Object.defineProperty(t.Players.prototype, "loaded", {
                  get: function() {
                    var t = !0;
                    return (
                      this._forEach(function(e) {
                        t = t && e.loaded;
                      }),
                      t
                    );
                  }
                }),
                (t.Players.prototype.add = function(e, n, r) {
                  return (
                    (this._players[e] = new t.Player(n, r).connect(
                      this.output
                    )),
                    (this._players[e].fadeIn = this._fadeIn),
                    (this._players[e].fadeOut = this._fadeOut),
                    this
                  );
                }),
                (t.Players.prototype.stopAll = function(t) {
                  this._forEach(function(e) {
                    e.stop(t);
                  });
                }),
                (t.Players.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this._volume.dispose(),
                    (this._volume = null),
                    this._writable("volume"),
                    (this.volume = null),
                    (this.output = null),
                    this._forEach(function(t) {
                      t.dispose();
                    }),
                    (this._players = null),
                    this
                  );
                }),
                t.Players
              );
            }),
            n(function(t) {
              return (
                (t.UserMedia = function() {
                  var e = t.defaults(arguments, ["volume"], t.UserMedia);
                  t.AudioNode.call(this),
                    (this._mediaStream = null),
                    (this._stream = null),
                    (this._device = null),
                    (this._volume = this.output = new t.Volume(e.volume)),
                    (this.volume = this._volume.volume),
                    this._readOnly("volume"),
                    (this.mute = e.mute);
                }),
                t.extend(t.UserMedia, t.AudioNode),
                (t.UserMedia.defaults = { volume: 0, mute: !1 }),
                (t.UserMedia.prototype.open = function(e) {
                  return t.UserMedia.enumerateDevices().then(
                    function(n) {
                      var r;
                      if (t.isNumber(e)) r = n[e];
                      else if (
                        !(r = n.find(function(t) {
                          return t.label === e || t.deviceId === e;
                        })) &&
                        n.length > 0
                      )
                        r = n[0];
                      else if (!r && t.isDefined(e))
                        throw new Error(
                          "Tone.UserMedia: no matching device: " + e
                        );
                      this._device = r;
                      var i = {
                        audio: {
                          echoCancellation: !1,
                          sampleRate: this.context.sampleRate
                        }
                      };
                      return (
                        r && (i.audio.deviceId = r.deviceId),
                        navigator.mediaDevices.getUserMedia(i).then(
                          function(t) {
                            return (
                              this._stream ||
                                ((this._stream = t),
                                (this._mediaStream = this.context.createMediaStreamSource(
                                  t
                                )),
                                this._mediaStream.connect(this.output)),
                              this
                            );
                          }.bind(this)
                        )
                      );
                    }.bind(this)
                  );
                }),
                (t.UserMedia.prototype.close = function() {
                  return (
                    this._stream &&
                      (this._stream.getAudioTracks().forEach(function(t) {
                        t.stop();
                      }),
                      (this._stream = null),
                      this._mediaStream.disconnect(),
                      (this._mediaStream = null)),
                    (this._device = null),
                    this
                  );
                }),
                (t.UserMedia.enumerateDevices = function() {
                  return navigator.mediaDevices
                    .enumerateDevices()
                    .then(function(t) {
                      return t.filter(function(t) {
                        return "audioinput" === t.kind;
                      });
                    });
                }),
                Object.defineProperty(t.UserMedia.prototype, "state", {
                  get: function() {
                    return this._stream && this._stream.active
                      ? t.State.Started
                      : t.State.Stopped;
                  }
                }),
                Object.defineProperty(t.UserMedia.prototype, "deviceId", {
                  get: function() {
                    if (this._device) return this._device.deviceId;
                  }
                }),
                Object.defineProperty(t.UserMedia.prototype, "groupId", {
                  get: function() {
                    if (this._device) return this._device.groupId;
                  }
                }),
                Object.defineProperty(t.UserMedia.prototype, "label", {
                  get: function() {
                    if (this._device) return this._device.label;
                  }
                }),
                Object.defineProperty(t.UserMedia.prototype, "mute", {
                  get: function() {
                    return this._volume.mute;
                  },
                  set: function(t) {
                    this._volume.mute = t;
                  }
                }),
                (t.UserMedia.prototype.dispose = function() {
                  return (
                    t.AudioNode.prototype.dispose.call(this),
                    this.close(),
                    this._writable("volume"),
                    this._volume.dispose(),
                    (this._volume = null),
                    (this.volume = null),
                    this
                  );
                }),
                Object.defineProperty(t.UserMedia, "supported", {
                  get: function() {
                    return (
                      t.isDefined(navigator.mediaDevices) &&
                      t.isFunction(navigator.mediaDevices.getUserMedia)
                    );
                  }
                }),
                t.UserMedia
              );
            }),
            n(function(t) {
              return (
                (t.Midi = function(e, n) {
                  if (!(this instanceof t.Midi)) return new t.Midi(e, n);
                  t.Frequency.call(this, e, n);
                }),
                t.extend(t.Midi, t.Frequency),
                (t.Midi.prototype._defaultUnits = "midi"),
                (t.Midi.prototype._frequencyToUnits = function(e) {
                  return t.Frequency.ftom(
                    t.Frequency.prototype._frequencyToUnits.call(this, e)
                  );
                }),
                (t.Midi.prototype._ticksToUnits = function(e) {
                  return t.Frequency.ftom(
                    t.Frequency.prototype._ticksToUnits.call(this, e)
                  );
                }),
                (t.Midi.prototype._beatsToUnits = function(e) {
                  return t.Frequency.ftom(
                    t.Frequency.prototype._beatsToUnits.call(this, e)
                  );
                }),
                (t.Midi.prototype._secondsToUnits = function(e) {
                  return t.Frequency.ftom(
                    t.Frequency.prototype._secondsToUnits.call(this, e)
                  );
                }),
                (t.Midi.prototype.toMidi = function() {
                  return this.valueOf();
                }),
                (t.Midi.prototype.toFrequency = function() {
                  return t.Frequency.mtof(this.toMidi());
                }),
                (t.Midi.prototype.transpose = function(t) {
                  return new this.constructor(this.toMidi() + t);
                }),
                t.Midi
              );
            }),
            t
          );
        })();
      }.call(e, n, e, t)) || (t.exports = r);
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(98),
      a = n(53),
      s = n(230),
      u = n(16),
      c = 16e3,
      l = window,
      h = l.webkitOfflineAudioContext,
      f = h
        ? new l.webkitOfflineAudioContext(1, 44100, 44100)
        : new l.OfflineAudioContext(1, c, c);
    function p(t) {
      if (1 === t.numberOfChannels) return t.getChannelData(0);
      if (2 !== t.numberOfChannels)
        throw Error(t.numberOfChannels + " channel audio is not supported.");
      for (
        var e = t.getChannelData(0),
          n = t.getChannelData(1),
          r = new Float32Array(t.length),
          i = 0;
        i < t.length;
        ++i
      )
        r[i] = (e[i] + n[i]) / 2;
      return r;
    }
    function d(t, e) {
      if (t.length !== e[0].length)
        throw new Error(
          "Each entry in filterbank should have dimensions matching FFT. |mags| = " +
            t.length +
            ", |filterbank[0]| = " +
            e[0].length +
            "."
        );
      for (var n = new Float32Array(e.length), r = 0; r < e.length; r++) {
        var i = m(t, e[r]);
        n[r] = i.reduce(function(t, e) {
          return t + e;
        });
      }
      return n;
    }
    function m(t, e) {
      if (t.length !== e.length)
        return (
          console.error(
            "Buffer length " + t.length + " != window length " + e.length + "."
          ),
          null
        );
      for (var n = new Float32Array(t.length), r = 0; r < t.length; r++)
        n[r] = e[r] * t[r];
      return n;
    }
    function y(t, e) {
      if (t.length > e) throw new Error("Data is longer than length.");
      var n = Math.floor((e - t.length) / 2);
      return g(t, [n, e - t.length - n]);
    }
    function g(t, e) {
      var n, r;
      "object" == typeof e ? ((n = e[0]), (r = e[1])) : (n = r = e);
      var i = new Float32Array(t.length + n + r);
      return i.set(t, n), i;
    }
    function v(t, e, n) {
      for (
        var r = Math.floor((t.length - e) / n) + 1,
          i = Array.from({ length: r }, function(t, n) {
            return new Float32Array(e);
          }),
          o = 0;
        o < r;
        o++
      ) {
        var a = o * n,
          s = t.slice(a, a + e);
        i[o].set(s), s.length;
      }
      return i;
    }
    function b(t) {
      var e = new o(t.length),
        n = e.createComplexArray(),
        r = e.toComplexArray(t);
      return e.transform(n, r), n;
    }
    function w(t) {
      for (var e = new Float32Array(t), n = 0; n < t; n++)
        e[n] = 0.5 * (1 - Math.cos((2 * Math.PI * n) / (t - 1)));
      return e;
    }
    function _(t, e, n) {
      for (
        var r = (e - t) / (n - 1), i = new Float32Array(n), o = 0;
        o < n;
        o++
      )
        i[o] = t + r * o;
      return i;
    }
    function S(t) {
      return 1125 * Math.log(1 + t / 700);
    }
    (e.loadAudioFromUrl = function(t) {
      return r(this, void 0, void 0, function() {
        return i(this, function(e) {
          return [
            2,
            fetch(t)
              .then(function(t) {
                return t.arrayBuffer();
              })
              .then(function(t) {
                return f.decodeAudioData(t);
              })
          ];
        });
      });
    }),
      (e.loadAudioFromFile = function(t) {
        return r(this, void 0, void 0, function() {
          var e;
          return i(this, function(n) {
            return (
              (e = new FileReader()),
              [
                2,
                new Promise(function(n, r) {
                  (e.onerror = function() {
                    e.abort(),
                      r(
                        new DOMException(
                          "Something went wrong reading that file."
                        )
                      );
                  }),
                    (e.onload = function() {
                      n(e.result);
                    }),
                    e.readAsArrayBuffer(t);
                }).then(function(t) {
                  return f.decodeAudioData(t);
                })
              ]
            );
          });
        });
      }),
      (e.melSpectrogram = function(t, e) {
        e.power || (e.power = 2);
        var n = (function(t, e) {
            var n = t.map(function(t) {
                return (function(t, e) {
                  return t.map(function(t) {
                    return Math.pow(t, e);
                  });
                })(
                  (function(t) {
                    for (
                      var e = new Float32Array(t.length / 2), n = 0;
                      n < t.length / 2;
                      n++
                    )
                      e[n] = Math.sqrt(
                        t[2 * n] * t[2 * n] + t[2 * n + 1] * t[2 * n + 1]
                      );
                    return e;
                  })(t),
                  e
                );
              }),
              r = t[0].length - 1;
            return [n, r];
          })(
            (function(t, e) {
              var n = e.nFft || 2048,
                r = e.winLength || n,
                i = e.hopLength || Math.floor(r / 4),
                o = w(r);
              o = y(o, n);
              for (
                var a = v(
                    (t = (function(t, e) {
                      for (var n = g(t, e), r = 0; r < e; r++)
                        (n[r] = n[2 * e - r]),
                          (n[n.length - r - 1] = n[n.length - 2 * e + r - 1]);
                      return n;
                    })(t, Math.floor(n / 2))),
                    n,
                    i
                  ),
                  s = [],
                  u = a.length,
                  c = n + 2,
                  l = 0;
                l < u;
                l++
              ) {
                var h = new Float32Array(c);
                s[l] = h;
              }
              for (var l = 0; l < u; l++) {
                var f = m(a[l], o),
                  h = b(f);
                s[l].set(h.slice(0, c));
              }
              return s;
            })(t, e),
            e.power
          ),
          r = n[0],
          i = n[1];
        return (
          (e.nFft = i),
          (function(t, e) {
            for (var n = [], r = 0; r < t.length; r++) n[r] = d(t[r], e);
            return n;
          })(
            r,
            (function(t) {
              for (
                var e = t.fMin || 0,
                  n = t.fMax || t.sampleRate / 2,
                  r = t.nMels || 128,
                  i = t.nFft || 2048,
                  o = (function(t, e) {
                    return _(0, t / 2, Math.floor(1 + e / 2));
                  })(t.sampleRate, i),
                  a = (function(t, e, n) {
                    var r = S(e),
                      i = S(n);
                    return _(r, i, t).map(function(t) {
                      return (function(t) {
                        return 700 * (Math.exp(t / 1125) - 1);
                      })(t);
                    });
                  })(r + 2, e, n),
                  s = (function(t) {
                    for (
                      var e = new Float32Array(t.length - 1), n = 0;
                      n < t.length;
                      n++
                    )
                      e[n] = t[n + 1] - t[n];
                    return e;
                  })(a),
                  u = (function(t, e) {
                    for (var n = [], r = 0; r < t.length; r++)
                      n[r] = new Float32Array(e.length);
                    for (var r = 0; r < t.length; r++)
                      for (var i = 0; i < e.length; i++) n[r][i] = t[r] - e[i];
                    return n;
                  })(a, o),
                  c = u[0].length,
                  l = [],
                  h = 0;
                h < r;
                h++
              ) {
                l[h] = new Float32Array(c);
                for (var f = 0; f < u[h].length; f++) {
                  var p = -u[h][f] / s[h],
                    d = u[h + 2][f] / s[h + 1],
                    m = Math.max(0, Math.min(p, d));
                  l[h][f] = m;
                }
              }
              for (
                var y = function(t) {
                    var e = 2 / (a[2 + t] - a[t]);
                    l[t] = l[t].map(function(t) {
                      return t * e;
                    });
                  },
                  h = 0;
                h < l.length;
                h++
              )
                y(h);
              return l;
            })(e)
          )
        );
      }),
      (e.powerToDb = function(t, e, n) {
        void 0 === e && (e = 1e-10), void 0 === n && (n = 80);
        for (var r = t.length, i = t[0].length, o = [], a = 0; a < r; a++)
          o[a] = new Float32Array(i);
        for (a = 0; a < r; a++)
          for (var s = 0; s < i; s++) {
            var u = t[a][s];
            o[a][s] = 10 * Math.log10(Math.max(e, u));
          }
        if (n) {
          if (n < 0) throw new Error("topDb must be non-negative.");
          for (a = 0; a < r; a++) {
            var c = o[a].reduce(function(t, e) {
              return Math.max(t, e);
            });
            for (s = 0; s < i; s++) o[a][s] = Math.max(o[a][s], c - n);
          }
        }
        return o;
      }),
      (e.resampleAndMakeMono = function(t, e) {
        return (
          void 0 === e && (e = c),
          r(this, void 0, void 0, function() {
            var n, r, o, c, l;
            return i(this, function(i) {
              return t.sampleRate === e
                ? [2, p(t)]
                : ((n = t.sampleRate),
                  (r = (t.length * e) / n),
                  h
                    ? (u.log(
                        "Safari does not support WebAudio resampling, so this may be slow.",
                        "O&F",
                        5
                      ),
                      (c = p(t)),
                      (l = new Float32Array(r)),
                      s(a(l, [r]), a(c, [c.length])),
                      [2, l])
                    : (((o = f.createBufferSource()).buffer = t),
                      o.connect(f.destination),
                      o.start(),
                      [
                        2,
                        f.startRendering().then(function(t) {
                          return t.getChannelData(0);
                        })
                      ]));
            });
          })
        );
      }),
      (e.applyWindow = m),
      (e.padCenterToLength = y),
      (e.padConstant = g),
      (e.frame = v),
      (e.hannWindow = w);
  },
  function(t, e, n) {
    var r = n(228),
      i = n(229),
      o = "undefined" != typeof Float64Array;
    function a(t, e) {
      return t[0] - e[0];
    }
    function s() {
      var t,
        e = this.stride,
        n = new Array(e.length);
      for (t = 0; t < n.length; ++t) n[t] = [Math.abs(e[t]), t];
      n.sort(a);
      var r = new Array(n.length);
      for (t = 0; t < r.length; ++t) r[t] = n[t][1];
      return r;
    }
    function u(t, e) {
      var n = ["View", e, "d", t].join("");
      e < 0 && (n = "View_Nil" + t);
      var i = "generic" === t;
      if (-1 === e) {
        var o =
          "function " +
          n +
          "(a){this.data=a;};var proto=" +
          n +
          ".prototype;proto.dtype='" +
          t +
          "';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new " +
          n +
          "(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_" +
          n +
          "(a){return new " +
          n +
          "(a);}";
        return new Function(o)();
      }
      if (0 === e) {
        o =
          "function " +
          n +
          "(a,d) {this.data = a;this.offset = d};var proto=" +
          n +
          ".prototype;proto.dtype='" +
          t +
          "';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function " +
          n +
          "_copy() {return new " +
          n +
          "(this.data,this.offset)};proto.pick=function " +
          n +
          "_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function " +
          n +
          "_get(){return " +
          (i ? "this.data.get(this.offset)" : "this.data[this.offset]") +
          "};proto.set=function " +
          n +
          "_set(v){return " +
          (i ? "this.data.set(this.offset,v)" : "this.data[this.offset]=v") +
          "};return function construct_" +
          n +
          "(a,b,c,d){return new " +
          n +
          "(a,d)}";
        return new Function("TrivialArray", o)(c[t][0]);
      }
      o = ["'use strict'"];
      var a = r(e),
        u = a.map(function(t) {
          return "i" + t;
        }),
        l =
          "this.offset+" +
          a
            .map(function(t) {
              return "this.stride[" + t + "]*i" + t;
            })
            .join("+"),
        h = a
          .map(function(t) {
            return "b" + t;
          })
          .join(","),
        f = a
          .map(function(t) {
            return "c" + t;
          })
          .join(",");
      o.push(
        "function " + n + "(a," + h + "," + f + ",d){this.data=a",
        "this.shape=[" + h + "]",
        "this.stride=[" + f + "]",
        "this.offset=d|0}",
        "var proto=" + n + ".prototype",
        "proto.dtype='" + t + "'",
        "proto.dimension=" + e
      ),
        o.push(
          "Object.defineProperty(proto,'size',{get:function " +
            n +
            "_size(){return " +
            a
              .map(function(t) {
                return "this.shape[" + t + "]";
              })
              .join("*"),
          "}})"
        ),
        1 === e
          ? o.push("proto.order=[0]")
          : (o.push("Object.defineProperty(proto,'order',{get:"),
            e < 4
              ? (o.push("function " + n + "_order(){"),
                2 === e
                  ? o.push(
                      "return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"
                    )
                  : 3 === e &&
                    o.push(
                      "var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})"
                    ))
              : o.push("ORDER})")),
        o.push("proto.set=function " + n + "_set(" + u.join(",") + ",v){"),
        i
          ? o.push("return this.data.set(" + l + ",v)}")
          : o.push("return this.data[" + l + "]=v}"),
        o.push("proto.get=function " + n + "_get(" + u.join(",") + "){"),
        i
          ? o.push("return this.data.get(" + l + ")}")
          : o.push("return this.data[" + l + "]}"),
        o.push(
          "proto.index=function " + n + "_index(",
          u.join(),
          "){return " + l + "}"
        ),
        o.push(
          "proto.hi=function " +
            n +
            "_hi(" +
            u.join(",") +
            "){return new " +
            n +
            "(this.data," +
            a
              .map(function(t) {
                return [
                  "(typeof i",
                  t,
                  "!=='number'||i",
                  t,
                  "<0)?this.shape[",
                  t,
                  "]:i",
                  t,
                  "|0"
                ].join("");
              })
              .join(",") +
            "," +
            a
              .map(function(t) {
                return "this.stride[" + t + "]";
              })
              .join(",") +
            ",this.offset)}"
        );
      var p = a.map(function(t) {
          return "a" + t + "=this.shape[" + t + "]";
        }),
        d = a.map(function(t) {
          return "c" + t + "=this.stride[" + t + "]";
        });
      o.push(
        "proto.lo=function " +
          n +
          "_lo(" +
          u.join(",") +
          "){var b=this.offset,d=0," +
          p.join(",") +
          "," +
          d.join(",")
      );
      for (var m = 0; m < e; ++m)
        o.push(
          "if(typeof i" +
            m +
            "==='number'&&i" +
            m +
            ">=0){d=i" +
            m +
            "|0;b+=c" +
            m +
            "*d;a" +
            m +
            "-=d}"
        );
      o.push(
        "return new " +
          n +
          "(this.data," +
          a
            .map(function(t) {
              return "a" + t;
            })
            .join(",") +
          "," +
          a
            .map(function(t) {
              return "c" + t;
            })
            .join(",") +
          ",b)}"
      ),
        o.push(
          "proto.step=function " +
            n +
            "_step(" +
            u.join(",") +
            "){var " +
            a
              .map(function(t) {
                return "a" + t + "=this.shape[" + t + "]";
              })
              .join(",") +
            "," +
            a
              .map(function(t) {
                return "b" + t + "=this.stride[" + t + "]";
              })
              .join(",") +
            ",c=this.offset,d=0,ceil=Math.ceil"
        );
      for (m = 0; m < e; ++m)
        o.push(
          "if(typeof i" +
            m +
            "==='number'){d=i" +
            m +
            "|0;if(d<0){c+=b" +
            m +
            "*(a" +
            m +
            "-1);a" +
            m +
            "=ceil(-a" +
            m +
            "/d)}else{a" +
            m +
            "=ceil(a" +
            m +
            "/d)}b" +
            m +
            "*=d}"
        );
      o.push(
        "return new " +
          n +
          "(this.data," +
          a
            .map(function(t) {
              return "a" + t;
            })
            .join(",") +
          "," +
          a
            .map(function(t) {
              return "b" + t;
            })
            .join(",") +
          ",c)}"
      );
      var y = new Array(e),
        g = new Array(e);
      for (m = 0; m < e; ++m)
        (y[m] = "a[i" + m + "]"), (g[m] = "b[i" + m + "]");
      o.push(
        "proto.transpose=function " +
          n +
          "_transpose(" +
          u +
          "){" +
          u
            .map(function(t, e) {
              return t + "=(" + t + "===undefined?" + e + ":" + t + "|0)";
            })
            .join(";"),
        "var a=this.shape,b=this.stride;return new " +
          n +
          "(this.data," +
          y.join(",") +
          "," +
          g.join(",") +
          ",this.offset)}"
      ),
        o.push(
          "proto.pick=function " +
            n +
            "_pick(" +
            u +
            "){var a=[],b=[],c=this.offset"
        );
      for (m = 0; m < e; ++m)
        o.push(
          "if(typeof i" +
            m +
            "==='number'&&i" +
            m +
            ">=0){c=(c+this.stride[" +
            m +
            "]*i" +
            m +
            ")|0}else{a.push(this.shape[" +
            m +
            "]);b.push(this.stride[" +
            m +
            "])}"
        );
      return (
        o.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),
        o.push(
          "return function construct_" +
            n +
            "(data,shape,stride,offset){return new " +
            n +
            "(data," +
            a
              .map(function(t) {
                return "shape[" + t + "]";
              })
              .join(",") +
            "," +
            a
              .map(function(t) {
                return "stride[" + t + "]";
              })
              .join(",") +
            ",offset)}"
        ),
        new Function("CTOR_LIST", "ORDER", o.join("\n"))(c[t], s)
      );
    }
    var c = {
      float32: [],
      float64: [],
      int8: [],
      int16: [],
      int32: [],
      uint8: [],
      uint16: [],
      uint32: [],
      array: [],
      uint8_clamped: [],
      buffer: [],
      generic: []
    };
    t.exports = function(t, e, n, r) {
      if (void 0 === t) return (0, c.array[0])([]);
      "number" == typeof t && (t = [t]), void 0 === e && (e = [t.length]);
      var a = e.length;
      if (void 0 === n) {
        n = new Array(a);
        for (var s = a - 1, l = 1; s >= 0; --s) (n[s] = l), (l *= e[s]);
      }
      if (void 0 === r)
        for (r = 0, s = 0; s < a; ++s) n[s] < 0 && (r -= (e[s] - 1) * n[s]);
      for (
        var h = (function(t) {
            if (i(t)) return "buffer";
            if (o)
              switch (Object.prototype.toString.call(t)) {
                case "[object Float64Array]":
                  return "float64";
                case "[object Float32Array]":
                  return "float32";
                case "[object Int8Array]":
                  return "int8";
                case "[object Int16Array]":
                  return "int16";
                case "[object Int32Array]":
                  return "int32";
                case "[object Uint8Array]":
                  return "uint8";
                case "[object Uint16Array]":
                  return "uint16";
                case "[object Uint32Array]":
                  return "uint32";
                case "[object Uint8ClampedArray]":
                  return "uint8_clamped";
              }
            return Array.isArray(t) ? "array" : "generic";
          })(t),
          f = c[h];
        f.length <= a + 1;

      )
        f.push(u(h, f.length - 1));
      return (0, f[a + 1])(t, e, n, r);
    };
  },
  function(t, e, n) {
    "use strict";
    var r = n(99),
      i = { body: "", args: [], thisVars: [], localVars: [] };
    function o(t) {
      if (!t) return i;
      for (var e = 0; e < t.args.length; ++e) {
        var n = t.args[e];
        t.args[e] =
          0 === e
            ? { name: n, lvalue: !0, rvalue: !!t.rvalue, count: t.count || 1 }
            : { name: n, lvalue: !1, rvalue: !0, count: 1 };
      }
      return (
        t.thisVars || (t.thisVars = []), t.localVars || (t.localVars = []), t
      );
    }
    function a(t) {
      for (var e = [], n = 0; n < t.args.length; ++n) e.push("a" + n);
      return new Function(
        "P",
        [
          "return function ",
          t.funcName,
          "_ndarrayops(",
          e.join(","),
          ") {P(",
          e.join(","),
          ");return a0}"
        ].join("")
      )(
        (function(t) {
          return r({
            args: t.args,
            pre: o(t.pre),
            body: o(t.body),
            post: o(t.proc),
            funcName: t.funcName
          });
        })(t)
      );
    }
    var s = {
      add: "+",
      sub: "-",
      mul: "*",
      div: "/",
      mod: "%",
      band: "&",
      bor: "|",
      bxor: "^",
      lshift: "<<",
      rshift: ">>",
      rrshift: ">>>"
    };
    !(function() {
      for (var t in s) {
        var n = s[t];
        (e[t] = a({
          args: ["array", "array", "array"],
          body: { args: ["a", "b", "c"], body: "a=b" + n + "c" },
          funcName: t
        })),
          (e[t + "eq"] = a({
            args: ["array", "array"],
            body: { args: ["a", "b"], body: "a" + n + "=b" },
            rvalue: !0,
            funcName: t + "eq"
          })),
          (e[t + "s"] = a({
            args: ["array", "array", "scalar"],
            body: { args: ["a", "b", "s"], body: "a=b" + n + "s" },
            funcName: t + "s"
          })),
          (e[t + "seq"] = a({
            args: ["array", "scalar"],
            body: { args: ["a", "s"], body: "a" + n + "=s" },
            rvalue: !0,
            funcName: t + "seq"
          }));
      }
    })();
    var u = { not: "!", bnot: "~", neg: "-", recip: "1.0/" };
    !(function() {
      for (var t in u) {
        var n = u[t];
        (e[t] = a({
          args: ["array", "array"],
          body: { args: ["a", "b"], body: "a=" + n + "b" },
          funcName: t
        })),
          (e[t + "eq"] = a({
            args: ["array"],
            body: { args: ["a"], body: "a=" + n + "a" },
            rvalue: !0,
            count: 2,
            funcName: t + "eq"
          }));
      }
    })();
    var c = {
      and: "&&",
      or: "||",
      eq: "===",
      neq: "!==",
      lt: "<",
      gt: ">",
      leq: "<=",
      geq: ">="
    };
    !(function() {
      for (var t in c) {
        var n = c[t];
        (e[t] = a({
          args: ["array", "array", "array"],
          body: { args: ["a", "b", "c"], body: "a=b" + n + "c" },
          funcName: t
        })),
          (e[t + "s"] = a({
            args: ["array", "array", "scalar"],
            body: { args: ["a", "b", "s"], body: "a=b" + n + "s" },
            funcName: t + "s"
          })),
          (e[t + "eq"] = a({
            args: ["array", "array"],
            body: { args: ["a", "b"], body: "a=a" + n + "b" },
            rvalue: !0,
            count: 2,
            funcName: t + "eq"
          })),
          (e[t + "seq"] = a({
            args: ["array", "scalar"],
            body: { args: ["a", "s"], body: "a=a" + n + "s" },
            rvalue: !0,
            count: 2,
            funcName: t + "seq"
          }));
      }
    })();
    var l = [
      "abs",
      "acos",
      "asin",
      "atan",
      "ceil",
      "cos",
      "exp",
      "floor",
      "log",
      "round",
      "sin",
      "sqrt",
      "tan"
    ];
    !(function() {
      for (var t = 0; t < l.length; ++t) {
        var n = l[t];
        (e[n] = a({
          args: ["array", "array"],
          pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
          body: { args: ["a", "b"], body: "a=this_f(b)", thisVars: ["this_f"] },
          funcName: n
        })),
          (e[n + "eq"] = a({
            args: ["array"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: { args: ["a"], body: "a=this_f(a)", thisVars: ["this_f"] },
            rvalue: !0,
            count: 2,
            funcName: n + "eq"
          }));
      }
    })();
    var h = ["max", "min", "atan2", "pow"];
    !(function() {
      for (var t = 0; t < h.length; ++t) {
        var n = h[t];
        (e[n] = a({
          args: ["array", "array", "array"],
          pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
          body: {
            args: ["a", "b", "c"],
            body: "a=this_f(b,c)",
            thisVars: ["this_f"]
          },
          funcName: n
        })),
          (e[n + "s"] = a({
            args: ["array", "array", "scalar"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: {
              args: ["a", "b", "c"],
              body: "a=this_f(b,c)",
              thisVars: ["this_f"]
            },
            funcName: n + "s"
          })),
          (e[n + "eq"] = a({
            args: ["array", "array"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: {
              args: ["a", "b"],
              body: "a=this_f(a,b)",
              thisVars: ["this_f"]
            },
            rvalue: !0,
            count: 2,
            funcName: n + "eq"
          })),
          (e[n + "seq"] = a({
            args: ["array", "scalar"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: {
              args: ["a", "b"],
              body: "a=this_f(a,b)",
              thisVars: ["this_f"]
            },
            rvalue: !0,
            count: 2,
            funcName: n + "seq"
          }));
      }
    })();
    var f = ["atan2", "pow"];
    !(function() {
      for (var t = 0; t < f.length; ++t) {
        var n = f[t];
        (e[n + "op"] = a({
          args: ["array", "array", "array"],
          pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
          body: {
            args: ["a", "b", "c"],
            body: "a=this_f(c,b)",
            thisVars: ["this_f"]
          },
          funcName: n + "op"
        })),
          (e[n + "ops"] = a({
            args: ["array", "array", "scalar"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: {
              args: ["a", "b", "c"],
              body: "a=this_f(c,b)",
              thisVars: ["this_f"]
            },
            funcName: n + "ops"
          })),
          (e[n + "opeq"] = a({
            args: ["array", "array"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: {
              args: ["a", "b"],
              body: "a=this_f(b,a)",
              thisVars: ["this_f"]
            },
            rvalue: !0,
            count: 2,
            funcName: n + "opeq"
          })),
          (e[n + "opseq"] = a({
            args: ["array", "scalar"],
            pre: { args: [], body: "this_f=Math." + n, thisVars: ["this_f"] },
            body: {
              args: ["a", "b"],
              body: "a=this_f(b,a)",
              thisVars: ["this_f"]
            },
            rvalue: !0,
            count: 2,
            funcName: n + "opseq"
          }));
      }
    })(),
      (e.any = r({
        args: ["array"],
        pre: i,
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 1 }],
          body: "if(a){return true}",
          localVars: [],
          thisVars: []
        },
        post: { args: [], localVars: [], thisVars: [], body: "return false" },
        funcName: "any"
      })),
      (e.all = r({
        args: ["array"],
        pre: i,
        body: {
          args: [{ name: "x", lvalue: !1, rvalue: !0, count: 1 }],
          body: "if(!x){return false}",
          localVars: [],
          thisVars: []
        },
        post: { args: [], localVars: [], thisVars: [], body: "return true" },
        funcName: "all"
      })),
      (e.sum = r({
        args: ["array"],
        pre: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "this_s=0"
        },
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 1 }],
          body: "this_s+=a",
          localVars: [],
          thisVars: ["this_s"]
        },
        post: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "return this_s"
        },
        funcName: "sum"
      })),
      (e.prod = r({
        args: ["array"],
        pre: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "this_s=1"
        },
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 1 }],
          body: "this_s*=a",
          localVars: [],
          thisVars: ["this_s"]
        },
        post: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "return this_s"
        },
        funcName: "prod"
      })),
      (e.norm2squared = r({
        args: ["array"],
        pre: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "this_s=0"
        },
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 2 }],
          body: "this_s+=a*a",
          localVars: [],
          thisVars: ["this_s"]
        },
        post: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "return this_s"
        },
        funcName: "norm2squared"
      })),
      (e.norm2 = r({
        args: ["array"],
        pre: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "this_s=0"
        },
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 2 }],
          body: "this_s+=a*a",
          localVars: [],
          thisVars: ["this_s"]
        },
        post: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "return Math.sqrt(this_s)"
        },
        funcName: "norm2"
      })),
      (e.norminf = r({
        args: ["array"],
        pre: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "this_s=0"
        },
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 4 }],
          body: "if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",
          localVars: [],
          thisVars: ["this_s"]
        },
        post: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "return this_s"
        },
        funcName: "norminf"
      })),
      (e.norm1 = r({
        args: ["array"],
        pre: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "this_s=0"
        },
        body: {
          args: [{ name: "a", lvalue: !1, rvalue: !0, count: 3 }],
          body: "this_s+=a<0?-a:a",
          localVars: [],
          thisVars: ["this_s"]
        },
        post: {
          args: [],
          localVars: [],
          thisVars: ["this_s"],
          body: "return this_s"
        },
        funcName: "norm1"
      })),
      (e.sup = r({
        args: ["array"],
        pre: {
          body: "this_h=-Infinity",
          args: [],
          thisVars: ["this_h"],
          localVars: []
        },
        body: {
          body: "if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",
          args: [{ name: "_inline_1_arg0_", lvalue: !1, rvalue: !0, count: 2 }],
          thisVars: ["this_h"],
          localVars: []
        },
        post: {
          body: "return this_h",
          args: [],
          thisVars: ["this_h"],
          localVars: []
        }
      })),
      (e.inf = r({
        args: ["array"],
        pre: {
          body: "this_h=Infinity",
          args: [],
          thisVars: ["this_h"],
          localVars: []
        },
        body: {
          body: "if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",
          args: [{ name: "_inline_1_arg0_", lvalue: !1, rvalue: !0, count: 2 }],
          thisVars: ["this_h"],
          localVars: []
        },
        post: {
          body: "return this_h",
          args: [],
          thisVars: ["this_h"],
          localVars: []
        }
      })),
      (e.argmin = r({
        args: ["index", "array", "shape"],
        pre: {
          body: "{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",
          args: [
            { name: "_inline_0_arg0_", lvalue: !1, rvalue: !1, count: 0 },
            { name: "_inline_0_arg1_", lvalue: !1, rvalue: !1, count: 0 },
            { name: "_inline_0_arg2_", lvalue: !1, rvalue: !0, count: 1 }
          ],
          thisVars: ["this_i", "this_v"],
          localVars: []
        },
        body: {
          body:
            "{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",
          args: [
            { name: "_inline_1_arg0_", lvalue: !1, rvalue: !0, count: 2 },
            { name: "_inline_1_arg1_", lvalue: !1, rvalue: !0, count: 2 }
          ],
          thisVars: ["this_i", "this_v"],
          localVars: ["_inline_1_k"]
        },
        post: {
          body: "{return this_i}",
          args: [],
          thisVars: ["this_i"],
          localVars: []
        }
      })),
      (e.argmax = r({
        args: ["index", "array", "shape"],
        pre: {
          body: "{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",
          args: [
            { name: "_inline_0_arg0_", lvalue: !1, rvalue: !1, count: 0 },
            { name: "_inline_0_arg1_", lvalue: !1, rvalue: !1, count: 0 },
            { name: "_inline_0_arg2_", lvalue: !1, rvalue: !0, count: 1 }
          ],
          thisVars: ["this_i", "this_v"],
          localVars: []
        },
        body: {
          body:
            "{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",
          args: [
            { name: "_inline_1_arg0_", lvalue: !1, rvalue: !0, count: 2 },
            { name: "_inline_1_arg1_", lvalue: !1, rvalue: !0, count: 2 }
          ],
          thisVars: ["this_i", "this_v"],
          localVars: ["_inline_1_k"]
        },
        post: {
          body: "{return this_i}",
          args: [],
          thisVars: ["this_i"],
          localVars: []
        }
      })),
      (e.random = a({
        args: ["array"],
        pre: { args: [], body: "this_f=Math.random", thisVars: ["this_f"] },
        body: { args: ["a"], body: "a=this_f()", thisVars: ["this_f"] },
        funcName: "random"
      })),
      (e.assign = a({
        args: ["array", "array"],
        body: { args: ["a", "b"], body: "a=b" },
        funcName: "assign"
      })),
      (e.assigns = a({
        args: ["array", "scalar"],
        body: { args: ["a", "b"], body: "a=b" },
        funcName: "assigns"
      })),
      (e.equals = r({
        args: ["array", "array"],
        pre: i,
        body: {
          args: [
            { name: "x", lvalue: !1, rvalue: !0, count: 1 },
            { name: "y", lvalue: !1, rvalue: !0, count: 1 }
          ],
          body: "if(x!==y){return false}",
          localVars: [],
          thisVars: []
        },
        post: { args: [], localVars: [], thisVars: [], body: "return true" },
        funcName: "equals"
      }));
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.SAMPLE_RATE = 16e3),
      (e.SPEC_HOP_LENGTH = 512),
      (e.FRAME_LENGTH_SECONDS = e.SPEC_HOP_LENGTH / e.SAMPLE_RATE),
      (e.MEL_SPEC_BINS = 229),
      (e.MIN_MIDI_PITCH = 21),
      (e.MAX_MIDI_PITCH = 108),
      (e.MIDI_PITCHES = e.MAX_MIDI_PITCH - e.MIN_MIDI_PITCH + 1);
  },
  function(t, e) {
    var n = {}.toString;
    t.exports =
      Array.isArray ||
      function(t) {
        return "[object Array]" == n.call(t);
      };
  },
  function(t, e, n) {
    (function(t) {
      var r =
          (void 0 !== t && t) || ("undefined" != typeof self && self) || window,
        i = Function.prototype.apply;
      function o(t, e) {
        (this._id = t), (this._clearFn = e);
      }
      (e.setTimeout = function() {
        return new o(i.call(setTimeout, r, arguments), clearTimeout);
      }),
        (e.setInterval = function() {
          return new o(i.call(setInterval, r, arguments), clearInterval);
        }),
        (e.clearTimeout = e.clearInterval = function(t) {
          t && t.close();
        }),
        (o.prototype.unref = o.prototype.ref = function() {}),
        (o.prototype.close = function() {
          this._clearFn.call(r, this._id);
        }),
        (e.enroll = function(t, e) {
          clearTimeout(t._idleTimeoutId), (t._idleTimeout = e);
        }),
        (e.unenroll = function(t) {
          clearTimeout(t._idleTimeoutId), (t._idleTimeout = -1);
        }),
        (e._unrefActive = e.active = function(t) {
          clearTimeout(t._idleTimeoutId);
          var e = t._idleTimeout;
          e >= 0 &&
            (t._idleTimeoutId = setTimeout(function() {
              t._onTimeout && t._onTimeout();
            }, e));
        }),
        n(109),
        (e.setImmediate =
          ("undefined" != typeof self && self.setImmediate) ||
          (void 0 !== t && t.setImmediate) ||
          (this && this.setImmediate)),
        (e.clearImmediate =
          ("undefined" != typeof self && self.clearImmediate) ||
          (void 0 !== t && t.clearImmediate) ||
          (this && this.clearImmediate));
    }.call(this, n(5)));
  },
  function(t, e, n) {
    "use strict";
    (e.randomBytes = e.rng = e.pseudoRandomBytes = e.prng = n(17)),
      (e.createHash = e.Hash = n(20)),
      (e.createHmac = e.Hmac = n(66));
    var r = n(124),
      i = Object.keys(r),
      o = [
        "sha1",
        "sha224",
        "sha256",
        "sha384",
        "sha512",
        "md5",
        "rmd160"
      ].concat(i);
    e.getHashes = function() {
      return o;
    };
    var a = n(69);
    (e.pbkdf2 = a.pbkdf2), (e.pbkdf2Sync = a.pbkdf2Sync);
    var s = n(126);
    (e.Cipher = s.Cipher),
      (e.createCipher = s.createCipher),
      (e.Cipheriv = s.Cipheriv),
      (e.createCipheriv = s.createCipheriv),
      (e.Decipher = s.Decipher),
      (e.createDecipher = s.createDecipher),
      (e.Decipheriv = s.Decipheriv),
      (e.createDecipheriv = s.createDecipheriv),
      (e.getCiphers = s.getCiphers),
      (e.listCiphers = s.listCiphers);
    var u = n(143);
    (e.DiffieHellmanGroup = u.DiffieHellmanGroup),
      (e.createDiffieHellmanGroup = u.createDiffieHellmanGroup),
      (e.getDiffieHellman = u.getDiffieHellman),
      (e.createDiffieHellman = u.createDiffieHellman),
      (e.DiffieHellman = u.DiffieHellman);
    var c = n(148);
    (e.createSign = c.createSign),
      (e.Sign = c.Sign),
      (e.createVerify = c.createVerify),
      (e.Verify = c.Verify),
      (e.createECDH = n(185));
    var l = n(186);
    (e.publicEncrypt = l.publicEncrypt),
      (e.privateEncrypt = l.privateEncrypt),
      (e.publicDecrypt = l.publicDecrypt),
      (e.privateDecrypt = l.privateDecrypt);
    var h = n(189);
    (e.randomFill = h.randomFill),
      (e.randomFillSync = h.randomFillSync),
      (e.createCredentials = function() {
        throw new Error(
          [
            "sorry, createCredentials is not implemented yet",
            "we accept pull requests",
            "https://github.com/crypto-browserify/crypto-browserify"
          ].join("\n")
        );
      }),
      (e.constants = {
        DH_CHECK_P_NOT_SAFE_PRIME: 2,
        DH_CHECK_P_NOT_PRIME: 1,
        DH_UNABLE_TO_CHECK_GENERATOR: 4,
        DH_NOT_SUITABLE_GENERATOR: 8,
        NPN_ENABLED: 1,
        ALPN_ENABLED: 1,
        RSA_PKCS1_PADDING: 1,
        RSA_SSLV23_PADDING: 2,
        RSA_NO_PADDING: 3,
        RSA_PKCS1_OAEP_PADDING: 4,
        RSA_X931_PADDING: 5,
        RSA_PKCS1_PSS_PADDING: 6,
        POINT_CONVERSION_COMPRESSED: 2,
        POINT_CONVERSION_UNCOMPRESSED: 4,
        POINT_CONVERSION_HYBRID: 6
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(2).Buffer,
      i = n(37).Transform;
    function o(t) {
      i.call(this),
        (this._block = r.allocUnsafe(t)),
        (this._blockSize = t),
        (this._blockOffset = 0),
        (this._length = [0, 0, 0, 0]),
        (this._finalized = !1);
    }
    n(1)(o, i),
      (o.prototype._transform = function(t, e, n) {
        var r = null;
        try {
          this.update(t, e);
        } catch (t) {
          r = t;
        }
        n(r);
      }),
      (o.prototype._flush = function(t) {
        var e = null;
        try {
          this.push(this.digest());
        } catch (t) {
          e = t;
        }
        t(e);
      }),
      (o.prototype.update = function(t, e) {
        if (
          ((function(t, e) {
            if (!r.isBuffer(t) && "string" != typeof t)
              throw new TypeError(e + " must be a string or a buffer");
          })(t, "Data"),
          this._finalized)
        )
          throw new Error("Digest already called");
        r.isBuffer(t) || (t = r.from(t, e));
        for (
          var n = this._block, i = 0;
          this._blockOffset + t.length - i >= this._blockSize;

        ) {
          for (var o = this._blockOffset; o < this._blockSize; )
            n[o++] = t[i++];
          this._update(), (this._blockOffset = 0);
        }
        for (; i < t.length; ) n[this._blockOffset++] = t[i++];
        for (var a = 0, s = 8 * t.length; s > 0; ++a)
          (this._length[a] += s),
            (s = (this._length[a] / 4294967296) | 0) > 0 &&
              (this._length[a] -= 4294967296 * s);
        return this;
      }),
      (o.prototype._update = function() {
        throw new Error("_update is not implemented");
      }),
      (o.prototype.digest = function(t) {
        if (this._finalized) throw new Error("Digest already called");
        this._finalized = !0;
        var e = this._digest();
        void 0 !== t && (e = e.toString(t)),
          this._block.fill(0),
          (this._blockOffset = 0);
        for (var n = 0; n < 4; ++n) this._length[n] = 0;
        return e;
      }),
      (o.prototype._digest = function() {
        throw new Error("_digest is not implemented");
      }),
      (t.exports = o);
  },
  function(t, e, n) {
    "use strict";
    (function(e, r) {
      var i = n(27);
      t.exports = b;
      var o,
        a = n(56);
      b.ReadableState = v;
      n(38).EventEmitter;
      var s = function(t, e) {
          return t.listeners(e).length;
        },
        u = n(61),
        c = n(2).Buffer,
        l = e.Uint8Array || function() {};
      var h = n(21);
      h.inherits = n(1);
      var f = n(110),
        p = void 0;
      p = f && f.debuglog ? f.debuglog("stream") : function() {};
      var d,
        m = n(111),
        y = n(62);
      h.inherits(b, u);
      var g = ["error", "close", "destroy", "pause", "resume"];
      function v(t, e) {
        t = t || {};
        var r = e instanceof (o = o || n(14));
        (this.objectMode = !!t.objectMode),
          r && (this.objectMode = this.objectMode || !!t.readableObjectMode);
        var i = t.highWaterMark,
          a = t.readableHighWaterMark,
          s = this.objectMode ? 16 : 16384;
        (this.highWaterMark = i || 0 === i ? i : r && (a || 0 === a) ? a : s),
          (this.highWaterMark = Math.floor(this.highWaterMark)),
          (this.buffer = new m()),
          (this.length = 0),
          (this.pipes = null),
          (this.pipesCount = 0),
          (this.flowing = null),
          (this.ended = !1),
          (this.endEmitted = !1),
          (this.reading = !1),
          (this.sync = !0),
          (this.needReadable = !1),
          (this.emittedReadable = !1),
          (this.readableListening = !1),
          (this.resumeScheduled = !1),
          (this.destroyed = !1),
          (this.defaultEncoding = t.defaultEncoding || "utf8"),
          (this.awaitDrain = 0),
          (this.readingMore = !1),
          (this.decoder = null),
          (this.encoding = null),
          t.encoding &&
            (d || (d = n(41).StringDecoder),
            (this.decoder = new d(t.encoding)),
            (this.encoding = t.encoding));
      }
      function b(t) {
        if (((o = o || n(14)), !(this instanceof b))) return new b(t);
        (this._readableState = new v(t, this)),
          (this.readable = !0),
          t &&
            ("function" == typeof t.read && (this._read = t.read),
            "function" == typeof t.destroy && (this._destroy = t.destroy)),
          u.call(this);
      }
      function w(t, e, n, r, i) {
        var o,
          a = t._readableState;
        null === e
          ? ((a.reading = !1),
            (function(t, e) {
              if (e.ended) return;
              if (e.decoder) {
                var n = e.decoder.end();
                n &&
                  n.length &&
                  (e.buffer.push(n), (e.length += e.objectMode ? 1 : n.length));
              }
              (e.ended = !0), T(t);
            })(t, a))
          : (i ||
              (o = (function(t, e) {
                var n;
                (r = e),
                  c.isBuffer(r) ||
                    r instanceof l ||
                    "string" == typeof e ||
                    void 0 === e ||
                    t.objectMode ||
                    (n = new TypeError("Invalid non-string/buffer chunk"));
                var r;
                return n;
              })(a, e)),
            o
              ? t.emit("error", o)
              : a.objectMode || (e && e.length > 0)
              ? ("string" == typeof e ||
                  a.objectMode ||
                  Object.getPrototypeOf(e) === c.prototype ||
                  (e = (function(t) {
                    return c.from(t);
                  })(e)),
                r
                  ? a.endEmitted
                    ? t.emit(
                        "error",
                        new Error("stream.unshift() after end event")
                      )
                    : _(t, a, e, !0)
                  : a.ended
                  ? t.emit("error", new Error("stream.push() after EOF"))
                  : ((a.reading = !1),
                    a.decoder && !n
                      ? ((e = a.decoder.write(e)),
                        a.objectMode || 0 !== e.length
                          ? _(t, a, e, !1)
                          : k(t, a))
                      : _(t, a, e, !1)))
              : r || (a.reading = !1));
        return (function(t) {
          return (
            !t.ended &&
            (t.needReadable || t.length < t.highWaterMark || 0 === t.length)
          );
        })(a);
      }
      function _(t, e, n, r) {
        e.flowing && 0 === e.length && !e.sync
          ? (t.emit("data", n), t.read(0))
          : ((e.length += e.objectMode ? 1 : n.length),
            r ? e.buffer.unshift(n) : e.buffer.push(n),
            e.needReadable && T(t)),
          k(t, e);
      }
      Object.defineProperty(b.prototype, "destroyed", {
        get: function() {
          return (
            void 0 !== this._readableState && this._readableState.destroyed
          );
        },
        set: function(t) {
          this._readableState && (this._readableState.destroyed = t);
        }
      }),
        (b.prototype.destroy = y.destroy),
        (b.prototype._undestroy = y.undestroy),
        (b.prototype._destroy = function(t, e) {
          this.push(null), e(t);
        }),
        (b.prototype.push = function(t, e) {
          var n,
            r = this._readableState;
          return (
            r.objectMode
              ? (n = !0)
              : "string" == typeof t &&
                ((e = e || r.defaultEncoding) !== r.encoding &&
                  ((t = c.from(t, e)), (e = "")),
                (n = !0)),
            w(this, t, e, !1, n)
          );
        }),
        (b.prototype.unshift = function(t) {
          return w(this, t, null, !0, !1);
        }),
        (b.prototype.isPaused = function() {
          return !1 === this._readableState.flowing;
        }),
        (b.prototype.setEncoding = function(t) {
          return (
            d || (d = n(41).StringDecoder),
            (this._readableState.decoder = new d(t)),
            (this._readableState.encoding = t),
            this
          );
        });
      var S = 8388608;
      function x(t, e) {
        return t <= 0 || (0 === e.length && e.ended)
          ? 0
          : e.objectMode
          ? 1
          : t != t
          ? e.flowing && e.length
            ? e.buffer.head.data.length
            : e.length
          : (t > e.highWaterMark &&
              (e.highWaterMark = (function(t) {
                return (
                  t >= S
                    ? (t = S)
                    : (t--,
                      (t |= t >>> 1),
                      (t |= t >>> 2),
                      (t |= t >>> 4),
                      (t |= t >>> 8),
                      (t |= t >>> 16),
                      t++),
                  t
                );
              })(t)),
            t <= e.length
              ? t
              : e.ended
              ? e.length
              : ((e.needReadable = !0), 0));
      }
      function T(t) {
        var e = t._readableState;
        (e.needReadable = !1),
          e.emittedReadable ||
            (p("emitReadable", e.flowing),
            (e.emittedReadable = !0),
            e.sync ? i.nextTick(A, t) : A(t));
      }
      function A(t) {
        p("emit readable"), t.emit("readable"), C(t);
      }
      function k(t, e) {
        e.readingMore || ((e.readingMore = !0), i.nextTick(E, t, e));
      }
      function E(t, e) {
        for (
          var n = e.length;
          !e.reading &&
          !e.flowing &&
          !e.ended &&
          e.length < e.highWaterMark &&
          (p("maybeReadMore read 0"), t.read(0), n !== e.length);

        )
          n = e.length;
        e.readingMore = !1;
      }
      function N(t) {
        p("readable nexttick read 0"), t.read(0);
      }
      function O(t, e) {
        e.reading || (p("resume read 0"), t.read(0)),
          (e.resumeScheduled = !1),
          (e.awaitDrain = 0),
          t.emit("resume"),
          C(t),
          e.flowing && !e.reading && t.read(0);
      }
      function C(t) {
        var e = t._readableState;
        for (p("flow", e.flowing); e.flowing && null !== t.read(); );
      }
      function I(t, e) {
        return 0 === e.length
          ? null
          : (e.objectMode
              ? (n = e.buffer.shift())
              : !t || t >= e.length
              ? ((n = e.decoder
                  ? e.buffer.join("")
                  : 1 === e.buffer.length
                  ? e.buffer.head.data
                  : e.buffer.concat(e.length)),
                e.buffer.clear())
              : (n = (function(t, e, n) {
                  var r;
                  t < e.head.data.length
                    ? ((r = e.head.data.slice(0, t)),
                      (e.head.data = e.head.data.slice(t)))
                    : (r =
                        t === e.head.data.length
                          ? e.shift()
                          : n
                          ? (function(t, e) {
                              var n = e.head,
                                r = 1,
                                i = n.data;
                              t -= i.length;
                              for (; (n = n.next); ) {
                                var o = n.data,
                                  a = t > o.length ? o.length : t;
                                if (
                                  (a === o.length
                                    ? (i += o)
                                    : (i += o.slice(0, t)),
                                  0 === (t -= a))
                                ) {
                                  a === o.length
                                    ? (++r,
                                      n.next
                                        ? (e.head = n.next)
                                        : (e.head = e.tail = null))
                                    : ((e.head = n), (n.data = o.slice(a)));
                                  break;
                                }
                                ++r;
                              }
                              return (e.length -= r), i;
                            })(t, e)
                          : (function(t, e) {
                              var n = c.allocUnsafe(t),
                                r = e.head,
                                i = 1;
                              r.data.copy(n), (t -= r.data.length);
                              for (; (r = r.next); ) {
                                var o = r.data,
                                  a = t > o.length ? o.length : t;
                                if (
                                  (o.copy(n, n.length - t, 0, a),
                                  0 === (t -= a))
                                ) {
                                  a === o.length
                                    ? (++i,
                                      r.next
                                        ? (e.head = r.next)
                                        : (e.head = e.tail = null))
                                    : ((e.head = r), (r.data = o.slice(a)));
                                  break;
                                }
                                ++i;
                              }
                              return (e.length -= i), n;
                            })(t, e));
                  return r;
                })(t, e.buffer, e.decoder)),
            n);
        var n;
      }
      function M(t) {
        var e = t._readableState;
        if (e.length > 0)
          throw new Error('"endReadable()" called on non-empty stream');
        e.endEmitted || ((e.ended = !0), i.nextTick(P, e, t));
      }
      function P(t, e) {
        t.endEmitted ||
          0 !== t.length ||
          ((t.endEmitted = !0), (e.readable = !1), e.emit("end"));
      }
      function R(t, e) {
        for (var n = 0, r = t.length; n < r; n++) if (t[n] === e) return n;
        return -1;
      }
      (b.prototype.read = function(t) {
        p("read", t), (t = parseInt(t, 10));
        var e = this._readableState,
          n = t;
        if (
          (0 !== t && (e.emittedReadable = !1),
          0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended))
        )
          return (
            p("read: emitReadable", e.length, e.ended),
            0 === e.length && e.ended ? M(this) : T(this),
            null
          );
        if (0 === (t = x(t, e)) && e.ended)
          return 0 === e.length && M(this), null;
        var r,
          i = e.needReadable;
        return (
          p("need readable", i),
          (0 === e.length || e.length - t < e.highWaterMark) &&
            p("length less than watermark", (i = !0)),
          e.ended || e.reading
            ? p("reading or ended", (i = !1))
            : i &&
              (p("do read"),
              (e.reading = !0),
              (e.sync = !0),
              0 === e.length && (e.needReadable = !0),
              this._read(e.highWaterMark),
              (e.sync = !1),
              e.reading || (t = x(n, e))),
          null === (r = t > 0 ? I(t, e) : null)
            ? ((e.needReadable = !0), (t = 0))
            : (e.length -= t),
          0 === e.length &&
            (e.ended || (e.needReadable = !0), n !== t && e.ended && M(this)),
          null !== r && this.emit("data", r),
          r
        );
      }),
        (b.prototype._read = function(t) {
          this.emit("error", new Error("_read() is not implemented"));
        }),
        (b.prototype.pipe = function(t, e) {
          var n = this,
            o = this._readableState;
          switch (o.pipesCount) {
            case 0:
              o.pipes = t;
              break;
            case 1:
              o.pipes = [o.pipes, t];
              break;
            default:
              o.pipes.push(t);
          }
          (o.pipesCount += 1), p("pipe count=%d opts=%j", o.pipesCount, e);
          var u =
            (!e || !1 !== e.end) && t !== r.stdout && t !== r.stderr ? l : b;
          function c(e, r) {
            p("onunpipe"),
              e === n &&
                r &&
                !1 === r.hasUnpiped &&
                ((r.hasUnpiped = !0),
                p("cleanup"),
                t.removeListener("close", g),
                t.removeListener("finish", v),
                t.removeListener("drain", h),
                t.removeListener("error", y),
                t.removeListener("unpipe", c),
                n.removeListener("end", l),
                n.removeListener("end", b),
                n.removeListener("data", m),
                (f = !0),
                !o.awaitDrain ||
                  (t._writableState && !t._writableState.needDrain) ||
                  h());
          }
          function l() {
            p("onend"), t.end();
          }
          o.endEmitted ? i.nextTick(u) : n.once("end", u), t.on("unpipe", c);
          var h = (function(t) {
            return function() {
              var e = t._readableState;
              p("pipeOnDrain", e.awaitDrain),
                e.awaitDrain && e.awaitDrain--,
                0 === e.awaitDrain && s(t, "data") && ((e.flowing = !0), C(t));
            };
          })(n);
          t.on("drain", h);
          var f = !1;
          var d = !1;
          function m(e) {
            p("ondata"),
              (d = !1),
              !1 !== t.write(e) ||
                d ||
                (((1 === o.pipesCount && o.pipes === t) ||
                  (o.pipesCount > 1 && -1 !== R(o.pipes, t))) &&
                  !f &&
                  (p(
                    "false write response, pause",
                    n._readableState.awaitDrain
                  ),
                  n._readableState.awaitDrain++,
                  (d = !0)),
                n.pause());
          }
          function y(e) {
            p("onerror", e),
              b(),
              t.removeListener("error", y),
              0 === s(t, "error") && t.emit("error", e);
          }
          function g() {
            t.removeListener("finish", v), b();
          }
          function v() {
            p("onfinish"), t.removeListener("close", g), b();
          }
          function b() {
            p("unpipe"), n.unpipe(t);
          }
          return (
            n.on("data", m),
            (function(t, e, n) {
              if ("function" == typeof t.prependListener)
                return t.prependListener(e, n);
              t._events && t._events[e]
                ? a(t._events[e])
                  ? t._events[e].unshift(n)
                  : (t._events[e] = [n, t._events[e]])
                : t.on(e, n);
            })(t, "error", y),
            t.once("close", g),
            t.once("finish", v),
            t.emit("pipe", n),
            o.flowing || (p("pipe resume"), n.resume()),
            t
          );
        }),
        (b.prototype.unpipe = function(t) {
          var e = this._readableState,
            n = { hasUnpiped: !1 };
          if (0 === e.pipesCount) return this;
          if (1 === e.pipesCount)
            return t && t !== e.pipes
              ? this
              : (t || (t = e.pipes),
                (e.pipes = null),
                (e.pipesCount = 0),
                (e.flowing = !1),
                t && t.emit("unpipe", this, n),
                this);
          if (!t) {
            var r = e.pipes,
              i = e.pipesCount;
            (e.pipes = null), (e.pipesCount = 0), (e.flowing = !1);
            for (var o = 0; o < i; o++) r[o].emit("unpipe", this, n);
            return this;
          }
          var a = R(e.pipes, t);
          return -1 === a
            ? this
            : (e.pipes.splice(a, 1),
              (e.pipesCount -= 1),
              1 === e.pipesCount && (e.pipes = e.pipes[0]),
              t.emit("unpipe", this, n),
              this);
        }),
        (b.prototype.on = function(t, e) {
          var n = u.prototype.on.call(this, t, e);
          if ("data" === t) !1 !== this._readableState.flowing && this.resume();
          else if ("readable" === t) {
            var r = this._readableState;
            r.endEmitted ||
              r.readableListening ||
              ((r.readableListening = r.needReadable = !0),
              (r.emittedReadable = !1),
              r.reading ? r.length && T(this) : i.nextTick(N, this));
          }
          return n;
        }),
        (b.prototype.addListener = b.prototype.on),
        (b.prototype.resume = function() {
          var t = this._readableState;
          return (
            t.flowing ||
              (p("resume"),
              (t.flowing = !0),
              (function(t, e) {
                e.resumeScheduled ||
                  ((e.resumeScheduled = !0), i.nextTick(O, t, e));
              })(this, t)),
            this
          );
        }),
        (b.prototype.pause = function() {
          return (
            p("call pause flowing=%j", this._readableState.flowing),
            !1 !== this._readableState.flowing &&
              (p("pause"),
              (this._readableState.flowing = !1),
              this.emit("pause")),
            this
          );
        }),
        (b.prototype.wrap = function(t) {
          var e = this,
            n = this._readableState,
            r = !1;
          for (var i in (t.on("end", function() {
            if ((p("wrapped end"), n.decoder && !n.ended)) {
              var t = n.decoder.end();
              t && t.length && e.push(t);
            }
            e.push(null);
          }),
          t.on("data", function(i) {
            (p("wrapped data"),
            n.decoder && (i = n.decoder.write(i)),
            n.objectMode && null == i) ||
              ((n.objectMode || (i && i.length)) &&
                (e.push(i) || ((r = !0), t.pause())));
          }),
          t))
            void 0 === this[i] &&
              "function" == typeof t[i] &&
              (this[i] = (function(e) {
                return function() {
                  return t[e].apply(t, arguments);
                };
              })(i));
          for (var o = 0; o < g.length; o++)
            t.on(g[o], this.emit.bind(this, g[o]));
          return (
            (this._read = function(e) {
              p("wrapped _read", e), r && ((r = !1), t.resume());
            }),
            this
          );
        }),
        Object.defineProperty(b.prototype, "readableHighWaterMark", {
          enumerable: !1,
          get: function() {
            return this._readableState.highWaterMark;
          }
        }),
        (b._fromList = I);
    }.call(this, n(5), n(11)));
  },
  function(t, e, n) {
    t.exports = n(38).EventEmitter;
  },
  function(t, e, n) {
    "use strict";
    var r = n(27);
    function i(t, e) {
      t.emit("error", e);
    }
    t.exports = {
      destroy: function(t, e) {
        var n = this,
          o = this._readableState && this._readableState.destroyed,
          a = this._writableState && this._writableState.destroyed;
        return o || a
          ? (e
              ? e(t)
              : !t ||
                (this._writableState && this._writableState.errorEmitted) ||
                r.nextTick(i, this, t),
            this)
          : (this._readableState && (this._readableState.destroyed = !0),
            this._writableState && (this._writableState.destroyed = !0),
            this._destroy(t || null, function(t) {
              !e && t
                ? (r.nextTick(i, n, t),
                  n._writableState && (n._writableState.errorEmitted = !0))
                : e && e(t);
            }),
            this);
      },
      undestroy: function() {
        this._readableState &&
          ((this._readableState.destroyed = !1),
          (this._readableState.reading = !1),
          (this._readableState.ended = !1),
          (this._readableState.endEmitted = !1)),
          this._writableState &&
            ((this._writableState.destroyed = !1),
            (this._writableState.ended = !1),
            (this._writableState.ending = !1),
            (this._writableState.finished = !1),
            (this._writableState.errorEmitted = !1));
      }
    };
  },
  function(t, e, n) {
    "use strict";
    t.exports = a;
    var r = n(14),
      i = n(21);
    function o(t, e) {
      var n = this._transformState;
      n.transforming = !1;
      var r = n.writecb;
      if (!r)
        return this.emit(
          "error",
          new Error("write callback called multiple times")
        );
      (n.writechunk = null),
        (n.writecb = null),
        null != e && this.push(e),
        r(t);
      var i = this._readableState;
      (i.reading = !1),
        (i.needReadable || i.length < i.highWaterMark) &&
          this._read(i.highWaterMark);
    }
    function a(t) {
      if (!(this instanceof a)) return new a(t);
      r.call(this, t),
        (this._transformState = {
          afterTransform: o.bind(this),
          needTransform: !1,
          transforming: !1,
          writecb: null,
          writechunk: null,
          writeencoding: null
        }),
        (this._readableState.needReadable = !0),
        (this._readableState.sync = !1),
        t &&
          ("function" == typeof t.transform && (this._transform = t.transform),
          "function" == typeof t.flush && (this._flush = t.flush)),
        this.on("prefinish", s);
    }
    function s() {
      var t = this;
      "function" == typeof this._flush
        ? this._flush(function(e, n) {
            u(t, e, n);
          })
        : u(this, null, null);
    }
    function u(t, e, n) {
      if (e) return t.emit("error", e);
      if ((null != n && t.push(n), t._writableState.length))
        throw new Error("Calling transform done when ws.length != 0");
      if (t._transformState.transforming)
        throw new Error("Calling transform done when still transforming");
      return t.push(null);
    }
    (i.inherits = n(1)),
      i.inherits(a, r),
      (a.prototype.push = function(t, e) {
        return (
          (this._transformState.needTransform = !1),
          r.prototype.push.call(this, t, e)
        );
      }),
      (a.prototype._transform = function(t, e, n) {
        throw new Error("_transform() is not implemented");
      }),
      (a.prototype._write = function(t, e, n) {
        var r = this._transformState;
        if (
          ((r.writecb = n),
          (r.writechunk = t),
          (r.writeencoding = e),
          !r.transforming)
        ) {
          var i = this._readableState;
          (r.needTransform || i.needReadable || i.length < i.highWaterMark) &&
            this._read(i.highWaterMark);
        }
      }),
      (a.prototype._read = function(t) {
        var e = this._transformState;
        null !== e.writechunk && e.writecb && !e.transforming
          ? ((e.transforming = !0),
            this._transform(e.writechunk, e.writeencoding, e.afterTransform))
          : (e.needTransform = !0);
      }),
      (a.prototype._destroy = function(t, e) {
        var n = this;
        r.prototype._destroy.call(this, t, function(t) {
          e(t), n.emit("close");
        });
      });
  },
  function(t, e, n) {
    var r = n(1),
      i = n(18),
      o = n(2).Buffer,
      a = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ],
      s = new Array(64);
    function u() {
      this.init(), (this._w = s), i.call(this, 64, 56);
    }
    function c(t, e, n) {
      return n ^ (t & (e ^ n));
    }
    function l(t, e, n) {
      return (t & e) | (n & (t | e));
    }
    function h(t) {
      return (
        ((t >>> 2) | (t << 30)) ^
        ((t >>> 13) | (t << 19)) ^
        ((t >>> 22) | (t << 10))
      );
    }
    function f(t) {
      return (
        ((t >>> 6) | (t << 26)) ^
        ((t >>> 11) | (t << 21)) ^
        ((t >>> 25) | (t << 7))
      );
    }
    function p(t) {
      return ((t >>> 7) | (t << 25)) ^ ((t >>> 18) | (t << 14)) ^ (t >>> 3);
    }
    r(u, i),
      (u.prototype.init = function() {
        return (
          (this._a = 1779033703),
          (this._b = 3144134277),
          (this._c = 1013904242),
          (this._d = 2773480762),
          (this._e = 1359893119),
          (this._f = 2600822924),
          (this._g = 528734635),
          (this._h = 1541459225),
          this
        );
      }),
      (u.prototype._update = function(t) {
        for (
          var e,
            n = this._w,
            r = 0 | this._a,
            i = 0 | this._b,
            o = 0 | this._c,
            s = 0 | this._d,
            u = 0 | this._e,
            d = 0 | this._f,
            m = 0 | this._g,
            y = 0 | this._h,
            g = 0;
          g < 16;
          ++g
        )
          n[g] = t.readInt32BE(4 * g);
        for (; g < 64; ++g)
          n[g] =
            0 |
            (((((e = n[g - 2]) >>> 17) | (e << 15)) ^
              ((e >>> 19) | (e << 13)) ^
              (e >>> 10)) +
              n[g - 7] +
              p(n[g - 15]) +
              n[g - 16]);
        for (var v = 0; v < 64; ++v) {
          var b = (y + f(u) + c(u, d, m) + a[v] + n[v]) | 0,
            w = (h(r) + l(r, i, o)) | 0;
          (y = m),
            (m = d),
            (d = u),
            (u = (s + b) | 0),
            (s = o),
            (o = i),
            (i = r),
            (r = (b + w) | 0);
        }
        (this._a = (r + this._a) | 0),
          (this._b = (i + this._b) | 0),
          (this._c = (o + this._c) | 0),
          (this._d = (s + this._d) | 0),
          (this._e = (u + this._e) | 0),
          (this._f = (d + this._f) | 0),
          (this._g = (m + this._g) | 0),
          (this._h = (y + this._h) | 0);
      }),
      (u.prototype._hash = function() {
        var t = o.allocUnsafe(32);
        return (
          t.writeInt32BE(this._a, 0),
          t.writeInt32BE(this._b, 4),
          t.writeInt32BE(this._c, 8),
          t.writeInt32BE(this._d, 12),
          t.writeInt32BE(this._e, 16),
          t.writeInt32BE(this._f, 20),
          t.writeInt32BE(this._g, 24),
          t.writeInt32BE(this._h, 28),
          t
        );
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    var r = n(1),
      i = n(18),
      o = n(2).Buffer,
      a = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ],
      s = new Array(160);
    function u() {
      this.init(), (this._w = s), i.call(this, 128, 112);
    }
    function c(t, e, n) {
      return n ^ (t & (e ^ n));
    }
    function l(t, e, n) {
      return (t & e) | (n & (t | e));
    }
    function h(t, e) {
      return (
        ((t >>> 28) | (e << 4)) ^
        ((e >>> 2) | (t << 30)) ^
        ((e >>> 7) | (t << 25))
      );
    }
    function f(t, e) {
      return (
        ((t >>> 14) | (e << 18)) ^
        ((t >>> 18) | (e << 14)) ^
        ((e >>> 9) | (t << 23))
      );
    }
    function p(t, e) {
      return ((t >>> 1) | (e << 31)) ^ ((t >>> 8) | (e << 24)) ^ (t >>> 7);
    }
    function d(t, e) {
      return (
        ((t >>> 1) | (e << 31)) ^
        ((t >>> 8) | (e << 24)) ^
        ((t >>> 7) | (e << 25))
      );
    }
    function m(t, e) {
      return ((t >>> 19) | (e << 13)) ^ ((e >>> 29) | (t << 3)) ^ (t >>> 6);
    }
    function y(t, e) {
      return (
        ((t >>> 19) | (e << 13)) ^
        ((e >>> 29) | (t << 3)) ^
        ((t >>> 6) | (e << 26))
      );
    }
    function g(t, e) {
      return t >>> 0 < e >>> 0 ? 1 : 0;
    }
    r(u, i),
      (u.prototype.init = function() {
        return (
          (this._ah = 1779033703),
          (this._bh = 3144134277),
          (this._ch = 1013904242),
          (this._dh = 2773480762),
          (this._eh = 1359893119),
          (this._fh = 2600822924),
          (this._gh = 528734635),
          (this._hh = 1541459225),
          (this._al = 4089235720),
          (this._bl = 2227873595),
          (this._cl = 4271175723),
          (this._dl = 1595750129),
          (this._el = 2917565137),
          (this._fl = 725511199),
          (this._gl = 4215389547),
          (this._hl = 327033209),
          this
        );
      }),
      (u.prototype._update = function(t) {
        for (
          var e = this._w,
            n = 0 | this._ah,
            r = 0 | this._bh,
            i = 0 | this._ch,
            o = 0 | this._dh,
            s = 0 | this._eh,
            u = 0 | this._fh,
            v = 0 | this._gh,
            b = 0 | this._hh,
            w = 0 | this._al,
            _ = 0 | this._bl,
            S = 0 | this._cl,
            x = 0 | this._dl,
            T = 0 | this._el,
            A = 0 | this._fl,
            k = 0 | this._gl,
            E = 0 | this._hl,
            N = 0;
          N < 32;
          N += 2
        )
          (e[N] = t.readInt32BE(4 * N)), (e[N + 1] = t.readInt32BE(4 * N + 4));
        for (; N < 160; N += 2) {
          var O = e[N - 30],
            C = e[N - 30 + 1],
            I = p(O, C),
            M = d(C, O),
            P = m((O = e[N - 4]), (C = e[N - 4 + 1])),
            R = y(C, O),
            D = e[N - 14],
            F = e[N - 14 + 1],
            z = e[N - 32],
            L = e[N - 32 + 1],
            j = (M + F) | 0,
            B = (I + D + g(j, M)) | 0;
          (B =
            ((B = (B + P + g((j = (j + R) | 0), R)) | 0) +
              z +
              g((j = (j + L) | 0), L)) |
            0),
            (e[N] = B),
            (e[N + 1] = j);
        }
        for (var q = 0; q < 160; q += 2) {
          (B = e[q]), (j = e[q + 1]);
          var U = l(n, r, i),
            V = l(w, _, S),
            W = h(n, w),
            G = h(w, n),
            H = f(s, T),
            K = f(T, s),
            Q = a[q],
            X = a[q + 1],
            $ = c(s, u, v),
            Y = c(T, A, k),
            J = (E + K) | 0,
            Z = (b + H + g(J, E)) | 0;
          Z =
            ((Z =
              ((Z = (Z + $ + g((J = (J + Y) | 0), Y)) | 0) +
                Q +
                g((J = (J + X) | 0), X)) |
              0) +
              B +
              g((J = (J + j) | 0), j)) |
            0;
          var tt = (G + V) | 0,
            et = (W + U + g(tt, G)) | 0;
          (b = v),
            (E = k),
            (v = u),
            (k = A),
            (u = s),
            (A = T),
            (s = (o + Z + g((T = (x + J) | 0), x)) | 0),
            (o = i),
            (x = S),
            (i = r),
            (S = _),
            (r = n),
            (_ = w),
            (n = (Z + et + g((w = (J + tt) | 0), J)) | 0);
        }
        (this._al = (this._al + w) | 0),
          (this._bl = (this._bl + _) | 0),
          (this._cl = (this._cl + S) | 0),
          (this._dl = (this._dl + x) | 0),
          (this._el = (this._el + T) | 0),
          (this._fl = (this._fl + A) | 0),
          (this._gl = (this._gl + k) | 0),
          (this._hl = (this._hl + E) | 0),
          (this._ah = (this._ah + n + g(this._al, w)) | 0),
          (this._bh = (this._bh + r + g(this._bl, _)) | 0),
          (this._ch = (this._ch + i + g(this._cl, S)) | 0),
          (this._dh = (this._dh + o + g(this._dl, x)) | 0),
          (this._eh = (this._eh + s + g(this._el, T)) | 0),
          (this._fh = (this._fh + u + g(this._fl, A)) | 0),
          (this._gh = (this._gh + v + g(this._gl, k)) | 0),
          (this._hh = (this._hh + b + g(this._hl, E)) | 0);
      }),
      (u.prototype._hash = function() {
        var t = o.allocUnsafe(64);
        function e(e, n, r) {
          t.writeInt32BE(e, r), t.writeInt32BE(n, r + 4);
        }
        return (
          e(this._ah, this._al, 0),
          e(this._bh, this._bl, 8),
          e(this._ch, this._cl, 16),
          e(this._dh, this._dl, 24),
          e(this._eh, this._el, 32),
          e(this._fh, this._fl, 40),
          e(this._gh, this._gl, 48),
          e(this._hh, this._hl, 56),
          t
        );
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    "use strict";
    var r = n(1),
      i = n(123),
      o = n(13),
      a = n(2).Buffer,
      s = n(67),
      u = n(42),
      c = n(43),
      l = a.alloc(128);
    function h(t, e) {
      o.call(this, "digest"), "string" == typeof e && (e = a.from(e));
      var n = "sha512" === t || "sha384" === t ? 128 : 64;
      ((this._alg = t), (this._key = e), e.length > n)
        ? (e = ("rmd160" === t ? new u() : c(t)).update(e).digest())
        : e.length < n && (e = a.concat([e, l], n));
      for (
        var r = (this._ipad = a.allocUnsafe(n)),
          i = (this._opad = a.allocUnsafe(n)),
          s = 0;
        s < n;
        s++
      )
        (r[s] = 54 ^ e[s]), (i[s] = 92 ^ e[s]);
      (this._hash = "rmd160" === t ? new u() : c(t)), this._hash.update(r);
    }
    r(h, o),
      (h.prototype._update = function(t) {
        this._hash.update(t);
      }),
      (h.prototype._final = function() {
        var t = this._hash.digest();
        return ("rmd160" === this._alg ? new u() : c(this._alg))
          .update(this._opad)
          .update(t)
          .digest();
      }),
      (t.exports = function(t, e) {
        return "rmd160" === (t = t.toLowerCase()) || "ripemd160" === t
          ? new h("rmd160", e)
          : "md5" === t
          ? new i(s, e)
          : new h(t, e);
      });
  },
  function(t, e, n) {
    var r = n(36);
    t.exports = function(t) {
      return new r().update(t).digest();
    };
  },
  function(t) {
    t.exports = {
      sha224WithRSAEncryption: {
        sign: "rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      "RSA-SHA224": {
        sign: "ecdsa/rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      sha256WithRSAEncryption: {
        sign: "rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      "RSA-SHA256": {
        sign: "ecdsa/rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      sha384WithRSAEncryption: {
        sign: "rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      "RSA-SHA384": {
        sign: "ecdsa/rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      sha512WithRSAEncryption: {
        sign: "rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA512": {
        sign: "ecdsa/rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA1": {
        sign: "rsa",
        hash: "sha1",
        id: "3021300906052b0e03021a05000414"
      },
      "ecdsa-with-SHA1": { sign: "ecdsa", hash: "sha1", id: "" },
      sha256: { sign: "ecdsa", hash: "sha256", id: "" },
      sha224: { sign: "ecdsa", hash: "sha224", id: "" },
      sha384: { sign: "ecdsa", hash: "sha384", id: "" },
      sha512: { sign: "ecdsa", hash: "sha512", id: "" },
      "DSA-SHA": { sign: "dsa", hash: "sha1", id: "" },
      "DSA-SHA1": { sign: "dsa", hash: "sha1", id: "" },
      DSA: { sign: "dsa", hash: "sha1", id: "" },
      "DSA-WITH-SHA224": { sign: "dsa", hash: "sha224", id: "" },
      "DSA-SHA224": { sign: "dsa", hash: "sha224", id: "" },
      "DSA-WITH-SHA256": { sign: "dsa", hash: "sha256", id: "" },
      "DSA-SHA256": { sign: "dsa", hash: "sha256", id: "" },
      "DSA-WITH-SHA384": { sign: "dsa", hash: "sha384", id: "" },
      "DSA-SHA384": { sign: "dsa", hash: "sha384", id: "" },
      "DSA-WITH-SHA512": { sign: "dsa", hash: "sha512", id: "" },
      "DSA-SHA512": { sign: "dsa", hash: "sha512", id: "" },
      "DSA-RIPEMD160": { sign: "dsa", hash: "rmd160", id: "" },
      ripemd160WithRSA: {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      "RSA-RIPEMD160": {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      md5WithRSAEncryption: {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      },
      "RSA-MD5": {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      }
    };
  },
  function(t, e, n) {
    (e.pbkdf2 = n(125)), (e.pbkdf2Sync = n(72));
  },
  function(t, e, n) {
    (function(e) {
      var n = Math.pow(2, 30) - 1;
      function r(t, n) {
        if ("string" != typeof t && !e.isBuffer(t))
          throw new TypeError(n + " must be a buffer or string");
      }
      t.exports = function(t, e, i, o) {
        if ((r(t, "Password"), r(e, "Salt"), "number" != typeof i))
          throw new TypeError("Iterations not a number");
        if (i < 0) throw new TypeError("Bad iterations");
        if ("number" != typeof o)
          throw new TypeError("Key length not a number");
        if (o < 0 || o > n || o != o) throw new TypeError("Bad key length");
      };
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    (function(e) {
      var n;
      e.browser
        ? (n = "utf-8")
        : (n =
            parseInt(e.version.split(".")[0].slice(1), 10) >= 6
              ? "utf-8"
              : "binary");
      t.exports = n;
    }.call(this, n(11)));
  },
  function(t, e, n) {
    var r = n(67),
      i = n(42),
      o = n(43),
      a = n(70),
      s = n(71),
      u = n(2).Buffer,
      c = u.alloc(128),
      l = {
        md5: 16,
        sha1: 20,
        sha224: 28,
        sha256: 32,
        sha384: 48,
        sha512: 64,
        rmd160: 20,
        ripemd160: 20
      };
    function h(t, e, n) {
      var a = (function(t) {
          return "rmd160" === t || "ripemd160" === t
            ? function(t) {
                return new i().update(t).digest();
              }
            : "md5" === t
            ? r
            : function(e) {
                return o(t)
                  .update(e)
                  .digest();
              };
        })(t),
        s = "sha512" === t || "sha384" === t ? 128 : 64;
      e.length > s ? (e = a(e)) : e.length < s && (e = u.concat([e, c], s));
      for (
        var h = u.allocUnsafe(s + l[t]), f = u.allocUnsafe(s + l[t]), p = 0;
        p < s;
        p++
      )
        (h[p] = 54 ^ e[p]), (f[p] = 92 ^ e[p]);
      var d = u.allocUnsafe(s + n + 4);
      h.copy(d, 0, 0, s),
        (this.ipad1 = d),
        (this.ipad2 = h),
        (this.opad = f),
        (this.alg = t),
        (this.blocksize = s),
        (this.hash = a),
        (this.size = l[t]);
    }
    (h.prototype.run = function(t, e) {
      return (
        t.copy(e, this.blocksize),
        this.hash(e).copy(this.opad, this.blocksize),
        this.hash(this.opad)
      );
    }),
      (t.exports = function(t, e, n, r, i) {
        a(t, e, n, r),
          u.isBuffer(t) || (t = u.from(t, s)),
          u.isBuffer(e) || (e = u.from(e, s));
        var o = new h((i = i || "sha1"), t, e.length),
          c = u.allocUnsafe(r),
          f = u.allocUnsafe(e.length + 4);
        e.copy(f, 0, 0, e.length);
        for (var p = 0, d = l[i], m = Math.ceil(r / d), y = 1; y <= m; y++) {
          f.writeUInt32BE(y, e.length);
          for (var g = o.run(f, o.ipad1), v = g, b = 1; b < n; b++) {
            v = o.run(v, o.ipad2);
            for (var w = 0; w < d; w++) g[w] ^= v[w];
          }
          g.copy(c, p), (p += d);
        }
        return c;
      });
  },
  function(t, e, n) {
    var r = n(22),
      i = n(2).Buffer,
      o = n(74);
    function a(t) {
      var e = t._cipher.encryptBlockRaw(t._prev);
      return o(t._prev), e;
    }
    e.encrypt = function(t, e) {
      var n = Math.ceil(e.length / 16),
        o = t._cache.length;
      t._cache = i.concat([t._cache, i.allocUnsafe(16 * n)]);
      for (var s = 0; s < n; s++) {
        var u = a(t),
          c = o + 16 * s;
        t._cache.writeUInt32BE(u[0], c + 0),
          t._cache.writeUInt32BE(u[1], c + 4),
          t._cache.writeUInt32BE(u[2], c + 8),
          t._cache.writeUInt32BE(u[3], c + 12);
      }
      var l = t._cache.slice(0, e.length);
      return (t._cache = t._cache.slice(e.length)), r(e, l);
    };
  },
  function(t, e) {
    t.exports = function(t) {
      for (var e, n = t.length; n--; ) {
        if (255 !== (e = t.readUInt8(n))) {
          e++, t.writeUInt8(e, n);
          break;
        }
        t.writeUInt8(0, n);
      }
    };
  },
  function(t) {
    t.exports = {
      "aes-128-ecb": {
        cipher: "AES",
        key: 128,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-192-ecb": {
        cipher: "AES",
        key: 192,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-256-ecb": {
        cipher: "AES",
        key: 256,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-128-cbc": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-192-cbc": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-256-cbc": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes128: { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" },
      aes192: { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" },
      aes256: { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" },
      "aes-128-cfb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-192-cfb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-256-cfb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-128-cfb8": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-192-cfb8": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-256-cfb8": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-128-cfb1": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-192-cfb1": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-256-cfb1": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-128-ofb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-192-ofb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-256-ofb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-128-ctr": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-192-ctr": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-256-ctr": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-128-gcm": {
        cipher: "AES",
        key: 128,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-192-gcm": {
        cipher: "AES",
        key: 192,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-256-gcm": {
        cipher: "AES",
        key: 256,
        iv: 12,
        mode: "GCM",
        type: "auth"
      }
    };
  },
  function(t, e, n) {
    var r = n(28),
      i = n(2).Buffer,
      o = n(13),
      a = n(1),
      s = n(140),
      u = n(22),
      c = n(74);
    function l(t, e, n, a) {
      o.call(this);
      var u = i.alloc(4, 0);
      this._cipher = new r.AES(e);
      var l = this._cipher.encryptBlock(u);
      (this._ghash = new s(l)),
        (n = (function(t, e, n) {
          if (12 === e.length)
            return (
              (t._finID = i.concat([e, i.from([0, 0, 0, 1])])),
              i.concat([e, i.from([0, 0, 0, 2])])
            );
          var r = new s(n),
            o = e.length,
            a = o % 16;
          r.update(e),
            a && ((a = 16 - a), r.update(i.alloc(a, 0))),
            r.update(i.alloc(8, 0));
          var u = 8 * o,
            l = i.alloc(8);
          l.writeUIntBE(u, 0, 8), r.update(l), (t._finID = r.state);
          var h = i.from(t._finID);
          return c(h), h;
        })(this, n, l)),
        (this._prev = i.from(n)),
        (this._cache = i.allocUnsafe(0)),
        (this._secCache = i.allocUnsafe(0)),
        (this._decrypt = a),
        (this._alen = 0),
        (this._len = 0),
        (this._mode = t),
        (this._authTag = null),
        (this._called = !1);
    }
    a(l, o),
      (l.prototype._update = function(t) {
        if (!this._called && this._alen) {
          var e = 16 - (this._alen % 16);
          e < 16 && ((e = i.alloc(e, 0)), this._ghash.update(e));
        }
        this._called = !0;
        var n = this._mode.encrypt(this, t);
        return (
          this._decrypt ? this._ghash.update(t) : this._ghash.update(n),
          (this._len += t.length),
          n
        );
      }),
      (l.prototype._final = function() {
        if (this._decrypt && !this._authTag)
          throw new Error("Unsupported state or unable to authenticate data");
        var t = u(
          this._ghash.final(8 * this._alen, 8 * this._len),
          this._cipher.encryptBlock(this._finID)
        );
        if (
          this._decrypt &&
          (function(t, e) {
            var n = 0;
            t.length !== e.length && n++;
            for (var r = Math.min(t.length, e.length), i = 0; i < r; ++i)
              n += t[i] ^ e[i];
            return n;
          })(t, this._authTag)
        )
          throw new Error("Unsupported state or unable to authenticate data");
        (this._authTag = t), this._cipher.scrub();
      }),
      (l.prototype.getAuthTag = function() {
        if (this._decrypt || !i.isBuffer(this._authTag))
          throw new Error("Attempting to get auth tag in unsupported state");
        return this._authTag;
      }),
      (l.prototype.setAuthTag = function(t) {
        if (!this._decrypt)
          throw new Error("Attempting to set auth tag in unsupported state");
        this._authTag = t;
      }),
      (l.prototype.setAAD = function(t) {
        if (this._called)
          throw new Error("Attempting to set AAD in unsupported state");
        this._ghash.update(t), (this._alen += t.length);
      }),
      (t.exports = l);
  },
  function(t, e, n) {
    var r = n(28),
      i = n(2).Buffer,
      o = n(13);
    function a(t, e, n, a) {
      o.call(this),
        (this._cipher = new r.AES(e)),
        (this._prev = i.from(n)),
        (this._cache = i.allocUnsafe(0)),
        (this._secCache = i.allocUnsafe(0)),
        (this._decrypt = a),
        (this._mode = t);
    }
    n(1)(a, o),
      (a.prototype._update = function(t) {
        return this._mode.encrypt(this, t, this._decrypt);
      }),
      (a.prototype._final = function() {
        this._cipher.scrub();
      }),
      (t.exports = a);
  },
  function(t, e, n) {
    var r = n(17);
    (t.exports = v), (v.simpleSieve = y), (v.fermatTest = g);
    var i = n(4),
      o = new i(24),
      a = new (n(80))(),
      s = new i(1),
      u = new i(2),
      c = new i(5),
      l = (new i(16), new i(8), new i(10)),
      h = new i(3),
      f = (new i(7), new i(11)),
      p = new i(4),
      d = (new i(12), null);
    function m() {
      if (null !== d) return d;
      var t = [];
      t[0] = 2;
      for (var e = 1, n = 3; n < 1048576; n += 2) {
        for (
          var r = Math.ceil(Math.sqrt(n)), i = 0;
          i < e && t[i] <= r && n % t[i] != 0;
          i++
        );
        (e !== i && t[i] <= r) || (t[e++] = n);
      }
      return (d = t), t;
    }
    function y(t) {
      for (var e = m(), n = 0; n < e.length; n++)
        if (0 === t.modn(e[n])) return 0 === t.cmpn(e[n]);
      return !0;
    }
    function g(t) {
      var e = i.mont(t);
      return (
        0 ===
        u
          .toRed(e)
          .redPow(t.subn(1))
          .fromRed()
          .cmpn(1)
      );
    }
    function v(t, e) {
      if (t < 16) return new i(2 === e || 5 === e ? [140, 123] : [140, 39]);
      var n, d;
      for (e = new i(e); ; ) {
        for (n = new i(r(Math.ceil(t / 8))); n.bitLength() > t; ) n.ishrn(1);
        if ((n.isEven() && n.iadd(s), n.testn(1) || n.iadd(u), e.cmp(u))) {
          if (!e.cmp(c)) for (; n.mod(l).cmp(h); ) n.iadd(p);
        } else for (; n.mod(o).cmp(f); ) n.iadd(p);
        if (
          y((d = n.shrn(1))) &&
          y(n) &&
          g(d) &&
          g(n) &&
          a.test(d) &&
          a.test(n)
        )
          return n;
      }
    }
  },
  function(t, e) {
    t.exports = function(t) {
      return (
        t.webpackPolyfill ||
          ((t.deprecate = function() {}),
          (t.paths = []),
          t.children || (t.children = []),
          Object.defineProperty(t, "loaded", {
            enumerable: !0,
            get: function() {
              return t.l;
            }
          }),
          Object.defineProperty(t, "id", {
            enumerable: !0,
            get: function() {
              return t.i;
            }
          }),
          (t.webpackPolyfill = 1)),
        t
      );
    };
  },
  function(t, e, n) {
    var r = n(4),
      i = n(81);
    function o(t) {
      this.rand = t || new i.Rand();
    }
    (t.exports = o),
      (o.create = function(t) {
        return new o(t);
      }),
      (o.prototype._randbelow = function(t) {
        var e = t.bitLength(),
          n = Math.ceil(e / 8);
        do {
          var i = new r(this.rand.generate(n));
        } while (i.cmp(t) >= 0);
        return i;
      }),
      (o.prototype._randrange = function(t, e) {
        var n = e.sub(t);
        return t.add(this._randbelow(n));
      }),
      (o.prototype.test = function(t, e, n) {
        var i = t.bitLength(),
          o = r.mont(t),
          a = new r(1).toRed(o);
        e || (e = Math.max(1, (i / 48) | 0));
        for (var s = t.subn(1), u = 0; !s.testn(u); u++);
        for (var c = t.shrn(u), l = s.toRed(o); e > 0; e--) {
          var h = this._randrange(new r(2), s);
          n && n(h);
          var f = h.toRed(o).redPow(c);
          if (0 !== f.cmp(a) && 0 !== f.cmp(l)) {
            for (var p = 1; p < u; p++) {
              if (0 === (f = f.redSqr()).cmp(a)) return !1;
              if (0 === f.cmp(l)) break;
            }
            if (p === u) return !1;
          }
        }
        return !0;
      }),
      (o.prototype.getDivisor = function(t, e) {
        var n = t.bitLength(),
          i = r.mont(t),
          o = new r(1).toRed(i);
        e || (e = Math.max(1, (n / 48) | 0));
        for (var a = t.subn(1), s = 0; !a.testn(s); s++);
        for (var u = t.shrn(s), c = a.toRed(i); e > 0; e--) {
          var l = this._randrange(new r(2), a),
            h = t.gcd(l);
          if (0 !== h.cmpn(1)) return h;
          var f = l.toRed(i).redPow(u);
          if (0 !== f.cmp(o) && 0 !== f.cmp(c)) {
            for (var p = 1; p < s; p++) {
              if (0 === (f = f.redSqr()).cmp(o))
                return f
                  .fromRed()
                  .subn(1)
                  .gcd(t);
              if (0 === f.cmp(c)) break;
            }
            if (p === s)
              return (f = f.redSqr())
                .fromRed()
                .subn(1)
                .gcd(t);
          }
        }
        return !1;
      });
  },
  function(t, e, n) {
    var r;
    function i(t) {
      this.rand = t;
    }
    if (
      ((t.exports = function(t) {
        return r || (r = new i(null)), r.generate(t);
      }),
      (t.exports.Rand = i),
      (i.prototype.generate = function(t) {
        return this._rand(t);
      }),
      (i.prototype._rand = function(t) {
        if (this.rand.getBytes) return this.rand.getBytes(t);
        for (var e = new Uint8Array(t), n = 0; n < e.length; n++)
          e[n] = this.rand.getByte();
        return e;
      }),
      "object" == typeof self)
    )
      self.crypto && self.crypto.getRandomValues
        ? (i.prototype._rand = function(t) {
            var e = new Uint8Array(t);
            return self.crypto.getRandomValues(e), e;
          })
        : self.msCrypto && self.msCrypto.getRandomValues
        ? (i.prototype._rand = function(t) {
            var e = new Uint8Array(t);
            return self.msCrypto.getRandomValues(e), e;
          })
        : "object" == typeof window &&
          (i.prototype._rand = function() {
            throw new Error("Not implemented yet");
          });
    else
      try {
        var o = n(145);
        if ("function" != typeof o.randomBytes)
          throw new Error("Not supported");
        i.prototype._rand = function(t) {
          return o.randomBytes(t);
        };
      } catch (t) {}
  },
  function(t, e, n) {
    "use strict";
    var r = e;
    function i(t) {
      return 1 === t.length ? "0" + t : t;
    }
    function o(t) {
      for (var e = "", n = 0; n < t.length; n++) e += i(t[n].toString(16));
      return e;
    }
    (r.toArray = function(t, e) {
      if (Array.isArray(t)) return t.slice();
      if (!t) return [];
      var n = [];
      if ("string" != typeof t) {
        for (var r = 0; r < t.length; r++) n[r] = 0 | t[r];
        return n;
      }
      if ("hex" === e)
        for (
          (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t),
            r = 0;
          r < t.length;
          r += 2
        )
          n.push(parseInt(t[r] + t[r + 1], 16));
      else
        for (r = 0; r < t.length; r++) {
          var i = t.charCodeAt(r),
            o = i >> 8,
            a = 255 & i;
          o ? n.push(o, a) : n.push(a);
        }
      return n;
    }),
      (r.zero2 = i),
      (r.toHex = o),
      (r.encode = function(t, e) {
        return "hex" === e ? o(t) : t;
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(10).rotr32;
    function i(t, e, n) {
      return (t & e) ^ (~t & n);
    }
    function o(t, e, n) {
      return (t & e) ^ (t & n) ^ (e & n);
    }
    function a(t, e, n) {
      return t ^ e ^ n;
    }
    (e.ft_1 = function(t, e, n, r) {
      return 0 === t
        ? i(e, n, r)
        : 1 === t || 3 === t
        ? a(e, n, r)
        : 2 === t
        ? o(e, n, r)
        : void 0;
    }),
      (e.ch32 = i),
      (e.maj32 = o),
      (e.p32 = a),
      (e.s0_256 = function(t) {
        return r(t, 2) ^ r(t, 13) ^ r(t, 22);
      }),
      (e.s1_256 = function(t) {
        return r(t, 6) ^ r(t, 11) ^ r(t, 25);
      }),
      (e.g0_256 = function(t) {
        return r(t, 7) ^ r(t, 18) ^ (t >>> 3);
      }),
      (e.g1_256 = function(t) {
        return r(t, 17) ^ r(t, 19) ^ (t >>> 10);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(23),
      o = n(83),
      a = n(8),
      s = r.sum32,
      u = r.sum32_4,
      c = r.sum32_5,
      l = o.ch32,
      h = o.maj32,
      f = o.s0_256,
      p = o.s1_256,
      d = o.g0_256,
      m = o.g1_256,
      y = i.BlockHash,
      g = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ];
    function v() {
      if (!(this instanceof v)) return new v();
      y.call(this),
        (this.h = [
          1779033703,
          3144134277,
          1013904242,
          2773480762,
          1359893119,
          2600822924,
          528734635,
          1541459225
        ]),
        (this.k = g),
        (this.W = new Array(64));
    }
    r.inherits(v, y),
      (t.exports = v),
      (v.blockSize = 512),
      (v.outSize = 256),
      (v.hmacStrength = 192),
      (v.padLength = 64),
      (v.prototype._update = function(t, e) {
        for (var n = this.W, r = 0; r < 16; r++) n[r] = t[e + r];
        for (; r < n.length; r++)
          n[r] = u(m(n[r - 2]), n[r - 7], d(n[r - 15]), n[r - 16]);
        var i = this.h[0],
          o = this.h[1],
          y = this.h[2],
          g = this.h[3],
          v = this.h[4],
          b = this.h[5],
          w = this.h[6],
          _ = this.h[7];
        for (a(this.k.length === n.length), r = 0; r < n.length; r++) {
          var S = c(_, p(v), l(v, b, w), this.k[r], n[r]),
            x = s(f(i), h(i, o, y));
          (_ = w),
            (w = b),
            (b = v),
            (v = s(g, S)),
            (g = y),
            (y = o),
            (o = i),
            (i = s(S, x));
        }
        (this.h[0] = s(this.h[0], i)),
          (this.h[1] = s(this.h[1], o)),
          (this.h[2] = s(this.h[2], y)),
          (this.h[3] = s(this.h[3], g)),
          (this.h[4] = s(this.h[4], v)),
          (this.h[5] = s(this.h[5], b)),
          (this.h[6] = s(this.h[6], w)),
          (this.h[7] = s(this.h[7], _));
      }),
      (v.prototype._digest = function(t) {
        return "hex" === t
          ? r.toHex32(this.h, "big")
          : r.split32(this.h, "big");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(23),
      o = n(8),
      a = r.rotr64_hi,
      s = r.rotr64_lo,
      u = r.shr64_hi,
      c = r.shr64_lo,
      l = r.sum64,
      h = r.sum64_hi,
      f = r.sum64_lo,
      p = r.sum64_4_hi,
      d = r.sum64_4_lo,
      m = r.sum64_5_hi,
      y = r.sum64_5_lo,
      g = i.BlockHash,
      v = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
    function b() {
      if (!(this instanceof b)) return new b();
      g.call(this),
        (this.h = [
          1779033703,
          4089235720,
          3144134277,
          2227873595,
          1013904242,
          4271175723,
          2773480762,
          1595750129,
          1359893119,
          2917565137,
          2600822924,
          725511199,
          528734635,
          4215389547,
          1541459225,
          327033209
        ]),
        (this.k = v),
        (this.W = new Array(160));
    }
    function w(t, e, n, r, i) {
      var o = (t & n) ^ (~t & i);
      return o < 0 && (o += 4294967296), o;
    }
    function _(t, e, n, r, i, o) {
      var a = (e & r) ^ (~e & o);
      return a < 0 && (a += 4294967296), a;
    }
    function S(t, e, n, r, i) {
      var o = (t & n) ^ (t & i) ^ (n & i);
      return o < 0 && (o += 4294967296), o;
    }
    function x(t, e, n, r, i, o) {
      var a = (e & r) ^ (e & o) ^ (r & o);
      return a < 0 && (a += 4294967296), a;
    }
    function T(t, e) {
      var n = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);
      return n < 0 && (n += 4294967296), n;
    }
    function A(t, e) {
      var n = s(t, e, 28) ^ s(e, t, 2) ^ s(e, t, 7);
      return n < 0 && (n += 4294967296), n;
    }
    function k(t, e) {
      var n = a(t, e, 14) ^ a(t, e, 18) ^ a(e, t, 9);
      return n < 0 && (n += 4294967296), n;
    }
    function E(t, e) {
      var n = s(t, e, 14) ^ s(t, e, 18) ^ s(e, t, 9);
      return n < 0 && (n += 4294967296), n;
    }
    function N(t, e) {
      var n = a(t, e, 1) ^ a(t, e, 8) ^ u(t, e, 7);
      return n < 0 && (n += 4294967296), n;
    }
    function O(t, e) {
      var n = s(t, e, 1) ^ s(t, e, 8) ^ c(t, e, 7);
      return n < 0 && (n += 4294967296), n;
    }
    function C(t, e) {
      var n = a(t, e, 19) ^ a(e, t, 29) ^ u(t, e, 6);
      return n < 0 && (n += 4294967296), n;
    }
    function I(t, e) {
      var n = s(t, e, 19) ^ s(e, t, 29) ^ c(t, e, 6);
      return n < 0 && (n += 4294967296), n;
    }
    r.inherits(b, g),
      (t.exports = b),
      (b.blockSize = 1024),
      (b.outSize = 512),
      (b.hmacStrength = 192),
      (b.padLength = 128),
      (b.prototype._prepareBlock = function(t, e) {
        for (var n = this.W, r = 0; r < 32; r++) n[r] = t[e + r];
        for (; r < n.length; r += 2) {
          var i = C(n[r - 4], n[r - 3]),
            o = I(n[r - 4], n[r - 3]),
            a = n[r - 14],
            s = n[r - 13],
            u = N(n[r - 30], n[r - 29]),
            c = O(n[r - 30], n[r - 29]),
            l = n[r - 32],
            h = n[r - 31];
          (n[r] = p(i, o, a, s, u, c, l, h)),
            (n[r + 1] = d(i, o, a, s, u, c, l, h));
        }
      }),
      (b.prototype._update = function(t, e) {
        this._prepareBlock(t, e);
        var n = this.W,
          r = this.h[0],
          i = this.h[1],
          a = this.h[2],
          s = this.h[3],
          u = this.h[4],
          c = this.h[5],
          p = this.h[6],
          d = this.h[7],
          g = this.h[8],
          v = this.h[9],
          b = this.h[10],
          N = this.h[11],
          O = this.h[12],
          C = this.h[13],
          I = this.h[14],
          M = this.h[15];
        o(this.k.length === n.length);
        for (var P = 0; P < n.length; P += 2) {
          var R = I,
            D = M,
            F = k(g, v),
            z = E(g, v),
            L = w(g, v, b, N, O),
            j = _(g, v, b, N, O, C),
            B = this.k[P],
            q = this.k[P + 1],
            U = n[P],
            V = n[P + 1],
            W = m(R, D, F, z, L, j, B, q, U, V),
            G = y(R, D, F, z, L, j, B, q, U, V);
          (R = T(r, i)),
            (D = A(r, i)),
            (F = S(r, i, a, s, u)),
            (z = x(r, i, a, s, u, c));
          var H = h(R, D, F, z),
            K = f(R, D, F, z);
          (I = O),
            (M = C),
            (O = b),
            (C = N),
            (b = g),
            (N = v),
            (g = h(p, d, W, G)),
            (v = f(d, d, W, G)),
            (p = u),
            (d = c),
            (u = a),
            (c = s),
            (a = r),
            (s = i),
            (r = h(W, G, H, K)),
            (i = f(W, G, H, K));
        }
        l(this.h, 0, r, i),
          l(this.h, 2, a, s),
          l(this.h, 4, u, c),
          l(this.h, 6, p, d),
          l(this.h, 8, g, v),
          l(this.h, 10, b, N),
          l(this.h, 12, O, C),
          l(this.h, 14, I, M);
      }),
      (b.prototype._digest = function(t) {
        return "hex" === t
          ? r.toHex32(this.h, "big")
          : r.split32(this.h, "big");
      });
  },
  function(t, e, n) {
    var r = n(1),
      i = n(25).Reporter,
      o = n(3).Buffer;
    function a(t, e) {
      i.call(this, e),
        o.isBuffer(t)
          ? ((this.base = t), (this.offset = 0), (this.length = t.length))
          : this.error("Input not Buffer");
    }
    function s(t, e) {
      if (Array.isArray(t))
        (this.length = 0),
          (this.value = t.map(function(t) {
            return (
              t instanceof s || (t = new s(t, e)), (this.length += t.length), t
            );
          }, this));
      else if ("number" == typeof t) {
        if (!(0 <= t && t <= 255))
          return e.error("non-byte EncoderBuffer value");
        (this.value = t), (this.length = 1);
      } else if ("string" == typeof t)
        (this.value = t), (this.length = o.byteLength(t));
      else {
        if (!o.isBuffer(t)) return e.error("Unsupported type: " + typeof t);
        (this.value = t), (this.length = t.length);
      }
    }
    r(a, i),
      (e.DecoderBuffer = a),
      (a.prototype.save = function() {
        return { offset: this.offset, reporter: i.prototype.save.call(this) };
      }),
      (a.prototype.restore = function(t) {
        var e = new a(this.base);
        return (
          (e.offset = t.offset),
          (e.length = this.offset),
          (this.offset = t.offset),
          i.prototype.restore.call(this, t.reporter),
          e
        );
      }),
      (a.prototype.isEmpty = function() {
        return this.offset === this.length;
      }),
      (a.prototype.readUInt8 = function(t) {
        return this.offset + 1 <= this.length
          ? this.base.readUInt8(this.offset++, !0)
          : this.error(t || "DecoderBuffer overrun");
      }),
      (a.prototype.skip = function(t, e) {
        if (!(this.offset + t <= this.length))
          return this.error(e || "DecoderBuffer overrun");
        var n = new a(this.base);
        return (
          (n._reporterState = this._reporterState),
          (n.offset = this.offset),
          (n.length = this.offset + t),
          (this.offset += t),
          n
        );
      }),
      (a.prototype.raw = function(t) {
        return this.base.slice(t ? t.offset : this.offset, this.length);
      }),
      (e.EncoderBuffer = s),
      (s.prototype.join = function(t, e) {
        return (
          t || (t = new o(this.length)),
          e || (e = 0),
          0 === this.length
            ? t
            : (Array.isArray(this.value)
                ? this.value.forEach(function(n) {
                    n.join(t, e), (e += n.length);
                  })
                : ("number" == typeof this.value
                    ? (t[e] = this.value)
                    : "string" == typeof this.value
                    ? t.write(this.value, e)
                    : o.isBuffer(this.value) && this.value.copy(t, e),
                  (e += this.length)),
              t)
        );
      });
  },
  function(t, e, n) {
    var r = e;
    (r._reverse = function(t) {
      var e = {};
      return (
        Object.keys(t).forEach(function(n) {
          (0 | n) == n && (n |= 0);
          var r = t[n];
          e[r] = n;
        }),
        e
      );
    }),
      (r.der = n(176));
  },
  function(t, e, n) {
    var r = n(1),
      i = n(24),
      o = i.base,
      a = i.bignum,
      s = i.constants.der;
    function u(t) {
      (this.enc = "der"),
        (this.name = t.name),
        (this.entity = t),
        (this.tree = new c()),
        this.tree._init(t.body);
    }
    function c(t) {
      o.Node.call(this, "der", t);
    }
    function l(t, e) {
      var n = t.readUInt8(e);
      if (t.isError(n)) return n;
      var r = s.tagClass[n >> 6],
        i = 0 == (32 & n);
      if (31 == (31 & n)) {
        var o = n;
        for (n = 0; 128 == (128 & o); ) {
          if (((o = t.readUInt8(e)), t.isError(o))) return o;
          (n <<= 7), (n |= 127 & o);
        }
      } else n &= 31;
      return { cls: r, primitive: i, tag: n, tagStr: s.tag[n] };
    }
    function h(t, e, n) {
      var r = t.readUInt8(n);
      if (t.isError(r)) return r;
      if (!e && 128 === r) return null;
      if (0 == (128 & r)) return r;
      var i = 127 & r;
      if (i > 4) return t.error("length octect is too long");
      r = 0;
      for (var o = 0; o < i; o++) {
        r <<= 8;
        var a = t.readUInt8(n);
        if (t.isError(a)) return a;
        r |= a;
      }
      return r;
    }
    (t.exports = u),
      (u.prototype.decode = function(t, e) {
        return (
          t instanceof o.DecoderBuffer || (t = new o.DecoderBuffer(t, e)),
          this.tree._decode(t, e)
        );
      }),
      r(c, o.Node),
      (c.prototype._peekTag = function(t, e, n) {
        if (t.isEmpty()) return !1;
        var r = t.save(),
          i = l(t, 'Failed to peek tag: "' + e + '"');
        return t.isError(i)
          ? i
          : (t.restore(r),
            i.tag === e || i.tagStr === e || i.tagStr + "of" === e || n);
      }),
      (c.prototype._decodeTag = function(t, e, n) {
        var r = l(t, 'Failed to decode tag of "' + e + '"');
        if (t.isError(r)) return r;
        var i = h(t, r.primitive, 'Failed to get length of "' + e + '"');
        if (t.isError(i)) return i;
        if (!n && r.tag !== e && r.tagStr !== e && r.tagStr + "of" !== e)
          return t.error('Failed to match tag: "' + e + '"');
        if (r.primitive || null !== i)
          return t.skip(i, 'Failed to match body of: "' + e + '"');
        var o = t.save(),
          a = this._skipUntilEnd(
            t,
            'Failed to skip indefinite length body: "' + this.tag + '"'
          );
        return t.isError(a)
          ? a
          : ((i = t.offset - o.offset),
            t.restore(o),
            t.skip(i, 'Failed to match body of: "' + e + '"'));
      }),
      (c.prototype._skipUntilEnd = function(t, e) {
        for (;;) {
          var n = l(t, e);
          if (t.isError(n)) return n;
          var r,
            i = h(t, n.primitive, e);
          if (t.isError(i)) return i;
          if (
            ((r =
              n.primitive || null !== i ? t.skip(i) : this._skipUntilEnd(t, e)),
            t.isError(r))
          )
            return r;
          if ("end" === n.tagStr) break;
        }
      }),
      (c.prototype._decodeList = function(t, e, n, r) {
        for (var i = []; !t.isEmpty(); ) {
          var o = this._peekTag(t, "end");
          if (t.isError(o)) return o;
          var a = n.decode(t, "der", r);
          if (t.isError(a) && o) break;
          i.push(a);
        }
        return i;
      }),
      (c.prototype._decodeStr = function(t, e) {
        if ("bitstr" === e) {
          var n = t.readUInt8();
          return t.isError(n) ? n : { unused: n, data: t.raw() };
        }
        if ("bmpstr" === e) {
          var r = t.raw();
          if (r.length % 2 == 1)
            return t.error("Decoding of string type: bmpstr length mismatch");
          for (var i = "", o = 0; o < r.length / 2; o++)
            i += String.fromCharCode(r.readUInt16BE(2 * o));
          return i;
        }
        if ("numstr" === e) {
          var a = t.raw().toString("ascii");
          return this._isNumstr(a)
            ? a
            : t.error("Decoding of string type: numstr unsupported characters");
        }
        if ("octstr" === e) return t.raw();
        if ("objDesc" === e) return t.raw();
        if ("printstr" === e) {
          var s = t.raw().toString("ascii");
          return this._isPrintstr(s)
            ? s
            : t.error(
                "Decoding of string type: printstr unsupported characters"
              );
        }
        return /str$/.test(e)
          ? t.raw().toString()
          : t.error("Decoding of string type: " + e + " unsupported");
      }),
      (c.prototype._decodeObjid = function(t, e, n) {
        for (var r, i = [], o = 0; !t.isEmpty(); ) {
          var a = t.readUInt8();
          (o <<= 7), (o |= 127 & a), 0 == (128 & a) && (i.push(o), (o = 0));
        }
        128 & a && i.push(o);
        var s = (i[0] / 40) | 0,
          u = i[0] % 40;
        if (((r = n ? i : [s, u].concat(i.slice(1))), e)) {
          var c = e[r.join(" ")];
          void 0 === c && (c = e[r.join(".")]), void 0 !== c && (r = c);
        }
        return r;
      }),
      (c.prototype._decodeTime = function(t, e) {
        var n = t.raw().toString();
        if ("gentime" === e)
          var r = 0 | n.slice(0, 4),
            i = 0 | n.slice(4, 6),
            o = 0 | n.slice(6, 8),
            a = 0 | n.slice(8, 10),
            s = 0 | n.slice(10, 12),
            u = 0 | n.slice(12, 14);
        else {
          if ("utctime" !== e)
            return t.error("Decoding " + e + " time is not supported yet");
          (r = 0 | n.slice(0, 2)),
            (i = 0 | n.slice(2, 4)),
            (o = 0 | n.slice(4, 6)),
            (a = 0 | n.slice(6, 8)),
            (s = 0 | n.slice(8, 10)),
            (u = 0 | n.slice(10, 12));
          r = r < 70 ? 2e3 + r : 1900 + r;
        }
        return Date.UTC(r, i - 1, o, a, s, u, 0);
      }),
      (c.prototype._decodeNull = function(t) {
        return null;
      }),
      (c.prototype._decodeBool = function(t) {
        var e = t.readUInt8();
        return t.isError(e) ? e : 0 !== e;
      }),
      (c.prototype._decodeInt = function(t, e) {
        var n = t.raw(),
          r = new a(n);
        return e && (r = e[r.toString(10)] || r), r;
      }),
      (c.prototype._use = function(t, e) {
        return "function" == typeof t && (t = t(e)), t._getDecoder("der").tree;
      });
  },
  function(t, e, n) {
    var r = n(1),
      i = n(3).Buffer,
      o = n(24),
      a = o.base,
      s = o.constants.der;
    function u(t) {
      (this.enc = "der"),
        (this.name = t.name),
        (this.entity = t),
        (this.tree = new c()),
        this.tree._init(t.body);
    }
    function c(t) {
      a.Node.call(this, "der", t);
    }
    function l(t) {
      return t < 10 ? "0" + t : t;
    }
    (t.exports = u),
      (u.prototype.encode = function(t, e) {
        return this.tree._encode(t, e).join();
      }),
      r(c, a.Node),
      (c.prototype._encodeComposite = function(t, e, n, r) {
        var o,
          a = (function(t, e, n, r) {
            var i;
            "seqof" === t ? (t = "seq") : "setof" === t && (t = "set");
            if (s.tagByName.hasOwnProperty(t)) i = s.tagByName[t];
            else {
              if ("number" != typeof t || (0 | t) !== t)
                return r.error("Unknown tag: " + t);
              i = t;
            }
            if (i >= 31) return r.error("Multi-octet tag encoding unsupported");
            e || (i |= 32);
            return (i |= s.tagClassByName[n || "universal"] << 6);
          })(t, e, n, this.reporter);
        if (r.length < 128)
          return (
            ((o = new i(2))[0] = a),
            (o[1] = r.length),
            this._createEncoderBuffer([o, r])
          );
        for (var u = 1, c = r.length; c >= 256; c >>= 8) u++;
        ((o = new i(2 + u))[0] = a), (o[1] = 128 | u);
        c = 1 + u;
        for (var l = r.length; l > 0; c--, l >>= 8) o[c] = 255 & l;
        return this._createEncoderBuffer([o, r]);
      }),
      (c.prototype._encodeStr = function(t, e) {
        if ("bitstr" === e)
          return this._createEncoderBuffer([0 | t.unused, t.data]);
        if ("bmpstr" === e) {
          for (var n = new i(2 * t.length), r = 0; r < t.length; r++)
            n.writeUInt16BE(t.charCodeAt(r), 2 * r);
          return this._createEncoderBuffer(n);
        }
        return "numstr" === e
          ? this._isNumstr(t)
            ? this._createEncoderBuffer(t)
            : this.reporter.error(
                "Encoding of string type: numstr supports only digits and space"
              )
          : "printstr" === e
          ? this._isPrintstr(t)
            ? this._createEncoderBuffer(t)
            : this.reporter.error(
                "Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"
              )
          : /str$/.test(e)
          ? this._createEncoderBuffer(t)
          : "objDesc" === e
          ? this._createEncoderBuffer(t)
          : this.reporter.error(
              "Encoding of string type: " + e + " unsupported"
            );
      }),
      (c.prototype._encodeObjid = function(t, e, n) {
        if ("string" == typeof t) {
          if (!e)
            return this.reporter.error(
              "string objid given, but no values map found"
            );
          if (!e.hasOwnProperty(t))
            return this.reporter.error("objid not found in values map");
          t = e[t].split(/[\s\.]+/g);
          for (var r = 0; r < t.length; r++) t[r] |= 0;
        } else if (Array.isArray(t)) {
          t = t.slice();
          for (r = 0; r < t.length; r++) t[r] |= 0;
        }
        if (!Array.isArray(t))
          return this.reporter.error(
            "objid() should be either array or string, got: " +
              JSON.stringify(t)
          );
        if (!n) {
          if (t[1] >= 40)
            return this.reporter.error("Second objid identifier OOB");
          t.splice(0, 2, 40 * t[0] + t[1]);
        }
        var o = 0;
        for (r = 0; r < t.length; r++) {
          var a = t[r];
          for (o++; a >= 128; a >>= 7) o++;
        }
        var s = new i(o),
          u = s.length - 1;
        for (r = t.length - 1; r >= 0; r--) {
          a = t[r];
          for (s[u--] = 127 & a; (a >>= 7) > 0; ) s[u--] = 128 | (127 & a);
        }
        return this._createEncoderBuffer(s);
      }),
      (c.prototype._encodeTime = function(t, e) {
        var n,
          r = new Date(t);
        return (
          "gentime" === e
            ? (n = [
                l(r.getFullYear()),
                l(r.getUTCMonth() + 1),
                l(r.getUTCDate()),
                l(r.getUTCHours()),
                l(r.getUTCMinutes()),
                l(r.getUTCSeconds()),
                "Z"
              ].join(""))
            : "utctime" === e
            ? (n = [
                l(r.getFullYear() % 100),
                l(r.getUTCMonth() + 1),
                l(r.getUTCDate()),
                l(r.getUTCHours()),
                l(r.getUTCMinutes()),
                l(r.getUTCSeconds()),
                "Z"
              ].join(""))
            : this.reporter.error(
                "Encoding " + e + " time is not supported yet"
              ),
          this._encodeStr(n, "octstr")
        );
      }),
      (c.prototype._encodeNull = function() {
        return this._createEncoderBuffer("");
      }),
      (c.prototype._encodeInt = function(t, e) {
        if ("string" == typeof t) {
          if (!e)
            return this.reporter.error(
              "String int or enum given, but no values map"
            );
          if (!e.hasOwnProperty(t))
            return this.reporter.error(
              "Values map doesn't contain: " + JSON.stringify(t)
            );
          t = e[t];
        }
        if ("number" != typeof t && !i.isBuffer(t)) {
          var n = t.toArray();
          !t.sign && 128 & n[0] && n.unshift(0), (t = new i(n));
        }
        if (i.isBuffer(t)) {
          var r = t.length;
          0 === t.length && r++;
          var o = new i(r);
          return (
            t.copy(o),
            0 === t.length && (o[0] = 0),
            this._createEncoderBuffer(o)
          );
        }
        if (t < 128) return this._createEncoderBuffer(t);
        if (t < 256) return this._createEncoderBuffer([0, t]);
        r = 1;
        for (var a = t; a >= 256; a >>= 8) r++;
        for (a = (o = new Array(r)).length - 1; a >= 0; a--)
          (o[a] = 255 & t), (t >>= 8);
        return 128 & o[0] && o.unshift(0), this._createEncoderBuffer(new i(o));
      }),
      (c.prototype._encodeBool = function(t) {
        return this._createEncoderBuffer(t ? 255 : 0);
      }),
      (c.prototype._use = function(t, e) {
        return "function" == typeof t && (t = t(e)), t._getEncoder("der").tree;
      }),
      (c.prototype._skipDefault = function(t, e, n) {
        var r,
          i = this._baseState;
        if (null === i.default) return !1;
        var o = t.join();
        if (
          (void 0 === i.defaultBuffer &&
            (i.defaultBuffer = this._encodeValue(i.default, e, n).join()),
          o.length !== i.defaultBuffer.length)
        )
          return !1;
        for (r = 0; r < o.length; r++)
          if (o[r] !== i.defaultBuffer[r]) return !1;
        return !0;
      });
  },
  function(t) {
    t.exports = {
      "1.3.132.0.10": "secp256k1",
      "1.3.132.0.33": "p224",
      "1.2.840.10045.3.1.1": "p192",
      "1.2.840.10045.3.1.7": "p256",
      "1.3.132.0.34": "p384",
      "1.3.132.0.35": "p521"
    };
  },
  function(t, e, n) {
    var r = n(20),
      i = n(2).Buffer;
    function o(t) {
      var e = i.allocUnsafe(4);
      return e.writeUInt32BE(t, 0), e;
    }
    t.exports = function(t, e) {
      for (var n, a = i.alloc(0), s = 0; a.length < e; )
        (n = o(s++)),
          (a = i.concat([
            a,
            r("sha1")
              .update(t)
              .update(n)
              .digest()
          ]));
      return a.slice(0, e);
    };
  },
  function(t, e) {
    t.exports = function(t, e) {
      for (var n = t.length, r = -1; ++r < n; ) t[r] ^= e[r];
      return t;
    };
  },
  function(t, e, n) {
    var r = n(4),
      i = n(2).Buffer;
    t.exports = function(t, e) {
      return i.from(
        t
          .toRed(r.mont(e.modulus))
          .redPow(new r(e.publicExponent))
          .fromRed()
          .toArray()
      );
    };
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7);
    e.auxiliaryInputFromSpec = function(t) {
      switch (t.type) {
        case "BinaryCounter":
          return new s(t.args);
        default:
          throw new Error("Unknown auxiliary input: " + t);
      }
    };
    var a = (function() {
      return function(t) {
        this.depth = t;
      };
    })();
    e.AuxiliaryInput = a;
    var s = (function(t) {
      function e(e) {
        return t.call(this, e.numBits) || this;
      }
      return (
        i(e, t),
        (e.prototype.getTensors = function(t) {
          for (var e = o.buffer([t, this.depth]), n = 0; n < t; ++n)
            for (var r = 0; r < this.depth; ++r)
              e.set(Math.floor((n + 1) / Math.pow(2, r)) % 2 ? 1 : -1, n, r);
          return e.toTensor().as2D(t, this.depth);
        }),
        e
      );
    })(a);
    e.BinaryCounter = s;
  },
  function(t, e, n) {
    "use strict";
    t.exports = h;
    var r,
      i = n(15),
      o = i.LongBits,
      a = i.base64,
      s = i.utf8;
    function u(t, e, n) {
      (this.fn = t), (this.len = e), (this.next = void 0), (this.val = n);
    }
    function c() {}
    function l(t) {
      (this.head = t.head),
        (this.tail = t.tail),
        (this.len = t.len),
        (this.next = t.states);
    }
    function h() {
      (this.len = 0),
        (this.head = new u(c, 0, 0)),
        (this.tail = this.head),
        (this.states = null);
    }
    function f(t, e, n) {
      e[n] = 255 & t;
    }
    function p(t, e) {
      (this.len = t), (this.next = void 0), (this.val = e);
    }
    function d(t, e, n) {
      for (; t.hi; )
        (e[n++] = (127 & t.lo) | 128),
          (t.lo = ((t.lo >>> 7) | (t.hi << 25)) >>> 0),
          (t.hi >>>= 7);
      for (; t.lo > 127; ) (e[n++] = (127 & t.lo) | 128), (t.lo = t.lo >>> 7);
      e[n++] = t.lo;
    }
    function m(t, e, n) {
      (e[n] = 255 & t),
        (e[n + 1] = (t >>> 8) & 255),
        (e[n + 2] = (t >>> 16) & 255),
        (e[n + 3] = t >>> 24);
    }
    (h.create = i.Buffer
      ? function() {
          return (h.create = function() {
            return new r();
          })();
        }
      : function() {
          return new h();
        }),
      (h.alloc = function(t) {
        return new i.Array(t);
      }),
      i.Array !== Array &&
        (h.alloc = i.pool(h.alloc, i.Array.prototype.subarray)),
      (h.prototype._push = function(t, e, n) {
        return (
          (this.tail = this.tail.next = new u(t, e, n)), (this.len += e), this
        );
      }),
      (p.prototype = Object.create(u.prototype)),
      (p.prototype.fn = function(t, e, n) {
        for (; t > 127; ) (e[n++] = (127 & t) | 128), (t >>>= 7);
        e[n] = t;
      }),
      (h.prototype.uint32 = function(t) {
        return (
          (this.len += (this.tail = this.tail.next = new p(
            (t >>>= 0) < 128
              ? 1
              : t < 16384
              ? 2
              : t < 2097152
              ? 3
              : t < 268435456
              ? 4
              : 5,
            t
          )).len),
          this
        );
      }),
      (h.prototype.int32 = function(t) {
        return t < 0 ? this._push(d, 10, o.fromNumber(t)) : this.uint32(t);
      }),
      (h.prototype.sint32 = function(t) {
        return this.uint32(((t << 1) ^ (t >> 31)) >>> 0);
      }),
      (h.prototype.uint64 = function(t) {
        var e = o.from(t);
        return this._push(d, e.length(), e);
      }),
      (h.prototype.int64 = h.prototype.uint64),
      (h.prototype.sint64 = function(t) {
        var e = o.from(t).zzEncode();
        return this._push(d, e.length(), e);
      }),
      (h.prototype.bool = function(t) {
        return this._push(f, 1, t ? 1 : 0);
      }),
      (h.prototype.fixed32 = function(t) {
        return this._push(m, 4, t >>> 0);
      }),
      (h.prototype.sfixed32 = h.prototype.fixed32),
      (h.prototype.fixed64 = function(t) {
        var e = o.from(t);
        return this._push(m, 4, e.lo)._push(m, 4, e.hi);
      }),
      (h.prototype.sfixed64 = h.prototype.fixed64),
      (h.prototype.float = function(t) {
        return this._push(i.float.writeFloatLE, 4, t);
      }),
      (h.prototype.double = function(t) {
        return this._push(i.float.writeDoubleLE, 8, t);
      });
    var y = i.Array.prototype.set
      ? function(t, e, n) {
          e.set(t, n);
        }
      : function(t, e, n) {
          for (var r = 0; r < t.length; ++r) e[n + r] = t[r];
        };
    (h.prototype.bytes = function(t) {
      var e = t.length >>> 0;
      if (!e) return this._push(f, 1, 0);
      if (i.isString(t)) {
        var n = h.alloc((e = a.length(t)));
        a.decode(t, n, 0), (t = n);
      }
      return this.uint32(e)._push(y, e, t);
    }),
      (h.prototype.string = function(t) {
        var e = s.length(t);
        return e ? this.uint32(e)._push(s.write, e, t) : this._push(f, 1, 0);
      }),
      (h.prototype.fork = function() {
        return (
          (this.states = new l(this)),
          (this.head = this.tail = new u(c, 0, 0)),
          (this.len = 0),
          this
        );
      }),
      (h.prototype.reset = function() {
        return (
          this.states
            ? ((this.head = this.states.head),
              (this.tail = this.states.tail),
              (this.len = this.states.len),
              (this.states = this.states.next))
            : ((this.head = this.tail = new u(c, 0, 0)), (this.len = 0)),
          this
        );
      }),
      (h.prototype.ldelim = function() {
        var t = this.head,
          e = this.tail,
          n = this.len;
        return (
          this.reset().uint32(n),
          n && ((this.tail.next = t.next), (this.tail = e), (this.len += n)),
          this
        );
      }),
      (h.prototype.finish = function() {
        for (
          var t = this.head.next, e = this.constructor.alloc(this.len), n = 0;
          t;

        )
          t.fn(t.val, e, n), (n += t.len), (t = t.next);
        return e;
      }),
      (h._configure = function(t) {
        r = t;
      });
  },
  function(t, e, n) {
    "use strict";
    t.exports = u;
    var r,
      i = n(15),
      o = i.LongBits,
      a = i.utf8;
    function s(t, e) {
      return RangeError(
        "index out of range: " + t.pos + " + " + (e || 1) + " > " + t.len
      );
    }
    function u(t) {
      (this.buf = t), (this.pos = 0), (this.len = t.length);
    }
    var c,
      l =
        "undefined" != typeof Uint8Array
          ? function(t) {
              if (t instanceof Uint8Array || Array.isArray(t)) return new u(t);
              throw Error("illegal buffer");
            }
          : function(t) {
              if (Array.isArray(t)) return new u(t);
              throw Error("illegal buffer");
            };
    function h() {
      var t = new o(0, 0),
        e = 0;
      if (!(this.len - this.pos > 4)) {
        for (; e < 3; ++e) {
          if (this.pos >= this.len) throw s(this);
          if (
            ((t.lo = (t.lo | ((127 & this.buf[this.pos]) << (7 * e))) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return t;
        }
        return (
          (t.lo = (t.lo | ((127 & this.buf[this.pos++]) << (7 * e))) >>> 0), t
        );
      }
      for (; e < 4; ++e)
        if (
          ((t.lo = (t.lo | ((127 & this.buf[this.pos]) << (7 * e))) >>> 0),
          this.buf[this.pos++] < 128)
        )
          return t;
      if (
        ((t.lo = (t.lo | ((127 & this.buf[this.pos]) << 28)) >>> 0),
        (t.hi = (t.hi | ((127 & this.buf[this.pos]) >> 4)) >>> 0),
        this.buf[this.pos++] < 128)
      )
        return t;
      if (((e = 0), this.len - this.pos > 4)) {
        for (; e < 5; ++e)
          if (
            ((t.hi =
              (t.hi | ((127 & this.buf[this.pos]) << (7 * e + 3))) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return t;
      } else
        for (; e < 5; ++e) {
          if (this.pos >= this.len) throw s(this);
          if (
            ((t.hi =
              (t.hi | ((127 & this.buf[this.pos]) << (7 * e + 3))) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return t;
        }
      throw Error("invalid varint encoding");
    }
    function f(t, e) {
      return (
        (t[e - 4] | (t[e - 3] << 8) | (t[e - 2] << 16) | (t[e - 1] << 24)) >>> 0
      );
    }
    function p() {
      if (this.pos + 8 > this.len) throw s(this, 8);
      return new o(f(this.buf, (this.pos += 4)), f(this.buf, (this.pos += 4)));
    }
    (u.create = i.Buffer
      ? function(t) {
          return (u.create = function(t) {
            return i.Buffer.isBuffer(t) ? new r(t) : l(t);
          })(t);
        }
      : l),
      (u.prototype._slice =
        i.Array.prototype.subarray || i.Array.prototype.slice),
      (u.prototype.uint32 =
        ((c = 4294967295),
        function() {
          if (
            ((c = (127 & this.buf[this.pos]) >>> 0), this.buf[this.pos++] < 128)
          )
            return c;
          if (
            ((c = (c | ((127 & this.buf[this.pos]) << 7)) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return c;
          if (
            ((c = (c | ((127 & this.buf[this.pos]) << 14)) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return c;
          if (
            ((c = (c | ((127 & this.buf[this.pos]) << 21)) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return c;
          if (
            ((c = (c | ((15 & this.buf[this.pos]) << 28)) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return c;
          if ((this.pos += 5) > this.len)
            throw ((this.pos = this.len), s(this, 10));
          return c;
        })),
      (u.prototype.int32 = function() {
        return 0 | this.uint32();
      }),
      (u.prototype.sint32 = function() {
        var t = this.uint32();
        return ((t >>> 1) ^ -(1 & t)) | 0;
      }),
      (u.prototype.bool = function() {
        return 0 !== this.uint32();
      }),
      (u.prototype.fixed32 = function() {
        if (this.pos + 4 > this.len) throw s(this, 4);
        return f(this.buf, (this.pos += 4));
      }),
      (u.prototype.sfixed32 = function() {
        if (this.pos + 4 > this.len) throw s(this, 4);
        return 0 | f(this.buf, (this.pos += 4));
      }),
      (u.prototype.float = function() {
        if (this.pos + 4 > this.len) throw s(this, 4);
        var t = i.float.readFloatLE(this.buf, this.pos);
        return (this.pos += 4), t;
      }),
      (u.prototype.double = function() {
        if (this.pos + 8 > this.len) throw s(this, 4);
        var t = i.float.readDoubleLE(this.buf, this.pos);
        return (this.pos += 8), t;
      }),
      (u.prototype.bytes = function() {
        var t = this.uint32(),
          e = this.pos,
          n = this.pos + t;
        if (n > this.len) throw s(this, t);
        return (
          (this.pos += t),
          Array.isArray(this.buf)
            ? this.buf.slice(e, n)
            : e === n
            ? new this.buf.constructor(0)
            : this._slice.call(this.buf, e, n)
        );
      }),
      (u.prototype.string = function() {
        var t = this.bytes();
        return a.read(t, 0, t.length);
      }),
      (u.prototype.skip = function(t) {
        if ("number" == typeof t) {
          if (this.pos + t > this.len) throw s(this, t);
          this.pos += t;
        } else
          do {
            if (this.pos >= this.len) throw s(this);
          } while (128 & this.buf[this.pos++]);
        return this;
      }),
      (u.prototype.skipType = function(t) {
        switch (t) {
          case 0:
            this.skip();
            break;
          case 1:
            this.skip(8);
            break;
          case 2:
            this.skip(this.uint32());
            break;
          case 3:
            for (; 4 != (t = 7 & this.uint32()); ) this.skipType(t);
            break;
          case 5:
            this.skip(4);
            break;
          default:
            throw Error("invalid wire type " + t + " at offset " + this.pos);
        }
        return this;
      }),
      (u._configure = function(t) {
        r = t;
        var e = i.Long ? "toLong" : "toNumber";
        i.merge(u.prototype, {
          int64: function() {
            return h.call(this)[e](!1);
          },
          uint64: function() {
            return h.call(this)[e](!0);
          },
          sint64: function() {
            return h
              .call(this)
              .zzDecode()
              [e](!1);
          },
          fixed64: function() {
            return p.call(this)[e](!0);
          },
          sfixed64: function() {
            return p.call(this)[e](!1);
          }
        });
      });
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(12),
      i = n(9),
      o = n(26),
      a = (function() {
        function t(t, e, n, r, i) {
          (this.events = t),
            (this.maxShiftSteps = e),
            (this.numVelocityBins = n),
            (this.program = r),
            (this.isDrum = i);
        }
        return (
          (t.fromNoteSequence = function(e, n, r, a) {
            o.assertIsQuantizedSequence(e);
            for (
              var s = e.notes.filter(function(t, e) {
                  return void 0 === a || t.instrument === a;
                }),
                u = s.sort(function(t, e) {
                  return t.startTime === e.startTime
                    ? t.pitch - e.pitch
                    : t.startTime - e.startTime;
                }),
                c = u.map(function(t, e) {
                  return { step: t.quantizedStartStep, index: e, isOffset: 0 };
                }),
                l = u.map(function(t, e) {
                  return { step: t.quantizedEndStep, index: e, isOffset: 1 };
                }),
                h = c.concat(l).sort(function(t, e) {
                  return t.step === e.step
                    ? t.index === e.index
                      ? t.isOffset - e.isOffset
                      : t.index - e.index
                    : t.step - e.step;
                }),
                f = r ? Math.ceil((i.MIDI_VELOCITIES - 1) / r) : void 0,
                p = [],
                d = 0,
                m = r,
                y = 0,
                g = h;
              y < g.length;
              y++
            ) {
              var v = g[y];
              if (v.step > d) {
                for (; v.step > d + n; )
                  p.push({ type: "time-shift", steps: n }), (d += n);
                p.push({ type: "time-shift", steps: v.step - d }), (d = v.step);
              }
              if (v.isOffset)
                p.push({ type: "note-off", pitch: u[v.index].pitch });
              else {
                if (f) {
                  var b =
                    Math.floor(
                      (u[v.index].velocity - i.MIN_MIDI_VELOCITY - 1) / f
                    ) + 1;
                  b !== m &&
                    (p.push({ type: "velocity-change", velocityBin: b }),
                    (m = b));
                }
                p.push({ type: "note-on", pitch: u[v.index].pitch });
              }
            }
            var w =
                !!s.some(function(t) {
                  return t.isDrum;
                }) &&
                (!s.some(function(t) {
                  return !t.isDrum;
                }) ||
                  void 0),
              _ = Array.from(
                new Set(
                  s.map(function(t) {
                    return t.program;
                  })
                )
              ),
              S = new t(p, n, r, w || 1 !== _.length ? void 0 : _[0], w);
            return S.setNumSteps(e.totalQuantizedSteps), S;
          }),
          (t.prototype.getNumSteps = function() {
            return this.events
              .filter(function(t) {
                return "time-shift" === t.type;
              })
              .map(function(t) {
                return t.steps;
              })
              .reduce(function(t, e) {
                return t + e;
              }, 0);
          }),
          (t.prototype.setNumSteps = function(t) {
            var e = this.getNumSteps();
            if (e < t) {
              if (this.events.length) {
                var n = this.events[this.events.length - 1];
                if ("time-shift" === n.type) {
                  var r = Math.min(t - e, this.maxShiftSteps - n.steps);
                  (n.steps += r), (e += r);
                }
              }
              for (; e < t; )
                e + this.maxShiftSteps > t
                  ? (this.events.push({ type: "time-shift", steps: t - e }),
                    (e = t))
                  : (this.events.push({
                      type: "time-shift",
                      steps: this.maxShiftSteps
                    }),
                    (e += this.maxShiftSteps));
            } else if (e > t)
              for (; this.events.length && e > t; ) {
                var i = this.events[this.events.length - 1];
                "time-shift" === i.type
                  ? e - i.steps < t
                    ? ((i.steps -= e - t), (e = t))
                    : (this.events.pop(), (e -= i.steps))
                  : this.events.pop();
              }
          }),
          (t.prototype.toNoteSequence = function(t) {
            for (
              var e = this,
                n = this.numVelocityBins
                  ? Math.ceil((i.MIDI_VELOCITIES - 1) / this.numVelocityBins)
                  : void 0,
                o = r.NoteSequence.create(),
                a = 0,
                s = void 0,
                u = new Map(),
                c = i.MIN_MIDI_PITCH;
              c <= i.MAX_MIDI_PITCH;
              ++c
            )
              u.set(c, []);
            for (var l = 0, h = this.events; l < h.length; l++) {
              var f = h[l];
              switch (f.type) {
                case "note-on":
                  u.get(f.pitch).push([a, s]);
                  break;
                case "note-off":
                  var p = u.get(f.pitch);
                  if (p.length) {
                    var d = p.shift(),
                      m = d[0],
                      y = d[1];
                    a > m
                      ? o.notes.push(
                          r.NoteSequence.Note.create({
                            pitch: f.pitch,
                            velocity: y,
                            instrument: t,
                            quantizedStartStep: m,
                            quantizedEndStep: a,
                            program: this.program,
                            isDrum: this.isDrum
                          })
                        )
                      : console.log(
                          "Ignoring zero-length note: (pitch = " +
                            f.pitch +
                            ", step = " +
                            a +
                            ")"
                        );
                  } else
                    console.log(
                      "Ignoring note-off with no previous note-on:(pitch = " +
                        f.pitch +
                        ", step = " +
                        a +
                        ")"
                    );
                  break;
                case "time-shift":
                  a += f.steps;
                  break;
                case "velocity-change":
                  if (!n)
                    throw new Error("Unexpected velocity change event: " + f);
                  s = i.MIN_MIDI_VELOCITY + (f.velocityBin - 1) * n + 1;
                  break;
                default:
                  throw new Error("Unrecognized performance event: " + f);
              }
            }
            return (
              u.forEach(function(n, i) {
                for (var s = 0, u = n; s < u.length; s++) {
                  var c = u[s],
                    l = c[0],
                    h = c[1];
                  a > l
                    ? o.notes.push(
                        r.NoteSequence.Note.create({
                          pitch: i,
                          velocity: h,
                          instrument: t,
                          quantizedStartStep: l,
                          quantizedEndStep: a,
                          program: e.program,
                          isDrum: e.isDrum
                        })
                      )
                    : console.log(
                        "Ignoring zero-length note: (pitch = " +
                          i +
                          ", step = " +
                          a +
                          ")"
                      );
                }
              }),
              (o.totalQuantizedSteps = a),
              o
            );
          }),
          t
        );
      })();
    e.Performance = a;
  },
  function(t, e, n) {
    "use strict";
    function r(t) {
      if (
        ((this.size = 0 | t),
        this.size <= 1 || 0 != (this.size & (this.size - 1)))
      )
        throw new Error("FFT size must be a power of two and bigger than 1");
      this._csize = t << 1;
      for (var e = new Array(2 * this.size), n = 0; n < e.length; n += 2) {
        const t = (Math.PI * n) / this.size;
        (e[n] = Math.cos(t)), (e[n + 1] = -Math.sin(t));
      }
      this.table = e;
      for (var r = 0, i = 1; this.size > i; i <<= 1) r++;
      (this._width = r % 2 == 0 ? r - 1 : r),
        (this._bitrev = new Array(1 << this._width));
      for (var o = 0; o < this._bitrev.length; o++) {
        this._bitrev[o] = 0;
        for (var a = 0; a < this._width; a += 2) {
          var s = this._width - a - 2;
          this._bitrev[o] |= ((o >>> a) & 3) << s;
        }
      }
      (this._out = null), (this._data = null), (this._inv = 0);
    }
    (t.exports = r),
      (r.prototype.fromComplexArray = function(t, e) {
        for (
          var n = e || new Array(t.length >>> 1), r = 0;
          r < t.length;
          r += 2
        )
          n[r >>> 1] = t[r];
        return n;
      }),
      (r.prototype.createComplexArray = function() {
        const t = new Array(this._csize);
        for (var e = 0; e < t.length; e++) t[e] = 0;
        return t;
      }),
      (r.prototype.toComplexArray = function(t, e) {
        for (
          var n = e || this.createComplexArray(), r = 0;
          r < n.length;
          r += 2
        )
          (n[r] = t[r >>> 1]), (n[r + 1] = 0);
        return n;
      }),
      (r.prototype.completeSpectrum = function(t) {
        for (var e = this._csize, n = e >>> 1, r = 2; r < n; r += 2)
          (t[e - r] = t[r]), (t[e - r + 1] = -t[r + 1]);
      }),
      (r.prototype.transform = function(t, e) {
        if (t === e)
          throw new Error("Input and output buffers must be different");
        (this._out = t),
          (this._data = e),
          (this._inv = 0),
          this._transform4(),
          (this._out = null),
          (this._data = null);
      }),
      (r.prototype.realTransform = function(t, e) {
        if (t === e)
          throw new Error("Input and output buffers must be different");
        (this._out = t),
          (this._data = e),
          (this._inv = 0),
          this._realTransform4(),
          (this._out = null),
          (this._data = null);
      }),
      (r.prototype.inverseTransform = function(t, e) {
        if (t === e)
          throw new Error("Input and output buffers must be different");
        (this._out = t), (this._data = e), (this._inv = 1), this._transform4();
        for (var n = 0; n < t.length; n++) t[n] /= this.size;
        (this._out = null), (this._data = null);
      }),
      (r.prototype._transform4 = function() {
        var t,
          e,
          n = this._out,
          r = this._csize,
          i = 1 << this._width,
          o = (r / i) << 1,
          a = this._bitrev;
        if (4 === o)
          for (t = 0, e = 0; t < r; t += o, e++) {
            const n = a[e];
            this._singleTransform2(t, n, i);
          }
        else
          for (t = 0, e = 0; t < r; t += o, e++) {
            const n = a[e];
            this._singleTransform4(t, n, i);
          }
        var s = this._inv ? -1 : 1,
          u = this.table;
        for (i >>= 2; i >= 2; i >>= 2) {
          var c = (o = (r / i) << 1) >>> 2;
          for (t = 0; t < r; t += o)
            for (var l = t + c, h = t, f = 0; h < l; h += 2, f += i) {
              const t = h,
                e = t + c,
                r = e + c,
                i = r + c,
                o = n[t],
                a = n[t + 1],
                l = n[e],
                p = n[e + 1],
                d = n[r],
                m = n[r + 1],
                y = n[i],
                g = n[i + 1],
                v = o,
                b = a,
                w = u[f],
                _ = s * u[f + 1],
                S = l * w - p * _,
                x = l * _ + p * w,
                T = u[2 * f],
                A = s * u[2 * f + 1],
                k = d * T - m * A,
                E = d * A + m * T,
                N = u[3 * f],
                O = s * u[3 * f + 1],
                C = y * N - g * O,
                I = y * O + g * N,
                M = v + k,
                P = b + E,
                R = v - k,
                D = b - E,
                F = S + C,
                z = x + I,
                L = s * (S - C),
                j = s * (x - I),
                B = M + F,
                q = P + z,
                U = M - F,
                V = P - z,
                W = R + j,
                G = D - L,
                H = R - j,
                K = D + L;
              (n[t] = B),
                (n[t + 1] = q),
                (n[e] = W),
                (n[e + 1] = G),
                (n[r] = U),
                (n[r + 1] = V),
                (n[i] = H),
                (n[i + 1] = K);
            }
        }
      }),
      (r.prototype._singleTransform2 = function(t, e, n) {
        const r = this._out,
          i = this._data,
          o = i[e],
          a = i[e + 1],
          s = i[e + n],
          u = i[e + n + 1],
          c = o + s,
          l = a + u,
          h = o - s,
          f = a - u;
        (r[t] = c), (r[t + 1] = l), (r[t + 2] = h), (r[t + 3] = f);
      }),
      (r.prototype._singleTransform4 = function(t, e, n) {
        const r = this._out,
          i = this._data,
          o = this._inv ? -1 : 1,
          a = 2 * n,
          s = 3 * n,
          u = i[e],
          c = i[e + 1],
          l = i[e + n],
          h = i[e + n + 1],
          f = i[e + a],
          p = i[e + a + 1],
          d = i[e + s],
          m = i[e + s + 1],
          y = u + f,
          g = c + p,
          v = u - f,
          b = c - p,
          w = l + d,
          _ = h + m,
          S = o * (l - d),
          x = o * (h - m),
          T = y + w,
          A = g + _,
          k = v + x,
          E = b - S,
          N = y - w,
          O = g - _,
          C = v - x,
          I = b + S;
        (r[t] = T),
          (r[t + 1] = A),
          (r[t + 2] = k),
          (r[t + 3] = E),
          (r[t + 4] = N),
          (r[t + 5] = O),
          (r[t + 6] = C),
          (r[t + 7] = I);
      }),
      (r.prototype._realTransform4 = function() {
        var t,
          e,
          n = this._out,
          r = this._csize,
          i = 1 << this._width,
          o = (r / i) << 1,
          a = this._bitrev;
        if (4 === o)
          for (t = 0, e = 0; t < r; t += o, e++) {
            const n = a[e];
            this._singleRealTransform2(t, n >>> 1, i >>> 1);
          }
        else
          for (t = 0, e = 0; t < r; t += o, e++) {
            const n = a[e];
            this._singleRealTransform4(t, n >>> 1, i >>> 1);
          }
        var s = this._inv ? -1 : 1,
          u = this.table;
        for (i >>= 2; i >= 2; i >>= 2) {
          var c = (o = (r / i) << 1) >>> 1,
            l = c >>> 1,
            h = l >>> 1;
          for (t = 0; t < r; t += o)
            for (var f = 0, p = 0; f <= h; f += 2, p += i) {
              var d = t + f,
                m = d + l,
                y = m + l,
                g = y + l,
                v = n[d],
                b = n[d + 1],
                w = n[m],
                _ = n[m + 1],
                S = n[y],
                x = n[y + 1],
                T = n[g],
                A = n[g + 1],
                k = v,
                E = b,
                N = u[p],
                O = s * u[p + 1],
                C = w * N - _ * O,
                I = w * O + _ * N,
                M = u[2 * p],
                P = s * u[2 * p + 1],
                R = S * M - x * P,
                D = S * P + x * M,
                F = u[3 * p],
                z = s * u[3 * p + 1],
                L = T * F - A * z,
                j = T * z + A * F,
                B = k + R,
                q = E + D,
                U = k - R,
                V = E - D,
                W = C + L,
                G = I + j,
                H = s * (C - L),
                K = s * (I - j),
                Q = B + W,
                X = q + G,
                $ = U + K,
                Y = V - H;
              if (
                ((n[d] = Q),
                (n[d + 1] = X),
                (n[m] = $),
                (n[m + 1] = Y),
                0 !== f)
              ) {
                if (f !== h) {
                  var J = U + -s * K,
                    Z = -V + -s * H,
                    tt = B + -s * W,
                    et = -q - -s * G,
                    nt = t + l - f,
                    rt = t + c - f;
                  (n[nt] = J), (n[nt + 1] = Z), (n[rt] = tt), (n[rt + 1] = et);
                }
              } else {
                var it = B - W,
                  ot = q - G;
                (n[y] = it), (n[y + 1] = ot);
              }
            }
        }
      }),
      (r.prototype._singleRealTransform2 = function(t, e, n) {
        const r = this._out,
          i = this._data,
          o = i[e],
          a = i[e + n],
          s = o + a,
          u = o - a;
        (r[t] = s), (r[t + 1] = 0), (r[t + 2] = u), (r[t + 3] = 0);
      }),
      (r.prototype._singleRealTransform4 = function(t, e, n) {
        const r = this._out,
          i = this._data,
          o = this._inv ? -1 : 1,
          a = 2 * n,
          s = 3 * n,
          u = i[e],
          c = i[e + n],
          l = i[e + a],
          h = i[e + s],
          f = u + l,
          p = u - l,
          d = c + h,
          m = o * (c - h),
          y = f + d,
          g = p,
          v = -m,
          b = f - d,
          w = p,
          _ = m;
        (r[t] = y),
          (r[t + 1] = 0),
          (r[t + 2] = g),
          (r[t + 3] = v),
          (r[t + 4] = b),
          (r[t + 5] = 0),
          (r[t + 6] = w),
          (r[t + 7] = _);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(232);
    function i() {
      (this.argTypes = []),
        (this.shimArgs = []),
        (this.arrayArgs = []),
        (this.arrayBlockIndices = []),
        (this.scalarArgs = []),
        (this.offsetArgs = []),
        (this.offsetArgIndex = []),
        (this.indexArgs = []),
        (this.shapeArgs = []),
        (this.funcName = ""),
        (this.pre = null),
        (this.body = null),
        (this.post = null),
        (this.debug = !1);
    }
    t.exports = function(t) {
      var e = new i();
      (e.pre = t.pre), (e.body = t.body), (e.post = t.post);
      var n = t.args.slice(0);
      e.argTypes = n;
      for (var o = 0; o < n.length; ++o) {
        var a = n[o];
        if ("array" === a || ("object" == typeof a && a.blockIndices)) {
          if (
            ((e.argTypes[o] = "array"),
            e.arrayArgs.push(o),
            e.arrayBlockIndices.push(a.blockIndices ? a.blockIndices : 0),
            e.shimArgs.push("array" + o),
            o < e.pre.args.length && e.pre.args[o].count > 0)
          )
            throw new Error("cwise: pre() block may not reference array args");
          if (o < e.post.args.length && e.post.args[o].count > 0)
            throw new Error("cwise: post() block may not reference array args");
        } else if ("scalar" === a)
          e.scalarArgs.push(o), e.shimArgs.push("scalar" + o);
        else if ("index" === a) {
          if (
            (e.indexArgs.push(o),
            o < e.pre.args.length && e.pre.args[o].count > 0)
          )
            throw new Error("cwise: pre() block may not reference array index");
          if (o < e.body.args.length && e.body.args[o].lvalue)
            throw new Error("cwise: body() block may not write to array index");
          if (o < e.post.args.length && e.post.args[o].count > 0)
            throw new Error(
              "cwise: post() block may not reference array index"
            );
        } else if ("shape" === a) {
          if (
            (e.shapeArgs.push(o), o < e.pre.args.length && e.pre.args[o].lvalue)
          )
            throw new Error("cwise: pre() block may not write to array shape");
          if (o < e.body.args.length && e.body.args[o].lvalue)
            throw new Error("cwise: body() block may not write to array shape");
          if (o < e.post.args.length && e.post.args[o].lvalue)
            throw new Error("cwise: post() block may not write to array shape");
        } else {
          if ("object" != typeof a || !a.offset)
            throw new Error("cwise: Unknown argument type " + n[o]);
          (e.argTypes[o] = "offset"),
            e.offsetArgs.push({ array: a.array, offset: a.offset }),
            e.offsetArgIndex.push(o);
        }
      }
      if (e.arrayArgs.length <= 0)
        throw new Error("cwise: No array arguments specified");
      if (e.pre.args.length > n.length)
        throw new Error("cwise: Too many arguments in pre() block");
      if (e.body.args.length > n.length)
        throw new Error("cwise: Too many arguments in body() block");
      if (e.post.args.length > n.length)
        throw new Error("cwise: Too many arguments in post() block");
      return (
        (e.debug = !!t.printCode || !!t.debug),
        (e.funcName = t.funcName || "cwise"),
        (e.blockSize = t.blockSize || 64),
        r(e)
      );
    };
  },
  function(t, e, n) {
    "use strict";
    t.exports = function(t, e, n) {
      return 0 === t.length
        ? t
        : e
        ? (n || t.sort(e),
          (function(t, e) {
            for (var n = 1, r = t.length, i = t[0], o = t[0], a = 1; a < r; ++a)
              if (((o = i), e((i = t[a]), o))) {
                if (a === n) {
                  n++;
                  continue;
                }
                t[n++] = i;
              }
            return (t.length = n), t;
          })(t, e))
        : (n || t.sort(),
          (function(t) {
            for (
              var e = 1, n = t.length, r = t[0], i = t[0], o = 1;
              o < n;
              ++o, i = r
            )
              if (((i = r), (r = t[o]) !== i)) {
                if (o === e) {
                  e++;
                  continue;
                }
                t[e++] = r;
              }
            return (t.length = e), t;
          })(t));
    };
  },
  function(t, e, n) {
    "use strict";
    (function(t, r) {
      var i = n(102),
        o = n(234);
      t.__TYPEDARRAY_POOL ||
        (t.__TYPEDARRAY_POOL = {
          UINT8: o([32, 0]),
          UINT16: o([32, 0]),
          UINT32: o([32, 0]),
          INT8: o([32, 0]),
          INT16: o([32, 0]),
          INT32: o([32, 0]),
          FLOAT: o([32, 0]),
          DOUBLE: o([32, 0]),
          DATA: o([32, 0]),
          UINT8C: o([32, 0]),
          BUFFER: o([32, 0])
        });
      var a = "undefined" != typeof Uint8ClampedArray,
        s = t.__TYPEDARRAY_POOL;
      s.UINT8C || (s.UINT8C = o([32, 0])), s.BUFFER || (s.BUFFER = o([32, 0]));
      var u = s.DATA,
        c = s.BUFFER;
      function l(t) {
        if (t) {
          var e = t.length || t.byteLength,
            n = i.log2(e);
          u[n].push(t);
        }
      }
      function h(t) {
        t = i.nextPow2(t);
        var e = i.log2(t),
          n = u[e];
        return n.length > 0 ? n.pop() : new ArrayBuffer(t);
      }
      function f(t) {
        return new Uint8Array(h(t), 0, t);
      }
      function p(t) {
        return new Uint16Array(h(2 * t), 0, t);
      }
      function d(t) {
        return new Uint32Array(h(4 * t), 0, t);
      }
      function m(t) {
        return new Int8Array(h(t), 0, t);
      }
      function y(t) {
        return new Int16Array(h(2 * t), 0, t);
      }
      function g(t) {
        return new Int32Array(h(4 * t), 0, t);
      }
      function v(t) {
        return new Float32Array(h(4 * t), 0, t);
      }
      function b(t) {
        return new Float64Array(h(8 * t), 0, t);
      }
      function w(t) {
        return a ? new Uint8ClampedArray(h(t), 0, t) : f(t);
      }
      function _(t) {
        return new DataView(h(t), 0, t);
      }
      function S(t) {
        t = i.nextPow2(t);
        var e = i.log2(t),
          n = c[e];
        return n.length > 0 ? n.pop() : new r(t);
      }
      (e.free = function(t) {
        if (r.isBuffer(t)) c[i.log2(t.length)].push(t);
        else {
          if (
            ("[object ArrayBuffer]" !== Object.prototype.toString.call(t) &&
              (t = t.buffer),
            !t)
          )
            return;
          var e = t.length || t.byteLength,
            n = 0 | i.log2(e);
          u[n].push(t);
        }
      }),
        (e.freeUint8 = e.freeUint16 = e.freeUint32 = e.freeInt8 = e.freeInt16 = e.freeInt32 = e.freeFloat32 = e.freeFloat = e.freeFloat64 = e.freeDouble = e.freeUint8Clamped = e.freeDataView = function(
          t
        ) {
          l(t.buffer);
        }),
        (e.freeArrayBuffer = l),
        (e.freeBuffer = function(t) {
          c[i.log2(t.length)].push(t);
        }),
        (e.malloc = function(t, e) {
          if (void 0 === e || "arraybuffer" === e) return h(t);
          switch (e) {
            case "uint8":
              return f(t);
            case "uint16":
              return p(t);
            case "uint32":
              return d(t);
            case "int8":
              return m(t);
            case "int16":
              return y(t);
            case "int32":
              return g(t);
            case "float":
            case "float32":
              return v(t);
            case "double":
            case "float64":
              return b(t);
            case "uint8_clamped":
              return w(t);
            case "buffer":
              return S(t);
            case "data":
            case "dataview":
              return _(t);
            default:
              return null;
          }
          return null;
        }),
        (e.mallocArrayBuffer = h),
        (e.mallocUint8 = f),
        (e.mallocUint16 = p),
        (e.mallocUint32 = d),
        (e.mallocInt8 = m),
        (e.mallocInt16 = y),
        (e.mallocInt32 = g),
        (e.mallocFloat32 = e.mallocFloat = v),
        (e.mallocFloat64 = e.mallocDouble = b),
        (e.mallocUint8Clamped = w),
        (e.mallocDataView = _),
        (e.mallocBuffer = S),
        (e.clearCache = function() {
          for (var t = 0; t < 32; ++t)
            (s.UINT8[t].length = 0),
              (s.UINT16[t].length = 0),
              (s.UINT32[t].length = 0),
              (s.INT8[t].length = 0),
              (s.INT16[t].length = 0),
              (s.INT32[t].length = 0),
              (s.FLOAT[t].length = 0),
              (s.DOUBLE[t].length = 0),
              (s.UINT8C[t].length = 0),
              (u[t].length = 0),
              (c[t].length = 0);
        });
    }.call(this, n(5), n(3).Buffer));
  },
  function(t, e, n) {
    "use strict";
    function r(t) {
      var e = 32;
      return (
        (t &= -t) && e--,
        65535 & t && (e -= 16),
        16711935 & t && (e -= 8),
        252645135 & t && (e -= 4),
        858993459 & t && (e -= 2),
        1431655765 & t && (e -= 1),
        e
      );
    }
    (e.INT_BITS = 32),
      (e.INT_MAX = 2147483647),
      (e.INT_MIN = -1 << 31),
      (e.sign = function(t) {
        return (t > 0) - (t < 0);
      }),
      (e.abs = function(t) {
        var e = t >> 31;
        return (t ^ e) - e;
      }),
      (e.min = function(t, e) {
        return e ^ ((t ^ e) & -(t < e));
      }),
      (e.max = function(t, e) {
        return t ^ ((t ^ e) & -(t < e));
      }),
      (e.isPow2 = function(t) {
        return !(t & (t - 1) || !t);
      }),
      (e.log2 = function(t) {
        var e, n;
        return (
          (e = (t > 65535) << 4),
          (e |= n = ((t >>>= e) > 255) << 3),
          (e |= n = ((t >>>= n) > 15) << 2),
          (e |= n = ((t >>>= n) > 3) << 1) | ((t >>>= n) >> 1)
        );
      }),
      (e.log10 = function(t) {
        return t >= 1e9
          ? 9
          : t >= 1e8
          ? 8
          : t >= 1e7
          ? 7
          : t >= 1e6
          ? 6
          : t >= 1e5
          ? 5
          : t >= 1e4
          ? 4
          : t >= 1e3
          ? 3
          : t >= 100
          ? 2
          : t >= 10
          ? 1
          : 0;
      }),
      (e.popCount = function(t) {
        return (
          (16843009 *
            (((t =
              (858993459 & (t -= (t >>> 1) & 1431655765)) +
              ((t >>> 2) & 858993459)) +
              (t >>> 4)) &
              252645135)) >>>
          24
        );
      }),
      (e.countTrailingZeros = r),
      (e.nextPow2 = function(t) {
        return (
          (t += 0 === t),
          --t,
          (t |= t >>> 1),
          (t |= t >>> 2),
          (t |= t >>> 4),
          (t |= t >>> 8),
          (t |= t >>> 16) + 1
        );
      }),
      (e.prevPow2 = function(t) {
        return (
          (t |= t >>> 1),
          (t |= t >>> 2),
          (t |= t >>> 4),
          (t |= t >>> 8),
          (t |= t >>> 16) - (t >>> 1)
        );
      }),
      (e.parity = function(t) {
        return (
          (t ^= t >>> 16),
          (t ^= t >>> 8),
          (t ^= t >>> 4),
          (27030 >>> (t &= 15)) & 1
        );
      });
    var i = new Array(256);
    !(function(t) {
      for (var e = 0; e < 256; ++e) {
        var n = e,
          r = e,
          i = 7;
        for (n >>>= 1; n; n >>>= 1) (r <<= 1), (r |= 1 & n), --i;
        t[e] = (r << i) & 255;
      }
    })(i),
      (e.reverse = function(t) {
        return (
          (i[255 & t] << 24) |
          (i[(t >>> 8) & 255] << 16) |
          (i[(t >>> 16) & 255] << 8) |
          i[(t >>> 24) & 255]
        );
      }),
      (e.interleave2 = function(t, e) {
        return (
          (t =
            1431655765 &
            ((t =
              858993459 &
              ((t =
                252645135 &
                ((t = 16711935 & ((t &= 65535) | (t << 8))) | (t << 4))) |
                (t << 2))) |
              (t << 1))) |
          ((e =
            1431655765 &
            ((e =
              858993459 &
              ((e =
                252645135 &
                ((e = 16711935 & ((e &= 65535) | (e << 8))) | (e << 4))) |
                (e << 2))) |
              (e << 1))) <<
            1)
        );
      }),
      (e.deinterleave2 = function(t, e) {
        return (
          ((t =
            65535 &
            ((t =
              16711935 &
              ((t =
                252645135 &
                ((t = 858993459 & ((t = (t >>> e) & 1431655765) | (t >>> 1))) |
                  (t >>> 2))) |
                (t >>> 4))) |
              (t >>> 16))) <<
            16) >>
          16
        );
      }),
      (e.interleave3 = function(t, e, n) {
        return (
          (t =
            1227133513 &
            ((t =
              3272356035 &
              ((t =
                251719695 &
                ((t = 4278190335 & ((t &= 1023) | (t << 16))) | (t << 8))) |
                (t << 4))) |
              (t << 2))),
          (t |=
            (e =
              1227133513 &
              ((e =
                3272356035 &
                ((e =
                  251719695 &
                  ((e = 4278190335 & ((e &= 1023) | (e << 16))) | (e << 8))) |
                  (e << 4))) |
                (e << 2))) << 1) |
            ((n =
              1227133513 &
              ((n =
                3272356035 &
                ((n =
                  251719695 &
                  ((n = 4278190335 & ((n &= 1023) | (n << 16))) | (n << 8))) |
                  (n << 4))) |
                (n << 2))) <<
              2)
        );
      }),
      (e.deinterleave3 = function(t, e) {
        return (
          ((t =
            1023 &
            ((t =
              4278190335 &
              ((t =
                251719695 &
                ((t = 3272356035 & ((t = (t >>> e) & 1227133513) | (t >>> 2))) |
                  (t >>> 4))) |
                (t >>> 8))) |
              (t >>> 16))) <<
            22) >>
          22
        );
      }),
      (e.nextCombination = function(t) {
        var e = t | (t - 1);
        return (e + 1) | (((~e & -~e) - 1) >>> (r(t) + 1));
      });
  },
  function(t) {
    t.exports = {
      chromatic: ["1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"],
      lydian: ["1P 2M 3M 4A 5P 6M 7M"],
      major: ["1P 2M 3M 4P 5P 6M 7M", ["ionian"]],
      mixolydian: ["1P 2M 3M 4P 5P 6M 7m", ["dominant"]],
      dorian: ["1P 2M 3m 4P 5P 6M 7m"],
      aeolian: ["1P 2M 3m 4P 5P 6m 7m", ["minor"]],
      phrygian: ["1P 2m 3m 4P 5P 6m 7m"],
      locrian: ["1P 2m 3m 4P 5d 6m 7m"],
      "melodic minor": ["1P 2M 3m 4P 5P 6M 7M"],
      "melodic minor second mode": ["1P 2m 3m 4P 5P 6M 7m"],
      "lydian augmented": ["1P 2M 3M 4A 5A 6M 7M"],
      "lydian dominant": ["1P 2M 3M 4A 5P 6M 7m", ["lydian b7"]],
      "melodic minor fifth mode": [
        "1P 2M 3M 4P 5P 6m 7m",
        ["hindu", "mixolydian b6M"]
      ],
      "locrian #2": ["1P 2M 3m 4P 5d 6m 7m", ["half-diminished"]],
      altered: [
        "1P 2m 3m 3M 5d 6m 7m",
        ["super locrian", "diminished whole tone", "pomeroy"]
      ],
      "harmonic minor": ["1P 2M 3m 4P 5P 6m 7M"],
      "phrygian dominant": [
        "1P 2m 3M 4P 5P 6m 7m",
        ["spanish", "phrygian major"]
      ],
      "half-whole diminished": [
        "1P 2m 3m 3M 4A 5P 6M 7m",
        ["dominant diminished"]
      ],
      diminished: ["1P 2M 3m 4P 5d 6m 6M 7M", ["whole-half diminished"]],
      "major pentatonic": ["1P 2M 3M 5P 6M", ["pentatonic"]],
      "lydian pentatonic": ["1P 3M 4A 5P 7M", ["chinese"]],
      "mixolydian pentatonic": ["1P 3M 4P 5P 7m", ["indian"]],
      "locrian pentatonic": [
        "1P 3m 4P 5d 7m",
        ["minor seven flat five pentatonic"]
      ],
      "minor pentatonic": ["1P 3m 4P 5P 7m"],
      "minor six pentatonic": ["1P 3m 4P 5P 6M"],
      "minor hexatonic": ["1P 2M 3m 4P 5P 7M"],
      "flat three pentatonic": ["1P 2M 3m 5P 6M", ["kumoi"]],
      "flat six pentatonic": ["1P 2M 3M 5P 6m"],
      "major flat two pentatonic": ["1P 2m 3M 5P 6M"],
      "whole tone pentatonic": ["1P 3M 5d 6m 7m"],
      "ionian pentatonic": ["1P 3M 4P 5P 7M"],
      "lydian #5P pentatonic": ["1P 3M 4A 5A 7M"],
      "lydian dominant pentatonic": ["1P 3M 4A 5P 7m"],
      "minor #7M pentatonic": ["1P 3m 4P 5P 7M"],
      "super locrian pentatonic": ["1P 3m 4d 5d 7m"],
      "in-sen": ["1P 2m 4P 5P 7m"],
      iwato: ["1P 2m 4P 5d 7m"],
      hirajoshi: ["1P 2M 3m 5P 6m"],
      kumoijoshi: ["1P 2m 4P 5P 6m"],
      pelog: ["1P 2m 3m 5P 6m"],
      "vietnamese 1": ["1P 3m 4P 5P 6m"],
      "vietnamese 2": ["1P 3m 4P 5P 7m"],
      prometheus: ["1P 2M 3M 4A 6M 7m"],
      "prometheus neopolitan": ["1P 2m 3M 4A 6M 7m"],
      ritusen: ["1P 2M 4P 5P 6M"],
      scriabin: ["1P 2m 3M 5P 6M"],
      piongio: ["1P 2M 4P 5P 6M 7m"],
      "major blues": ["1P 2M 3m 3M 5P 6M"],
      "minor blues": ["1P 3m 4P 5d 5P 7m", ["blues"]],
      "composite blues": ["1P 2M 3m 3M 4P 5d 5P 6M 7m"],
      augmented: ["1P 2A 3M 5P 5A 7M"],
      "augmented heptatonic": ["1P 2A 3M 4P 5P 5A 7M"],
      "dorian #4": ["1P 2M 3m 4A 5P 6M 7m"],
      "lydian diminished": ["1P 2M 3m 4A 5P 6M 7M"],
      "whole tone": ["1P 2M 3M 4A 5A 7m"],
      "leading whole tone": ["1P 2M 3M 4A 5A 7m 7M"],
      "lydian minor": ["1P 2M 3M 4A 5P 6m 7m"],
      "locrian major": ["1P 2M 3M 4P 5d 6m 7m", ["arabian"]],
      neopolitan: ["1P 2m 3m 4P 5P 6m 7M"],
      "neopolitan minor": ["1P 2m 3m 4P 5P 6m 7M"],
      "neopolitan major": ["1P 2m 3m 4P 5P 6M 7M", ["dorian b2"]],
      "neopolitan major pentatonic": ["1P 3M 4P 5d 7m"],
      "romanian minor": ["1P 2M 3m 5d 5P 6M 7m"],
      "double harmonic lydian": ["1P 2m 3M 4A 5P 6m 7M"],
      "harmonic major": ["1P 2M 3M 4P 5P 6m 7M"],
      "double harmonic major": ["1P 2m 3M 4P 5P 6m 7M", ["gypsy"]],
      egyptian: ["1P 2M 4P 5P 7m"],
      "hungarian minor": ["1P 2M 3m 4A 5P 6m 7M"],
      "hungarian major": ["1P 2A 3M 4A 5P 6M 7m"],
      oriental: ["1P 2m 3M 4P 5d 6M 7m"],
      "spanish heptatonic": ["1P 2m 3m 3M 4P 5P 6m 7m"],
      flamenco: ["1P 2m 3m 3M 4A 5P 7m"],
      balinese: ["1P 2m 3m 4P 5P 6m 7M"],
      "todi raga": ["1P 2m 3m 4A 5P 6m 7M"],
      "malkos raga": ["1P 3m 4P 6m 7m"],
      "kafi raga": ["1P 3m 3M 4P 5P 6M 7m 7M"],
      "purvi raga": ["1P 2m 3M 4P 4A 5P 6m 7M"],
      persian: ["1P 2m 3M 4P 5d 6m 7M"],
      bebop: ["1P 2M 3M 4P 5P 6M 7m 7M"],
      "bebop dominant": ["1P 2M 3M 4P 5P 6M 7m 7M"],
      "bebop minor": ["1P 2M 3m 3M 4P 5P 6M 7m"],
      "bebop major": ["1P 2M 3M 4P 5P 5A 6M 7M"],
      "bebop locrian": ["1P 2m 3m 4P 5d 5P 6m 7m"],
      "minor bebop": ["1P 2M 3m 4P 5P 6m 7m 7M"],
      "mystery #1": ["1P 2m 3M 5d 6m 7m"],
      enigmatic: ["1P 2m 3M 5d 6m 7m 7M"],
      "minor six diminished": ["1P 2M 3m 4P 5P 6m 6M 7M"],
      "ionian augmented": ["1P 2M 3M 4P 5A 6M 7M"],
      "lydian #9": ["1P 2m 3M 4A 5P 6M 7M"],
      ichikosucho: ["1P 2M 3M 4P 5d 5P 6M 7M"],
      "six tone symmetric": ["1P 2m 3M 4P 5A 6M"]
    };
  },
  function(t) {
    t.exports = {
      4: ["1P 4P 7m 10m", ["quartal"]],
      5: ["1P 5P"],
      7: ["1P 3M 5P 7m", ["Dominant", "Dom"]],
      9: ["1P 3M 5P 7m 9M", ["79"]],
      11: ["1P 5P 7m 9M 11P"],
      13: ["1P 3M 5P 7m 9M 13M", ["13_"]],
      64: ["5P 8P 10M"],
      M: ["1P 3M 5P", ["Major", ""]],
      "M#5": ["1P 3M 5A", ["augmented", "maj#5", "Maj#5", "+", "aug"]],
      "M#5add9": ["1P 3M 5A 9M", ["+add9"]],
      M13: ["1P 3M 5P 7M 9M 13M", ["maj13", "Maj13"]],
      "M13#11": [
        "1P 3M 5P 7M 9M 11A 13M",
        ["maj13#11", "Maj13#11", "M13+4", "M13#4"]
      ],
      M6: ["1P 3M 5P 13M", ["6"]],
      "M6#11": ["1P 3M 5P 6M 11A", ["M6b5", "6#11", "6b5"]],
      M69: ["1P 3M 5P 6M 9M", ["69"]],
      "M69#11": ["1P 3M 5P 6M 9M 11A"],
      "M7#11": ["1P 3M 5P 7M 11A", ["maj7#11", "Maj7#11", "M7+4", "M7#4"]],
      "M7#5": ["1P 3M 5A 7M", ["maj7#5", "Maj7#5", "maj9#5", "M7+"]],
      "M7#5sus4": ["1P 4P 5A 7M"],
      "M7#9#11": ["1P 3M 5P 7M 9A 11A"],
      M7add13: ["1P 3M 5P 6M 7M 9M"],
      M7b5: ["1P 3M 5d 7M"],
      M7b6: ["1P 3M 6m 7M"],
      M7b9: ["1P 3M 5P 7M 9m"],
      M7sus4: ["1P 4P 5P 7M"],
      M9: ["1P 3M 5P 7M 9M", ["maj9", "Maj9"]],
      "M9#11": ["1P 3M 5P 7M 9M 11A", ["maj9#11", "Maj9#11", "M9+4", "M9#4"]],
      "M9#5": ["1P 3M 5A 7M 9M", ["Maj9#5"]],
      "M9#5sus4": ["1P 4P 5A 7M 9M"],
      M9b5: ["1P 3M 5d 7M 9M"],
      M9sus4: ["1P 4P 5P 7M 9M"],
      Madd9: ["1P 3M 5P 9M", ["2", "add9", "add2"]],
      Maj7: ["1P 3M 5P 7M", ["maj7", "M7"]],
      Mb5: ["1P 3M 5d"],
      Mb6: ["1P 3M 13m"],
      Msus2: ["1P 2M 5P", ["add9no3", "sus2"]],
      Msus4: ["1P 4P 5P", ["sus", "sus4"]],
      Maddb9: ["1P 3M 5P 9m"],
      "11b9": ["1P 5P 7m 9m 11P"],
      "13#11": ["1P 3M 5P 7m 9M 11A 13M", ["13+4", "13#4"]],
      "13#9": ["1P 3M 5P 7m 9A 13M", ["13#9_"]],
      "13#9#11": ["1P 3M 5P 7m 9A 11A 13M"],
      "13b5": ["1P 3M 5d 6M 7m 9M"],
      "13b9": ["1P 3M 5P 7m 9m 13M"],
      "13b9#11": ["1P 3M 5P 7m 9m 11A 13M"],
      "13no5": ["1P 3M 7m 9M 13M"],
      "13sus4": ["1P 4P 5P 7m 9M 13M", ["13sus"]],
      "69#11": ["1P 3M 5P 6M 9M 11A"],
      "7#11": ["1P 3M 5P 7m 11A", ["7+4", "7#4", "7#11_", "7#4_"]],
      "7#11b13": ["1P 3M 5P 7m 11A 13m", ["7b5b13"]],
      "7#5": ["1P 3M 5A 7m", ["+7", "7aug", "aug7"]],
      "7#5#9": ["1P 3M 5A 7m 9A", ["7alt", "7#5#9_", "7#9b13_"]],
      "7#5b9": ["1P 3M 5A 7m 9m"],
      "7#5b9#11": ["1P 3M 5A 7m 9m 11A"],
      "7#5sus4": ["1P 4P 5A 7m"],
      "7#9": ["1P 3M 5P 7m 9A", ["7#9_"]],
      "7#9#11": ["1P 3M 5P 7m 9A 11A", ["7b5#9"]],
      "7#9#11b13": ["1P 3M 5P 7m 9A 11A 13m"],
      "7#9b13": ["1P 3M 5P 7m 9A 13m"],
      "7add6": ["1P 3M 5P 7m 13M", ["67", "7add13"]],
      "7b13": ["1P 3M 7m 13m"],
      "7b5": ["1P 3M 5d 7m"],
      "7b6": ["1P 3M 5P 6m 7m"],
      "7b9": ["1P 3M 5P 7m 9m"],
      "7b9#11": ["1P 3M 5P 7m 9m 11A", ["7b5b9"]],
      "7b9#9": ["1P 3M 5P 7m 9m 9A"],
      "7b9b13": ["1P 3M 5P 7m 9m 13m"],
      "7b9b13#11": ["1P 3M 5P 7m 9m 11A 13m", ["7b9#11b13", "7b5b9b13"]],
      "7no5": ["1P 3M 7m"],
      "7sus4": ["1P 4P 5P 7m", ["7sus"]],
      "7sus4b9": [
        "1P 4P 5P 7m 9m",
        ["susb9", "7susb9", "7b9sus", "7b9sus4", "phryg"]
      ],
      "7sus4b9b13": ["1P 4P 5P 7m 9m 13m", ["7b9b13sus4"]],
      "9#11": ["1P 3M 5P 7m 9M 11A", ["9+4", "9#4", "9#11_", "9#4_"]],
      "9#11b13": ["1P 3M 5P 7m 9M 11A 13m", ["9b5b13"]],
      "9#5": ["1P 3M 5A 7m 9M", ["9+"]],
      "9#5#11": ["1P 3M 5A 7m 9M 11A"],
      "9b13": ["1P 3M 7m 9M 13m"],
      "9b5": ["1P 3M 5d 7m 9M"],
      "9no5": ["1P 3M 7m 9M"],
      "9sus4": ["1P 4P 5P 7m 9M", ["9sus"]],
      m: ["1P 3m 5P"],
      "m#5": ["1P 3m 5A", ["m+", "mb6"]],
      m11: ["1P 3m 5P 7m 9M 11P", ["_11"]],
      "m11A 5": ["1P 3m 6m 7m 9M 11P"],
      m11b5: ["1P 3m 7m 12d 2M 4P", ["h11", "_11b5"]],
      m13: ["1P 3m 5P 7m 9M 11P 13M", ["_13"]],
      m6: ["1P 3m 4P 5P 13M", ["_6"]],
      m69: ["1P 3m 5P 6M 9M", ["_69"]],
      m7: ["1P 3m 5P 7m", ["minor7", "_", "_7"]],
      "m7#5": ["1P 3m 6m 7m"],
      m7add11: ["1P 3m 5P 7m 11P", ["m7add4"]],
      m7b5: ["1P 3m 5d 7m", ["half-diminished", "h7", "_7b5"]],
      m9: ["1P 3m 5P 7m 9M", ["_9"]],
      "m9#5": ["1P 3m 6m 7m 9M"],
      m9b5: ["1P 3m 7m 12d 2M", ["h9", "-9b5"]],
      mMaj7: ["1P 3m 5P 7M", ["mM7", "_M7"]],
      mMaj7b6: ["1P 3m 5P 6m 7M", ["mM7b6"]],
      mM9: ["1P 3m 5P 7M 9M", ["mMaj9", "-M9"]],
      mM9b6: ["1P 3m 5P 6m 7M 9M", ["mMaj9b6"]],
      mb6M7: ["1P 3m 6m 7M"],
      mb6b9: ["1P 3m 6m 9m"],
      o: ["1P 3m 5d", ["mb5", "dim"]],
      o7: ["1P 3m 5d 13M", ["diminished", "m6b5", "dim7"]],
      o7M7: ["1P 3m 5d 6M 7M"],
      oM7: ["1P 3m 5d 7M"],
      sus24: ["1P 2M 4P 5P", ["sus4add9"]],
      "+add#9": ["1P 3M 5A 9A"],
      madd4: ["1P 3m 4P 5P"],
      madd9: ["1P 3m 5P 9M"]
    };
  },
  function(t, e) {
    function n(t) {
      var e = 0;
      function n(n) {
        var r = t.charCodeAt(e);
        return n && r > 127 && (r -= 256), (e += 1), r;
      }
      return {
        eof: function() {
          return e >= t.length;
        },
        read: function(n) {
          var r = t.substr(e, n);
          return (e += n), r;
        },
        readInt32: function() {
          var n =
            (t.charCodeAt(e) << 24) +
            (t.charCodeAt(e + 1) << 16) +
            (t.charCodeAt(e + 2) << 8) +
            t.charCodeAt(e + 3);
          return (e += 4), n;
        },
        readInt16: function() {
          var n = (t.charCodeAt(e) << 8) + t.charCodeAt(e + 1);
          return (e += 2), n;
        },
        readInt8: n,
        readVarInt: function() {
          for (var t = 0; ; ) {
            var e = n();
            if (!(128 & e)) return t + e;
            (t += 127 & e), (t <<= 7);
          }
        }
      };
    }
    t.exports = function(t) {
      return (function(t) {
        function e(t) {
          var e = t.read(4),
            n = t.readInt32();
          return { id: e, length: n, data: t.read(n) };
        }
        var r;
        function i(t) {
          var e = {};
          e.deltaTime = t.readVarInt();
          var n,
            i = t.readInt8();
          if (240 == (240 & i)) {
            if (255 == i) {
              e.type = "meta";
              var o = t.readInt8(),
                a = t.readVarInt();
              switch (o) {
                case 0:
                  if (((e.subtype = "sequenceNumber"), 2 != a))
                    throw "Expected length for sequenceNumber event is 2, got " +
                      a;
                  return (e.number = t.readInt16()), e;
                case 1:
                  return (e.subtype = "text"), (e.text = t.read(a)), e;
                case 2:
                  return (
                    (e.subtype = "copyrightNotice"), (e.text = t.read(a)), e
                  );
                case 3:
                  return (e.subtype = "trackName"), (e.text = t.read(a)), e;
                case 4:
                  return (
                    (e.subtype = "instrumentName"), (e.text = t.read(a)), e
                  );
                case 5:
                  return (e.subtype = "lyrics"), (e.text = t.read(a)), e;
                case 6:
                  return (e.subtype = "marker"), (e.text = t.read(a)), e;
                case 7:
                  return (e.subtype = "cuePoint"), (e.text = t.read(a)), e;
                case 32:
                  if (((e.subtype = "midiChannelPrefix"), 1 != a))
                    throw "Expected length for midiChannelPrefix event is 1, got " +
                      a;
                  return (e.channel = t.readInt8()), e;
                case 47:
                  if (((e.subtype = "endOfTrack"), 0 != a))
                    throw "Expected length for endOfTrack event is 0, got " + a;
                  return e;
                case 81:
                  if (((e.subtype = "setTempo"), 3 != a))
                    throw "Expected length for setTempo event is 3, got " + a;
                  return (
                    (e.microsecondsPerBeat =
                      (t.readInt8() << 16) +
                      (t.readInt8() << 8) +
                      t.readInt8()),
                    e
                  );
                case 84:
                  if (((e.subtype = "smpteOffset"), 5 != a))
                    throw "Expected length for smpteOffset event is 5, got " +
                      a;
                  var s = t.readInt8();
                  return (
                    (e.frameRate = { 0: 24, 32: 25, 64: 29, 96: 30 }[96 & s]),
                    (e.hour = 31 & s),
                    (e.min = t.readInt8()),
                    (e.sec = t.readInt8()),
                    (e.frame = t.readInt8()),
                    (e.subframe = t.readInt8()),
                    e
                  );
                case 88:
                  if (((e.subtype = "timeSignature"), 4 != a))
                    throw "Expected length for timeSignature event is 4, got " +
                      a;
                  return (
                    (e.numerator = t.readInt8()),
                    (e.denominator = Math.pow(2, t.readInt8())),
                    (e.metronome = t.readInt8()),
                    (e.thirtyseconds = t.readInt8()),
                    e
                  );
                case 89:
                  if (((e.subtype = "keySignature"), 2 != a))
                    throw "Expected length for keySignature event is 2, got " +
                      a;
                  return (e.key = t.readInt8(!0)), (e.scale = t.readInt8()), e;
                case 127:
                  return (
                    (e.subtype = "sequencerSpecific"), (e.data = t.read(a)), e
                  );
                default:
                  return (e.subtype = "unknown"), (e.data = t.read(a)), e;
              }
              return (e.data = t.read(a)), e;
            }
            if (240 == i) {
              e.type = "sysEx";
              var a = t.readVarInt();
              return (e.data = t.read(a)), e;
            }
            if (247 == i) {
              e.type = "dividedSysEx";
              var a = t.readVarInt();
              return (e.data = t.read(a)), e;
            }
            throw "Unrecognised MIDI event type byte: " + i;
          }
          0 == (128 & i) ? ((n = i), (i = r)) : ((n = t.readInt8()), (r = i));
          var u = i >> 4;
          switch (((e.channel = 15 & i), (e.type = "channel"), u)) {
            case 8:
              return (
                (e.subtype = "noteOff"),
                (e.noteNumber = n),
                (e.velocity = t.readInt8()),
                e
              );
            case 9:
              return (
                (e.noteNumber = n),
                (e.velocity = t.readInt8()),
                0 == e.velocity
                  ? (e.subtype = "noteOff")
                  : (e.subtype = "noteOn"),
                e
              );
            case 10:
              return (
                (e.subtype = "noteAftertouch"),
                (e.noteNumber = n),
                (e.amount = t.readInt8()),
                e
              );
            case 11:
              return (
                (e.subtype = "controller"),
                (e.controllerType = n),
                (e.value = t.readInt8()),
                e
              );
            case 12:
              return (e.subtype = "programChange"), (e.programNumber = n), e;
            case 13:
              return (e.subtype = "channelAftertouch"), (e.amount = n), e;
            case 14:
              return (
                (e.subtype = "pitchBend"),
                (e.value = n + (t.readInt8() << 7)),
                e
              );
            default:
              throw "Unrecognised MIDI event type: " + u;
          }
        }
        stream = n(t);
        var o = e(stream);
        if ("MThd" != o.id || 6 != o.length)
          throw "Bad .mid file - header not found";
        var a = n(o.data),
          s = a.readInt16(),
          u = a.readInt16(),
          c = a.readInt16();
        if (32768 & c)
          throw "Expressing time division in SMTPE frames is not supported yet";
        ticksPerBeat = c;
        for (
          var l = { formatType: s, trackCount: u, ticksPerBeat: ticksPerBeat },
            h = [],
            f = 0;
          f < l.trackCount;
          f++
        ) {
          h[f] = [];
          var p = e(stream);
          if ("MTrk" != p.id)
            throw "Unexpected chunk - expected MTrk, got " + p.id;
          for (var d = n(p.data); !d.eof(); ) {
            var m = i(d);
            h[f].push(m);
          }
        }
        return { header: l, tracks: h };
      })(t);
    };
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(35);
    window.mm = r;
  },
  function(t, e, n) {
    "use strict";
    (e.byteLength = function(t) {
      var e = c(t),
        n = e[0],
        r = e[1];
      return (3 * (n + r)) / 4 - r;
    }),
      (e.toByteArray = function(t) {
        for (
          var e,
            n = c(t),
            r = n[0],
            a = n[1],
            s = new o(
              (function(t, e, n) {
                return (3 * (e + n)) / 4 - n;
              })(0, r, a)
            ),
            u = 0,
            l = a > 0 ? r - 4 : r,
            h = 0;
          h < l;
          h += 4
        )
          (e =
            (i[t.charCodeAt(h)] << 18) |
            (i[t.charCodeAt(h + 1)] << 12) |
            (i[t.charCodeAt(h + 2)] << 6) |
            i[t.charCodeAt(h + 3)]),
            (s[u++] = (e >> 16) & 255),
            (s[u++] = (e >> 8) & 255),
            (s[u++] = 255 & e);
        2 === a &&
          ((e = (i[t.charCodeAt(h)] << 2) | (i[t.charCodeAt(h + 1)] >> 4)),
          (s[u++] = 255 & e));
        1 === a &&
          ((e =
            (i[t.charCodeAt(h)] << 10) |
            (i[t.charCodeAt(h + 1)] << 4) |
            (i[t.charCodeAt(h + 2)] >> 2)),
          (s[u++] = (e >> 8) & 255),
          (s[u++] = 255 & e));
        return s;
      }),
      (e.fromByteArray = function(t) {
        for (
          var e, n = t.length, i = n % 3, o = [], a = 0, s = n - i;
          a < s;
          a += 16383
        )
          o.push(l(t, a, a + 16383 > s ? s : a + 16383));
        1 === i
          ? ((e = t[n - 1]), o.push(r[e >> 2] + r[(e << 4) & 63] + "=="))
          : 2 === i &&
            ((e = (t[n - 2] << 8) + t[n - 1]),
            o.push(r[e >> 10] + r[(e >> 4) & 63] + r[(e << 2) & 63] + "="));
        return o.join("");
      });
    for (
      var r = [],
        i = [],
        o = "undefined" != typeof Uint8Array ? Uint8Array : Array,
        a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        s = 0,
        u = a.length;
      s < u;
      ++s
    )
      (r[s] = a[s]), (i[a.charCodeAt(s)] = s);
    function c(t) {
      var e = t.length;
      if (e % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var n = t.indexOf("=");
      return -1 === n && (n = e), [n, n === e ? 0 : 4 - (n % 4)];
    }
    function l(t, e, n) {
      for (var i, o, a = [], s = e; s < n; s += 3)
        (i =
          ((t[s] << 16) & 16711680) +
          ((t[s + 1] << 8) & 65280) +
          (255 & t[s + 2])),
          a.push(
            r[((o = i) >> 18) & 63] +
              r[(o >> 12) & 63] +
              r[(o >> 6) & 63] +
              r[63 & o]
          );
      return a.join("");
    }
    (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
  },
  function(t, e) {
    (e.read = function(t, e, n, r, i) {
      var o,
        a,
        s = 8 * i - r - 1,
        u = (1 << s) - 1,
        c = u >> 1,
        l = -7,
        h = n ? i - 1 : 0,
        f = n ? -1 : 1,
        p = t[e + h];
      for (
        h += f, o = p & ((1 << -l) - 1), p >>= -l, l += s;
        l > 0;
        o = 256 * o + t[e + h], h += f, l -= 8
      );
      for (
        a = o & ((1 << -l) - 1), o >>= -l, l += r;
        l > 0;
        a = 256 * a + t[e + h], h += f, l -= 8
      );
      if (0 === o) o = 1 - c;
      else {
        if (o === u) return a ? NaN : (1 / 0) * (p ? -1 : 1);
        (a += Math.pow(2, r)), (o -= c);
      }
      return (p ? -1 : 1) * a * Math.pow(2, o - r);
    }),
      (e.write = function(t, e, n, r, i, o) {
        var a,
          s,
          u,
          c = 8 * o - i - 1,
          l = (1 << c) - 1,
          h = l >> 1,
          f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          p = r ? 0 : o - 1,
          d = r ? 1 : -1,
          m = e < 0 || (0 === e && 1 / e < 0) ? 1 : 0;
        for (
          e = Math.abs(e),
            isNaN(e) || e === 1 / 0
              ? ((s = isNaN(e) ? 1 : 0), (a = l))
              : ((a = Math.floor(Math.log(e) / Math.LN2)),
                e * (u = Math.pow(2, -a)) < 1 && (a--, (u *= 2)),
                (e += a + h >= 1 ? f / u : f * Math.pow(2, 1 - h)) * u >= 2 &&
                  (a++, (u /= 2)),
                a + h >= l
                  ? ((s = 0), (a = l))
                  : a + h >= 1
                  ? ((s = (e * u - 1) * Math.pow(2, i)), (a += h))
                  : ((s = e * Math.pow(2, h - 1) * Math.pow(2, i)), (a = 0)));
          i >= 8;
          t[n + p] = 255 & s, p += d, s /= 256, i -= 8
        );
        for (
          a = (a << i) | s, c += i;
          c > 0;
          t[n + p] = 255 & a, p += d, a /= 256, c -= 8
        );
        t[n + p - d] |= 128 * m;
      });
  },
  function(t, e, n) {
    (function(t, e) {
      !(function(t, n) {
        "use strict";
        if (!t.setImmediate) {
          var r,
            i,
            o,
            a,
            s,
            u = 1,
            c = {},
            l = !1,
            h = t.document,
            f = Object.getPrototypeOf && Object.getPrototypeOf(t);
          (f = f && f.setTimeout ? f : t),
            "[object process]" === {}.toString.call(t.process)
              ? (r = function(t) {
                  e.nextTick(function() {
                    d(t);
                  });
                })
              : !(function() {
                  if (t.postMessage && !t.importScripts) {
                    var e = !0,
                      n = t.onmessage;
                    return (
                      (t.onmessage = function() {
                        e = !1;
                      }),
                      t.postMessage("", "*"),
                      (t.onmessage = n),
                      e
                    );
                  }
                })()
              ? t.MessageChannel
                ? (((o = new MessageChannel()).port1.onmessage = function(t) {
                    d(t.data);
                  }),
                  (r = function(t) {
                    o.port2.postMessage(t);
                  }))
                : h && "onreadystatechange" in h.createElement("script")
                ? ((i = h.documentElement),
                  (r = function(t) {
                    var e = h.createElement("script");
                    (e.onreadystatechange = function() {
                      d(t),
                        (e.onreadystatechange = null),
                        i.removeChild(e),
                        (e = null);
                    }),
                      i.appendChild(e);
                  }))
                : (r = function(t) {
                    setTimeout(d, 0, t);
                  })
              : ((a = "setImmediate$" + Math.random() + "$"),
                (s = function(e) {
                  e.source === t &&
                    "string" == typeof e.data &&
                    0 === e.data.indexOf(a) &&
                    d(+e.data.slice(a.length));
                }),
                t.addEventListener
                  ? t.addEventListener("message", s, !1)
                  : t.attachEvent("onmessage", s),
                (r = function(e) {
                  t.postMessage(a + e, "*");
                })),
            (f.setImmediate = function(t) {
              "function" != typeof t && (t = new Function("" + t));
              for (
                var e = new Array(arguments.length - 1), n = 0;
                n < e.length;
                n++
              )
                e[n] = arguments[n + 1];
              var i = { callback: t, args: e };
              return (c[u] = i), r(u), u++;
            }),
            (f.clearImmediate = p);
        }
        function p(t) {
          delete c[t];
        }
        function d(t) {
          if (l) setTimeout(d, 0, t);
          else {
            var e = c[t];
            if (e) {
              l = !0;
              try {
                !(function(t) {
                  var e = t.callback,
                    r = t.args;
                  switch (r.length) {
                    case 0:
                      e();
                      break;
                    case 1:
                      e(r[0]);
                      break;
                    case 2:
                      e(r[0], r[1]);
                      break;
                    case 3:
                      e(r[0], r[1], r[2]);
                      break;
                    default:
                      e.apply(n, r);
                  }
                })(e);
              } finally {
                p(t), (l = !1);
              }
            }
          }
        }
      })("undefined" == typeof self ? (void 0 === t ? this : t) : self);
    }.call(this, n(5), n(11)));
  },
  function(t, e) {},
  function(t, e, n) {
    "use strict";
    var r = n(2).Buffer,
      i = n(112);
    (t.exports = (function() {
      function t() {
        !(function(t, e) {
          if (!(t instanceof e))
            throw new TypeError("Cannot call a class as a function");
        })(this, t),
          (this.head = null),
          (this.tail = null),
          (this.length = 0);
      }
      return (
        (t.prototype.push = function(t) {
          var e = { data: t, next: null };
          this.length > 0 ? (this.tail.next = e) : (this.head = e),
            (this.tail = e),
            ++this.length;
        }),
        (t.prototype.unshift = function(t) {
          var e = { data: t, next: this.head };
          0 === this.length && (this.tail = e), (this.head = e), ++this.length;
        }),
        (t.prototype.shift = function() {
          if (0 !== this.length) {
            var t = this.head.data;
            return (
              1 === this.length
                ? (this.head = this.tail = null)
                : (this.head = this.head.next),
              --this.length,
              t
            );
          }
        }),
        (t.prototype.clear = function() {
          (this.head = this.tail = null), (this.length = 0);
        }),
        (t.prototype.join = function(t) {
          if (0 === this.length) return "";
          for (var e = this.head, n = "" + e.data; (e = e.next); )
            n += t + e.data;
          return n;
        }),
        (t.prototype.concat = function(t) {
          if (0 === this.length) return r.alloc(0);
          if (1 === this.length) return this.head.data;
          for (
            var e, n, i, o = r.allocUnsafe(t >>> 0), a = this.head, s = 0;
            a;

          )
            (e = a.data),
              (n = o),
              (i = s),
              e.copy(n, i),
              (s += a.data.length),
              (a = a.next);
          return o;
        }),
        t
      );
    })()),
      i &&
        i.inspect &&
        i.inspect.custom &&
        (t.exports.prototype[i.inspect.custom] = function() {
          var t = i.inspect({ length: this.length });
          return this.constructor.name + " " + t;
        });
  },
  function(t, e) {},
  function(t, e, n) {
    (function(e) {
      function n(t) {
        try {
          if (!e.localStorage) return !1;
        } catch (t) {
          return !1;
        }
        var n = e.localStorage[t];
        return null != n && "true" === String(n).toLowerCase();
      }
      t.exports = function(t, e) {
        if (n("noDeprecation")) return t;
        var r = !1;
        return function() {
          if (!r) {
            if (n("throwDeprecation")) throw new Error(e);
            n("traceDeprecation") ? console.trace(e) : console.warn(e),
              (r = !0);
          }
          return t.apply(this, arguments);
        };
      };
    }.call(this, n(5)));
  },
  function(t, e, n) {
    "use strict";
    t.exports = o;
    var r = n(63),
      i = n(21);
    function o(t) {
      if (!(this instanceof o)) return new o(t);
      r.call(this, t);
    }
    (i.inherits = n(1)),
      i.inherits(o, r),
      (o.prototype._transform = function(t, e, n) {
        n(null, t);
      });
  },
  function(t, e, n) {
    t.exports = n(40);
  },
  function(t, e, n) {
    t.exports = n(14);
  },
  function(t, e, n) {
    t.exports = n(39).Transform;
  },
  function(t, e, n) {
    t.exports = n(39).PassThrough;
  },
  function(t, e, n) {
    var r = n(1),
      i = n(18),
      o = n(2).Buffer,
      a = [1518500249, 1859775393, -1894007588, -899497514],
      s = new Array(80);
    function u() {
      this.init(), (this._w = s), i.call(this, 64, 56);
    }
    function c(t) {
      return (t << 30) | (t >>> 2);
    }
    function l(t, e, n, r) {
      return 0 === t
        ? (e & n) | (~e & r)
        : 2 === t
        ? (e & n) | (e & r) | (n & r)
        : e ^ n ^ r;
    }
    r(u, i),
      (u.prototype.init = function() {
        return (
          (this._a = 1732584193),
          (this._b = 4023233417),
          (this._c = 2562383102),
          (this._d = 271733878),
          (this._e = 3285377520),
          this
        );
      }),
      (u.prototype._update = function(t) {
        for (
          var e,
            n = this._w,
            r = 0 | this._a,
            i = 0 | this._b,
            o = 0 | this._c,
            s = 0 | this._d,
            u = 0 | this._e,
            h = 0;
          h < 16;
          ++h
        )
          n[h] = t.readInt32BE(4 * h);
        for (; h < 80; ++h) n[h] = n[h - 3] ^ n[h - 8] ^ n[h - 14] ^ n[h - 16];
        for (var f = 0; f < 80; ++f) {
          var p = ~~(f / 20),
            d =
              0 |
              ((((e = r) << 5) | (e >>> 27)) + l(p, i, o, s) + u + n[f] + a[p]);
          (u = s), (s = o), (o = c(i)), (i = r), (r = d);
        }
        (this._a = (r + this._a) | 0),
          (this._b = (i + this._b) | 0),
          (this._c = (o + this._c) | 0),
          (this._d = (s + this._d) | 0),
          (this._e = (u + this._e) | 0);
      }),
      (u.prototype._hash = function() {
        var t = o.allocUnsafe(20);
        return (
          t.writeInt32BE(0 | this._a, 0),
          t.writeInt32BE(0 | this._b, 4),
          t.writeInt32BE(0 | this._c, 8),
          t.writeInt32BE(0 | this._d, 12),
          t.writeInt32BE(0 | this._e, 16),
          t
        );
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    var r = n(1),
      i = n(18),
      o = n(2).Buffer,
      a = [1518500249, 1859775393, -1894007588, -899497514],
      s = new Array(80);
    function u() {
      this.init(), (this._w = s), i.call(this, 64, 56);
    }
    function c(t) {
      return (t << 5) | (t >>> 27);
    }
    function l(t) {
      return (t << 30) | (t >>> 2);
    }
    function h(t, e, n, r) {
      return 0 === t
        ? (e & n) | (~e & r)
        : 2 === t
        ? (e & n) | (e & r) | (n & r)
        : e ^ n ^ r;
    }
    r(u, i),
      (u.prototype.init = function() {
        return (
          (this._a = 1732584193),
          (this._b = 4023233417),
          (this._c = 2562383102),
          (this._d = 271733878),
          (this._e = 3285377520),
          this
        );
      }),
      (u.prototype._update = function(t) {
        for (
          var e,
            n = this._w,
            r = 0 | this._a,
            i = 0 | this._b,
            o = 0 | this._c,
            s = 0 | this._d,
            u = 0 | this._e,
            f = 0;
          f < 16;
          ++f
        )
          n[f] = t.readInt32BE(4 * f);
        for (; f < 80; ++f)
          n[f] =
            ((e = n[f - 3] ^ n[f - 8] ^ n[f - 14] ^ n[f - 16]) << 1) |
            (e >>> 31);
        for (var p = 0; p < 80; ++p) {
          var d = ~~(p / 20),
            m = (c(r) + h(d, i, o, s) + u + n[p] + a[d]) | 0;
          (u = s), (s = o), (o = l(i)), (i = r), (r = m);
        }
        (this._a = (r + this._a) | 0),
          (this._b = (i + this._b) | 0),
          (this._c = (o + this._c) | 0),
          (this._d = (s + this._d) | 0),
          (this._e = (u + this._e) | 0);
      }),
      (u.prototype._hash = function() {
        var t = o.allocUnsafe(20);
        return (
          t.writeInt32BE(0 | this._a, 0),
          t.writeInt32BE(0 | this._b, 4),
          t.writeInt32BE(0 | this._c, 8),
          t.writeInt32BE(0 | this._d, 12),
          t.writeInt32BE(0 | this._e, 16),
          t
        );
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    var r = n(1),
      i = n(64),
      o = n(18),
      a = n(2).Buffer,
      s = new Array(64);
    function u() {
      this.init(), (this._w = s), o.call(this, 64, 56);
    }
    r(u, i),
      (u.prototype.init = function() {
        return (
          (this._a = 3238371032),
          (this._b = 914150663),
          (this._c = 812702999),
          (this._d = 4144912697),
          (this._e = 4290775857),
          (this._f = 1750603025),
          (this._g = 1694076839),
          (this._h = 3204075428),
          this
        );
      }),
      (u.prototype._hash = function() {
        var t = a.allocUnsafe(28);
        return (
          t.writeInt32BE(this._a, 0),
          t.writeInt32BE(this._b, 4),
          t.writeInt32BE(this._c, 8),
          t.writeInt32BE(this._d, 12),
          t.writeInt32BE(this._e, 16),
          t.writeInt32BE(this._f, 20),
          t.writeInt32BE(this._g, 24),
          t
        );
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    var r = n(1),
      i = n(65),
      o = n(18),
      a = n(2).Buffer,
      s = new Array(160);
    function u() {
      this.init(), (this._w = s), o.call(this, 128, 112);
    }
    r(u, i),
      (u.prototype.init = function() {
        return (
          (this._ah = 3418070365),
          (this._bh = 1654270250),
          (this._ch = 2438529370),
          (this._dh = 355462360),
          (this._eh = 1731405415),
          (this._fh = 2394180231),
          (this._gh = 3675008525),
          (this._hh = 1203062813),
          (this._al = 3238371032),
          (this._bl = 914150663),
          (this._cl = 812702999),
          (this._dl = 4144912697),
          (this._el = 4290775857),
          (this._fl = 1750603025),
          (this._gl = 1694076839),
          (this._hl = 3204075428),
          this
        );
      }),
      (u.prototype._hash = function() {
        var t = a.allocUnsafe(48);
        function e(e, n, r) {
          t.writeInt32BE(e, r), t.writeInt32BE(n, r + 4);
        }
        return (
          e(this._ah, this._al, 0),
          e(this._bh, this._bl, 8),
          e(this._ch, this._cl, 16),
          e(this._dh, this._dl, 24),
          e(this._eh, this._el, 32),
          e(this._fh, this._fl, 40),
          t
        );
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    "use strict";
    var r = n(1),
      i = n(2).Buffer,
      o = n(13),
      a = i.alloc(128),
      s = 64;
    function u(t, e) {
      o.call(this, "digest"),
        "string" == typeof e && (e = i.from(e)),
        (this._alg = t),
        (this._key = e),
        e.length > s ? (e = t(e)) : e.length < s && (e = i.concat([e, a], s));
      for (
        var n = (this._ipad = i.allocUnsafe(s)),
          r = (this._opad = i.allocUnsafe(s)),
          u = 0;
        u < s;
        u++
      )
        (n[u] = 54 ^ e[u]), (r[u] = 92 ^ e[u]);
      this._hash = [n];
    }
    r(u, o),
      (u.prototype._update = function(t) {
        this._hash.push(t);
      }),
      (u.prototype._final = function() {
        var t = this._alg(i.concat(this._hash));
        return this._alg(i.concat([this._opad, t]));
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    t.exports = n(68);
  },
  function(t, e, n) {
    (function(e, r) {
      var i,
        o = n(70),
        a = n(71),
        s = n(72),
        u = n(2).Buffer,
        c = e.crypto && e.crypto.subtle,
        l = {
          sha: "SHA-1",
          "sha-1": "SHA-1",
          sha1: "SHA-1",
          sha256: "SHA-256",
          "sha-256": "SHA-256",
          sha384: "SHA-384",
          "sha-384": "SHA-384",
          "sha-512": "SHA-512",
          sha512: "SHA-512"
        },
        h = [];
      function f(t, e, n, r, i) {
        return c
          .importKey("raw", t, { name: "PBKDF2" }, !1, ["deriveBits"])
          .then(function(t) {
            return c.deriveBits(
              { name: "PBKDF2", salt: e, iterations: n, hash: { name: i } },
              t,
              r << 3
            );
          })
          .then(function(t) {
            return u.from(t);
          });
      }
      t.exports = function(t, n, p, d, m, y) {
        "function" == typeof m && ((y = m), (m = void 0));
        var g = l[(m = m || "sha1").toLowerCase()];
        if (!g || "function" != typeof e.Promise)
          return r.nextTick(function() {
            var e;
            try {
              e = s(t, n, p, d, m);
            } catch (t) {
              return y(t);
            }
            y(null, e);
          });
        if ((o(t, n, p, d), "function" != typeof y))
          throw new Error("No callback provided to pbkdf2");
        u.isBuffer(t) || (t = u.from(t, a)),
          u.isBuffer(n) || (n = u.from(n, a)),
          (function(t, e) {
            t.then(
              function(t) {
                r.nextTick(function() {
                  e(null, t);
                });
              },
              function(t) {
                r.nextTick(function() {
                  e(t);
                });
              }
            );
          })(
            (function(t) {
              if (e.process && !e.process.browser) return Promise.resolve(!1);
              if (!c || !c.importKey || !c.deriveBits)
                return Promise.resolve(!1);
              if (void 0 !== h[t]) return h[t];
              var n = f((i = i || u.alloc(8)), i, 10, 128, t)
                .then(function() {
                  return !0;
                })
                .catch(function() {
                  return !1;
                });
              return (h[t] = n), n;
            })(g).then(function(e) {
              return e ? f(t, n, p, d, g) : s(t, n, p, d, m);
            }),
            y
          );
      };
    }.call(this, n(5), n(11)));
  },
  function(t, e, n) {
    var r = n(127),
      i = n(45),
      o = n(46),
      a = n(142),
      s = n(29);
    function u(t, e, n) {
      if (((t = t.toLowerCase()), o[t])) return i.createCipheriv(t, e, n);
      if (a[t]) return new r({ key: e, iv: n, mode: t });
      throw new TypeError("invalid suite type");
    }
    function c(t, e, n) {
      if (((t = t.toLowerCase()), o[t])) return i.createDecipheriv(t, e, n);
      if (a[t]) return new r({ key: e, iv: n, mode: t, decrypt: !0 });
      throw new TypeError("invalid suite type");
    }
    (e.createCipher = e.Cipher = function(t, e) {
      var n, r;
      if (((t = t.toLowerCase()), o[t])) (n = o[t].key), (r = o[t].iv);
      else {
        if (!a[t]) throw new TypeError("invalid suite type");
        (n = 8 * a[t].key), (r = a[t].iv);
      }
      var i = s(e, !1, n, r);
      return u(t, i.key, i.iv);
    }),
      (e.createCipheriv = e.Cipheriv = u),
      (e.createDecipher = e.Decipher = function(t, e) {
        var n, r;
        if (((t = t.toLowerCase()), o[t])) (n = o[t].key), (r = o[t].iv);
        else {
          if (!a[t]) throw new TypeError("invalid suite type");
          (n = 8 * a[t].key), (r = a[t].iv);
        }
        var i = s(e, !1, n, r);
        return c(t, i.key, i.iv);
      }),
      (e.createDecipheriv = e.Decipheriv = c),
      (e.listCiphers = e.getCiphers = function() {
        return Object.keys(a).concat(i.getCiphers());
      });
  },
  function(t, e, n) {
    var r = n(13),
      i = n(44),
      o = n(1),
      a = n(2).Buffer,
      s = {
        "des-ede3-cbc": i.CBC.instantiate(i.EDE),
        "des-ede3": i.EDE,
        "des-ede-cbc": i.CBC.instantiate(i.EDE),
        "des-ede": i.EDE,
        "des-cbc": i.CBC.instantiate(i.DES),
        "des-ecb": i.DES
      };
    function u(t) {
      r.call(this);
      var e,
        n = t.mode.toLowerCase(),
        i = s[n];
      e = t.decrypt ? "decrypt" : "encrypt";
      var o = t.key;
      a.isBuffer(o) || (o = a.from(o)),
        ("des-ede" !== n && "des-ede-cbc" !== n) ||
          (o = a.concat([o, o.slice(0, 8)]));
      var u = t.iv;
      a.isBuffer(u) || (u = a.from(u)),
        (this._des = i.create({ key: o, iv: u, type: e }));
    }
    (s.des = s["des-cbc"]),
      (s.des3 = s["des-ede3-cbc"]),
      (t.exports = u),
      o(u, r),
      (u.prototype._update = function(t) {
        return a.from(this._des.update(t));
      }),
      (u.prototype._final = function() {
        return a.from(this._des.final());
      });
  },
  function(t, e, n) {
    "use strict";
    (e.readUInt32BE = function(t, e) {
      return (
        ((t[0 + e] << 24) | (t[1 + e] << 16) | (t[2 + e] << 8) | t[3 + e]) >>> 0
      );
    }),
      (e.writeUInt32BE = function(t, e, n) {
        (t[0 + n] = e >>> 24),
          (t[1 + n] = (e >>> 16) & 255),
          (t[2 + n] = (e >>> 8) & 255),
          (t[3 + n] = 255 & e);
      }),
      (e.ip = function(t, e, n, r) {
        for (var i = 0, o = 0, a = 6; a >= 0; a -= 2) {
          for (var s = 0; s <= 24; s += 8)
            (i <<= 1), (i |= (e >>> (s + a)) & 1);
          for (s = 0; s <= 24; s += 8) (i <<= 1), (i |= (t >>> (s + a)) & 1);
        }
        for (a = 6; a >= 0; a -= 2) {
          for (s = 1; s <= 25; s += 8) (o <<= 1), (o |= (e >>> (s + a)) & 1);
          for (s = 1; s <= 25; s += 8) (o <<= 1), (o |= (t >>> (s + a)) & 1);
        }
        (n[r + 0] = i >>> 0), (n[r + 1] = o >>> 0);
      }),
      (e.rip = function(t, e, n, r) {
        for (var i = 0, o = 0, a = 0; a < 4; a++)
          for (var s = 24; s >= 0; s -= 8)
            (i <<= 1),
              (i |= (e >>> (s + a)) & 1),
              (i <<= 1),
              (i |= (t >>> (s + a)) & 1);
        for (a = 4; a < 8; a++)
          for (s = 24; s >= 0; s -= 8)
            (o <<= 1),
              (o |= (e >>> (s + a)) & 1),
              (o <<= 1),
              (o |= (t >>> (s + a)) & 1);
        (n[r + 0] = i >>> 0), (n[r + 1] = o >>> 0);
      }),
      (e.pc1 = function(t, e, n, r) {
        for (var i = 0, o = 0, a = 7; a >= 5; a--) {
          for (var s = 0; s <= 24; s += 8) (i <<= 1), (i |= (e >> (s + a)) & 1);
          for (s = 0; s <= 24; s += 8) (i <<= 1), (i |= (t >> (s + a)) & 1);
        }
        for (s = 0; s <= 24; s += 8) (i <<= 1), (i |= (e >> (s + a)) & 1);
        for (a = 1; a <= 3; a++) {
          for (s = 0; s <= 24; s += 8) (o <<= 1), (o |= (e >> (s + a)) & 1);
          for (s = 0; s <= 24; s += 8) (o <<= 1), (o |= (t >> (s + a)) & 1);
        }
        for (s = 0; s <= 24; s += 8) (o <<= 1), (o |= (t >> (s + a)) & 1);
        (n[r + 0] = i >>> 0), (n[r + 1] = o >>> 0);
      }),
      (e.r28shl = function(t, e) {
        return ((t << e) & 268435455) | (t >>> (28 - e));
      });
    var r = [
      14,
      11,
      17,
      4,
      27,
      23,
      25,
      0,
      13,
      22,
      7,
      18,
      5,
      9,
      16,
      24,
      2,
      20,
      12,
      21,
      1,
      8,
      15,
      26,
      15,
      4,
      25,
      19,
      9,
      1,
      26,
      16,
      5,
      11,
      23,
      8,
      12,
      7,
      17,
      0,
      22,
      3,
      10,
      14,
      6,
      20,
      27,
      24
    ];
    (e.pc2 = function(t, e, n, i) {
      for (var o = 0, a = 0, s = r.length >>> 1, u = 0; u < s; u++)
        (o <<= 1), (o |= (t >>> r[u]) & 1);
      for (u = s; u < r.length; u++) (a <<= 1), (a |= (e >>> r[u]) & 1);
      (n[i + 0] = o >>> 0), (n[i + 1] = a >>> 0);
    }),
      (e.expand = function(t, e, n) {
        var r = 0,
          i = 0;
        r = ((1 & t) << 5) | (t >>> 27);
        for (var o = 23; o >= 15; o -= 4) (r <<= 6), (r |= (t >>> o) & 63);
        for (o = 11; o >= 3; o -= 4) (i |= (t >>> o) & 63), (i <<= 6);
        (i |= ((31 & t) << 1) | (t >>> 31)),
          (e[n + 0] = r >>> 0),
          (e[n + 1] = i >>> 0);
      });
    var i = [
      14,
      0,
      4,
      15,
      13,
      7,
      1,
      4,
      2,
      14,
      15,
      2,
      11,
      13,
      8,
      1,
      3,
      10,
      10,
      6,
      6,
      12,
      12,
      11,
      5,
      9,
      9,
      5,
      0,
      3,
      7,
      8,
      4,
      15,
      1,
      12,
      14,
      8,
      8,
      2,
      13,
      4,
      6,
      9,
      2,
      1,
      11,
      7,
      15,
      5,
      12,
      11,
      9,
      3,
      7,
      14,
      3,
      10,
      10,
      0,
      5,
      6,
      0,
      13,
      15,
      3,
      1,
      13,
      8,
      4,
      14,
      7,
      6,
      15,
      11,
      2,
      3,
      8,
      4,
      14,
      9,
      12,
      7,
      0,
      2,
      1,
      13,
      10,
      12,
      6,
      0,
      9,
      5,
      11,
      10,
      5,
      0,
      13,
      14,
      8,
      7,
      10,
      11,
      1,
      10,
      3,
      4,
      15,
      13,
      4,
      1,
      2,
      5,
      11,
      8,
      6,
      12,
      7,
      6,
      12,
      9,
      0,
      3,
      5,
      2,
      14,
      15,
      9,
      10,
      13,
      0,
      7,
      9,
      0,
      14,
      9,
      6,
      3,
      3,
      4,
      15,
      6,
      5,
      10,
      1,
      2,
      13,
      8,
      12,
      5,
      7,
      14,
      11,
      12,
      4,
      11,
      2,
      15,
      8,
      1,
      13,
      1,
      6,
      10,
      4,
      13,
      9,
      0,
      8,
      6,
      15,
      9,
      3,
      8,
      0,
      7,
      11,
      4,
      1,
      15,
      2,
      14,
      12,
      3,
      5,
      11,
      10,
      5,
      14,
      2,
      7,
      12,
      7,
      13,
      13,
      8,
      14,
      11,
      3,
      5,
      0,
      6,
      6,
      15,
      9,
      0,
      10,
      3,
      1,
      4,
      2,
      7,
      8,
      2,
      5,
      12,
      11,
      1,
      12,
      10,
      4,
      14,
      15,
      9,
      10,
      3,
      6,
      15,
      9,
      0,
      0,
      6,
      12,
      10,
      11,
      1,
      7,
      13,
      13,
      8,
      15,
      9,
      1,
      4,
      3,
      5,
      14,
      11,
      5,
      12,
      2,
      7,
      8,
      2,
      4,
      14,
      2,
      14,
      12,
      11,
      4,
      2,
      1,
      12,
      7,
      4,
      10,
      7,
      11,
      13,
      6,
      1,
      8,
      5,
      5,
      0,
      3,
      15,
      15,
      10,
      13,
      3,
      0,
      9,
      14,
      8,
      9,
      6,
      4,
      11,
      2,
      8,
      1,
      12,
      11,
      7,
      10,
      1,
      13,
      14,
      7,
      2,
      8,
      13,
      15,
      6,
      9,
      15,
      12,
      0,
      5,
      9,
      6,
      10,
      3,
      4,
      0,
      5,
      14,
      3,
      12,
      10,
      1,
      15,
      10,
      4,
      15,
      2,
      9,
      7,
      2,
      12,
      6,
      9,
      8,
      5,
      0,
      6,
      13,
      1,
      3,
      13,
      4,
      14,
      14,
      0,
      7,
      11,
      5,
      3,
      11,
      8,
      9,
      4,
      14,
      3,
      15,
      2,
      5,
      12,
      2,
      9,
      8,
      5,
      12,
      15,
      3,
      10,
      7,
      11,
      0,
      14,
      4,
      1,
      10,
      7,
      1,
      6,
      13,
      0,
      11,
      8,
      6,
      13,
      4,
      13,
      11,
      0,
      2,
      11,
      14,
      7,
      15,
      4,
      0,
      9,
      8,
      1,
      13,
      10,
      3,
      14,
      12,
      3,
      9,
      5,
      7,
      12,
      5,
      2,
      10,
      15,
      6,
      8,
      1,
      6,
      1,
      6,
      4,
      11,
      11,
      13,
      13,
      8,
      12,
      1,
      3,
      4,
      7,
      10,
      14,
      7,
      10,
      9,
      15,
      5,
      6,
      0,
      8,
      15,
      0,
      14,
      5,
      2,
      9,
      3,
      2,
      12,
      13,
      1,
      2,
      15,
      8,
      13,
      4,
      8,
      6,
      10,
      15,
      3,
      11,
      7,
      1,
      4,
      10,
      12,
      9,
      5,
      3,
      6,
      14,
      11,
      5,
      0,
      0,
      14,
      12,
      9,
      7,
      2,
      7,
      2,
      11,
      1,
      4,
      14,
      1,
      7,
      9,
      4,
      12,
      10,
      14,
      8,
      2,
      13,
      0,
      15,
      6,
      12,
      10,
      9,
      13,
      0,
      15,
      3,
      3,
      5,
      5,
      6,
      8,
      11
    ];
    e.substitute = function(t, e) {
      for (var n = 0, r = 0; r < 4; r++) {
        (n <<= 4), (n |= i[64 * r + ((t >>> (18 - 6 * r)) & 63)]);
      }
      for (r = 0; r < 4; r++) {
        (n <<= 4), (n |= i[256 + 64 * r + ((e >>> (18 - 6 * r)) & 63)]);
      }
      return n >>> 0;
    };
    var o = [
      16,
      25,
      12,
      11,
      3,
      20,
      4,
      15,
      31,
      17,
      9,
      6,
      27,
      14,
      1,
      22,
      30,
      24,
      8,
      18,
      0,
      5,
      29,
      23,
      13,
      19,
      2,
      26,
      10,
      21,
      28,
      7
    ];
    (e.permute = function(t) {
      for (var e = 0, n = 0; n < o.length; n++)
        (e <<= 1), (e |= (t >>> o[n]) & 1);
      return e >>> 0;
    }),
      (e.padSplit = function(t, e, n) {
        for (var r = t.toString(2); r.length < e; ) r = "0" + r;
        for (var i = [], o = 0; o < e; o += n) i.push(r.slice(o, o + n));
        return i.join(" ");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(8);
    function i(t) {
      (this.options = t),
        (this.type = this.options.type),
        (this.blockSize = 8),
        this._init(),
        (this.buffer = new Array(this.blockSize)),
        (this.bufferOff = 0);
    }
    (t.exports = i),
      (i.prototype._init = function() {}),
      (i.prototype.update = function(t) {
        return 0 === t.length
          ? []
          : "decrypt" === this.type
          ? this._updateDecrypt(t)
          : this._updateEncrypt(t);
      }),
      (i.prototype._buffer = function(t, e) {
        for (
          var n = Math.min(this.buffer.length - this.bufferOff, t.length - e),
            r = 0;
          r < n;
          r++
        )
          this.buffer[this.bufferOff + r] = t[e + r];
        return (this.bufferOff += n), n;
      }),
      (i.prototype._flushBuffer = function(t, e) {
        return (
          this._update(this.buffer, 0, t, e),
          (this.bufferOff = 0),
          this.blockSize
        );
      }),
      (i.prototype._updateEncrypt = function(t) {
        var e = 0,
          n = 0,
          r = ((this.bufferOff + t.length) / this.blockSize) | 0,
          i = new Array(r * this.blockSize);
        0 !== this.bufferOff &&
          ((e += this._buffer(t, e)),
          this.bufferOff === this.buffer.length &&
            (n += this._flushBuffer(i, n)));
        for (
          var o = t.length - ((t.length - e) % this.blockSize);
          e < o;
          e += this.blockSize
        )
          this._update(t, e, i, n), (n += this.blockSize);
        for (; e < t.length; e++, this.bufferOff++)
          this.buffer[this.bufferOff] = t[e];
        return i;
      }),
      (i.prototype._updateDecrypt = function(t) {
        for (
          var e = 0,
            n = 0,
            r = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1,
            i = new Array(r * this.blockSize);
          r > 0;
          r--
        )
          (e += this._buffer(t, e)), (n += this._flushBuffer(i, n));
        return (e += this._buffer(t, e)), i;
      }),
      (i.prototype.final = function(t) {
        var e, n;
        return (
          t && (e = this.update(t)),
          (n =
            "encrypt" === this.type
              ? this._finalEncrypt()
              : this._finalDecrypt()),
          e ? e.concat(n) : n
        );
      }),
      (i.prototype._pad = function(t, e) {
        if (0 === e) return !1;
        for (; e < t.length; ) t[e++] = 0;
        return !0;
      }),
      (i.prototype._finalEncrypt = function() {
        if (!this._pad(this.buffer, this.bufferOff)) return [];
        var t = new Array(this.blockSize);
        return this._update(this.buffer, 0, t, 0), t;
      }),
      (i.prototype._unpad = function(t) {
        return t;
      }),
      (i.prototype._finalDecrypt = function() {
        r.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
        var t = new Array(this.blockSize);
        return this._flushBuffer(t, 0), this._unpad(t);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(8),
      i = n(1),
      o = n(44),
      a = o.utils,
      s = o.Cipher;
    function u() {
      (this.tmp = new Array(2)), (this.keys = null);
    }
    function c(t) {
      s.call(this, t);
      var e = new u();
      (this._desState = e), this.deriveKeys(e, t.key);
    }
    i(c, s),
      (t.exports = c),
      (c.create = function(t) {
        return new c(t);
      });
    var l = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
    (c.prototype.deriveKeys = function(t, e) {
      (t.keys = new Array(32)),
        r.equal(e.length, this.blockSize, "Invalid key length");
      var n = a.readUInt32BE(e, 0),
        i = a.readUInt32BE(e, 4);
      a.pc1(n, i, t.tmp, 0), (n = t.tmp[0]), (i = t.tmp[1]);
      for (var o = 0; o < t.keys.length; o += 2) {
        var s = l[o >>> 1];
        (n = a.r28shl(n, s)), (i = a.r28shl(i, s)), a.pc2(n, i, t.keys, o);
      }
    }),
      (c.prototype._update = function(t, e, n, r) {
        var i = this._desState,
          o = a.readUInt32BE(t, e),
          s = a.readUInt32BE(t, e + 4);
        a.ip(o, s, i.tmp, 0),
          (o = i.tmp[0]),
          (s = i.tmp[1]),
          "encrypt" === this.type
            ? this._encrypt(i, o, s, i.tmp, 0)
            : this._decrypt(i, o, s, i.tmp, 0),
          (o = i.tmp[0]),
          (s = i.tmp[1]),
          a.writeUInt32BE(n, o, r),
          a.writeUInt32BE(n, s, r + 4);
      }),
      (c.prototype._pad = function(t, e) {
        for (var n = t.length - e, r = e; r < t.length; r++) t[r] = n;
        return !0;
      }),
      (c.prototype._unpad = function(t) {
        for (var e = t[t.length - 1], n = t.length - e; n < t.length; n++)
          r.equal(t[n], e);
        return t.slice(0, t.length - e);
      }),
      (c.prototype._encrypt = function(t, e, n, r, i) {
        for (var o = e, s = n, u = 0; u < t.keys.length; u += 2) {
          var c = t.keys[u],
            l = t.keys[u + 1];
          a.expand(s, t.tmp, 0), (c ^= t.tmp[0]), (l ^= t.tmp[1]);
          var h = a.substitute(c, l),
            f = s;
          (s = (o ^ a.permute(h)) >>> 0), (o = f);
        }
        a.rip(s, o, r, i);
      }),
      (c.prototype._decrypt = function(t, e, n, r, i) {
        for (var o = n, s = e, u = t.keys.length - 2; u >= 0; u -= 2) {
          var c = t.keys[u],
            l = t.keys[u + 1];
          a.expand(o, t.tmp, 0), (c ^= t.tmp[0]), (l ^= t.tmp[1]);
          var h = a.substitute(c, l),
            f = o;
          (o = (s ^ a.permute(h)) >>> 0), (s = f);
        }
        a.rip(o, s, r, i);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(8),
      i = n(1),
      o = {};
    function a(t) {
      r.equal(t.length, 8, "Invalid IV length"), (this.iv = new Array(8));
      for (var e = 0; e < this.iv.length; e++) this.iv[e] = t[e];
    }
    (e.instantiate = function(t) {
      function e(e) {
        t.call(this, e), this._cbcInit();
      }
      i(e, t);
      for (var n = Object.keys(o), r = 0; r < n.length; r++) {
        var a = n[r];
        e.prototype[a] = o[a];
      }
      return (
        (e.create = function(t) {
          return new e(t);
        }),
        e
      );
    }),
      (o._cbcInit = function() {
        var t = new a(this.options.iv);
        this._cbcState = t;
      }),
      (o._update = function(t, e, n, r) {
        var i = this._cbcState,
          o = this.constructor.super_.prototype,
          a = i.iv;
        if ("encrypt" === this.type) {
          for (var s = 0; s < this.blockSize; s++) a[s] ^= t[e + s];
          o._update.call(this, a, 0, n, r);
          for (s = 0; s < this.blockSize; s++) a[s] = n[r + s];
        } else {
          o._update.call(this, t, e, n, r);
          for (s = 0; s < this.blockSize; s++) n[r + s] ^= a[s];
          for (s = 0; s < this.blockSize; s++) a[s] = t[e + s];
        }
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(8),
      i = n(1),
      o = n(44),
      a = o.Cipher,
      s = o.DES;
    function u(t, e) {
      r.equal(e.length, 24, "Invalid key length");
      var n = e.slice(0, 8),
        i = e.slice(8, 16),
        o = e.slice(16, 24);
      this.ciphers =
        "encrypt" === t
          ? [
              s.create({ type: "encrypt", key: n }),
              s.create({ type: "decrypt", key: i }),
              s.create({ type: "encrypt", key: o })
            ]
          : [
              s.create({ type: "decrypt", key: o }),
              s.create({ type: "encrypt", key: i }),
              s.create({ type: "decrypt", key: n })
            ];
    }
    function c(t) {
      a.call(this, t);
      var e = new u(this.type, this.options.key);
      this._edeState = e;
    }
    i(c, a),
      (t.exports = c),
      (c.create = function(t) {
        return new c(t);
      }),
      (c.prototype._update = function(t, e, n, r) {
        var i = this._edeState;
        i.ciphers[0]._update(t, e, n, r),
          i.ciphers[1]._update(n, r, n, r),
          i.ciphers[2]._update(n, r, n, r);
      }),
      (c.prototype._pad = s.prototype._pad),
      (c.prototype._unpad = s.prototype._unpad);
  },
  function(t, e, n) {
    var r = n(46),
      i = n(76),
      o = n(2).Buffer,
      a = n(77),
      s = n(13),
      u = n(28),
      c = n(29);
    function l(t, e, n) {
      s.call(this),
        (this._cache = new f()),
        (this._cipher = new u.AES(e)),
        (this._prev = o.from(n)),
        (this._mode = t),
        (this._autopadding = !0);
    }
    n(1)(l, s),
      (l.prototype._update = function(t) {
        var e, n;
        this._cache.add(t);
        for (var r = []; (e = this._cache.get()); )
          (n = this._mode.encrypt(this, e)), r.push(n);
        return o.concat(r);
      });
    var h = o.alloc(16, 16);
    function f() {
      this.cache = o.allocUnsafe(0);
    }
    function p(t, e, n) {
      var s = r[t.toLowerCase()];
      if (!s) throw new TypeError("invalid suite type");
      if (("string" == typeof e && (e = o.from(e)), e.length !== s.key / 8))
        throw new TypeError("invalid key length " + e.length);
      if (
        ("string" == typeof n && (n = o.from(n)),
        "GCM" !== s.mode && n.length !== s.iv)
      )
        throw new TypeError("invalid iv length " + n.length);
      return "stream" === s.type
        ? new a(s.module, e, n)
        : "auth" === s.type
        ? new i(s.module, e, n)
        : new l(s.module, e, n);
    }
    (l.prototype._final = function() {
      var t = this._cache.flush();
      if (this._autopadding)
        return (t = this._mode.encrypt(this, t)), this._cipher.scrub(), t;
      if (!t.equals(h))
        throw (this._cipher.scrub(),
        new Error("data not multiple of block length"));
    }),
      (l.prototype.setAutoPadding = function(t) {
        return (this._autopadding = !!t), this;
      }),
      (f.prototype.add = function(t) {
        this.cache = o.concat([this.cache, t]);
      }),
      (f.prototype.get = function() {
        if (this.cache.length > 15) {
          var t = this.cache.slice(0, 16);
          return (this.cache = this.cache.slice(16)), t;
        }
        return null;
      }),
      (f.prototype.flush = function() {
        for (
          var t = 16 - this.cache.length, e = o.allocUnsafe(t), n = -1;
          ++n < t;

        )
          e.writeUInt8(t, n);
        return o.concat([this.cache, e]);
      }),
      (e.createCipheriv = p),
      (e.createCipher = function(t, e) {
        var n = r[t.toLowerCase()];
        if (!n) throw new TypeError("invalid suite type");
        var i = c(e, !1, n.key, n.iv);
        return p(t, i.key, i.iv);
      });
  },
  function(t, e) {
    (e.encrypt = function(t, e) {
      return t._cipher.encryptBlock(e);
    }),
      (e.decrypt = function(t, e) {
        return t._cipher.decryptBlock(e);
      });
  },
  function(t, e, n) {
    var r = n(22);
    (e.encrypt = function(t, e) {
      var n = r(e, t._prev);
      return (t._prev = t._cipher.encryptBlock(n)), t._prev;
    }),
      (e.decrypt = function(t, e) {
        var n = t._prev;
        t._prev = e;
        var i = t._cipher.decryptBlock(e);
        return r(i, n);
      });
  },
  function(t, e, n) {
    var r = n(2).Buffer,
      i = n(22);
    function o(t, e, n) {
      var o = e.length,
        a = i(e, t._cache);
      return (
        (t._cache = t._cache.slice(o)),
        (t._prev = r.concat([t._prev, n ? e : a])),
        a
      );
    }
    e.encrypt = function(t, e, n) {
      for (var i, a = r.allocUnsafe(0); e.length; ) {
        if (
          (0 === t._cache.length &&
            ((t._cache = t._cipher.encryptBlock(t._prev)),
            (t._prev = r.allocUnsafe(0))),
          !(t._cache.length <= e.length))
        ) {
          a = r.concat([a, o(t, e, n)]);
          break;
        }
        (i = t._cache.length),
          (a = r.concat([a, o(t, e.slice(0, i), n)])),
          (e = e.slice(i));
      }
      return a;
    };
  },
  function(t, e, n) {
    var r = n(2).Buffer;
    function i(t, e, n) {
      var i = t._cipher.encryptBlock(t._prev)[0] ^ e;
      return (t._prev = r.concat([t._prev.slice(1), r.from([n ? e : i])])), i;
    }
    e.encrypt = function(t, e, n) {
      for (var o = e.length, a = r.allocUnsafe(o), s = -1; ++s < o; )
        a[s] = i(t, e[s], n);
      return a;
    };
  },
  function(t, e, n) {
    var r = n(2).Buffer;
    function i(t, e, n) {
      for (var r, i, a = -1, s = 0; ++a < 8; )
        (r = e & (1 << (7 - a)) ? 128 : 0),
          (s += (128 & (i = t._cipher.encryptBlock(t._prev)[0] ^ r)) >> a % 8),
          (t._prev = o(t._prev, n ? r : i));
      return s;
    }
    function o(t, e) {
      var n = t.length,
        i = -1,
        o = r.allocUnsafe(t.length);
      for (t = r.concat([t, r.from([e])]); ++i < n; )
        o[i] = (t[i] << 1) | (t[i + 1] >> 7);
      return o;
    }
    e.encrypt = function(t, e, n) {
      for (var o = e.length, a = r.allocUnsafe(o), s = -1; ++s < o; )
        a[s] = i(t, e[s], n);
      return a;
    };
  },
  function(t, e, n) {
    (function(t) {
      var r = n(22);
      function i(t) {
        return (t._prev = t._cipher.encryptBlock(t._prev)), t._prev;
      }
      e.encrypt = function(e, n) {
        for (; e._cache.length < n.length; )
          e._cache = t.concat([e._cache, i(e)]);
        var o = e._cache.slice(0, n.length);
        return (e._cache = e._cache.slice(n.length)), r(n, o);
      };
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    var r = n(2).Buffer,
      i = r.alloc(16, 0);
    function o(t) {
      var e = r.allocUnsafe(16);
      return (
        e.writeUInt32BE(t[0] >>> 0, 0),
        e.writeUInt32BE(t[1] >>> 0, 4),
        e.writeUInt32BE(t[2] >>> 0, 8),
        e.writeUInt32BE(t[3] >>> 0, 12),
        e
      );
    }
    function a(t) {
      (this.h = t),
        (this.state = r.alloc(16, 0)),
        (this.cache = r.allocUnsafe(0));
    }
    (a.prototype.ghash = function(t) {
      for (var e = -1; ++e < t.length; ) this.state[e] ^= t[e];
      this._multiply();
    }),
      (a.prototype._multiply = function() {
        for (
          var t,
            e,
            n,
            r = [
              (t = this.h).readUInt32BE(0),
              t.readUInt32BE(4),
              t.readUInt32BE(8),
              t.readUInt32BE(12)
            ],
            i = [0, 0, 0, 0],
            a = -1;
          ++a < 128;

        ) {
          for (
            0 != (this.state[~~(a / 8)] & (1 << (7 - (a % 8)))) &&
              ((i[0] ^= r[0]), (i[1] ^= r[1]), (i[2] ^= r[2]), (i[3] ^= r[3])),
              n = 0 != (1 & r[3]),
              e = 3;
            e > 0;
            e--
          )
            r[e] = (r[e] >>> 1) | ((1 & r[e - 1]) << 31);
          (r[0] = r[0] >>> 1), n && (r[0] = r[0] ^ (225 << 24));
        }
        this.state = o(i);
      }),
      (a.prototype.update = function(t) {
        var e;
        for (this.cache = r.concat([this.cache, t]); this.cache.length >= 16; )
          (e = this.cache.slice(0, 16)),
            (this.cache = this.cache.slice(16)),
            this.ghash(e);
      }),
      (a.prototype.final = function(t, e) {
        return (
          this.cache.length && this.ghash(r.concat([this.cache, i], 16)),
          this.ghash(o([0, t, 0, e])),
          this.state
        );
      }),
      (t.exports = a);
  },
  function(t, e, n) {
    var r = n(76),
      i = n(2).Buffer,
      o = n(46),
      a = n(77),
      s = n(13),
      u = n(28),
      c = n(29);
    function l(t, e, n) {
      s.call(this),
        (this._cache = new h()),
        (this._last = void 0),
        (this._cipher = new u.AES(e)),
        (this._prev = i.from(n)),
        (this._mode = t),
        (this._autopadding = !0);
    }
    function h() {
      this.cache = i.allocUnsafe(0);
    }
    function f(t, e, n) {
      var s = o[t.toLowerCase()];
      if (!s) throw new TypeError("invalid suite type");
      if (
        ("string" == typeof n && (n = i.from(n)),
        "GCM" !== s.mode && n.length !== s.iv)
      )
        throw new TypeError("invalid iv length " + n.length);
      if (("string" == typeof e && (e = i.from(e)), e.length !== s.key / 8))
        throw new TypeError("invalid key length " + e.length);
      return "stream" === s.type
        ? new a(s.module, e, n, !0)
        : "auth" === s.type
        ? new r(s.module, e, n, !0)
        : new l(s.module, e, n);
    }
    n(1)(l, s),
      (l.prototype._update = function(t) {
        var e, n;
        this._cache.add(t);
        for (var r = []; (e = this._cache.get(this._autopadding)); )
          (n = this._mode.decrypt(this, e)), r.push(n);
        return i.concat(r);
      }),
      (l.prototype._final = function() {
        var t = this._cache.flush();
        if (this._autopadding)
          return (function(t) {
            var e = t[15];
            if (e < 1 || e > 16) throw new Error("unable to decrypt data");
            var n = -1;
            for (; ++n < e; )
              if (t[n + (16 - e)] !== e)
                throw new Error("unable to decrypt data");
            if (16 === e) return;
            return t.slice(0, 16 - e);
          })(this._mode.decrypt(this, t));
        if (t) throw new Error("data not multiple of block length");
      }),
      (l.prototype.setAutoPadding = function(t) {
        return (this._autopadding = !!t), this;
      }),
      (h.prototype.add = function(t) {
        this.cache = i.concat([this.cache, t]);
      }),
      (h.prototype.get = function(t) {
        var e;
        if (t) {
          if (this.cache.length > 16)
            return (
              (e = this.cache.slice(0, 16)),
              (this.cache = this.cache.slice(16)),
              e
            );
        } else if (this.cache.length >= 16)
          return (
            (e = this.cache.slice(0, 16)),
            (this.cache = this.cache.slice(16)),
            e
          );
        return null;
      }),
      (h.prototype.flush = function() {
        if (this.cache.length) return this.cache;
      }),
      (e.createDecipher = function(t, e) {
        var n = o[t.toLowerCase()];
        if (!n) throw new TypeError("invalid suite type");
        var r = c(e, !1, n.key, n.iv);
        return f(t, r.key, r.iv);
      }),
      (e.createDecipheriv = f);
  },
  function(t, e) {
    (e["des-ecb"] = { key: 8, iv: 0 }),
      (e["des-cbc"] = e.des = { key: 8, iv: 8 }),
      (e["des-ede3-cbc"] = e.des3 = { key: 24, iv: 8 }),
      (e["des-ede3"] = { key: 24, iv: 0 }),
      (e["des-ede-cbc"] = { key: 16, iv: 8 }),
      (e["des-ede"] = { key: 16, iv: 0 });
  },
  function(t, e, n) {
    (function(t) {
      var r = n(78),
        i = n(146),
        o = n(147);
      var a = { binary: !0, hex: !0, base64: !0 };
      (e.DiffieHellmanGroup = e.createDiffieHellmanGroup = e.getDiffieHellman = function(
        e
      ) {
        var n = new t(i[e].prime, "hex"),
          r = new t(i[e].gen, "hex");
        return new o(n, r);
      }),
        (e.createDiffieHellman = e.DiffieHellman = function e(n, i, s, u) {
          return t.isBuffer(i) || void 0 === a[i]
            ? e(n, "binary", i, s)
            : ((i = i || "binary"),
              (u = u || "binary"),
              (s = s || new t([2])),
              t.isBuffer(s) || (s = new t(s, u)),
              "number" == typeof n
                ? new o(r(n, s), s, !0)
                : (t.isBuffer(n) || (n = new t(n, i)), new o(n, s, !0)));
        });
    }.call(this, n(3).Buffer));
  },
  function(t, e) {},
  function(t, e) {},
  function(t) {
    t.exports = {
      modp1: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
      },
      modp2: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
      },
      modp5: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
      },
      modp14: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
      },
      modp15: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
      },
      modp16: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
      },
      modp17: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
      },
      modp18: {
        gen: "02",
        prime:
          "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
      }
    };
  },
  function(t, e, n) {
    (function(e) {
      var r = n(4),
        i = new (n(80))(),
        o = new r(24),
        a = new r(11),
        s = new r(10),
        u = new r(3),
        c = new r(7),
        l = n(78),
        h = n(17);
      function f(t, n) {
        return (
          (n = n || "utf8"),
          e.isBuffer(t) || (t = new e(t, n)),
          (this._pub = new r(t)),
          this
        );
      }
      function p(t, n) {
        return (
          (n = n || "utf8"),
          e.isBuffer(t) || (t = new e(t, n)),
          (this._priv = new r(t)),
          this
        );
      }
      t.exports = m;
      var d = {};
      function m(t, e, n) {
        this.setGenerator(e),
          (this.__prime = new r(t)),
          (this._prime = r.mont(this.__prime)),
          (this._primeLen = t.length),
          (this._pub = void 0),
          (this._priv = void 0),
          (this._primeCode = void 0),
          n
            ? ((this.setPublicKey = f), (this.setPrivateKey = p))
            : (this._primeCode = 8);
      }
      function y(t, n) {
        var r = new e(t.toArray());
        return n ? r.toString(n) : r;
      }
      Object.defineProperty(m.prototype, "verifyError", {
        enumerable: !0,
        get: function() {
          return (
            "number" != typeof this._primeCode &&
              (this._primeCode = (function(t, e) {
                var n = e.toString("hex"),
                  r = [n, t.toString(16)].join("_");
                if (r in d) return d[r];
                var h,
                  f = 0;
                if (
                  t.isEven() ||
                  !l.simpleSieve ||
                  !l.fermatTest(t) ||
                  !i.test(t)
                )
                  return (
                    (f += 1),
                    (f += "02" === n || "05" === n ? 8 : 4),
                    (d[r] = f),
                    f
                  );
                switch ((i.test(t.shrn(1)) || (f += 2), n)) {
                  case "02":
                    t.mod(o).cmp(a) && (f += 8);
                    break;
                  case "05":
                    (h = t.mod(s)).cmp(u) && h.cmp(c) && (f += 8);
                    break;
                  default:
                    f += 4;
                }
                return (d[r] = f), f;
              })(this.__prime, this.__gen)),
            this._primeCode
          );
        }
      }),
        (m.prototype.generateKeys = function() {
          return (
            this._priv || (this._priv = new r(h(this._primeLen))),
            (this._pub = this._gen
              .toRed(this._prime)
              .redPow(this._priv)
              .fromRed()),
            this.getPublicKey()
          );
        }),
        (m.prototype.computeSecret = function(t) {
          var n = (t = (t = new r(t)).toRed(this._prime))
              .redPow(this._priv)
              .fromRed(),
            i = new e(n.toArray()),
            o = this.getPrime();
          if (i.length < o.length) {
            var a = new e(o.length - i.length);
            a.fill(0), (i = e.concat([a, i]));
          }
          return i;
        }),
        (m.prototype.getPublicKey = function(t) {
          return y(this._pub, t);
        }),
        (m.prototype.getPrivateKey = function(t) {
          return y(this._priv, t);
        }),
        (m.prototype.getPrime = function(t) {
          return y(this.__prime, t);
        }),
        (m.prototype.getGenerator = function(t) {
          return y(this._gen, t);
        }),
        (m.prototype.setGenerator = function(t, n) {
          return (
            (n = n || "utf8"),
            e.isBuffer(t) || (t = new e(t, n)),
            (this.__gen = t),
            (this._gen = new r(t)),
            this
          );
        });
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    (function(e) {
      var r = n(20),
        i = n(37),
        o = n(1),
        a = n(149),
        s = n(184),
        u = n(68);
      function c(t) {
        i.Writable.call(this);
        var e = u[t];
        if (!e) throw new Error("Unknown message digest");
        (this._hashType = e.hash),
          (this._hash = r(e.hash)),
          (this._tag = e.id),
          (this._signType = e.sign);
      }
      function l(t) {
        i.Writable.call(this);
        var e = u[t];
        if (!e) throw new Error("Unknown message digest");
        (this._hash = r(e.hash)), (this._tag = e.id), (this._signType = e.sign);
      }
      function h(t) {
        return new c(t);
      }
      function f(t) {
        return new l(t);
      }
      Object.keys(u).forEach(function(t) {
        (u[t].id = new e(u[t].id, "hex")), (u[t.toLowerCase()] = u[t]);
      }),
        o(c, i.Writable),
        (c.prototype._write = function(t, e, n) {
          this._hash.update(t), n();
        }),
        (c.prototype.update = function(t, n) {
          return (
            "string" == typeof t && (t = new e(t, n)),
            this._hash.update(t),
            this
          );
        }),
        (c.prototype.sign = function(t, e) {
          this.end();
          var n = this._hash.digest(),
            r = a(n, t, this._hashType, this._signType, this._tag);
          return e ? r.toString(e) : r;
        }),
        o(l, i.Writable),
        (l.prototype._write = function(t, e, n) {
          this._hash.update(t), n();
        }),
        (l.prototype.update = function(t, n) {
          return (
            "string" == typeof t && (t = new e(t, n)),
            this._hash.update(t),
            this
          );
        }),
        (l.prototype.verify = function(t, n, r) {
          "string" == typeof n && (n = new e(n, r)), this.end();
          var i = this._hash.digest();
          return s(n, i, t, this._signType, this._tag);
        }),
        (t.exports = { Sign: h, Verify: f, createSign: h, createVerify: f });
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    (function(e) {
      var r = n(66),
        i = n(47),
        o = n(6).ec,
        a = n(4),
        s = n(31),
        u = n(90);
      function c(t, n, i, o) {
        if ((t = new e(t.toArray())).length < n.byteLength()) {
          var a = new e(n.byteLength() - t.length);
          a.fill(0), (t = e.concat([a, t]));
        }
        var s = i.length,
          u = (function(t, n) {
            t = (t = l(t, n)).mod(n);
            var r = new e(t.toArray());
            if (r.length < n.byteLength()) {
              var i = new e(n.byteLength() - r.length);
              i.fill(0), (r = e.concat([i, r]));
            }
            return r;
          })(i, n),
          c = new e(s);
        c.fill(1);
        var h = new e(s);
        return (
          h.fill(0),
          (h = r(o, h)
            .update(c)
            .update(new e([0]))
            .update(t)
            .update(u)
            .digest()),
          (c = r(o, h)
            .update(c)
            .digest()),
          {
            k: (h = r(o, h)
              .update(c)
              .update(new e([1]))
              .update(t)
              .update(u)
              .digest()),
            v: (c = r(o, h)
              .update(c)
              .digest())
          }
        );
      }
      function l(t, e) {
        var n = new a(t),
          r = (t.length << 3) - e.bitLength();
        return r > 0 && n.ishrn(r), n;
      }
      function h(t, n, i) {
        var o, a;
        do {
          for (o = new e(0); 8 * o.length < t.bitLength(); )
            (n.v = r(i, n.k)
              .update(n.v)
              .digest()),
              (o = e.concat([o, n.v]));
          (a = l(o, t)),
            (n.k = r(i, n.k)
              .update(n.v)
              .update(new e([0]))
              .digest()),
            (n.v = r(i, n.k)
              .update(n.v)
              .digest());
        } while (-1 !== a.cmp(t));
        return a;
      }
      function f(t, e, n, r) {
        return t
          .toRed(a.mont(n))
          .redPow(e)
          .fromRed()
          .mod(r);
      }
      (t.exports = function(t, n, r, p, d) {
        var m = s(n);
        if (m.curve) {
          if ("ecdsa" !== p && "ecdsa/rsa" !== p)
            throw new Error("wrong private key type");
          return (function(t, n) {
            var r = u[n.curve.join(".")];
            if (!r) throw new Error("unknown curve " + n.curve.join("."));
            var i = new o(r).keyFromPrivate(n.privateKey).sign(t);
            return new e(i.toDER());
          })(t, m);
        }
        if ("dsa" === m.type) {
          if ("dsa" !== p) throw new Error("wrong private key type");
          return (function(t, n, r) {
            for (
              var i,
                o = n.params.priv_key,
                s = n.params.p,
                u = n.params.q,
                p = n.params.g,
                d = new a(0),
                m = l(t, u).mod(u),
                y = !1,
                g = c(o, u, t, r);
              !1 === y;

            )
              (i = h(u, g, r)),
                (d = f(p, i, s, u)),
                0 ===
                  (y = i
                    .invm(u)
                    .imul(m.add(o.mul(d)))
                    .mod(u)).cmpn(0) && ((y = !1), (d = new a(0)));
            return (function(t, n) {
              (t = t.toArray()),
                (n = n.toArray()),
                128 & t[0] && (t = [0].concat(t)),
                128 & n[0] && (n = [0].concat(n));
              var r = [48, t.length + n.length + 4, 2, t.length];
              return (r = r.concat(t, [2, n.length], n)), new e(r);
            })(d, y);
          })(t, m, r);
        }
        if ("rsa" !== p && "ecdsa/rsa" !== p)
          throw new Error("wrong private key type");
        t = e.concat([d, t]);
        for (
          var y = m.modulus.byteLength(), g = [0, 1];
          t.length + g.length + 1 < y;

        )
          g.push(255);
        g.push(0);
        for (var v = -1; ++v < t.length; ) g.push(t[v]);
        return i(g, m);
      }),
        (t.exports.getKey = c),
        (t.exports.makeKey = h);
    }.call(this, n(3).Buffer));
  },
  function(t) {
    t.exports = {
      name: "elliptic",
      version: "6.4.1",
      description: "EC cryptography",
      main: "lib/elliptic.js",
      files: ["lib"],
      scripts: {
        jscs:
          "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
        jshint:
          "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
        lint: "npm run jscs && npm run jshint",
        unit: "istanbul test _mocha --reporter=spec test/index.js",
        test: "npm run lint && npm run unit",
        version: "grunt dist && git add dist/"
      },
      repository: { type: "git", url: "git@github.com:indutny/elliptic" },
      keywords: ["EC", "Elliptic", "curve", "Cryptography"],
      author: "Fedor Indutny <fedor@indutny.com>",
      license: "MIT",
      bugs: { url: "https://github.com/indutny/elliptic/issues" },
      homepage: "https://github.com/indutny/elliptic",
      devDependencies: {
        brfs: "^1.4.3",
        coveralls: "^2.11.3",
        grunt: "^0.4.5",
        "grunt-browserify": "^5.0.0",
        "grunt-cli": "^1.2.0",
        "grunt-contrib-connect": "^1.0.0",
        "grunt-contrib-copy": "^1.0.0",
        "grunt-contrib-uglify": "^1.0.1",
        "grunt-mocha-istanbul": "^3.0.1",
        "grunt-saucelabs": "^8.6.2",
        istanbul: "^0.4.2",
        jscs: "^2.9.0",
        jshint: "^2.6.0",
        mocha: "^2.1.0"
      },
      dependencies: {
        "bn.js": "^4.4.0",
        brorand: "^1.0.1",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.0",
        inherits: "^2.0.1",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.0"
      }
    };
  },
  function(t, e, n) {
    "use strict";
    var r = e,
      i = n(4),
      o = n(8),
      a = n(82);
    (r.assert = o),
      (r.toArray = a.toArray),
      (r.zero2 = a.zero2),
      (r.toHex = a.toHex),
      (r.encode = a.encode),
      (r.getNAF = function(t, e) {
        for (var n = [], r = 1 << (e + 1), i = t.clone(); i.cmpn(1) >= 0; ) {
          var o;
          if (i.isOdd()) {
            var a = i.andln(r - 1);
            (o = a > (r >> 1) - 1 ? (r >> 1) - a : a), i.isubn(o);
          } else o = 0;
          n.push(o);
          for (
            var s = 0 !== i.cmpn(0) && 0 === i.andln(r - 1) ? e + 1 : 1, u = 1;
            u < s;
            u++
          )
            n.push(0);
          i.iushrn(s);
        }
        return n;
      }),
      (r.getJSF = function(t, e) {
        var n = [[], []];
        (t = t.clone()), (e = e.clone());
        for (var r = 0, i = 0; t.cmpn(-r) > 0 || e.cmpn(-i) > 0; ) {
          var o,
            a,
            s,
            u = (t.andln(3) + r) & 3,
            c = (e.andln(3) + i) & 3;
          3 === u && (u = -1),
            3 === c && (c = -1),
            (o =
              0 == (1 & u)
                ? 0
                : (3 != (s = (t.andln(7) + r) & 7) && 5 !== s) || 2 !== c
                ? u
                : -u),
            n[0].push(o),
            (a =
              0 == (1 & c)
                ? 0
                : (3 != (s = (e.andln(7) + i) & 7) && 5 !== s) || 2 !== u
                ? c
                : -c),
            n[1].push(a),
            2 * r === o + 1 && (r = 1 - r),
            2 * i === a + 1 && (i = 1 - i),
            t.iushrn(1),
            e.iushrn(1);
        }
        return n;
      }),
      (r.cachedProperty = function(t, e, n) {
        var r = "_" + e;
        t.prototype[e] = function() {
          return void 0 !== this[r] ? this[r] : (this[r] = n.call(this));
        };
      }),
      (r.parseBytes = function(t) {
        return "string" == typeof t ? r.toArray(t, "hex") : t;
      }),
      (r.intFromLE = function(t) {
        return new i(t, "hex", "le");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(4),
      i = n(6).utils,
      o = i.getNAF,
      a = i.getJSF,
      s = i.assert;
    function u(t, e) {
      (this.type = t),
        (this.p = new r(e.p, 16)),
        (this.red = e.prime ? r.red(e.prime) : r.mont(this.p)),
        (this.zero = new r(0).toRed(this.red)),
        (this.one = new r(1).toRed(this.red)),
        (this.two = new r(2).toRed(this.red)),
        (this.n = e.n && new r(e.n, 16)),
        (this.g = e.g && this.pointFromJSON(e.g, e.gRed)),
        (this._wnafT1 = new Array(4)),
        (this._wnafT2 = new Array(4)),
        (this._wnafT3 = new Array(4)),
        (this._wnafT4 = new Array(4));
      var n = this.n && this.p.div(this.n);
      !n || n.cmpn(100) > 0
        ? (this.redN = null)
        : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
    }
    function c(t, e) {
      (this.curve = t), (this.type = e), (this.precomputed = null);
    }
    (t.exports = u),
      (u.prototype.point = function() {
        throw new Error("Not implemented");
      }),
      (u.prototype.validate = function() {
        throw new Error("Not implemented");
      }),
      (u.prototype._fixedNafMul = function(t, e) {
        s(t.precomputed);
        var n = t._getDoubles(),
          r = o(e, 1),
          i = (1 << (n.step + 1)) - (n.step % 2 == 0 ? 2 : 1);
        i /= 3;
        for (var a = [], u = 0; u < r.length; u += n.step) {
          var c = 0;
          for (e = u + n.step - 1; e >= u; e--) c = (c << 1) + r[e];
          a.push(c);
        }
        for (
          var l = this.jpoint(null, null, null),
            h = this.jpoint(null, null, null),
            f = i;
          f > 0;
          f--
        ) {
          for (u = 0; u < a.length; u++) {
            (c = a[u]) === f
              ? (h = h.mixedAdd(n.points[u]))
              : c === -f && (h = h.mixedAdd(n.points[u].neg()));
          }
          l = l.add(h);
        }
        return l.toP();
      }),
      (u.prototype._wnafMul = function(t, e) {
        var n = 4,
          r = t._getNAFPoints(n);
        n = r.wnd;
        for (
          var i = r.points,
            a = o(e, n),
            u = this.jpoint(null, null, null),
            c = a.length - 1;
          c >= 0;
          c--
        ) {
          for (e = 0; c >= 0 && 0 === a[c]; c--) e++;
          if ((c >= 0 && e++, (u = u.dblp(e)), c < 0)) break;
          var l = a[c];
          s(0 !== l),
            (u =
              "affine" === t.type
                ? l > 0
                  ? u.mixedAdd(i[(l - 1) >> 1])
                  : u.mixedAdd(i[(-l - 1) >> 1].neg())
                : l > 0
                ? u.add(i[(l - 1) >> 1])
                : u.add(i[(-l - 1) >> 1].neg()));
        }
        return "affine" === t.type ? u.toP() : u;
      }),
      (u.prototype._wnafMulAdd = function(t, e, n, r, i) {
        for (
          var s = this._wnafT1,
            u = this._wnafT2,
            c = this._wnafT3,
            l = 0,
            h = 0;
          h < r;
          h++
        ) {
          var f = (A = e[h])._getNAFPoints(t);
          (s[h] = f.wnd), (u[h] = f.points);
        }
        for (h = r - 1; h >= 1; h -= 2) {
          var p = h - 1,
            d = h;
          if (1 === s[p] && 1 === s[d]) {
            var m = [e[p], null, null, e[d]];
            0 === e[p].y.cmp(e[d].y)
              ? ((m[1] = e[p].add(e[d])),
                (m[2] = e[p].toJ().mixedAdd(e[d].neg())))
              : 0 === e[p].y.cmp(e[d].y.redNeg())
              ? ((m[1] = e[p].toJ().mixedAdd(e[d])),
                (m[2] = e[p].add(e[d].neg())))
              : ((m[1] = e[p].toJ().mixedAdd(e[d])),
                (m[2] = e[p].toJ().mixedAdd(e[d].neg())));
            var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
              g = a(n[p], n[d]);
            (l = Math.max(g[0].length, l)),
              (c[p] = new Array(l)),
              (c[d] = new Array(l));
            for (var v = 0; v < l; v++) {
              var b = 0 | g[0][v],
                w = 0 | g[1][v];
              (c[p][v] = y[3 * (b + 1) + (w + 1)]), (c[d][v] = 0), (u[p] = m);
            }
          } else
            (c[p] = o(n[p], s[p])),
              (c[d] = o(n[d], s[d])),
              (l = Math.max(c[p].length, l)),
              (l = Math.max(c[d].length, l));
        }
        var _ = this.jpoint(null, null, null),
          S = this._wnafT4;
        for (h = l; h >= 0; h--) {
          for (var x = 0; h >= 0; ) {
            var T = !0;
            for (v = 0; v < r; v++)
              (S[v] = 0 | c[v][h]), 0 !== S[v] && (T = !1);
            if (!T) break;
            x++, h--;
          }
          if ((h >= 0 && x++, (_ = _.dblp(x)), h < 0)) break;
          for (v = 0; v < r; v++) {
            var A,
              k = S[v];
            0 !== k &&
              (k > 0
                ? (A = u[v][(k - 1) >> 1])
                : k < 0 && (A = u[v][(-k - 1) >> 1].neg()),
              (_ = "affine" === A.type ? _.mixedAdd(A) : _.add(A)));
          }
        }
        for (h = 0; h < r; h++) u[h] = null;
        return i ? _ : _.toP();
      }),
      (u.BasePoint = c),
      (c.prototype.eq = function() {
        throw new Error("Not implemented");
      }),
      (c.prototype.validate = function() {
        return this.curve.validate(this);
      }),
      (u.prototype.decodePoint = function(t, e) {
        t = i.toArray(t, e);
        var n = this.p.byteLength();
        if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * n)
          return (
            6 === t[0]
              ? s(t[t.length - 1] % 2 == 0)
              : 7 === t[0] && s(t[t.length - 1] % 2 == 1),
            this.point(t.slice(1, 1 + n), t.slice(1 + n, 1 + 2 * n))
          );
        if ((2 === t[0] || 3 === t[0]) && t.length - 1 === n)
          return this.pointFromX(t.slice(1, 1 + n), 3 === t[0]);
        throw new Error("Unknown point format");
      }),
      (c.prototype.encodeCompressed = function(t) {
        return this.encode(t, !0);
      }),
      (c.prototype._encode = function(t) {
        var e = this.curve.p.byteLength(),
          n = this.getX().toArray("be", e);
        return t
          ? [this.getY().isEven() ? 2 : 3].concat(n)
          : [4].concat(n, this.getY().toArray("be", e));
      }),
      (c.prototype.encode = function(t, e) {
        return i.encode(this._encode(e), t);
      }),
      (c.prototype.precompute = function(t) {
        if (this.precomputed) return this;
        var e = { doubles: null, naf: null, beta: null };
        return (
          (e.naf = this._getNAFPoints(8)),
          (e.doubles = this._getDoubles(4, t)),
          (e.beta = this._getBeta()),
          (this.precomputed = e),
          this
        );
      }),
      (c.prototype._hasDoubles = function(t) {
        if (!this.precomputed) return !1;
        var e = this.precomputed.doubles;
        return (
          !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
        );
      }),
      (c.prototype._getDoubles = function(t, e) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        for (var n = [this], r = this, i = 0; i < e; i += t) {
          for (var o = 0; o < t; o++) r = r.dbl();
          n.push(r);
        }
        return { step: t, points: n };
      }),
      (c.prototype._getNAFPoints = function(t) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        for (
          var e = [this],
            n = (1 << t) - 1,
            r = 1 === n ? null : this.dbl(),
            i = 1;
          i < n;
          i++
        )
          e[i] = e[i - 1].add(r);
        return { wnd: t, points: e };
      }),
      (c.prototype._getBeta = function() {
        return null;
      }),
      (c.prototype.dblp = function(t) {
        for (var e = this, n = 0; n < t; n++) e = e.dbl();
        return e;
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(30),
      i = n(6),
      o = n(4),
      a = n(1),
      s = r.base,
      u = i.utils.assert;
    function c(t) {
      s.call(this, "short", t),
        (this.a = new o(t.a, 16).toRed(this.red)),
        (this.b = new o(t.b, 16).toRed(this.red)),
        (this.tinv = this.two.redInvm()),
        (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
        (this.threeA =
          0 ===
          this.a
            .fromRed()
            .sub(this.p)
            .cmpn(-3)),
        (this.endo = this._getEndomorphism(t)),
        (this._endoWnafT1 = new Array(4)),
        (this._endoWnafT2 = new Array(4));
    }
    function l(t, e, n, r) {
      s.BasePoint.call(this, t, "affine"),
        null === e && null === n
          ? ((this.x = null), (this.y = null), (this.inf = !0))
          : ((this.x = new o(e, 16)),
            (this.y = new o(n, 16)),
            r &&
              (this.x.forceRed(this.curve.red),
              this.y.forceRed(this.curve.red)),
            this.x.red || (this.x = this.x.toRed(this.curve.red)),
            this.y.red || (this.y = this.y.toRed(this.curve.red)),
            (this.inf = !1));
    }
    function h(t, e, n, r) {
      s.BasePoint.call(this, t, "jacobian"),
        null === e && null === n && null === r
          ? ((this.x = this.curve.one),
            (this.y = this.curve.one),
            (this.z = new o(0)))
          : ((this.x = new o(e, 16)),
            (this.y = new o(n, 16)),
            (this.z = new o(r, 16))),
        this.x.red || (this.x = this.x.toRed(this.curve.red)),
        this.y.red || (this.y = this.y.toRed(this.curve.red)),
        this.z.red || (this.z = this.z.toRed(this.curve.red)),
        (this.zOne = this.z === this.curve.one);
    }
    a(c, s),
      (t.exports = c),
      (c.prototype._getEndomorphism = function(t) {
        if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
          var e, n;
          if (t.beta) e = new o(t.beta, 16).toRed(this.red);
          else {
            var r = this._getEndoRoots(this.p);
            e = (e = r[0].cmp(r[1]) < 0 ? r[0] : r[1]).toRed(this.red);
          }
          if (t.lambda) n = new o(t.lambda, 16);
          else {
            var i = this._getEndoRoots(this.n);
            0 === this.g.mul(i[0]).x.cmp(this.g.x.redMul(e))
              ? (n = i[0])
              : ((n = i[1]), u(0 === this.g.mul(n).x.cmp(this.g.x.redMul(e))));
          }
          return {
            beta: e,
            lambda: n,
            basis: t.basis
              ? t.basis.map(function(t) {
                  return { a: new o(t.a, 16), b: new o(t.b, 16) };
                })
              : this._getEndoBasis(n)
          };
        }
      }),
      (c.prototype._getEndoRoots = function(t) {
        var e = t === this.p ? this.red : o.mont(t),
          n = new o(2).toRed(e).redInvm(),
          r = n.redNeg(),
          i = new o(3)
            .toRed(e)
            .redNeg()
            .redSqrt()
            .redMul(n);
        return [r.redAdd(i).fromRed(), r.redSub(i).fromRed()];
      }),
      (c.prototype._getEndoBasis = function(t) {
        for (
          var e,
            n,
            r,
            i,
            a,
            s,
            u,
            c,
            l,
            h = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
            f = t,
            p = this.n.clone(),
            d = new o(1),
            m = new o(0),
            y = new o(0),
            g = new o(1),
            v = 0;
          0 !== f.cmpn(0);

        ) {
          var b = p.div(f);
          (c = p.sub(b.mul(f))), (l = y.sub(b.mul(d)));
          var w = g.sub(b.mul(m));
          if (!r && c.cmp(h) < 0)
            (e = u.neg()), (n = d), (r = c.neg()), (i = l);
          else if (r && 2 == ++v) break;
          (u = c), (p = f), (f = c), (y = d), (d = l), (g = m), (m = w);
        }
        (a = c.neg()), (s = l);
        var _ = r.sqr().add(i.sqr());
        return (
          a
            .sqr()
            .add(s.sqr())
            .cmp(_) >= 0 && ((a = e), (s = n)),
          r.negative && ((r = r.neg()), (i = i.neg())),
          a.negative && ((a = a.neg()), (s = s.neg())),
          [{ a: r, b: i }, { a: a, b: s }]
        );
      }),
      (c.prototype._endoSplit = function(t) {
        var e = this.endo.basis,
          n = e[0],
          r = e[1],
          i = r.b.mul(t).divRound(this.n),
          o = n.b
            .neg()
            .mul(t)
            .divRound(this.n),
          a = i.mul(n.a),
          s = o.mul(r.a),
          u = i.mul(n.b),
          c = o.mul(r.b);
        return { k1: t.sub(a).sub(s), k2: u.add(c).neg() };
      }),
      (c.prototype.pointFromX = function(t, e) {
        (t = new o(t, 16)).red || (t = t.toRed(this.red));
        var n = t
            .redSqr()
            .redMul(t)
            .redIAdd(t.redMul(this.a))
            .redIAdd(this.b),
          r = n.redSqrt();
        if (
          0 !==
          r
            .redSqr()
            .redSub(n)
            .cmp(this.zero)
        )
          throw new Error("invalid point");
        var i = r.fromRed().isOdd();
        return ((e && !i) || (!e && i)) && (r = r.redNeg()), this.point(t, r);
      }),
      (c.prototype.validate = function(t) {
        if (t.inf) return !0;
        var e = t.x,
          n = t.y,
          r = this.a.redMul(e),
          i = e
            .redSqr()
            .redMul(e)
            .redIAdd(r)
            .redIAdd(this.b);
        return (
          0 ===
          n
            .redSqr()
            .redISub(i)
            .cmpn(0)
        );
      }),
      (c.prototype._endoWnafMulAdd = function(t, e, n) {
        for (
          var r = this._endoWnafT1, i = this._endoWnafT2, o = 0;
          o < t.length;
          o++
        ) {
          var a = this._endoSplit(e[o]),
            s = t[o],
            u = s._getBeta();
          a.k1.negative && (a.k1.ineg(), (s = s.neg(!0))),
            a.k2.negative && (a.k2.ineg(), (u = u.neg(!0))),
            (r[2 * o] = s),
            (r[2 * o + 1] = u),
            (i[2 * o] = a.k1),
            (i[2 * o + 1] = a.k2);
        }
        for (var c = this._wnafMulAdd(1, r, i, 2 * o, n), l = 0; l < 2 * o; l++)
          (r[l] = null), (i[l] = null);
        return c;
      }),
      a(l, s.BasePoint),
      (c.prototype.point = function(t, e, n) {
        return new l(this, t, e, n);
      }),
      (c.prototype.pointFromJSON = function(t, e) {
        return l.fromJSON(this, t, e);
      }),
      (l.prototype._getBeta = function() {
        if (this.curve.endo) {
          var t = this.precomputed;
          if (t && t.beta) return t.beta;
          var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (t) {
            var n = this.curve,
              r = function(t) {
                return n.point(t.x.redMul(n.endo.beta), t.y);
              };
            (t.beta = e),
              (e.precomputed = {
                beta: null,
                naf: t.naf && { wnd: t.naf.wnd, points: t.naf.points.map(r) },
                doubles: t.doubles && {
                  step: t.doubles.step,
                  points: t.doubles.points.map(r)
                }
              });
          }
          return e;
        }
      }),
      (l.prototype.toJSON = function() {
        return this.precomputed
          ? [
              this.x,
              this.y,
              this.precomputed && {
                doubles: this.precomputed.doubles && {
                  step: this.precomputed.doubles.step,
                  points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                  wnd: this.precomputed.naf.wnd,
                  points: this.precomputed.naf.points.slice(1)
                }
              }
            ]
          : [this.x, this.y];
      }),
      (l.fromJSON = function(t, e, n) {
        "string" == typeof e && (e = JSON.parse(e));
        var r = t.point(e[0], e[1], n);
        if (!e[2]) return r;
        function i(e) {
          return t.point(e[0], e[1], n);
        }
        var o = e[2];
        return (
          (r.precomputed = {
            beta: null,
            doubles: o.doubles && {
              step: o.doubles.step,
              points: [r].concat(o.doubles.points.map(i))
            },
            naf: o.naf && {
              wnd: o.naf.wnd,
              points: [r].concat(o.naf.points.map(i))
            }
          }),
          r
        );
      }),
      (l.prototype.inspect = function() {
        return this.isInfinity()
          ? "<EC Point Infinity>"
          : "<EC Point x: " +
              this.x.fromRed().toString(16, 2) +
              " y: " +
              this.y.fromRed().toString(16, 2) +
              ">";
      }),
      (l.prototype.isInfinity = function() {
        return this.inf;
      }),
      (l.prototype.add = function(t) {
        if (this.inf) return t;
        if (t.inf) return this;
        if (this.eq(t)) return this.dbl();
        if (this.neg().eq(t)) return this.curve.point(null, null);
        if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
        var e = this.y.redSub(t.y);
        0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
        var n = e
            .redSqr()
            .redISub(this.x)
            .redISub(t.x),
          r = e.redMul(this.x.redSub(n)).redISub(this.y);
        return this.curve.point(n, r);
      }),
      (l.prototype.dbl = function() {
        if (this.inf) return this;
        var t = this.y.redAdd(this.y);
        if (0 === t.cmpn(0)) return this.curve.point(null, null);
        var e = this.curve.a,
          n = this.x.redSqr(),
          r = t.redInvm(),
          i = n
            .redAdd(n)
            .redIAdd(n)
            .redIAdd(e)
            .redMul(r),
          o = i.redSqr().redISub(this.x.redAdd(this.x)),
          a = i.redMul(this.x.redSub(o)).redISub(this.y);
        return this.curve.point(o, a);
      }),
      (l.prototype.getX = function() {
        return this.x.fromRed();
      }),
      (l.prototype.getY = function() {
        return this.y.fromRed();
      }),
      (l.prototype.mul = function(t) {
        return (
          (t = new o(t, 16)),
          this._hasDoubles(t)
            ? this.curve._fixedNafMul(this, t)
            : this.curve.endo
            ? this.curve._endoWnafMulAdd([this], [t])
            : this.curve._wnafMul(this, t)
        );
      }),
      (l.prototype.mulAdd = function(t, e, n) {
        var r = [this, e],
          i = [t, n];
        return this.curve.endo
          ? this.curve._endoWnafMulAdd(r, i)
          : this.curve._wnafMulAdd(1, r, i, 2);
      }),
      (l.prototype.jmulAdd = function(t, e, n) {
        var r = [this, e],
          i = [t, n];
        return this.curve.endo
          ? this.curve._endoWnafMulAdd(r, i, !0)
          : this.curve._wnafMulAdd(1, r, i, 2, !0);
      }),
      (l.prototype.eq = function(t) {
        return (
          this === t ||
          (this.inf === t.inf &&
            (this.inf || (0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))))
        );
      }),
      (l.prototype.neg = function(t) {
        if (this.inf) return this;
        var e = this.curve.point(this.x, this.y.redNeg());
        if (t && this.precomputed) {
          var n = this.precomputed,
            r = function(t) {
              return t.neg();
            };
          e.precomputed = {
            naf: n.naf && { wnd: n.naf.wnd, points: n.naf.points.map(r) },
            doubles: n.doubles && {
              step: n.doubles.step,
              points: n.doubles.points.map(r)
            }
          };
        }
        return e;
      }),
      (l.prototype.toJ = function() {
        return this.inf
          ? this.curve.jpoint(null, null, null)
          : this.curve.jpoint(this.x, this.y, this.curve.one);
      }),
      a(h, s.BasePoint),
      (c.prototype.jpoint = function(t, e, n) {
        return new h(this, t, e, n);
      }),
      (h.prototype.toP = function() {
        if (this.isInfinity()) return this.curve.point(null, null);
        var t = this.z.redInvm(),
          e = t.redSqr(),
          n = this.x.redMul(e),
          r = this.y.redMul(e).redMul(t);
        return this.curve.point(n, r);
      }),
      (h.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }),
      (h.prototype.add = function(t) {
        if (this.isInfinity()) return t;
        if (t.isInfinity()) return this;
        var e = t.z.redSqr(),
          n = this.z.redSqr(),
          r = this.x.redMul(e),
          i = t.x.redMul(n),
          o = this.y.redMul(e.redMul(t.z)),
          a = t.y.redMul(n.redMul(this.z)),
          s = r.redSub(i),
          u = o.redSub(a);
        if (0 === s.cmpn(0))
          return 0 !== u.cmpn(0)
            ? this.curve.jpoint(null, null, null)
            : this.dbl();
        var c = s.redSqr(),
          l = c.redMul(s),
          h = r.redMul(c),
          f = u
            .redSqr()
            .redIAdd(l)
            .redISub(h)
            .redISub(h),
          p = u.redMul(h.redISub(f)).redISub(o.redMul(l)),
          d = this.z.redMul(t.z).redMul(s);
        return this.curve.jpoint(f, p, d);
      }),
      (h.prototype.mixedAdd = function(t) {
        if (this.isInfinity()) return t.toJ();
        if (t.isInfinity()) return this;
        var e = this.z.redSqr(),
          n = this.x,
          r = t.x.redMul(e),
          i = this.y,
          o = t.y.redMul(e).redMul(this.z),
          a = n.redSub(r),
          s = i.redSub(o);
        if (0 === a.cmpn(0))
          return 0 !== s.cmpn(0)
            ? this.curve.jpoint(null, null, null)
            : this.dbl();
        var u = a.redSqr(),
          c = u.redMul(a),
          l = n.redMul(u),
          h = s
            .redSqr()
            .redIAdd(c)
            .redISub(l)
            .redISub(l),
          f = s.redMul(l.redISub(h)).redISub(i.redMul(c)),
          p = this.z.redMul(a);
        return this.curve.jpoint(h, f, p);
      }),
      (h.prototype.dblp = function(t) {
        if (0 === t) return this;
        if (this.isInfinity()) return this;
        if (!t) return this.dbl();
        if (this.curve.zeroA || this.curve.threeA) {
          for (var e = this, n = 0; n < t; n++) e = e.dbl();
          return e;
        }
        var r = this.curve.a,
          i = this.curve.tinv,
          o = this.x,
          a = this.y,
          s = this.z,
          u = s.redSqr().redSqr(),
          c = a.redAdd(a);
        for (n = 0; n < t; n++) {
          var l = o.redSqr(),
            h = c.redSqr(),
            f = h.redSqr(),
            p = l
              .redAdd(l)
              .redIAdd(l)
              .redIAdd(r.redMul(u)),
            d = o.redMul(h),
            m = p.redSqr().redISub(d.redAdd(d)),
            y = d.redISub(m),
            g = p.redMul(y);
          g = g.redIAdd(g).redISub(f);
          var v = c.redMul(s);
          n + 1 < t && (u = u.redMul(f)), (o = m), (s = v), (c = g);
        }
        return this.curve.jpoint(o, c.redMul(i), s);
      }),
      (h.prototype.dbl = function() {
        return this.isInfinity()
          ? this
          : this.curve.zeroA
          ? this._zeroDbl()
          : this.curve.threeA
          ? this._threeDbl()
          : this._dbl();
      }),
      (h.prototype._zeroDbl = function() {
        var t, e, n;
        if (this.zOne) {
          var r = this.x.redSqr(),
            i = this.y.redSqr(),
            o = i.redSqr(),
            a = this.x
              .redAdd(i)
              .redSqr()
              .redISub(r)
              .redISub(o);
          a = a.redIAdd(a);
          var s = r.redAdd(r).redIAdd(r),
            u = s
              .redSqr()
              .redISub(a)
              .redISub(a),
            c = o.redIAdd(o);
          (c = (c = c.redIAdd(c)).redIAdd(c)),
            (t = u),
            (e = s.redMul(a.redISub(u)).redISub(c)),
            (n = this.y.redAdd(this.y));
        } else {
          var l = this.x.redSqr(),
            h = this.y.redSqr(),
            f = h.redSqr(),
            p = this.x
              .redAdd(h)
              .redSqr()
              .redISub(l)
              .redISub(f);
          p = p.redIAdd(p);
          var d = l.redAdd(l).redIAdd(l),
            m = d.redSqr(),
            y = f.redIAdd(f);
          (y = (y = y.redIAdd(y)).redIAdd(y)),
            (t = m.redISub(p).redISub(p)),
            (e = d.redMul(p.redISub(t)).redISub(y)),
            (n = (n = this.y.redMul(this.z)).redIAdd(n));
        }
        return this.curve.jpoint(t, e, n);
      }),
      (h.prototype._threeDbl = function() {
        var t, e, n;
        if (this.zOne) {
          var r = this.x.redSqr(),
            i = this.y.redSqr(),
            o = i.redSqr(),
            a = this.x
              .redAdd(i)
              .redSqr()
              .redISub(r)
              .redISub(o);
          a = a.redIAdd(a);
          var s = r
              .redAdd(r)
              .redIAdd(r)
              .redIAdd(this.curve.a),
            u = s
              .redSqr()
              .redISub(a)
              .redISub(a);
          t = u;
          var c = o.redIAdd(o);
          (c = (c = c.redIAdd(c)).redIAdd(c)),
            (e = s.redMul(a.redISub(u)).redISub(c)),
            (n = this.y.redAdd(this.y));
        } else {
          var l = this.z.redSqr(),
            h = this.y.redSqr(),
            f = this.x.redMul(h),
            p = this.x.redSub(l).redMul(this.x.redAdd(l));
          p = p.redAdd(p).redIAdd(p);
          var d = f.redIAdd(f),
            m = (d = d.redIAdd(d)).redAdd(d);
          (t = p.redSqr().redISub(m)),
            (n = this.y
              .redAdd(this.z)
              .redSqr()
              .redISub(h)
              .redISub(l));
          var y = h.redSqr();
          (y = (y = (y = y.redIAdd(y)).redIAdd(y)).redIAdd(y)),
            (e = p.redMul(d.redISub(t)).redISub(y));
        }
        return this.curve.jpoint(t, e, n);
      }),
      (h.prototype._dbl = function() {
        var t = this.curve.a,
          e = this.x,
          n = this.y,
          r = this.z,
          i = r.redSqr().redSqr(),
          o = e.redSqr(),
          a = n.redSqr(),
          s = o
            .redAdd(o)
            .redIAdd(o)
            .redIAdd(t.redMul(i)),
          u = e.redAdd(e),
          c = (u = u.redIAdd(u)).redMul(a),
          l = s.redSqr().redISub(c.redAdd(c)),
          h = c.redISub(l),
          f = a.redSqr();
        f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
        var p = s.redMul(h).redISub(f),
          d = n.redAdd(n).redMul(r);
        return this.curve.jpoint(l, p, d);
      }),
      (h.prototype.trpl = function() {
        if (!this.curve.zeroA) return this.dbl().add(this);
        var t = this.x.redSqr(),
          e = this.y.redSqr(),
          n = this.z.redSqr(),
          r = e.redSqr(),
          i = t.redAdd(t).redIAdd(t),
          o = i.redSqr(),
          a = this.x
            .redAdd(e)
            .redSqr()
            .redISub(t)
            .redISub(r),
          s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(
            o
          )).redSqr(),
          u = r.redIAdd(r);
        u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
        var c = i
            .redIAdd(a)
            .redSqr()
            .redISub(o)
            .redISub(s)
            .redISub(u),
          l = e.redMul(c);
        l = (l = l.redIAdd(l)).redIAdd(l);
        var h = this.x.redMul(s).redISub(l);
        h = (h = h.redIAdd(h)).redIAdd(h);
        var f = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
        f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
        var p = this.z
          .redAdd(a)
          .redSqr()
          .redISub(n)
          .redISub(s);
        return this.curve.jpoint(h, f, p);
      }),
      (h.prototype.mul = function(t, e) {
        return (t = new o(t, e)), this.curve._wnafMul(this, t);
      }),
      (h.prototype.eq = function(t) {
        if ("affine" === t.type) return this.eq(t.toJ());
        if (this === t) return !0;
        var e = this.z.redSqr(),
          n = t.z.redSqr();
        if (
          0 !==
          this.x
            .redMul(n)
            .redISub(t.x.redMul(e))
            .cmpn(0)
        )
          return !1;
        var r = e.redMul(this.z),
          i = n.redMul(t.z);
        return (
          0 ===
          this.y
            .redMul(i)
            .redISub(t.y.redMul(r))
            .cmpn(0)
        );
      }),
      (h.prototype.eqXToP = function(t) {
        var e = this.z.redSqr(),
          n = t.toRed(this.curve.red).redMul(e);
        if (0 === this.x.cmp(n)) return !0;
        for (var r = t.clone(), i = this.curve.redN.redMul(e); ; ) {
          if ((r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0)) return !1;
          if ((n.redIAdd(i), 0 === this.x.cmp(n))) return !0;
        }
      }),
      (h.prototype.inspect = function() {
        return this.isInfinity()
          ? "<EC JPoint Infinity>"
          : "<EC JPoint x: " +
              this.x.toString(16, 2) +
              " y: " +
              this.y.toString(16, 2) +
              " z: " +
              this.z.toString(16, 2) +
              ">";
      }),
      (h.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(30),
      i = n(4),
      o = n(1),
      a = r.base,
      s = n(6).utils;
    function u(t) {
      a.call(this, "mont", t),
        (this.a = new i(t.a, 16).toRed(this.red)),
        (this.b = new i(t.b, 16).toRed(this.red)),
        (this.i4 = new i(4).toRed(this.red).redInvm()),
        (this.two = new i(2).toRed(this.red)),
        (this.a24 = this.i4.redMul(this.a.redAdd(this.two)));
    }
    function c(t, e, n) {
      a.BasePoint.call(this, t, "projective"),
        null === e && null === n
          ? ((this.x = this.curve.one), (this.z = this.curve.zero))
          : ((this.x = new i(e, 16)),
            (this.z = new i(n, 16)),
            this.x.red || (this.x = this.x.toRed(this.curve.red)),
            this.z.red || (this.z = this.z.toRed(this.curve.red)));
    }
    o(u, a),
      (t.exports = u),
      (u.prototype.validate = function(t) {
        var e = t.normalize().x,
          n = e.redSqr(),
          r = n
            .redMul(e)
            .redAdd(n.redMul(this.a))
            .redAdd(e);
        return (
          0 ===
          r
            .redSqrt()
            .redSqr()
            .cmp(r)
        );
      }),
      o(c, a.BasePoint),
      (u.prototype.decodePoint = function(t, e) {
        return this.point(s.toArray(t, e), 1);
      }),
      (u.prototype.point = function(t, e) {
        return new c(this, t, e);
      }),
      (u.prototype.pointFromJSON = function(t) {
        return c.fromJSON(this, t);
      }),
      (c.prototype.precompute = function() {}),
      (c.prototype._encode = function() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      }),
      (c.fromJSON = function(t, e) {
        return new c(t, e[0], e[1] || t.one);
      }),
      (c.prototype.inspect = function() {
        return this.isInfinity()
          ? "<EC Point Infinity>"
          : "<EC Point x: " +
              this.x.fromRed().toString(16, 2) +
              " z: " +
              this.z.fromRed().toString(16, 2) +
              ">";
      }),
      (c.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      }),
      (c.prototype.dbl = function() {
        var t = this.x.redAdd(this.z).redSqr(),
          e = this.x.redSub(this.z).redSqr(),
          n = t.redSub(e),
          r = t.redMul(e),
          i = n.redMul(e.redAdd(this.curve.a24.redMul(n)));
        return this.curve.point(r, i);
      }),
      (c.prototype.add = function() {
        throw new Error("Not supported on Montgomery curve");
      }),
      (c.prototype.diffAdd = function(t, e) {
        var n = this.x.redAdd(this.z),
          r = this.x.redSub(this.z),
          i = t.x.redAdd(t.z),
          o = t.x.redSub(t.z).redMul(n),
          a = i.redMul(r),
          s = e.z.redMul(o.redAdd(a).redSqr()),
          u = e.x.redMul(o.redISub(a).redSqr());
        return this.curve.point(s, u);
      }),
      (c.prototype.mul = function(t) {
        for (
          var e = t.clone(), n = this, r = this.curve.point(null, null), i = [];
          0 !== e.cmpn(0);
          e.iushrn(1)
        )
          i.push(e.andln(1));
        for (var o = i.length - 1; o >= 0; o--)
          0 === i[o]
            ? ((n = n.diffAdd(r, this)), (r = r.dbl()))
            : ((r = n.diffAdd(r, this)), (n = n.dbl()));
        return r;
      }),
      (c.prototype.mulAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }),
      (c.prototype.jumlAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }),
      (c.prototype.eq = function(t) {
        return 0 === this.getX().cmp(t.getX());
      }),
      (c.prototype.normalize = function() {
        return (
          (this.x = this.x.redMul(this.z.redInvm())),
          (this.z = this.curve.one),
          this
        );
      }),
      (c.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(30),
      i = n(6),
      o = n(4),
      a = n(1),
      s = r.base,
      u = i.utils.assert;
    function c(t) {
      (this.twisted = 1 != (0 | t.a)),
        (this.mOneA = this.twisted && -1 == (0 | t.a)),
        (this.extended = this.mOneA),
        s.call(this, "edwards", t),
        (this.a = new o(t.a, 16).umod(this.red.m)),
        (this.a = this.a.toRed(this.red)),
        (this.c = new o(t.c, 16).toRed(this.red)),
        (this.c2 = this.c.redSqr()),
        (this.d = new o(t.d, 16).toRed(this.red)),
        (this.dd = this.d.redAdd(this.d)),
        u(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
        (this.oneC = 1 == (0 | t.c));
    }
    function l(t, e, n, r, i) {
      s.BasePoint.call(this, t, "projective"),
        null === e && null === n && null === r
          ? ((this.x = this.curve.zero),
            (this.y = this.curve.one),
            (this.z = this.curve.one),
            (this.t = this.curve.zero),
            (this.zOne = !0))
          : ((this.x = new o(e, 16)),
            (this.y = new o(n, 16)),
            (this.z = r ? new o(r, 16) : this.curve.one),
            (this.t = i && new o(i, 16)),
            this.x.red || (this.x = this.x.toRed(this.curve.red)),
            this.y.red || (this.y = this.y.toRed(this.curve.red)),
            this.z.red || (this.z = this.z.toRed(this.curve.red)),
            this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
            (this.zOne = this.z === this.curve.one),
            this.curve.extended &&
              !this.t &&
              ((this.t = this.x.redMul(this.y)),
              this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
    }
    a(c, s),
      (t.exports = c),
      (c.prototype._mulA = function(t) {
        return this.mOneA ? t.redNeg() : this.a.redMul(t);
      }),
      (c.prototype._mulC = function(t) {
        return this.oneC ? t : this.c.redMul(t);
      }),
      (c.prototype.jpoint = function(t, e, n, r) {
        return this.point(t, e, n, r);
      }),
      (c.prototype.pointFromX = function(t, e) {
        (t = new o(t, 16)).red || (t = t.toRed(this.red));
        var n = t.redSqr(),
          r = this.c2.redSub(this.a.redMul(n)),
          i = this.one.redSub(this.c2.redMul(this.d).redMul(n)),
          a = r.redMul(i.redInvm()),
          s = a.redSqrt();
        if (
          0 !==
          s
            .redSqr()
            .redSub(a)
            .cmp(this.zero)
        )
          throw new Error("invalid point");
        var u = s.fromRed().isOdd();
        return ((e && !u) || (!e && u)) && (s = s.redNeg()), this.point(t, s);
      }),
      (c.prototype.pointFromY = function(t, e) {
        (t = new o(t, 16)).red || (t = t.toRed(this.red));
        var n = t.redSqr(),
          r = n.redSub(this.c2),
          i = n
            .redMul(this.d)
            .redMul(this.c2)
            .redSub(this.a),
          a = r.redMul(i.redInvm());
        if (0 === a.cmp(this.zero)) {
          if (e) throw new Error("invalid point");
          return this.point(this.zero, t);
        }
        var s = a.redSqrt();
        if (
          0 !==
          s
            .redSqr()
            .redSub(a)
            .cmp(this.zero)
        )
          throw new Error("invalid point");
        return s.fromRed().isOdd() !== e && (s = s.redNeg()), this.point(s, t);
      }),
      (c.prototype.validate = function(t) {
        if (t.isInfinity()) return !0;
        t.normalize();
        var e = t.x.redSqr(),
          n = t.y.redSqr(),
          r = e.redMul(this.a).redAdd(n),
          i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(n)));
        return 0 === r.cmp(i);
      }),
      a(l, s.BasePoint),
      (c.prototype.pointFromJSON = function(t) {
        return l.fromJSON(this, t);
      }),
      (c.prototype.point = function(t, e, n, r) {
        return new l(this, t, e, n, r);
      }),
      (l.fromJSON = function(t, e) {
        return new l(t, e[0], e[1], e[2]);
      }),
      (l.prototype.inspect = function() {
        return this.isInfinity()
          ? "<EC Point Infinity>"
          : "<EC Point x: " +
              this.x.fromRed().toString(16, 2) +
              " y: " +
              this.y.fromRed().toString(16, 2) +
              " z: " +
              this.z.fromRed().toString(16, 2) +
              ">";
      }),
      (l.prototype.isInfinity = function() {
        return (
          0 === this.x.cmpn(0) &&
          (0 === this.y.cmp(this.z) ||
            (this.zOne && 0 === this.y.cmp(this.curve.c)))
        );
      }),
      (l.prototype._extDbl = function() {
        var t = this.x.redSqr(),
          e = this.y.redSqr(),
          n = this.z.redSqr();
        n = n.redIAdd(n);
        var r = this.curve._mulA(t),
          i = this.x
            .redAdd(this.y)
            .redSqr()
            .redISub(t)
            .redISub(e),
          o = r.redAdd(e),
          a = o.redSub(n),
          s = r.redSub(e),
          u = i.redMul(a),
          c = o.redMul(s),
          l = i.redMul(s),
          h = a.redMul(o);
        return this.curve.point(u, c, h, l);
      }),
      (l.prototype._projDbl = function() {
        var t,
          e,
          n,
          r = this.x.redAdd(this.y).redSqr(),
          i = this.x.redSqr(),
          o = this.y.redSqr();
        if (this.curve.twisted) {
          var a = (c = this.curve._mulA(i)).redAdd(o);
          if (this.zOne)
            (t = r
              .redSub(i)
              .redSub(o)
              .redMul(a.redSub(this.curve.two))),
              (e = a.redMul(c.redSub(o))),
              (n = a
                .redSqr()
                .redSub(a)
                .redSub(a));
          else {
            var s = this.z.redSqr(),
              u = a.redSub(s).redISub(s);
            (t = r
              .redSub(i)
              .redISub(o)
              .redMul(u)),
              (e = a.redMul(c.redSub(o))),
              (n = a.redMul(u));
          }
        } else {
          var c = i.redAdd(o);
          (s = this.curve._mulC(this.z).redSqr()), (u = c.redSub(s).redSub(s));
          (t = this.curve._mulC(r.redISub(c)).redMul(u)),
            (e = this.curve._mulC(c).redMul(i.redISub(o))),
            (n = c.redMul(u));
        }
        return this.curve.point(t, e, n);
      }),
      (l.prototype.dbl = function() {
        return this.isInfinity()
          ? this
          : this.curve.extended
          ? this._extDbl()
          : this._projDbl();
      }),
      (l.prototype._extAdd = function(t) {
        var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)),
          n = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),
          r = this.t.redMul(this.curve.dd).redMul(t.t),
          i = this.z.redMul(t.z.redAdd(t.z)),
          o = n.redSub(e),
          a = i.redSub(r),
          s = i.redAdd(r),
          u = n.redAdd(e),
          c = o.redMul(a),
          l = s.redMul(u),
          h = o.redMul(u),
          f = a.redMul(s);
        return this.curve.point(c, l, f, h);
      }),
      (l.prototype._projAdd = function(t) {
        var e,
          n,
          r = this.z.redMul(t.z),
          i = r.redSqr(),
          o = this.x.redMul(t.x),
          a = this.y.redMul(t.y),
          s = this.curve.d.redMul(o).redMul(a),
          u = i.redSub(s),
          c = i.redAdd(s),
          l = this.x
            .redAdd(this.y)
            .redMul(t.x.redAdd(t.y))
            .redISub(o)
            .redISub(a),
          h = r.redMul(u).redMul(l);
        return (
          this.curve.twisted
            ? ((e = r.redMul(c).redMul(a.redSub(this.curve._mulA(o)))),
              (n = u.redMul(c)))
            : ((e = r.redMul(c).redMul(a.redSub(o))),
              (n = this.curve._mulC(u).redMul(c))),
          this.curve.point(h, e, n)
        );
      }),
      (l.prototype.add = function(t) {
        return this.isInfinity()
          ? t
          : t.isInfinity()
          ? this
          : this.curve.extended
          ? this._extAdd(t)
          : this._projAdd(t);
      }),
      (l.prototype.mul = function(t) {
        return this._hasDoubles(t)
          ? this.curve._fixedNafMul(this, t)
          : this.curve._wnafMul(this, t);
      }),
      (l.prototype.mulAdd = function(t, e, n) {
        return this.curve._wnafMulAdd(1, [this, e], [t, n], 2, !1);
      }),
      (l.prototype.jmulAdd = function(t, e, n) {
        return this.curve._wnafMulAdd(1, [this, e], [t, n], 2, !0);
      }),
      (l.prototype.normalize = function() {
        if (this.zOne) return this;
        var t = this.z.redInvm();
        return (
          (this.x = this.x.redMul(t)),
          (this.y = this.y.redMul(t)),
          this.t && (this.t = this.t.redMul(t)),
          (this.z = this.curve.one),
          (this.zOne = !0),
          this
        );
      }),
      (l.prototype.neg = function() {
        return this.curve.point(
          this.x.redNeg(),
          this.y,
          this.z,
          this.t && this.t.redNeg()
        );
      }),
      (l.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }),
      (l.prototype.getY = function() {
        return this.normalize(), this.y.fromRed();
      }),
      (l.prototype.eq = function(t) {
        return (
          this === t ||
          (0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY()))
        );
      }),
      (l.prototype.eqXToP = function(t) {
        var e = t.toRed(this.curve.red).redMul(this.z);
        if (0 === this.x.cmp(e)) return !0;
        for (var n = t.clone(), r = this.curve.redN.redMul(this.z); ; ) {
          if ((n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0)) return !1;
          if ((e.redIAdd(r), 0 === this.x.cmp(e))) return !0;
        }
      }),
      (l.prototype.toP = l.prototype.normalize),
      (l.prototype.mixedAdd = l.prototype.add);
  },
  function(t, e, n) {
    "use strict";
    var r,
      i = e,
      o = n(48),
      a = n(6),
      s = a.utils.assert;
    function u(t) {
      "short" === t.type
        ? (this.curve = new a.curve.short(t))
        : "edwards" === t.type
        ? (this.curve = new a.curve.edwards(t))
        : (this.curve = new a.curve.mont(t)),
        (this.g = this.curve.g),
        (this.n = this.curve.n),
        (this.hash = t.hash),
        s(this.g.validate(), "Invalid curve"),
        s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    function c(t, e) {
      Object.defineProperty(i, t, {
        configurable: !0,
        enumerable: !0,
        get: function() {
          var n = new u(e);
          return (
            Object.defineProperty(i, t, {
              configurable: !0,
              enumerable: !0,
              value: n
            }),
            n
          );
        }
      });
    }
    (i.PresetCurve = u),
      c("p192", {
        type: "short",
        prime: "p192",
        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
        hash: o.sha256,
        gRed: !1,
        g: [
          "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
          "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
        ]
      }),
      c("p224", {
        type: "short",
        prime: "p224",
        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
        hash: o.sha256,
        gRed: !1,
        g: [
          "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
          "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
        ]
      }),
      c("p256", {
        type: "short",
        prime: null,
        p:
          "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
        a:
          "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
        b:
          "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
        n:
          "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
        hash: o.sha256,
        gRed: !1,
        g: [
          "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
          "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
        ]
      }),
      c("p384", {
        type: "short",
        prime: null,
        p:
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
        a:
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
        b:
          "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
        n:
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
        hash: o.sha384,
        gRed: !1,
        g: [
          "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
          "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
        ]
      }),
      c("p521", {
        type: "short",
        prime: null,
        p:
          "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
        a:
          "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
        b:
          "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
        n:
          "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
        hash: o.sha512,
        gRed: !1,
        g: [
          "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
          "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
        ]
      }),
      c("curve25519", {
        type: "mont",
        prime: "p25519",
        p:
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "76d06",
        b: "1",
        n:
          "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: o.sha256,
        gRed: !1,
        g: ["9"]
      }),
      c("ed25519", {
        type: "edwards",
        prime: "p25519",
        p:
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "-1",
        c: "1",
        d:
          "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
        n:
          "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: o.sha256,
        gRed: !1,
        g: [
          "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
          "6666666666666666666666666666666666666666666666666666666666666658"
        ]
      });
    try {
      r = n(163);
    } catch (t) {
      r = void 0;
    }
    c("secp256k1", {
      type: "short",
      prime: "k256",
      p:
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n:
        "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: o.sha256,
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda:
        "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [
        {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        },
        {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        }
      ],
      gRed: !1,
      g: [
        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
        r
      ]
    });
  },
  function(t, e, n) {
    "use strict";
    (e.sha1 = n(158)),
      (e.sha224 = n(159)),
      (e.sha256 = n(84)),
      (e.sha384 = n(160)),
      (e.sha512 = n(85));
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(23),
      o = n(83),
      a = r.rotl32,
      s = r.sum32,
      u = r.sum32_5,
      c = o.ft_1,
      l = i.BlockHash,
      h = [1518500249, 1859775393, 2400959708, 3395469782];
    function f() {
      if (!(this instanceof f)) return new f();
      l.call(this),
        (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]),
        (this.W = new Array(80));
    }
    r.inherits(f, l),
      (t.exports = f),
      (f.blockSize = 512),
      (f.outSize = 160),
      (f.hmacStrength = 80),
      (f.padLength = 64),
      (f.prototype._update = function(t, e) {
        for (var n = this.W, r = 0; r < 16; r++) n[r] = t[e + r];
        for (; r < n.length; r++)
          n[r] = a(n[r - 3] ^ n[r - 8] ^ n[r - 14] ^ n[r - 16], 1);
        var i = this.h[0],
          o = this.h[1],
          l = this.h[2],
          f = this.h[3],
          p = this.h[4];
        for (r = 0; r < n.length; r++) {
          var d = ~~(r / 20),
            m = u(a(i, 5), c(d, o, l, f), p, n[r], h[d]);
          (p = f), (f = l), (l = a(o, 30)), (o = i), (i = m);
        }
        (this.h[0] = s(this.h[0], i)),
          (this.h[1] = s(this.h[1], o)),
          (this.h[2] = s(this.h[2], l)),
          (this.h[3] = s(this.h[3], f)),
          (this.h[4] = s(this.h[4], p));
      }),
      (f.prototype._digest = function(t) {
        return "hex" === t
          ? r.toHex32(this.h, "big")
          : r.split32(this.h, "big");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(84);
    function o() {
      if (!(this instanceof o)) return new o();
      i.call(this),
        (this.h = [
          3238371032,
          914150663,
          812702999,
          4144912697,
          4290775857,
          1750603025,
          1694076839,
          3204075428
        ]);
    }
    r.inherits(o, i),
      (t.exports = o),
      (o.blockSize = 512),
      (o.outSize = 224),
      (o.hmacStrength = 192),
      (o.padLength = 64),
      (o.prototype._digest = function(t) {
        return "hex" === t
          ? r.toHex32(this.h.slice(0, 7), "big")
          : r.split32(this.h.slice(0, 7), "big");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(85);
    function o() {
      if (!(this instanceof o)) return new o();
      i.call(this),
        (this.h = [
          3418070365,
          3238371032,
          1654270250,
          914150663,
          2438529370,
          812702999,
          355462360,
          4144912697,
          1731405415,
          4290775857,
          2394180231,
          1750603025,
          3675008525,
          1694076839,
          1203062813,
          3204075428
        ]);
    }
    r.inherits(o, i),
      (t.exports = o),
      (o.blockSize = 1024),
      (o.outSize = 384),
      (o.hmacStrength = 192),
      (o.padLength = 128),
      (o.prototype._digest = function(t) {
        return "hex" === t
          ? r.toHex32(this.h.slice(0, 12), "big")
          : r.split32(this.h.slice(0, 12), "big");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(23),
      o = r.rotl32,
      a = r.sum32,
      s = r.sum32_3,
      u = r.sum32_4,
      c = i.BlockHash;
    function l() {
      if (!(this instanceof l)) return new l();
      c.call(this),
        (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]),
        (this.endian = "little");
    }
    function h(t, e, n, r) {
      return t <= 15
        ? e ^ n ^ r
        : t <= 31
        ? (e & n) | (~e & r)
        : t <= 47
        ? (e | ~n) ^ r
        : t <= 63
        ? (e & r) | (n & ~r)
        : e ^ (n | ~r);
    }
    function f(t) {
      return t <= 15
        ? 0
        : t <= 31
        ? 1518500249
        : t <= 47
        ? 1859775393
        : t <= 63
        ? 2400959708
        : 2840853838;
    }
    function p(t) {
      return t <= 15
        ? 1352829926
        : t <= 31
        ? 1548603684
        : t <= 47
        ? 1836072691
        : t <= 63
        ? 2053994217
        : 0;
    }
    r.inherits(l, c),
      (e.ripemd160 = l),
      (l.blockSize = 512),
      (l.outSize = 160),
      (l.hmacStrength = 192),
      (l.padLength = 64),
      (l.prototype._update = function(t, e) {
        for (
          var n = this.h[0],
            r = this.h[1],
            i = this.h[2],
            c = this.h[3],
            l = this.h[4],
            v = n,
            b = r,
            w = i,
            _ = c,
            S = l,
            x = 0;
          x < 80;
          x++
        ) {
          var T = a(o(u(n, h(x, r, i, c), t[d[x] + e], f(x)), y[x]), l);
          (n = l),
            (l = c),
            (c = o(i, 10)),
            (i = r),
            (r = T),
            (T = a(o(u(v, h(79 - x, b, w, _), t[m[x] + e], p(x)), g[x]), S)),
            (v = S),
            (S = _),
            (_ = o(w, 10)),
            (w = b),
            (b = T);
        }
        (T = s(this.h[1], i, _)),
          (this.h[1] = s(this.h[2], c, S)),
          (this.h[2] = s(this.h[3], l, v)),
          (this.h[3] = s(this.h[4], n, b)),
          (this.h[4] = s(this.h[0], r, w)),
          (this.h[0] = T);
      }),
      (l.prototype._digest = function(t) {
        return "hex" === t
          ? r.toHex32(this.h, "little")
          : r.split32(this.h, "little");
      });
    var d = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ],
      m = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ],
      y = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ],
      g = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ];
  },
  function(t, e, n) {
    "use strict";
    var r = n(10),
      i = n(8);
    function o(t, e, n) {
      if (!(this instanceof o)) return new o(t, e, n);
      (this.Hash = t),
        (this.blockSize = t.blockSize / 8),
        (this.outSize = t.outSize / 8),
        (this.inner = null),
        (this.outer = null),
        this._init(r.toArray(e, n));
    }
    (t.exports = o),
      (o.prototype._init = function(t) {
        t.length > this.blockSize && (t = new this.Hash().update(t).digest()),
          i(t.length <= this.blockSize);
        for (var e = t.length; e < this.blockSize; e++) t.push(0);
        for (e = 0; e < t.length; e++) t[e] ^= 54;
        for (this.inner = new this.Hash().update(t), e = 0; e < t.length; e++)
          t[e] ^= 106;
        this.outer = new this.Hash().update(t);
      }),
      (o.prototype.update = function(t, e) {
        return this.inner.update(t, e), this;
      }),
      (o.prototype.digest = function(t) {
        return this.outer.update(this.inner.digest()), this.outer.digest(t);
      });
  },
  function(t, e) {
    t.exports = {
      doubles: {
        step: 4,
        points: [
          [
            "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
            "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
          ],
          [
            "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
            "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
          ],
          [
            "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
            "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
          ],
          [
            "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
            "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
          ],
          [
            "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
            "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
          ],
          [
            "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
            "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
          ],
          [
            "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
            "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
          ],
          [
            "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
            "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
          ],
          [
            "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
            "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
          ],
          [
            "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
            "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
          ],
          [
            "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
            "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
          ],
          [
            "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
            "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
          ],
          [
            "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
            "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
          ],
          [
            "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
            "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
          ],
          [
            "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
            "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
          ],
          [
            "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
            "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
          ],
          [
            "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
            "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
          ],
          [
            "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
            "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
          ],
          [
            "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
            "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
          ],
          [
            "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
            "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
          ],
          [
            "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
            "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
          ],
          [
            "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
            "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
          ],
          [
            "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
            "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
          ],
          [
            "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
            "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
          ],
          [
            "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
            "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
          ],
          [
            "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
            "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
          ],
          [
            "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
            "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
          ],
          [
            "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
            "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
          ],
          [
            "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
            "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
          ],
          [
            "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
            "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
          ],
          [
            "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
            "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
          ],
          [
            "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
            "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
          ],
          [
            "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
            "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
          ],
          [
            "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
            "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
          ],
          [
            "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
            "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
          ],
          [
            "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
            "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
          ],
          [
            "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
            "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
          ],
          [
            "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
            "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
          ],
          [
            "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
            "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
          ],
          [
            "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
            "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
          ],
          [
            "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
            "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
          ],
          [
            "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
            "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
          ],
          [
            "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
            "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
          ],
          [
            "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
            "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
          ],
          [
            "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
            "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
          ],
          [
            "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
            "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
          ],
          [
            "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
            "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
          ],
          [
            "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
            "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
          ],
          [
            "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
            "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
          ],
          [
            "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
            "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
          ],
          [
            "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
            "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
          ],
          [
            "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
            "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
          ],
          [
            "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
            "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
          ],
          [
            "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
            "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
          ],
          [
            "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
            "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
          ],
          [
            "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
            "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
          ],
          [
            "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
            "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
          ],
          [
            "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
            "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
          ],
          [
            "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
            "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
          ],
          [
            "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
            "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
          ],
          [
            "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
            "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
          ],
          [
            "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
            "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
          ],
          [
            "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
            "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
          ],
          [
            "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
            "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
          ],
          [
            "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
            "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
          ]
        ]
      },
      naf: {
        wnd: 7,
        points: [
          [
            "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
            "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
          ],
          [
            "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
            "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
          ],
          [
            "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
            "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
          ],
          [
            "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
            "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
          ],
          [
            "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
            "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
          ],
          [
            "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
            "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
          ],
          [
            "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
            "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
          ],
          [
            "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
            "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
          ],
          [
            "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
            "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
          ],
          [
            "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
            "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
          ],
          [
            "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
            "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
          ],
          [
            "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
            "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
          ],
          [
            "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
            "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
          ],
          [
            "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
            "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
          ],
          [
            "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
            "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
          ],
          [
            "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
            "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
          ],
          [
            "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
            "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
          ],
          [
            "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
            "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
          ],
          [
            "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
            "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
          ],
          [
            "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
            "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
          ],
          [
            "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
            "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
          ],
          [
            "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
            "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
          ],
          [
            "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
            "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
          ],
          [
            "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
            "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
          ],
          [
            "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
            "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
          ],
          [
            "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
            "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
          ],
          [
            "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
            "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
          ],
          [
            "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
            "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
          ],
          [
            "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
            "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
          ],
          [
            "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
            "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
          ],
          [
            "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
            "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
          ],
          [
            "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
            "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
          ],
          [
            "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
            "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
          ],
          [
            "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
            "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
          ],
          [
            "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
            "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
          ],
          [
            "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
            "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
          ],
          [
            "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
            "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
          ],
          [
            "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
            "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
          ],
          [
            "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
            "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
          ],
          [
            "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
            "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
          ],
          [
            "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
            "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
          ],
          [
            "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
            "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
          ],
          [
            "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
            "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
          ],
          [
            "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
            "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
          ],
          [
            "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
            "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
          ],
          [
            "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
            "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
          ],
          [
            "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
            "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
          ],
          [
            "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
            "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
          ],
          [
            "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
            "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
          ],
          [
            "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
            "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
          ],
          [
            "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
            "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
          ],
          [
            "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
            "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
          ],
          [
            "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
            "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
          ],
          [
            "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
            "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
          ],
          [
            "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
            "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
          ],
          [
            "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
            "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
          ],
          [
            "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
            "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
          ],
          [
            "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
            "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
          ],
          [
            "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
            "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
          ],
          [
            "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
            "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
          ],
          [
            "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
            "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
          ],
          [
            "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
            "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
          ],
          [
            "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
            "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
          ],
          [
            "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
            "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
          ],
          [
            "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
            "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
          ],
          [
            "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
            "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
          ],
          [
            "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
            "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
          ],
          [
            "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
            "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
          ],
          [
            "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
            "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
          ],
          [
            "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
            "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
          ],
          [
            "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
            "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
          ],
          [
            "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
            "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
          ],
          [
            "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
            "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
          ],
          [
            "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
            "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
          ],
          [
            "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
            "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
          ],
          [
            "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
            "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
          ],
          [
            "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
            "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
          ],
          [
            "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
            "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
          ],
          [
            "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
            "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
          ],
          [
            "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
            "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
          ],
          [
            "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
            "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
          ],
          [
            "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
            "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
          ],
          [
            "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
            "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
          ],
          [
            "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
            "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
          ],
          [
            "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
            "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
          ],
          [
            "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
            "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
          ],
          [
            "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
            "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
          ],
          [
            "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
            "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
          ],
          [
            "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
            "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
          ],
          [
            "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
            "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
          ],
          [
            "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
            "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
          ],
          [
            "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
            "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
          ],
          [
            "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
            "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
          ],
          [
            "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
            "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
          ],
          [
            "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
            "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
          ],
          [
            "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
            "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
          ],
          [
            "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
            "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
          ],
          [
            "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
            "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
          ],
          [
            "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
            "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
          ],
          [
            "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
            "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
          ],
          [
            "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
            "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
          ],
          [
            "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
            "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
          ],
          [
            "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
            "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
          ],
          [
            "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
            "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
          ],
          [
            "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
            "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
          ],
          [
            "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
            "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
          ],
          [
            "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
            "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
          ],
          [
            "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
            "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
          ],
          [
            "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
            "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
          ],
          [
            "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
            "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
          ],
          [
            "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
            "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
          ],
          [
            "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
            "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
          ],
          [
            "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
            "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
          ],
          [
            "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
            "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
          ],
          [
            "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
            "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
          ],
          [
            "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
            "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
          ],
          [
            "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
            "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
          ],
          [
            "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
            "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
          ],
          [
            "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
            "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
          ],
          [
            "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
            "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
          ],
          [
            "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
            "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
          ],
          [
            "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
            "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
          ],
          [
            "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
            "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
          ],
          [
            "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
            "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
          ],
          [
            "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
            "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
          ],
          [
            "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
            "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
          ],
          [
            "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
            "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
          ]
        ]
      }
    };
  },
  function(t, e, n) {
    "use strict";
    var r = n(4),
      i = n(165),
      o = n(6),
      a = o.utils.assert,
      s = n(166),
      u = n(167);
    function c(t) {
      if (!(this instanceof c)) return new c(t);
      "string" == typeof t &&
        (a(o.curves.hasOwnProperty(t), "Unknown curve " + t),
        (t = o.curves[t])),
        t instanceof o.curves.PresetCurve && (t = { curve: t }),
        (this.curve = t.curve.curve),
        (this.n = this.curve.n),
        (this.nh = this.n.ushrn(1)),
        (this.g = this.curve.g),
        (this.g = t.curve.g),
        this.g.precompute(t.curve.n.bitLength() + 1),
        (this.hash = t.hash || t.curve.hash);
    }
    (t.exports = c),
      (c.prototype.keyPair = function(t) {
        return new s(this, t);
      }),
      (c.prototype.keyFromPrivate = function(t, e) {
        return s.fromPrivate(this, t, e);
      }),
      (c.prototype.keyFromPublic = function(t, e) {
        return s.fromPublic(this, t, e);
      }),
      (c.prototype.genKeyPair = function(t) {
        t || (t = {});
        for (
          var e = new i({
              hash: this.hash,
              pers: t.pers,
              persEnc: t.persEnc || "utf8",
              entropy: t.entropy || o.rand(this.hash.hmacStrength),
              entropyEnc: (t.entropy && t.entropyEnc) || "utf8",
              nonce: this.n.toArray()
            }),
            n = this.n.byteLength(),
            a = this.n.sub(new r(2));
          ;

        ) {
          var s = new r(e.generate(n));
          if (!(s.cmp(a) > 0)) return s.iaddn(1), this.keyFromPrivate(s);
        }
      }),
      (c.prototype._truncateToN = function(t, e) {
        var n = 8 * t.byteLength() - this.n.bitLength();
        return (
          n > 0 && (t = t.ushrn(n)),
          !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
        );
      }),
      (c.prototype.sign = function(t, e, n, o) {
        "object" == typeof n && ((o = n), (n = null)),
          o || (o = {}),
          (e = this.keyFromPrivate(e, n)),
          (t = this._truncateToN(new r(t, 16)));
        for (
          var a = this.n.byteLength(),
            s = e.getPrivate().toArray("be", a),
            c = t.toArray("be", a),
            l = new i({
              hash: this.hash,
              entropy: s,
              nonce: c,
              pers: o.pers,
              persEnc: o.persEnc || "utf8"
            }),
            h = this.n.sub(new r(1)),
            f = 0;
          ;
          f++
        ) {
          var p = o.k ? o.k(f) : new r(l.generate(this.n.byteLength()));
          if (!((p = this._truncateToN(p, !0)).cmpn(1) <= 0 || p.cmp(h) >= 0)) {
            var d = this.g.mul(p);
            if (!d.isInfinity()) {
              var m = d.getX(),
                y = m.umod(this.n);
              if (0 !== y.cmpn(0)) {
                var g = p.invm(this.n).mul(y.mul(e.getPrivate()).iadd(t));
                if (0 !== (g = g.umod(this.n)).cmpn(0)) {
                  var v = (d.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(y) ? 2 : 0);
                  return (
                    o.canonical &&
                      g.cmp(this.nh) > 0 &&
                      ((g = this.n.sub(g)), (v ^= 1)),
                    new u({ r: y, s: g, recoveryParam: v })
                  );
                }
              }
            }
          }
        }
      }),
      (c.prototype.verify = function(t, e, n, i) {
        (t = this._truncateToN(new r(t, 16))), (n = this.keyFromPublic(n, i));
        var o = (e = new u(e, "hex")).r,
          a = e.s;
        if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
        if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;
        var s,
          c = a.invm(this.n),
          l = c.mul(t).umod(this.n),
          h = c.mul(o).umod(this.n);
        return this.curve._maxwellTrick
          ? !(s = this.g.jmulAdd(l, n.getPublic(), h)).isInfinity() &&
              s.eqXToP(o)
          : !(s = this.g.mulAdd(l, n.getPublic(), h)).isInfinity() &&
              0 ===
                s
                  .getX()
                  .umod(this.n)
                  .cmp(o);
      }),
      (c.prototype.recoverPubKey = function(t, e, n, i) {
        a((3 & n) === n, "The recovery param is more than two bits"),
          (e = new u(e, i));
        var o = this.n,
          s = new r(t),
          c = e.r,
          l = e.s,
          h = 1 & n,
          f = n >> 1;
        if (c.cmp(this.curve.p.umod(this.curve.n)) >= 0 && f)
          throw new Error("Unable to find sencond key candinate");
        c = f
          ? this.curve.pointFromX(c.add(this.curve.n), h)
          : this.curve.pointFromX(c, h);
        var p = e.r.invm(o),
          d = o
            .sub(s)
            .mul(p)
            .umod(o),
          m = l.mul(p).umod(o);
        return this.g.mulAdd(d, c, m);
      }),
      (c.prototype.getKeyRecoveryParam = function(t, e, n, r) {
        if (null !== (e = new u(e, r)).recoveryParam) return e.recoveryParam;
        for (var i = 0; i < 4; i++) {
          var o;
          try {
            o = this.recoverPubKey(t, e, i);
          } catch (t) {
            continue;
          }
          if (o.eq(n)) return i;
        }
        throw new Error("Unable to find valid recovery factor");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(48),
      i = n(82),
      o = n(8);
    function a(t) {
      if (!(this instanceof a)) return new a(t);
      (this.hash = t.hash),
        (this.predResist = !!t.predResist),
        (this.outLen = this.hash.outSize),
        (this.minEntropy = t.minEntropy || this.hash.hmacStrength),
        (this._reseed = null),
        (this.reseedInterval = null),
        (this.K = null),
        (this.V = null);
      var e = i.toArray(t.entropy, t.entropyEnc || "hex"),
        n = i.toArray(t.nonce, t.nonceEnc || "hex"),
        r = i.toArray(t.pers, t.persEnc || "hex");
      o(
        e.length >= this.minEntropy / 8,
        "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
      ),
        this._init(e, n, r);
    }
    (t.exports = a),
      (a.prototype._init = function(t, e, n) {
        var r = t.concat(e).concat(n);
        (this.K = new Array(this.outLen / 8)),
          (this.V = new Array(this.outLen / 8));
        for (var i = 0; i < this.V.length; i++)
          (this.K[i] = 0), (this.V[i] = 1);
        this._update(r),
          (this._reseed = 1),
          (this.reseedInterval = 281474976710656);
      }),
      (a.prototype._hmac = function() {
        return new r.hmac(this.hash, this.K);
      }),
      (a.prototype._update = function(t) {
        var e = this._hmac()
          .update(this.V)
          .update([0]);
        t && (e = e.update(t)),
          (this.K = e.digest()),
          (this.V = this._hmac()
            .update(this.V)
            .digest()),
          t &&
            ((this.K = this._hmac()
              .update(this.V)
              .update([1])
              .update(t)
              .digest()),
            (this.V = this._hmac()
              .update(this.V)
              .digest()));
      }),
      (a.prototype.reseed = function(t, e, n, r) {
        "string" != typeof e && ((r = n), (n = e), (e = null)),
          (t = i.toArray(t, e)),
          (n = i.toArray(n, r)),
          o(
            t.length >= this.minEntropy / 8,
            "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
          ),
          this._update(t.concat(n || [])),
          (this._reseed = 1);
      }),
      (a.prototype.generate = function(t, e, n, r) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        "string" != typeof e && ((r = n), (n = e), (e = null)),
          n && ((n = i.toArray(n, r || "hex")), this._update(n));
        for (var o = []; o.length < t; )
          (this.V = this._hmac()
            .update(this.V)
            .digest()),
            (o = o.concat(this.V));
        var a = o.slice(0, t);
        return this._update(n), this._reseed++, i.encode(a, e);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(4),
      i = n(6).utils.assert;
    function o(t, e) {
      (this.ec = t),
        (this.priv = null),
        (this.pub = null),
        e.priv && this._importPrivate(e.priv, e.privEnc),
        e.pub && this._importPublic(e.pub, e.pubEnc);
    }
    (t.exports = o),
      (o.fromPublic = function(t, e, n) {
        return e instanceof o ? e : new o(t, { pub: e, pubEnc: n });
      }),
      (o.fromPrivate = function(t, e, n) {
        return e instanceof o ? e : new o(t, { priv: e, privEnc: n });
      }),
      (o.prototype.validate = function() {
        var t = this.getPublic();
        return t.isInfinity()
          ? { result: !1, reason: "Invalid public key" }
          : t.validate()
          ? t.mul(this.ec.curve.n).isInfinity()
            ? { result: !0, reason: null }
            : { result: !1, reason: "Public key * N != O" }
          : { result: !1, reason: "Public key is not a point" };
      }),
      (o.prototype.getPublic = function(t, e) {
        return (
          "string" == typeof t && ((e = t), (t = null)),
          this.pub || (this.pub = this.ec.g.mul(this.priv)),
          e ? this.pub.encode(e, t) : this.pub
        );
      }),
      (o.prototype.getPrivate = function(t) {
        return "hex" === t ? this.priv.toString(16, 2) : this.priv;
      }),
      (o.prototype._importPrivate = function(t, e) {
        (this.priv = new r(t, e || 16)),
          (this.priv = this.priv.umod(this.ec.curve.n));
      }),
      (o.prototype._importPublic = function(t, e) {
        if (t.x || t.y)
          return (
            "mont" === this.ec.curve.type
              ? i(t.x, "Need x coordinate")
              : ("short" !== this.ec.curve.type &&
                  "edwards" !== this.ec.curve.type) ||
                i(t.x && t.y, "Need both x and y coordinate"),
            void (this.pub = this.ec.curve.point(t.x, t.y))
          );
        this.pub = this.ec.curve.decodePoint(t, e);
      }),
      (o.prototype.derive = function(t) {
        return t.mul(this.priv).getX();
      }),
      (o.prototype.sign = function(t, e, n) {
        return this.ec.sign(t, this, e, n);
      }),
      (o.prototype.verify = function(t, e) {
        return this.ec.verify(t, e, this);
      }),
      (o.prototype.inspect = function() {
        return (
          "<Key priv: " +
          (this.priv && this.priv.toString(16, 2)) +
          " pub: " +
          (this.pub && this.pub.inspect()) +
          " >"
        );
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(4),
      i = n(6).utils,
      o = i.assert;
    function a(t, e) {
      if (t instanceof a) return t;
      this._importDER(t, e) ||
        (o(t.r && t.s, "Signature without r or s"),
        (this.r = new r(t.r, 16)),
        (this.s = new r(t.s, 16)),
        void 0 === t.recoveryParam
          ? (this.recoveryParam = null)
          : (this.recoveryParam = t.recoveryParam));
    }
    function s() {
      this.place = 0;
    }
    function u(t, e) {
      var n = t[e.place++];
      if (!(128 & n)) return n;
      for (var r = 15 & n, i = 0, o = 0, a = e.place; o < r; o++, a++)
        (i <<= 8), (i |= t[a]);
      return (e.place = a), i;
    }
    function c(t) {
      for (var e = 0, n = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < n; )
        e++;
      return 0 === e ? t : t.slice(e);
    }
    function l(t, e) {
      if (e < 128) t.push(e);
      else {
        var n = 1 + ((Math.log(e) / Math.LN2) >>> 3);
        for (t.push(128 | n); --n; ) t.push((e >>> (n << 3)) & 255);
        t.push(e);
      }
    }
    (t.exports = a),
      (a.prototype._importDER = function(t, e) {
        t = i.toArray(t, e);
        var n = new s();
        if (48 !== t[n.place++]) return !1;
        if (u(t, n) + n.place !== t.length) return !1;
        if (2 !== t[n.place++]) return !1;
        var o = u(t, n),
          a = t.slice(n.place, o + n.place);
        if (((n.place += o), 2 !== t[n.place++])) return !1;
        var c = u(t, n);
        if (t.length !== c + n.place) return !1;
        var l = t.slice(n.place, c + n.place);
        return (
          0 === a[0] && 128 & a[1] && (a = a.slice(1)),
          0 === l[0] && 128 & l[1] && (l = l.slice(1)),
          (this.r = new r(a)),
          (this.s = new r(l)),
          (this.recoveryParam = null),
          !0
        );
      }),
      (a.prototype.toDER = function(t) {
        var e = this.r.toArray(),
          n = this.s.toArray();
        for (
          128 & e[0] && (e = [0].concat(e)),
            128 & n[0] && (n = [0].concat(n)),
            e = c(e),
            n = c(n);
          !(n[0] || 128 & n[1]);

        )
          n = n.slice(1);
        var r = [2];
        l(r, e.length), (r = r.concat(e)).push(2), l(r, n.length);
        var o = r.concat(n),
          a = [48];
        return l(a, o.length), (a = a.concat(o)), i.encode(a, t);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(48),
      i = n(6),
      o = i.utils,
      a = o.assert,
      s = o.parseBytes,
      u = n(169),
      c = n(170);
    function l(t) {
      if (
        (a("ed25519" === t, "only tested with ed25519 so far"),
        !(this instanceof l))
      )
        return new l(t);
      t = i.curves[t].curve;
      (this.curve = t),
        (this.g = t.g),
        this.g.precompute(t.n.bitLength() + 1),
        (this.pointClass = t.point().constructor),
        (this.encodingLength = Math.ceil(t.n.bitLength() / 8)),
        (this.hash = r.sha512);
    }
    (t.exports = l),
      (l.prototype.sign = function(t, e) {
        t = s(t);
        var n = this.keyFromSecret(e),
          r = this.hashInt(n.messagePrefix(), t),
          i = this.g.mul(r),
          o = this.encodePoint(i),
          a = this.hashInt(o, n.pubBytes(), t).mul(n.priv()),
          u = r.add(a).umod(this.curve.n);
        return this.makeSignature({ R: i, S: u, Rencoded: o });
      }),
      (l.prototype.verify = function(t, e, n) {
        (t = s(t)), (e = this.makeSignature(e));
        var r = this.keyFromPublic(n),
          i = this.hashInt(e.Rencoded(), r.pubBytes(), t),
          o = this.g.mul(e.S());
        return e
          .R()
          .add(r.pub().mul(i))
          .eq(o);
      }),
      (l.prototype.hashInt = function() {
        for (var t = this.hash(), e = 0; e < arguments.length; e++)
          t.update(arguments[e]);
        return o.intFromLE(t.digest()).umod(this.curve.n);
      }),
      (l.prototype.keyFromPublic = function(t) {
        return u.fromPublic(this, t);
      }),
      (l.prototype.keyFromSecret = function(t) {
        return u.fromSecret(this, t);
      }),
      (l.prototype.makeSignature = function(t) {
        return t instanceof c ? t : new c(this, t);
      }),
      (l.prototype.encodePoint = function(t) {
        var e = t.getY().toArray("le", this.encodingLength);
        return (e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0), e;
      }),
      (l.prototype.decodePoint = function(t) {
        var e = (t = o.parseBytes(t)).length - 1,
          n = t.slice(0, e).concat(-129 & t[e]),
          r = 0 != (128 & t[e]),
          i = o.intFromLE(n);
        return this.curve.pointFromY(i, r);
      }),
      (l.prototype.encodeInt = function(t) {
        return t.toArray("le", this.encodingLength);
      }),
      (l.prototype.decodeInt = function(t) {
        return o.intFromLE(t);
      }),
      (l.prototype.isPoint = function(t) {
        return t instanceof this.pointClass;
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(6).utils,
      i = r.assert,
      o = r.parseBytes,
      a = r.cachedProperty;
    function s(t, e) {
      (this.eddsa = t),
        (this._secret = o(e.secret)),
        t.isPoint(e.pub) ? (this._pub = e.pub) : (this._pubBytes = o(e.pub));
    }
    (s.fromPublic = function(t, e) {
      return e instanceof s ? e : new s(t, { pub: e });
    }),
      (s.fromSecret = function(t, e) {
        return e instanceof s ? e : new s(t, { secret: e });
      }),
      (s.prototype.secret = function() {
        return this._secret;
      }),
      a(s, "pubBytes", function() {
        return this.eddsa.encodePoint(this.pub());
      }),
      a(s, "pub", function() {
        return this._pubBytes
          ? this.eddsa.decodePoint(this._pubBytes)
          : this.eddsa.g.mul(this.priv());
      }),
      a(s, "privBytes", function() {
        var t = this.eddsa,
          e = this.hash(),
          n = t.encodingLength - 1,
          r = e.slice(0, t.encodingLength);
        return (r[0] &= 248), (r[n] &= 127), (r[n] |= 64), r;
      }),
      a(s, "priv", function() {
        return this.eddsa.decodeInt(this.privBytes());
      }),
      a(s, "hash", function() {
        return this.eddsa
          .hash()
          .update(this.secret())
          .digest();
      }),
      a(s, "messagePrefix", function() {
        return this.hash().slice(this.eddsa.encodingLength);
      }),
      (s.prototype.sign = function(t) {
        return (
          i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this)
        );
      }),
      (s.prototype.verify = function(t, e) {
        return this.eddsa.verify(t, e, this);
      }),
      (s.prototype.getSecret = function(t) {
        return (
          i(this._secret, "KeyPair is public only"), r.encode(this.secret(), t)
        );
      }),
      (s.prototype.getPublic = function(t) {
        return r.encode(this.pubBytes(), t);
      }),
      (t.exports = s);
  },
  function(t, e, n) {
    "use strict";
    var r = n(4),
      i = n(6).utils,
      o = i.assert,
      a = i.cachedProperty,
      s = i.parseBytes;
    function u(t, e) {
      (this.eddsa = t),
        "object" != typeof e && (e = s(e)),
        Array.isArray(e) &&
          (e = {
            R: e.slice(0, t.encodingLength),
            S: e.slice(t.encodingLength)
          }),
        o(e.R && e.S, "Signature without R or S"),
        t.isPoint(e.R) && (this._R = e.R),
        e.S instanceof r && (this._S = e.S),
        (this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded),
        (this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded);
    }
    a(u, "S", function() {
      return this.eddsa.decodeInt(this.Sencoded());
    }),
      a(u, "R", function() {
        return this.eddsa.decodePoint(this.Rencoded());
      }),
      a(u, "Rencoded", function() {
        return this.eddsa.encodePoint(this.R());
      }),
      a(u, "Sencoded", function() {
        return this.eddsa.encodeInt(this.S());
      }),
      (u.prototype.toBytes = function() {
        return this.Rencoded().concat(this.Sencoded());
      }),
      (u.prototype.toHex = function() {
        return i.encode(this.toBytes(), "hex").toUpperCase();
      }),
      (t.exports = u);
  },
  function(t, e, n) {
    "use strict";
    var r = n(24);
    e.certificate = n(181);
    var i = r.define("RSAPrivateKey", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("modulus").int(),
        this.key("publicExponent").int(),
        this.key("privateExponent").int(),
        this.key("prime1").int(),
        this.key("prime2").int(),
        this.key("exponent1").int(),
        this.key("exponent2").int(),
        this.key("coefficient").int()
      );
    });
    e.RSAPrivateKey = i;
    var o = r.define("RSAPublicKey", function() {
      this.seq().obj(
        this.key("modulus").int(),
        this.key("publicExponent").int()
      );
    });
    e.RSAPublicKey = o;
    var a = r.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(
        this.key("algorithm").use(s),
        this.key("subjectPublicKey").bitstr()
      );
    });
    e.PublicKey = a;
    var s = r.define("AlgorithmIdentifier", function() {
        this.seq().obj(
          this.key("algorithm").objid(),
          this.key("none")
            .null_()
            .optional(),
          this.key("curve")
            .objid()
            .optional(),
          this.key("params")
            .seq()
            .obj(this.key("p").int(), this.key("q").int(), this.key("g").int())
            .optional()
        );
      }),
      u = r.define("PrivateKeyInfo", function() {
        this.seq().obj(
          this.key("version").int(),
          this.key("algorithm").use(s),
          this.key("subjectPrivateKey").octstr()
        );
      });
    e.PrivateKey = u;
    var c = r.define("EncryptedPrivateKeyInfo", function() {
      this.seq().obj(
        this.key("algorithm")
          .seq()
          .obj(
            this.key("id").objid(),
            this.key("decrypt")
              .seq()
              .obj(
                this.key("kde")
                  .seq()
                  .obj(
                    this.key("id").objid(),
                    this.key("kdeparams")
                      .seq()
                      .obj(this.key("salt").octstr(), this.key("iters").int())
                  ),
                this.key("cipher")
                  .seq()
                  .obj(this.key("algo").objid(), this.key("iv").octstr())
              )
          ),
        this.key("subjectPrivateKey").octstr()
      );
    });
    e.EncryptedPrivateKey = c;
    var l = r.define("DSAPrivateKey", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("p").int(),
        this.key("q").int(),
        this.key("g").int(),
        this.key("pub_key").int(),
        this.key("priv_key").int()
      );
    });
    (e.DSAPrivateKey = l),
      (e.DSAparam = r.define("DSAparam", function() {
        this.int();
      }));
    var h = r.define("ECPrivateKey", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("privateKey").octstr(),
        this.key("parameters")
          .optional()
          .explicit(0)
          .use(f),
        this.key("publicKey")
          .optional()
          .explicit(1)
          .bitstr()
      );
    });
    e.ECPrivateKey = h;
    var f = r.define("ECParameters", function() {
      this.choice({ namedCurve: this.objid() });
    });
    e.signature = r.define("signature", function() {
      this.seq().obj(this.key("r").int(), this.key("s").int());
    });
  },
  function(t, e, n) {
    var r = n(24),
      i = n(1);
    function o(t, e) {
      (this.name = t),
        (this.body = e),
        (this.decoders = {}),
        (this.encoders = {});
    }
    (e.define = function(t, e) {
      return new o(t, e);
    }),
      (o.prototype._createNamed = function(t) {
        var e;
        try {
          e = n(173).runInThisContext(
            "(function " +
              this.name +
              "(entity) {\n  this._initNamed(entity);\n})"
          );
        } catch (t) {
          e = function(t) {
            this._initNamed(t);
          };
        }
        return (
          i(e, t),
          (e.prototype._initNamed = function(e) {
            t.call(this, e);
          }),
          new e(this)
        );
      }),
      (o.prototype._getDecoder = function(t) {
        return (
          (t = t || "der"),
          this.decoders.hasOwnProperty(t) ||
            (this.decoders[t] = this._createNamed(r.decoders[t])),
          this.decoders[t]
        );
      }),
      (o.prototype.decode = function(t, e, n) {
        return this._getDecoder(e).decode(t, n);
      }),
      (o.prototype._getEncoder = function(t) {
        return (
          (t = t || "der"),
          this.encoders.hasOwnProperty(t) ||
            (this.encoders[t] = this._createNamed(r.encoders[t])),
          this.encoders[t]
        );
      }),
      (o.prototype.encode = function(t, e, n) {
        return this._getEncoder(e).encode(t, n);
      });
  },
  function(module, exports) {
    var indexOf = function(t, e) {
        if (t.indexOf) return t.indexOf(e);
        for (var n = 0; n < t.length; n++) if (t[n] === e) return n;
        return -1;
      },
      Object_keys = function(t) {
        if (Object.keys) return Object.keys(t);
        var e = [];
        for (var n in t) e.push(n);
        return e;
      },
      forEach = function(t, e) {
        if (t.forEach) return t.forEach(e);
        for (var n = 0; n < t.length; n++) e(t[n], n, t);
      },
      defineProp = (function() {
        try {
          return (
            Object.defineProperty({}, "_", {}),
            function(t, e, n) {
              Object.defineProperty(t, e, {
                writable: !0,
                enumerable: !1,
                configurable: !0,
                value: n
              });
            }
          );
        } catch (t) {
          return function(t, e, n) {
            t[e] = n;
          };
        }
      })(),
      globals = [
        "Array",
        "Boolean",
        "Date",
        "Error",
        "EvalError",
        "Function",
        "Infinity",
        "JSON",
        "Math",
        "NaN",
        "Number",
        "Object",
        "RangeError",
        "ReferenceError",
        "RegExp",
        "String",
        "SyntaxError",
        "TypeError",
        "URIError",
        "decodeURI",
        "decodeURIComponent",
        "encodeURI",
        "encodeURIComponent",
        "escape",
        "eval",
        "isFinite",
        "isNaN",
        "parseFloat",
        "parseInt",
        "undefined",
        "unescape"
      ];
    function Context() {}
    Context.prototype = {};
    var Script = (exports.Script = function(t) {
      if (!(this instanceof Script)) return new Script(t);
      this.code = t;
    });
    (Script.prototype.runInContext = function(t) {
      if (!(t instanceof Context))
        throw new TypeError("needs a 'context' argument.");
      var e = document.createElement("iframe");
      e.style || (e.style = {}),
        (e.style.display = "none"),
        document.body.appendChild(e);
      var n = e.contentWindow,
        r = n.eval,
        i = n.execScript;
      !r && i && (i.call(n, "null"), (r = n.eval)),
        forEach(Object_keys(t), function(e) {
          n[e] = t[e];
        }),
        forEach(globals, function(e) {
          t[e] && (n[e] = t[e]);
        });
      var o = Object_keys(n),
        a = r.call(n, this.code);
      return (
        forEach(Object_keys(n), function(e) {
          (e in t || -1 === indexOf(o, e)) && (t[e] = n[e]);
        }),
        forEach(globals, function(e) {
          e in t || defineProp(t, e, n[e]);
        }),
        document.body.removeChild(e),
        a
      );
    }),
      (Script.prototype.runInThisContext = function() {
        return eval(this.code);
      }),
      (Script.prototype.runInNewContext = function(t) {
        var e = Script.createContext(t),
          n = this.runInContext(e);
        return (
          t &&
            forEach(Object_keys(e), function(n) {
              t[n] = e[n];
            }),
          n
        );
      }),
      forEach(Object_keys(Script.prototype), function(t) {
        exports[t] = Script[t] = function(e) {
          var n = Script(e);
          return n[t].apply(n, [].slice.call(arguments, 1));
        };
      }),
      (exports.isContext = function(t) {
        return t instanceof Context;
      }),
      (exports.createScript = function(t) {
        return exports.Script(t);
      }),
      (exports.createContext = Script.createContext = function(t) {
        var e = new Context();
        return (
          "object" == typeof t &&
            forEach(Object_keys(t), function(n) {
              e[n] = t[n];
            }),
          e
        );
      });
  },
  function(t, e, n) {
    var r = n(1);
    function i(t) {
      this._reporterState = {
        obj: null,
        path: [],
        options: t || {},
        errors: []
      };
    }
    function o(t, e) {
      (this.path = t), this.rethrow(e);
    }
    (e.Reporter = i),
      (i.prototype.isError = function(t) {
        return t instanceof o;
      }),
      (i.prototype.save = function() {
        var t = this._reporterState;
        return { obj: t.obj, pathLen: t.path.length };
      }),
      (i.prototype.restore = function(t) {
        var e = this._reporterState;
        (e.obj = t.obj), (e.path = e.path.slice(0, t.pathLen));
      }),
      (i.prototype.enterKey = function(t) {
        return this._reporterState.path.push(t);
      }),
      (i.prototype.exitKey = function(t) {
        var e = this._reporterState;
        e.path = e.path.slice(0, t - 1);
      }),
      (i.prototype.leaveKey = function(t, e, n) {
        var r = this._reporterState;
        this.exitKey(t), null !== r.obj && (r.obj[e] = n);
      }),
      (i.prototype.path = function() {
        return this._reporterState.path.join("/");
      }),
      (i.prototype.enterObject = function() {
        var t = this._reporterState,
          e = t.obj;
        return (t.obj = {}), e;
      }),
      (i.prototype.leaveObject = function(t) {
        var e = this._reporterState,
          n = e.obj;
        return (e.obj = t), n;
      }),
      (i.prototype.error = function(t) {
        var e,
          n = this._reporterState,
          r = t instanceof o;
        if (
          ((e = r
            ? t
            : new o(
                n.path
                  .map(function(t) {
                    return "[" + JSON.stringify(t) + "]";
                  })
                  .join(""),
                t.message || t,
                t.stack
              )),
          !n.options.partial)
        )
          throw e;
        return r || n.errors.push(e), e;
      }),
      (i.prototype.wrapResult = function(t) {
        var e = this._reporterState;
        return e.options.partial
          ? { result: this.isError(t) ? null : t, errors: e.errors }
          : t;
      }),
      r(o, Error),
      (o.prototype.rethrow = function(t) {
        if (
          ((this.message = t + " at: " + (this.path || "(shallow)")),
          Error.captureStackTrace && Error.captureStackTrace(this, o),
          !this.stack)
        )
          try {
            throw new Error(this.message);
          } catch (t) {
            this.stack = t.stack;
          }
        return this;
      });
  },
  function(t, e, n) {
    var r = n(25).Reporter,
      i = n(25).EncoderBuffer,
      o = n(25).DecoderBuffer,
      a = n(8),
      s = [
        "seq",
        "seqof",
        "set",
        "setof",
        "objid",
        "bool",
        "gentime",
        "utctime",
        "null_",
        "enum",
        "int",
        "objDesc",
        "bitstr",
        "bmpstr",
        "charstr",
        "genstr",
        "graphstr",
        "ia5str",
        "iso646str",
        "numstr",
        "octstr",
        "printstr",
        "t61str",
        "unistr",
        "utf8str",
        "videostr"
      ],
      u = [
        "key",
        "obj",
        "use",
        "optional",
        "explicit",
        "implicit",
        "def",
        "choice",
        "any",
        "contains"
      ].concat(s);
    function c(t, e) {
      var n = {};
      (this._baseState = n),
        (n.enc = t),
        (n.parent = e || null),
        (n.children = null),
        (n.tag = null),
        (n.args = null),
        (n.reverseArgs = null),
        (n.choice = null),
        (n.optional = !1),
        (n.any = !1),
        (n.obj = !1),
        (n.use = null),
        (n.useDecoder = null),
        (n.key = null),
        (n.default = null),
        (n.explicit = null),
        (n.implicit = null),
        (n.contains = null),
        n.parent || ((n.children = []), this._wrap());
    }
    t.exports = c;
    var l = [
      "enc",
      "parent",
      "children",
      "tag",
      "args",
      "reverseArgs",
      "choice",
      "optional",
      "any",
      "obj",
      "use",
      "alteredUse",
      "key",
      "default",
      "explicit",
      "implicit",
      "contains"
    ];
    (c.prototype.clone = function() {
      var t = this._baseState,
        e = {};
      l.forEach(function(n) {
        e[n] = t[n];
      });
      var n = new this.constructor(e.parent);
      return (n._baseState = e), n;
    }),
      (c.prototype._wrap = function() {
        var t = this._baseState;
        u.forEach(function(e) {
          this[e] = function() {
            var n = new this.constructor(this);
            return t.children.push(n), n[e].apply(n, arguments);
          };
        }, this);
      }),
      (c.prototype._init = function(t) {
        var e = this._baseState;
        a(null === e.parent),
          t.call(this),
          (e.children = e.children.filter(function(t) {
            return t._baseState.parent === this;
          }, this)),
          a.equal(e.children.length, 1, "Root node can have only one child");
      }),
      (c.prototype._useArgs = function(t) {
        var e = this._baseState,
          n = t.filter(function(t) {
            return t instanceof this.constructor;
          }, this);
        (t = t.filter(function(t) {
          return !(t instanceof this.constructor);
        }, this)),
          0 !== n.length &&
            (a(null === e.children),
            (e.children = n),
            n.forEach(function(t) {
              t._baseState.parent = this;
            }, this)),
          0 !== t.length &&
            (a(null === e.args),
            (e.args = t),
            (e.reverseArgs = t.map(function(t) {
              if ("object" != typeof t || t.constructor !== Object) return t;
              var e = {};
              return (
                Object.keys(t).forEach(function(n) {
                  n == (0 | n) && (n |= 0);
                  var r = t[n];
                  e[r] = n;
                }),
                e
              );
            })));
      }),
      [
        "_peekTag",
        "_decodeTag",
        "_use",
        "_decodeStr",
        "_decodeObjid",
        "_decodeTime",
        "_decodeNull",
        "_decodeInt",
        "_decodeBool",
        "_decodeList",
        "_encodeComposite",
        "_encodeStr",
        "_encodeObjid",
        "_encodeTime",
        "_encodeNull",
        "_encodeInt",
        "_encodeBool"
      ].forEach(function(t) {
        c.prototype[t] = function() {
          var e = this._baseState;
          throw new Error(t + " not implemented for encoding: " + e.enc);
        };
      }),
      s.forEach(function(t) {
        c.prototype[t] = function() {
          var e = this._baseState,
            n = Array.prototype.slice.call(arguments);
          return a(null === e.tag), (e.tag = t), this._useArgs(n), this;
        };
      }),
      (c.prototype.use = function(t) {
        a(t);
        var e = this._baseState;
        return a(null === e.use), (e.use = t), this;
      }),
      (c.prototype.optional = function() {
        return (this._baseState.optional = !0), this;
      }),
      (c.prototype.def = function(t) {
        var e = this._baseState;
        return a(null === e.default), (e.default = t), (e.optional = !0), this;
      }),
      (c.prototype.explicit = function(t) {
        var e = this._baseState;
        return (
          a(null === e.explicit && null === e.implicit), (e.explicit = t), this
        );
      }),
      (c.prototype.implicit = function(t) {
        var e = this._baseState;
        return (
          a(null === e.explicit && null === e.implicit), (e.implicit = t), this
        );
      }),
      (c.prototype.obj = function() {
        var t = this._baseState,
          e = Array.prototype.slice.call(arguments);
        return (t.obj = !0), 0 !== e.length && this._useArgs(e), this;
      }),
      (c.prototype.key = function(t) {
        var e = this._baseState;
        return a(null === e.key), (e.key = t), this;
      }),
      (c.prototype.any = function() {
        return (this._baseState.any = !0), this;
      }),
      (c.prototype.choice = function(t) {
        var e = this._baseState;
        return (
          a(null === e.choice),
          (e.choice = t),
          this._useArgs(
            Object.keys(t).map(function(e) {
              return t[e];
            })
          ),
          this
        );
      }),
      (c.prototype.contains = function(t) {
        var e = this._baseState;
        return a(null === e.use), (e.contains = t), this;
      }),
      (c.prototype._decode = function(t, e) {
        var n = this._baseState;
        if (null === n.parent) return t.wrapResult(n.children[0]._decode(t, e));
        var r,
          i = n.default,
          a = !0,
          s = null;
        if ((null !== n.key && (s = t.enterKey(n.key)), n.optional)) {
          var u = null;
          if (
            (null !== n.explicit
              ? (u = n.explicit)
              : null !== n.implicit
              ? (u = n.implicit)
              : null !== n.tag && (u = n.tag),
            null !== u || n.any)
          ) {
            if (((a = this._peekTag(t, u, n.any)), t.isError(a))) return a;
          } else {
            var c = t.save();
            try {
              null === n.choice
                ? this._decodeGeneric(n.tag, t, e)
                : this._decodeChoice(t, e),
                (a = !0);
            } catch (t) {
              a = !1;
            }
            t.restore(c);
          }
        }
        if ((n.obj && a && (r = t.enterObject()), a)) {
          if (null !== n.explicit) {
            var l = this._decodeTag(t, n.explicit);
            if (t.isError(l)) return l;
            t = l;
          }
          var h = t.offset;
          if (null === n.use && null === n.choice) {
            if (n.any) c = t.save();
            var f = this._decodeTag(
              t,
              null !== n.implicit ? n.implicit : n.tag,
              n.any
            );
            if (t.isError(f)) return f;
            n.any ? (i = t.raw(c)) : (t = f);
          }
          if (
            (e &&
              e.track &&
              null !== n.tag &&
              e.track(t.path(), h, t.length, "tagged"),
            e &&
              e.track &&
              null !== n.tag &&
              e.track(t.path(), t.offset, t.length, "content"),
            (i = n.any
              ? i
              : null === n.choice
              ? this._decodeGeneric(n.tag, t, e)
              : this._decodeChoice(t, e)),
            t.isError(i))
          )
            return i;
          if (
            (n.any ||
              null !== n.choice ||
              null === n.children ||
              n.children.forEach(function(n) {
                n._decode(t, e);
              }),
            n.contains && ("octstr" === n.tag || "bitstr" === n.tag))
          ) {
            var p = new o(i);
            i = this._getUse(n.contains, t._reporterState.obj)._decode(p, e);
          }
        }
        return (
          n.obj && a && (i = t.leaveObject(r)),
          null === n.key || (null === i && !0 !== a)
            ? null !== s && t.exitKey(s)
            : t.leaveKey(s, n.key, i),
          i
        );
      }),
      (c.prototype._decodeGeneric = function(t, e, n) {
        var r = this._baseState;
        return "seq" === t || "set" === t
          ? null
          : "seqof" === t || "setof" === t
          ? this._decodeList(e, t, r.args[0], n)
          : /str$/.test(t)
          ? this._decodeStr(e, t, n)
          : "objid" === t && r.args
          ? this._decodeObjid(e, r.args[0], r.args[1], n)
          : "objid" === t
          ? this._decodeObjid(e, null, null, n)
          : "gentime" === t || "utctime" === t
          ? this._decodeTime(e, t, n)
          : "null_" === t
          ? this._decodeNull(e, n)
          : "bool" === t
          ? this._decodeBool(e, n)
          : "objDesc" === t
          ? this._decodeStr(e, t, n)
          : "int" === t || "enum" === t
          ? this._decodeInt(e, r.args && r.args[0], n)
          : null !== r.use
          ? this._getUse(r.use, e._reporterState.obj)._decode(e, n)
          : e.error("unknown tag: " + t);
      }),
      (c.prototype._getUse = function(t, e) {
        var n = this._baseState;
        return (
          (n.useDecoder = this._use(t, e)),
          a(null === n.useDecoder._baseState.parent),
          (n.useDecoder = n.useDecoder._baseState.children[0]),
          n.implicit !== n.useDecoder._baseState.implicit &&
            ((n.useDecoder = n.useDecoder.clone()),
            (n.useDecoder._baseState.implicit = n.implicit)),
          n.useDecoder
        );
      }),
      (c.prototype._decodeChoice = function(t, e) {
        var n = this._baseState,
          r = null,
          i = !1;
        return (
          Object.keys(n.choice).some(function(o) {
            var a = t.save(),
              s = n.choice[o];
            try {
              var u = s._decode(t, e);
              if (t.isError(u)) return !1;
              (r = { type: o, value: u }), (i = !0);
            } catch (e) {
              return t.restore(a), !1;
            }
            return !0;
          }, this),
          i ? r : t.error("Choice not matched")
        );
      }),
      (c.prototype._createEncoderBuffer = function(t) {
        return new i(t, this.reporter);
      }),
      (c.prototype._encode = function(t, e, n) {
        var r = this._baseState;
        if (null === r.default || r.default !== t) {
          var i = this._encodeValue(t, e, n);
          if (void 0 !== i && !this._skipDefault(i, e, n)) return i;
        }
      }),
      (c.prototype._encodeValue = function(t, e, n) {
        var i = this._baseState;
        if (null === i.parent) return i.children[0]._encode(t, e || new r());
        var o = null;
        if (((this.reporter = e), i.optional && void 0 === t)) {
          if (null === i.default) return;
          t = i.default;
        }
        var a = null,
          s = !1;
        if (i.any) o = this._createEncoderBuffer(t);
        else if (i.choice) o = this._encodeChoice(t, e);
        else if (i.contains)
          (a = this._getUse(i.contains, n)._encode(t, e)), (s = !0);
        else if (i.children)
          (a = i.children
            .map(function(n) {
              if ("null_" === n._baseState.tag) return n._encode(null, e, t);
              if (null === n._baseState.key)
                return e.error("Child should have a key");
              var r = e.enterKey(n._baseState.key);
              if ("object" != typeof t)
                return e.error("Child expected, but input is not object");
              var i = n._encode(t[n._baseState.key], e, t);
              return e.leaveKey(r), i;
            }, this)
            .filter(function(t) {
              return t;
            })),
            (a = this._createEncoderBuffer(a));
        else if ("seqof" === i.tag || "setof" === i.tag) {
          if (!i.args || 1 !== i.args.length)
            return e.error("Too many args for : " + i.tag);
          if (!Array.isArray(t))
            return e.error("seqof/setof, but data is not Array");
          var u = this.clone();
          (u._baseState.implicit = null),
            (a = this._createEncoderBuffer(
              t.map(function(n) {
                var r = this._baseState;
                return this._getUse(r.args[0], t)._encode(n, e);
              }, u)
            ));
        } else
          null !== i.use
            ? (o = this._getUse(i.use, n)._encode(t, e))
            : ((a = this._encodePrimitive(i.tag, t)), (s = !0));
        if (!i.any && null === i.choice) {
          var c = null !== i.implicit ? i.implicit : i.tag,
            l = null === i.implicit ? "universal" : "context";
          null === c
            ? null === i.use && e.error("Tag could be omitted only for .use()")
            : null === i.use && (o = this._encodeComposite(c, s, l, a));
        }
        return (
          null !== i.explicit &&
            (o = this._encodeComposite(i.explicit, !1, "context", o)),
          o
        );
      }),
      (c.prototype._encodeChoice = function(t, e) {
        var n = this._baseState,
          r = n.choice[t.type];
        return (
          r ||
            a(
              !1,
              t.type + " not found in " + JSON.stringify(Object.keys(n.choice))
            ),
          r._encode(t.value, e)
        );
      }),
      (c.prototype._encodePrimitive = function(t, e) {
        var n = this._baseState;
        if (/str$/.test(t)) return this._encodeStr(e, t);
        if ("objid" === t && n.args)
          return this._encodeObjid(e, n.reverseArgs[0], n.args[1]);
        if ("objid" === t) return this._encodeObjid(e, null, null);
        if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
        if ("null_" === t) return this._encodeNull();
        if ("int" === t || "enum" === t)
          return this._encodeInt(e, n.args && n.reverseArgs[0]);
        if ("bool" === t) return this._encodeBool(e);
        if ("objDesc" === t) return this._encodeStr(e, t);
        throw new Error("Unsupported tag: " + t);
      }),
      (c.prototype._isNumstr = function(t) {
        return /^[0-9 ]*$/.test(t);
      }),
      (c.prototype._isPrintstr = function(t) {
        return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(t);
      });
  },
  function(t, e, n) {
    var r = n(87);
    (e.tagClass = {
      0: "universal",
      1: "application",
      2: "context",
      3: "private"
    }),
      (e.tagClassByName = r._reverse(e.tagClass)),
      (e.tag = {
        0: "end",
        1: "bool",
        2: "int",
        3: "bitstr",
        4: "octstr",
        5: "null_",
        6: "objid",
        7: "objDesc",
        8: "external",
        9: "real",
        10: "enum",
        11: "embed",
        12: "utf8str",
        13: "relativeOid",
        16: "seq",
        17: "set",
        18: "numstr",
        19: "printstr",
        20: "t61str",
        21: "videostr",
        22: "ia5str",
        23: "utctime",
        24: "gentime",
        25: "graphstr",
        26: "iso646str",
        27: "genstr",
        28: "unistr",
        29: "charstr",
        30: "bmpstr"
      }),
      (e.tagByName = r._reverse(e.tag));
  },
  function(t, e, n) {
    var r = e;
    (r.der = n(88)), (r.pem = n(178));
  },
  function(t, e, n) {
    var r = n(1),
      i = n(3).Buffer,
      o = n(88);
    function a(t) {
      o.call(this, t), (this.enc = "pem");
    }
    r(a, o),
      (t.exports = a),
      (a.prototype.decode = function(t, e) {
        for (
          var n = t.toString().split(/[\r\n]+/g),
            r = e.label.toUpperCase(),
            a = /^-----(BEGIN|END) ([^-]+)-----$/,
            s = -1,
            u = -1,
            c = 0;
          c < n.length;
          c++
        ) {
          var l = n[c].match(a);
          if (null !== l && l[2] === r) {
            if (-1 !== s) {
              if ("END" !== l[1]) break;
              u = c;
              break;
            }
            if ("BEGIN" !== l[1]) break;
            s = c;
          }
        }
        if (-1 === s || -1 === u)
          throw new Error("PEM section not found for: " + r);
        var h = n.slice(s + 1, u).join("");
        h.replace(/[^a-z0-9\+\/=]+/gi, "");
        var f = new i(h, "base64");
        return o.prototype.decode.call(this, f, e);
      });
  },
  function(t, e, n) {
    var r = e;
    (r.der = n(89)), (r.pem = n(180));
  },
  function(t, e, n) {
    var r = n(1),
      i = n(89);
    function o(t) {
      i.call(this, t), (this.enc = "pem");
    }
    r(o, i),
      (t.exports = o),
      (o.prototype.encode = function(t, e) {
        for (
          var n = i.prototype.encode.call(this, t).toString("base64"),
            r = ["-----BEGIN " + e.label + "-----"],
            o = 0;
          o < n.length;
          o += 64
        )
          r.push(n.slice(o, o + 64));
        return r.push("-----END " + e.label + "-----"), r.join("\n");
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(24),
      i = r.define("Time", function() {
        this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
      }),
      o = r.define("AttributeTypeValue", function() {
        this.seq().obj(this.key("type").objid(), this.key("value").any());
      }),
      a = r.define("AlgorithmIdentifier", function() {
        this.seq().obj(
          this.key("algorithm").objid(),
          this.key("parameters").optional(),
          this.key("curve")
            .objid()
            .optional()
        );
      }),
      s = r.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(
          this.key("algorithm").use(a),
          this.key("subjectPublicKey").bitstr()
        );
      }),
      u = r.define("RelativeDistinguishedName", function() {
        this.setof(o);
      }),
      c = r.define("RDNSequence", function() {
        this.seqof(u);
      }),
      l = r.define("Name", function() {
        this.choice({ rdnSequence: this.use(c) });
      }),
      h = r.define("Validity", function() {
        this.seq().obj(
          this.key("notBefore").use(i),
          this.key("notAfter").use(i)
        );
      }),
      f = r.define("Extension", function() {
        this.seq().obj(
          this.key("extnID").objid(),
          this.key("critical")
            .bool()
            .def(!1),
          this.key("extnValue").octstr()
        );
      }),
      p = r.define("TBSCertificate", function() {
        this.seq().obj(
          this.key("version")
            .explicit(0)
            .int()
            .optional(),
          this.key("serialNumber").int(),
          this.key("signature").use(a),
          this.key("issuer").use(l),
          this.key("validity").use(h),
          this.key("subject").use(l),
          this.key("subjectPublicKeyInfo").use(s),
          this.key("issuerUniqueID")
            .implicit(1)
            .bitstr()
            .optional(),
          this.key("subjectUniqueID")
            .implicit(2)
            .bitstr()
            .optional(),
          this.key("extensions")
            .explicit(3)
            .seqof(f)
            .optional()
        );
      }),
      d = r.define("X509Certificate", function() {
        this.seq().obj(
          this.key("tbsCertificate").use(p),
          this.key("signatureAlgorithm").use(a),
          this.key("signatureValue").bitstr()
        );
      });
    t.exports = d;
  },
  function(t) {
    t.exports = {
      "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
      "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
      "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
      "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
      "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
      "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
      "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
      "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
      "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
      "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
      "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
      "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
    };
  },
  function(t, e, n) {
    var r = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m,
      i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,
      o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m,
      a = n(29),
      s = n(45),
      u = n(2).Buffer;
    t.exports = function(t, e) {
      var n,
        c = t.toString(),
        l = c.match(r);
      if (l) {
        var h = "aes" + l[1],
          f = u.from(l[2], "hex"),
          p = u.from(l[3].replace(/[\r\n]/g, ""), "base64"),
          d = a(e, f.slice(0, 8), parseInt(l[1], 10)).key,
          m = [],
          y = s.createDecipheriv(h, d, f);
        m.push(y.update(p)), m.push(y.final()), (n = u.concat(m));
      } else {
        var g = c.match(o);
        n = new u(g[2].replace(/[\r\n]/g, ""), "base64");
      }
      return { tag: c.match(i)[1], data: n };
    };
  },
  function(t, e, n) {
    (function(e) {
      var r = n(4),
        i = n(6).ec,
        o = n(31),
        a = n(90);
      function s(t, e) {
        if (t.cmpn(0) <= 0) throw new Error("invalid sig");
        if (t.cmp(e) >= e) throw new Error("invalid sig");
      }
      t.exports = function(t, n, u, c, l) {
        var h = o(u);
        if ("ec" === h.type) {
          if ("ecdsa" !== c && "ecdsa/rsa" !== c)
            throw new Error("wrong public key type");
          return (function(t, e, n) {
            var r = a[n.data.algorithm.curve.join(".")];
            if (!r)
              throw new Error(
                "unknown curve " + n.data.algorithm.curve.join(".")
              );
            var o = new i(r),
              s = n.data.subjectPrivateKey.data;
            return o.verify(e, t, s);
          })(t, n, h);
        }
        if ("dsa" === h.type) {
          if ("dsa" !== c) throw new Error("wrong public key type");
          return (function(t, e, n) {
            var i = n.data.p,
              a = n.data.q,
              u = n.data.g,
              c = n.data.pub_key,
              l = o.signature.decode(t, "der"),
              h = l.s,
              f = l.r;
            s(h, a), s(f, a);
            var p = r.mont(i),
              d = h.invm(a);
            return (
              0 ===
              u
                .toRed(p)
                .redPow(new r(e).mul(d).mod(a))
                .fromRed()
                .mul(
                  c
                    .toRed(p)
                    .redPow(f.mul(d).mod(a))
                    .fromRed()
                )
                .mod(i)
                .mod(a)
                .cmp(f)
            );
          })(t, n, h);
        }
        if ("rsa" !== c && "ecdsa/rsa" !== c)
          throw new Error("wrong public key type");
        n = e.concat([l, n]);
        for (
          var f = h.modulus.byteLength(), p = [1], d = 0;
          n.length + p.length + 2 < f;

        )
          p.push(255), d++;
        p.push(0);
        for (var m = -1; ++m < n.length; ) p.push(n[m]);
        p = new e(p);
        var y = r.mont(h.modulus);
        (t = (t = new r(t).toRed(y)).redPow(new r(h.publicExponent))),
          (t = new e(t.fromRed().toArray()));
        var g = d < 8 ? 1 : 0;
        for (
          f = Math.min(t.length, p.length),
            t.length !== p.length && (g = 1),
            m = -1;
          ++m < f;

        )
          g |= t[m] ^ p[m];
        return 0 === g;
      };
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    (function(e) {
      var r = n(6),
        i = n(4);
      t.exports = function(t) {
        return new a(t);
      };
      var o = {
        secp256k1: { name: "secp256k1", byteLength: 32 },
        secp224r1: { name: "p224", byteLength: 28 },
        prime256v1: { name: "p256", byteLength: 32 },
        prime192v1: { name: "p192", byteLength: 24 },
        ed25519: { name: "ed25519", byteLength: 32 },
        secp384r1: { name: "p384", byteLength: 48 },
        secp521r1: { name: "p521", byteLength: 66 }
      };
      function a(t) {
        (this.curveType = o[t]),
          this.curveType || (this.curveType = { name: t }),
          (this.curve = new r.ec(this.curveType.name)),
          (this.keys = void 0);
      }
      function s(t, n, r) {
        Array.isArray(t) || (t = t.toArray());
        var i = new e(t);
        if (r && i.length < r) {
          var o = new e(r - i.length);
          o.fill(0), (i = e.concat([o, i]));
        }
        return n ? i.toString(n) : i;
      }
      (o.p224 = o.secp224r1),
        (o.p256 = o.secp256r1 = o.prime256v1),
        (o.p192 = o.secp192r1 = o.prime192v1),
        (o.p384 = o.secp384r1),
        (o.p521 = o.secp521r1),
        (a.prototype.generateKeys = function(t, e) {
          return (this.keys = this.curve.genKeyPair()), this.getPublicKey(t, e);
        }),
        (a.prototype.computeSecret = function(t, n, r) {
          return (
            (n = n || "utf8"),
            e.isBuffer(t) || (t = new e(t, n)),
            s(
              this.curve
                .keyFromPublic(t)
                .getPublic()
                .mul(this.keys.getPrivate())
                .getX(),
              r,
              this.curveType.byteLength
            )
          );
        }),
        (a.prototype.getPublicKey = function(t, e) {
          var n = this.keys.getPublic("compressed" === e, !0);
          return (
            "hybrid" === e && (n[n.length - 1] % 2 ? (n[0] = 7) : (n[0] = 6)),
            s(n, t)
          );
        }),
        (a.prototype.getPrivateKey = function(t) {
          return s(this.keys.getPrivate(), t);
        }),
        (a.prototype.setPublicKey = function(t, n) {
          return (
            (n = n || "utf8"),
            e.isBuffer(t) || (t = new e(t, n)),
            this.keys._importPublic(t),
            this
          );
        }),
        (a.prototype.setPrivateKey = function(t, n) {
          (n = n || "utf8"), e.isBuffer(t) || (t = new e(t, n));
          var r = new i(t);
          return (
            (r = r.toString(16)),
            (this.keys = this.curve.genKeyPair()),
            this.keys._importPrivate(r),
            this
          );
        });
    }.call(this, n(3).Buffer));
  },
  function(t, e, n) {
    (e.publicEncrypt = n(187)),
      (e.privateDecrypt = n(188)),
      (e.privateEncrypt = function(t, n) {
        return e.publicEncrypt(t, n, !0);
      }),
      (e.publicDecrypt = function(t, n) {
        return e.privateDecrypt(t, n, !0);
      });
  },
  function(t, e, n) {
    var r = n(31),
      i = n(17),
      o = n(20),
      a = n(91),
      s = n(92),
      u = n(4),
      c = n(93),
      l = n(47),
      h = n(2).Buffer;
    t.exports = function(t, e, n) {
      var f;
      f = t.padding ? t.padding : n ? 1 : 4;
      var p,
        d = r(t);
      if (4 === f)
        p = (function(t, e) {
          var n = t.modulus.byteLength(),
            r = e.length,
            c = o("sha1")
              .update(h.alloc(0))
              .digest(),
            l = c.length,
            f = 2 * l;
          if (r > n - f - 2) throw new Error("message too long");
          var p = h.alloc(n - r - f - 2),
            d = n - l - 1,
            m = i(l),
            y = s(h.concat([c, p, h.alloc(1, 1), e], d), a(m, d)),
            g = s(m, a(y, l));
          return new u(h.concat([h.alloc(1), g, y], n));
        })(d, e);
      else if (1 === f)
        p = (function(t, e, n) {
          var r,
            o = e.length,
            a = t.modulus.byteLength();
          if (o > a - 11) throw new Error("message too long");
          r = n
            ? h.alloc(a - o - 3, 255)
            : (function(t) {
                var e,
                  n = h.allocUnsafe(t),
                  r = 0,
                  o = i(2 * t),
                  a = 0;
                for (; r < t; )
                  a === o.length && ((o = i(2 * t)), (a = 0)),
                    (e = o[a++]) && (n[r++] = e);
                return n;
              })(a - o - 3);
          return new u(h.concat([h.from([0, n ? 1 : 2]), r, h.alloc(1), e], a));
        })(d, e, n);
      else {
        if (3 !== f) throw new Error("unknown padding");
        if ((p = new u(e)).cmp(d.modulus) >= 0)
          throw new Error("data too long for modulus");
      }
      return n ? l(p, d) : c(p, d);
    };
  },
  function(t, e, n) {
    var r = n(31),
      i = n(91),
      o = n(92),
      a = n(4),
      s = n(47),
      u = n(20),
      c = n(93),
      l = n(2).Buffer;
    t.exports = function(t, e, n) {
      var h;
      h = t.padding ? t.padding : n ? 1 : 4;
      var f,
        p = r(t),
        d = p.modulus.byteLength();
      if (e.length > d || new a(e).cmp(p.modulus) >= 0)
        throw new Error("decryption error");
      f = n ? c(new a(e), p) : s(e, p);
      var m = l.alloc(d - f.length);
      if (((f = l.concat([m, f], d)), 4 === h))
        return (function(t, e) {
          var n = t.modulus.byteLength(),
            r = u("sha1")
              .update(l.alloc(0))
              .digest(),
            a = r.length;
          if (0 !== e[0]) throw new Error("decryption error");
          var s = e.slice(1, a + 1),
            c = e.slice(a + 1),
            h = o(s, i(c, a)),
            f = o(c, i(h, n - a - 1));
          if (
            (function(t, e) {
              (t = l.from(t)), (e = l.from(e));
              var n = 0,
                r = t.length;
              t.length !== e.length &&
                (n++, (r = Math.min(t.length, e.length)));
              var i = -1;
              for (; ++i < r; ) n += t[i] ^ e[i];
              return n;
            })(r, f.slice(0, a))
          )
            throw new Error("decryption error");
          var p = a;
          for (; 0 === f[p]; ) p++;
          if (1 !== f[p++]) throw new Error("decryption error");
          return f.slice(p);
        })(p, f);
      if (1 === h)
        return (function(t, e, n) {
          var r = e.slice(0, 2),
            i = 2,
            o = 0;
          for (; 0 !== e[i++]; )
            if (i >= e.length) {
              o++;
              break;
            }
          var a = e.slice(2, i - 1);
          (("0002" !== r.toString("hex") && !n) ||
            ("0001" !== r.toString("hex") && n)) &&
            o++;
          a.length < 8 && o++;
          if (o) throw new Error("decryption error");
          return e.slice(i);
        })(0, f, n);
      if (3 === h) return f;
      throw new Error("unknown padding");
    };
  },
  function(t, e, n) {
    "use strict";
    (function(t, r) {
      function i() {
        throw new Error(
          "secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11"
        );
      }
      var o = n(2),
        a = n(17),
        s = o.Buffer,
        u = o.kMaxLength,
        c = t.crypto || t.msCrypto,
        l = Math.pow(2, 32) - 1;
      function h(t, e) {
        if ("number" != typeof t || t != t)
          throw new TypeError("offset must be a number");
        if (t > l || t < 0) throw new TypeError("offset must be a uint32");
        if (t > u || t > e) throw new RangeError("offset out of range");
      }
      function f(t, e, n) {
        if ("number" != typeof t || t != t)
          throw new TypeError("size must be a number");
        if (t > l || t < 0) throw new TypeError("size must be a uint32");
        if (t + e > n || t > u) throw new RangeError("buffer too small");
      }
      function p(t, e, n, i) {
        if (r.browser) {
          var o = t.buffer,
            s = new Uint8Array(o, e, n);
          return (
            c.getRandomValues(s),
            i
              ? void r.nextTick(function() {
                  i(null, t);
                })
              : t
          );
        }
        if (!i) return a(n).copy(t, e), t;
        a(n, function(n, r) {
          if (n) return i(n);
          r.copy(t, e), i(null, t);
        });
      }
      (c && c.getRandomValues) || !r.browser
        ? ((e.randomFill = function(e, n, r, i) {
            if (!(s.isBuffer(e) || e instanceof t.Uint8Array))
              throw new TypeError(
                '"buf" argument must be a Buffer or Uint8Array'
              );
            if ("function" == typeof n) (i = n), (n = 0), (r = e.length);
            else if ("function" == typeof r) (i = r), (r = e.length - n);
            else if ("function" != typeof i)
              throw new TypeError('"cb" argument must be a function');
            return h(n, e.length), f(r, n, e.length), p(e, n, r, i);
          }),
          (e.randomFillSync = function(e, n, r) {
            void 0 === n && (n = 0);
            if (!(s.isBuffer(e) || e instanceof t.Uint8Array))
              throw new TypeError(
                '"buf" argument must be a Buffer or Uint8Array'
              );
            h(n, e.length), void 0 === r && (r = e.length - n);
            return f(r, n, e.length), p(e, n, r);
          }))
        : ((e.randomFill = i), (e.randomFillSync = i));
    }.call(this, n(5), n(11)));
  },
  function(t, e) {},
  function(t, e) {},
  function(t, e) {},
  function(t, e) {},
  function(t, e, n) {
    "use strict";
    var r,
      i,
      o = n(195),
      a = o.Reader,
      s = o.Writer,
      u = o.util,
      c = o.roots.default || (o.roots.default = {});
    (c.tensorflow =
      (((i = {}).magenta =
        (((r = {}).NoteSequence = (function() {
          function t(t) {
            if (
              ((this.timeSignatures = []),
              (this.keySignatures = []),
              (this.tempos = []),
              (this.notes = []),
              (this.pitchBends = []),
              (this.controlChanges = []),
              (this.partInfos = []),
              (this.textAnnotations = []),
              (this.sectionAnnotations = []),
              (this.sectionGroups = []),
              t)
            )
              for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                null != t[e[n]] && (this[e[n]] = t[e[n]]);
          }
          var e, n;
          return (
            (t.prototype.id = ""),
            (t.prototype.filename = ""),
            (t.prototype.referenceNumber = u.Long
              ? u.Long.fromBits(0, 0, !1)
              : 0),
            (t.prototype.collectionName = ""),
            (t.prototype.ticksPerQuarter = 0),
            (t.prototype.timeSignatures = u.emptyArray),
            (t.prototype.keySignatures = u.emptyArray),
            (t.prototype.tempos = u.emptyArray),
            (t.prototype.notes = u.emptyArray),
            (t.prototype.totalTime = 0),
            (t.prototype.totalQuantizedSteps = u.Long
              ? u.Long.fromBits(0, 0, !1)
              : 0),
            (t.prototype.pitchBends = u.emptyArray),
            (t.prototype.controlChanges = u.emptyArray),
            (t.prototype.partInfos = u.emptyArray),
            (t.prototype.sourceInfo = null),
            (t.prototype.textAnnotations = u.emptyArray),
            (t.prototype.sectionAnnotations = u.emptyArray),
            (t.prototype.sectionGroups = u.emptyArray),
            (t.prototype.quantizationInfo = null),
            (t.prototype.subsequenceInfo = null),
            (t.prototype.sequenceMetadata = null),
            (t.create = function(e) {
              return new t(e);
            }),
            (t.encode = function(t, e) {
              if (
                (e || (e = s.create()),
                null != t.id &&
                  t.hasOwnProperty("id") &&
                  e.uint32(10).string(t.id),
                null != t.filename &&
                  t.hasOwnProperty("filename") &&
                  e.uint32(18).string(t.filename),
                null != t.collectionName &&
                  t.hasOwnProperty("collectionName") &&
                  e.uint32(26).string(t.collectionName),
                null != t.ticksPerQuarter &&
                  t.hasOwnProperty("ticksPerQuarter") &&
                  e.uint32(32).int32(t.ticksPerQuarter),
                null != t.timeSignatures && t.timeSignatures.length)
              )
                for (var n = 0; n < t.timeSignatures.length; ++n)
                  c.tensorflow.magenta.NoteSequence.TimeSignature.encode(
                    t.timeSignatures[n],
                    e.uint32(42).fork()
                  ).ldelim();
              if (null != t.keySignatures && t.keySignatures.length)
                for (n = 0; n < t.keySignatures.length; ++n)
                  c.tensorflow.magenta.NoteSequence.KeySignature.encode(
                    t.keySignatures[n],
                    e.uint32(50).fork()
                  ).ldelim();
              if (null != t.tempos && t.tempos.length)
                for (n = 0; n < t.tempos.length; ++n)
                  c.tensorflow.magenta.NoteSequence.Tempo.encode(
                    t.tempos[n],
                    e.uint32(58).fork()
                  ).ldelim();
              if (null != t.notes && t.notes.length)
                for (n = 0; n < t.notes.length; ++n)
                  c.tensorflow.magenta.NoteSequence.Note.encode(
                    t.notes[n],
                    e.uint32(66).fork()
                  ).ldelim();
              if (
                (null != t.totalTime &&
                  t.hasOwnProperty("totalTime") &&
                  e.uint32(73).double(t.totalTime),
                null != t.pitchBends && t.pitchBends.length)
              )
                for (n = 0; n < t.pitchBends.length; ++n)
                  c.tensorflow.magenta.NoteSequence.PitchBend.encode(
                    t.pitchBends[n],
                    e.uint32(82).fork()
                  ).ldelim();
              if (null != t.controlChanges && t.controlChanges.length)
                for (n = 0; n < t.controlChanges.length; ++n)
                  c.tensorflow.magenta.NoteSequence.ControlChange.encode(
                    t.controlChanges[n],
                    e.uint32(90).fork()
                  ).ldelim();
              if (null != t.partInfos && t.partInfos.length)
                for (n = 0; n < t.partInfos.length; ++n)
                  c.tensorflow.magenta.NoteSequence.PartInfo.encode(
                    t.partInfos[n],
                    e.uint32(98).fork()
                  ).ldelim();
              if (
                (null != t.sourceInfo &&
                  t.hasOwnProperty("sourceInfo") &&
                  c.tensorflow.magenta.NoteSequence.SourceInfo.encode(
                    t.sourceInfo,
                    e.uint32(106).fork()
                  ).ldelim(),
                null != t.textAnnotations && t.textAnnotations.length)
              )
                for (n = 0; n < t.textAnnotations.length; ++n)
                  c.tensorflow.magenta.NoteSequence.TextAnnotation.encode(
                    t.textAnnotations[n],
                    e.uint32(114).fork()
                  ).ldelim();
              if (
                (null != t.quantizationInfo &&
                  t.hasOwnProperty("quantizationInfo") &&
                  c.tensorflow.magenta.NoteSequence.QuantizationInfo.encode(
                    t.quantizationInfo,
                    e.uint32(122).fork()
                  ).ldelim(),
                null != t.totalQuantizedSteps &&
                  t.hasOwnProperty("totalQuantizedSteps") &&
                  e.uint32(128).int64(t.totalQuantizedSteps),
                null != t.subsequenceInfo &&
                  t.hasOwnProperty("subsequenceInfo") &&
                  c.tensorflow.magenta.NoteSequence.SubsequenceInfo.encode(
                    t.subsequenceInfo,
                    e.uint32(138).fork()
                  ).ldelim(),
                null != t.referenceNumber &&
                  t.hasOwnProperty("referenceNumber") &&
                  e.uint32(144).int64(t.referenceNumber),
                null != t.sequenceMetadata &&
                  t.hasOwnProperty("sequenceMetadata") &&
                  c.tensorflow.magenta.SequenceMetadata.encode(
                    t.sequenceMetadata,
                    e.uint32(154).fork()
                  ).ldelim(),
                null != t.sectionAnnotations && t.sectionAnnotations.length)
              )
                for (n = 0; n < t.sectionAnnotations.length; ++n)
                  c.tensorflow.magenta.NoteSequence.SectionAnnotation.encode(
                    t.sectionAnnotations[n],
                    e.uint32(162).fork()
                  ).ldelim();
              if (null != t.sectionGroups && t.sectionGroups.length)
                for (n = 0; n < t.sectionGroups.length; ++n)
                  c.tensorflow.magenta.NoteSequence.SectionGroup.encode(
                    t.sectionGroups[n],
                    e.uint32(170).fork()
                  ).ldelim();
              return e;
            }),
            (t.encodeDelimited = function(t, e) {
              return this.encode(t, e).ldelim();
            }),
            (t.decode = function(t, e) {
              t instanceof a || (t = a.create(t));
              for (
                var n = void 0 === e ? t.len : t.pos + e,
                  r = new c.tensorflow.magenta.NoteSequence();
                t.pos < n;

              ) {
                var i = t.uint32();
                switch (i >>> 3) {
                  case 1:
                    r.id = t.string();
                    break;
                  case 2:
                    r.filename = t.string();
                    break;
                  case 18:
                    r.referenceNumber = u.Long
                      ? t.int64().toNumber()
                      : t.int64();
                    break;
                  case 3:
                    r.collectionName = t.string();
                    break;
                  case 4:
                    r.ticksPerQuarter = t.int32();
                    break;
                  case 5:
                    (r.timeSignatures && r.timeSignatures.length) ||
                      (r.timeSignatures = []),
                      r.timeSignatures.push(
                        c.tensorflow.magenta.NoteSequence.TimeSignature.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 6:
                    (r.keySignatures && r.keySignatures.length) ||
                      (r.keySignatures = []),
                      r.keySignatures.push(
                        c.tensorflow.magenta.NoteSequence.KeySignature.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 7:
                    (r.tempos && r.tempos.length) || (r.tempos = []),
                      r.tempos.push(
                        c.tensorflow.magenta.NoteSequence.Tempo.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 8:
                    (r.notes && r.notes.length) || (r.notes = []),
                      r.notes.push(
                        c.tensorflow.magenta.NoteSequence.Note.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 9:
                    r.totalTime = t.double();
                    break;
                  case 16:
                    r.totalQuantizedSteps = u.Long
                      ? t.int64().toNumber()
                      : t.int64();
                    break;
                  case 10:
                    (r.pitchBends && r.pitchBends.length) ||
                      (r.pitchBends = []),
                      r.pitchBends.push(
                        c.tensorflow.magenta.NoteSequence.PitchBend.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 11:
                    (r.controlChanges && r.controlChanges.length) ||
                      (r.controlChanges = []),
                      r.controlChanges.push(
                        c.tensorflow.magenta.NoteSequence.ControlChange.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 12:
                    (r.partInfos && r.partInfos.length) || (r.partInfos = []),
                      r.partInfos.push(
                        c.tensorflow.magenta.NoteSequence.PartInfo.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 13:
                    r.sourceInfo = c.tensorflow.magenta.NoteSequence.SourceInfo.decode(
                      t,
                      t.uint32()
                    );
                    break;
                  case 14:
                    (r.textAnnotations && r.textAnnotations.length) ||
                      (r.textAnnotations = []),
                      r.textAnnotations.push(
                        c.tensorflow.magenta.NoteSequence.TextAnnotation.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 20:
                    (r.sectionAnnotations && r.sectionAnnotations.length) ||
                      (r.sectionAnnotations = []),
                      r.sectionAnnotations.push(
                        c.tensorflow.magenta.NoteSequence.SectionAnnotation.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 21:
                    (r.sectionGroups && r.sectionGroups.length) ||
                      (r.sectionGroups = []),
                      r.sectionGroups.push(
                        c.tensorflow.magenta.NoteSequence.SectionGroup.decode(
                          t,
                          t.uint32()
                        )
                      );
                    break;
                  case 15:
                    r.quantizationInfo = c.tensorflow.magenta.NoteSequence.QuantizationInfo.decode(
                      t,
                      t.uint32()
                    );
                    break;
                  case 17:
                    r.subsequenceInfo = c.tensorflow.magenta.NoteSequence.SubsequenceInfo.decode(
                      t,
                      t.uint32()
                    );
                    break;
                  case 19:
                    r.sequenceMetadata = c.tensorflow.magenta.SequenceMetadata.decode(
                      t,
                      t.uint32()
                    );
                    break;
                  default:
                    t.skipType(7 & i);
                }
              }
              return r;
            }),
            (t.decodeDelimited = function(t) {
              return (
                t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
              );
            }),
            (t.verify = function(t) {
              if ("object" != typeof t || null === t) return "object expected";
              if (null != t.id && t.hasOwnProperty("id") && !u.isString(t.id))
                return "id: string expected";
              if (
                null != t.filename &&
                t.hasOwnProperty("filename") &&
                !u.isString(t.filename)
              )
                return "filename: string expected";
              if (
                null != t.referenceNumber &&
                t.hasOwnProperty("referenceNumber") &&
                !(
                  u.isInteger(t.referenceNumber) ||
                  (t.referenceNumber &&
                    u.isInteger(t.referenceNumber.low) &&
                    u.isInteger(t.referenceNumber.high))
                )
              )
                return "referenceNumber: integer|Long expected";
              if (
                null != t.collectionName &&
                t.hasOwnProperty("collectionName") &&
                !u.isString(t.collectionName)
              )
                return "collectionName: string expected";
              if (
                null != t.ticksPerQuarter &&
                t.hasOwnProperty("ticksPerQuarter") &&
                !u.isInteger(t.ticksPerQuarter)
              )
                return "ticksPerQuarter: integer expected";
              if (
                null != t.timeSignatures &&
                t.hasOwnProperty("timeSignatures")
              ) {
                if (!Array.isArray(t.timeSignatures))
                  return "timeSignatures: array expected";
                for (var e = 0; e < t.timeSignatures.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.TimeSignature.verify(
                      t.timeSignatures[e]
                    ))
                  )
                    return "timeSignatures." + n;
              }
              if (
                null != t.keySignatures &&
                t.hasOwnProperty("keySignatures")
              ) {
                if (!Array.isArray(t.keySignatures))
                  return "keySignatures: array expected";
                for (e = 0; e < t.keySignatures.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.KeySignature.verify(
                      t.keySignatures[e]
                    ))
                  )
                    return "keySignatures." + n;
              }
              if (null != t.tempos && t.hasOwnProperty("tempos")) {
                if (!Array.isArray(t.tempos)) return "tempos: array expected";
                for (e = 0; e < t.tempos.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.Tempo.verify(
                      t.tempos[e]
                    ))
                  )
                    return "tempos." + n;
              }
              if (null != t.notes && t.hasOwnProperty("notes")) {
                if (!Array.isArray(t.notes)) return "notes: array expected";
                for (e = 0; e < t.notes.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.Note.verify(
                      t.notes[e]
                    ))
                  )
                    return "notes." + n;
              }
              if (
                null != t.totalTime &&
                t.hasOwnProperty("totalTime") &&
                "number" != typeof t.totalTime
              )
                return "totalTime: number expected";
              if (
                null != t.totalQuantizedSteps &&
                t.hasOwnProperty("totalQuantizedSteps") &&
                !(
                  u.isInteger(t.totalQuantizedSteps) ||
                  (t.totalQuantizedSteps &&
                    u.isInteger(t.totalQuantizedSteps.low) &&
                    u.isInteger(t.totalQuantizedSteps.high))
                )
              )
                return "totalQuantizedSteps: integer|Long expected";
              if (null != t.pitchBends && t.hasOwnProperty("pitchBends")) {
                if (!Array.isArray(t.pitchBends))
                  return "pitchBends: array expected";
                for (e = 0; e < t.pitchBends.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.PitchBend.verify(
                      t.pitchBends[e]
                    ))
                  )
                    return "pitchBends." + n;
              }
              if (
                null != t.controlChanges &&
                t.hasOwnProperty("controlChanges")
              ) {
                if (!Array.isArray(t.controlChanges))
                  return "controlChanges: array expected";
                for (e = 0; e < t.controlChanges.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.ControlChange.verify(
                      t.controlChanges[e]
                    ))
                  )
                    return "controlChanges." + n;
              }
              if (null != t.partInfos && t.hasOwnProperty("partInfos")) {
                if (!Array.isArray(t.partInfos))
                  return "partInfos: array expected";
                for (e = 0; e < t.partInfos.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.PartInfo.verify(
                      t.partInfos[e]
                    ))
                  )
                    return "partInfos." + n;
              }
              if (
                null != t.sourceInfo &&
                t.hasOwnProperty("sourceInfo") &&
                (n = c.tensorflow.magenta.NoteSequence.SourceInfo.verify(
                  t.sourceInfo
                ))
              )
                return "sourceInfo." + n;
              if (
                null != t.textAnnotations &&
                t.hasOwnProperty("textAnnotations")
              ) {
                if (!Array.isArray(t.textAnnotations))
                  return "textAnnotations: array expected";
                for (e = 0; e < t.textAnnotations.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.TextAnnotation.verify(
                      t.textAnnotations[e]
                    ))
                  )
                    return "textAnnotations." + n;
              }
              if (
                null != t.sectionAnnotations &&
                t.hasOwnProperty("sectionAnnotations")
              ) {
                if (!Array.isArray(t.sectionAnnotations))
                  return "sectionAnnotations: array expected";
                for (e = 0; e < t.sectionAnnotations.length; ++e)
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.SectionAnnotation.verify(
                      t.sectionAnnotations[e]
                    ))
                  )
                    return "sectionAnnotations." + n;
              }
              if (
                null != t.sectionGroups &&
                t.hasOwnProperty("sectionGroups")
              ) {
                if (!Array.isArray(t.sectionGroups))
                  return "sectionGroups: array expected";
                for (e = 0; e < t.sectionGroups.length; ++e) {
                  var n;
                  if (
                    (n = c.tensorflow.magenta.NoteSequence.SectionGroup.verify(
                      t.sectionGroups[e]
                    ))
                  )
                    return "sectionGroups." + n;
                }
              }
              return null != t.quantizationInfo &&
                t.hasOwnProperty("quantizationInfo") &&
                (n = c.tensorflow.magenta.NoteSequence.QuantizationInfo.verify(
                  t.quantizationInfo
                ))
                ? "quantizationInfo." + n
                : null != t.subsequenceInfo &&
                  t.hasOwnProperty("subsequenceInfo") &&
                  (n = c.tensorflow.magenta.NoteSequence.SubsequenceInfo.verify(
                    t.subsequenceInfo
                  ))
                ? "subsequenceInfo." + n
                : null != t.sequenceMetadata &&
                  t.hasOwnProperty("sequenceMetadata") &&
                  (n = c.tensorflow.magenta.SequenceMetadata.verify(
                    t.sequenceMetadata
                  ))
                ? "sequenceMetadata." + n
                : null;
            }),
            (t.fromObject = function(t) {
              if (t instanceof c.tensorflow.magenta.NoteSequence) return t;
              var e = new c.tensorflow.magenta.NoteSequence();
              if (
                (null != t.id && (e.id = String(t.id)),
                null != t.filename && (e.filename = String(t.filename)),
                null != t.referenceNumber &&
                  (u.Long
                    ? ((e.referenceNumber = u.Long.fromValue(
                        t.referenceNumber
                      )).unsigned = !1)
                    : "string" == typeof t.referenceNumber
                    ? (e.referenceNumber = parseInt(t.referenceNumber, 10))
                    : "number" == typeof t.referenceNumber
                    ? (e.referenceNumber = t.referenceNumber)
                    : "object" == typeof t.referenceNumber &&
                      (e.referenceNumber = new u.LongBits(
                        t.referenceNumber.low >>> 0,
                        t.referenceNumber.high >>> 0
                      ).toNumber())),
                null != t.collectionName &&
                  (e.collectionName = String(t.collectionName)),
                null != t.ticksPerQuarter &&
                  (e.ticksPerQuarter = 0 | t.ticksPerQuarter),
                t.timeSignatures)
              ) {
                if (!Array.isArray(t.timeSignatures))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.timeSignatures: array expected"
                  );
                e.timeSignatures = [];
                for (var n = 0; n < t.timeSignatures.length; ++n) {
                  if ("object" != typeof t.timeSignatures[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.timeSignatures: object expected"
                    );
                  e.timeSignatures[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.TimeSignature.fromObject(
                    t.timeSignatures[n]
                  );
                }
              }
              if (t.keySignatures) {
                if (!Array.isArray(t.keySignatures))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.keySignatures: array expected"
                  );
                for (
                  e.keySignatures = [], n = 0;
                  n < t.keySignatures.length;
                  ++n
                ) {
                  if ("object" != typeof t.keySignatures[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.keySignatures: object expected"
                    );
                  e.keySignatures[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.KeySignature.fromObject(
                    t.keySignatures[n]
                  );
                }
              }
              if (t.tempos) {
                if (!Array.isArray(t.tempos))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.tempos: array expected"
                  );
                for (e.tempos = [], n = 0; n < t.tempos.length; ++n) {
                  if ("object" != typeof t.tempos[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.tempos: object expected"
                    );
                  e.tempos[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.Tempo.fromObject(
                    t.tempos[n]
                  );
                }
              }
              if (t.notes) {
                if (!Array.isArray(t.notes))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.notes: array expected"
                  );
                for (e.notes = [], n = 0; n < t.notes.length; ++n) {
                  if ("object" != typeof t.notes[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.notes: object expected"
                    );
                  e.notes[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.Note.fromObject(
                    t.notes[n]
                  );
                }
              }
              if (
                (null != t.totalTime && (e.totalTime = Number(t.totalTime)),
                null != t.totalQuantizedSteps &&
                  (u.Long
                    ? ((e.totalQuantizedSteps = u.Long.fromValue(
                        t.totalQuantizedSteps
                      )).unsigned = !1)
                    : "string" == typeof t.totalQuantizedSteps
                    ? (e.totalQuantizedSteps = parseInt(
                        t.totalQuantizedSteps,
                        10
                      ))
                    : "number" == typeof t.totalQuantizedSteps
                    ? (e.totalQuantizedSteps = t.totalQuantizedSteps)
                    : "object" == typeof t.totalQuantizedSteps &&
                      (e.totalQuantizedSteps = new u.LongBits(
                        t.totalQuantizedSteps.low >>> 0,
                        t.totalQuantizedSteps.high >>> 0
                      ).toNumber())),
                t.pitchBends)
              ) {
                if (!Array.isArray(t.pitchBends))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.pitchBends: array expected"
                  );
                for (e.pitchBends = [], n = 0; n < t.pitchBends.length; ++n) {
                  if ("object" != typeof t.pitchBends[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.pitchBends: object expected"
                    );
                  e.pitchBends[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.PitchBend.fromObject(
                    t.pitchBends[n]
                  );
                }
              }
              if (t.controlChanges) {
                if (!Array.isArray(t.controlChanges))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.controlChanges: array expected"
                  );
                for (
                  e.controlChanges = [], n = 0;
                  n < t.controlChanges.length;
                  ++n
                ) {
                  if ("object" != typeof t.controlChanges[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.controlChanges: object expected"
                    );
                  e.controlChanges[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.ControlChange.fromObject(
                    t.controlChanges[n]
                  );
                }
              }
              if (t.partInfos) {
                if (!Array.isArray(t.partInfos))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.partInfos: array expected"
                  );
                for (e.partInfos = [], n = 0; n < t.partInfos.length; ++n) {
                  if ("object" != typeof t.partInfos[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.partInfos: object expected"
                    );
                  e.partInfos[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.PartInfo.fromObject(
                    t.partInfos[n]
                  );
                }
              }
              if (null != t.sourceInfo) {
                if ("object" != typeof t.sourceInfo)
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.sourceInfo: object expected"
                  );
                e.sourceInfo = c.tensorflow.magenta.NoteSequence.SourceInfo.fromObject(
                  t.sourceInfo
                );
              }
              if (t.textAnnotations) {
                if (!Array.isArray(t.textAnnotations))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.textAnnotations: array expected"
                  );
                for (
                  e.textAnnotations = [], n = 0;
                  n < t.textAnnotations.length;
                  ++n
                ) {
                  if ("object" != typeof t.textAnnotations[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.textAnnotations: object expected"
                    );
                  e.textAnnotations[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.TextAnnotation.fromObject(
                    t.textAnnotations[n]
                  );
                }
              }
              if (t.sectionAnnotations) {
                if (!Array.isArray(t.sectionAnnotations))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.sectionAnnotations: array expected"
                  );
                for (
                  e.sectionAnnotations = [], n = 0;
                  n < t.sectionAnnotations.length;
                  ++n
                ) {
                  if ("object" != typeof t.sectionAnnotations[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.sectionAnnotations: object expected"
                    );
                  e.sectionAnnotations[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.SectionAnnotation.fromObject(
                    t.sectionAnnotations[n]
                  );
                }
              }
              if (t.sectionGroups) {
                if (!Array.isArray(t.sectionGroups))
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.sectionGroups: array expected"
                  );
                for (
                  e.sectionGroups = [], n = 0;
                  n < t.sectionGroups.length;
                  ++n
                ) {
                  if ("object" != typeof t.sectionGroups[n])
                    throw TypeError(
                      ".tensorflow.magenta.NoteSequence.sectionGroups: object expected"
                    );
                  e.sectionGroups[
                    n
                  ] = c.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(
                    t.sectionGroups[n]
                  );
                }
              }
              if (null != t.quantizationInfo) {
                if ("object" != typeof t.quantizationInfo)
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.quantizationInfo: object expected"
                  );
                e.quantizationInfo = c.tensorflow.magenta.NoteSequence.QuantizationInfo.fromObject(
                  t.quantizationInfo
                );
              }
              if (null != t.subsequenceInfo) {
                if ("object" != typeof t.subsequenceInfo)
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.subsequenceInfo: object expected"
                  );
                e.subsequenceInfo = c.tensorflow.magenta.NoteSequence.SubsequenceInfo.fromObject(
                  t.subsequenceInfo
                );
              }
              if (null != t.sequenceMetadata) {
                if ("object" != typeof t.sequenceMetadata)
                  throw TypeError(
                    ".tensorflow.magenta.NoteSequence.sequenceMetadata: object expected"
                  );
                e.sequenceMetadata = c.tensorflow.magenta.SequenceMetadata.fromObject(
                  t.sequenceMetadata
                );
              }
              return e;
            }),
            (t.toObject = function(t, e) {
              e || (e = {});
              var n = {};
              if (
                ((e.arrays || e.defaults) &&
                  ((n.timeSignatures = []),
                  (n.keySignatures = []),
                  (n.tempos = []),
                  (n.notes = []),
                  (n.pitchBends = []),
                  (n.controlChanges = []),
                  (n.partInfos = []),
                  (n.textAnnotations = []),
                  (n.sectionAnnotations = []),
                  (n.sectionGroups = [])),
                e.defaults)
              ) {
                if (
                  ((n.id = ""),
                  (n.filename = ""),
                  (n.collectionName = ""),
                  (n.ticksPerQuarter = 0),
                  (n.totalTime = 0),
                  (n.sourceInfo = null),
                  (n.quantizationInfo = null),
                  u.Long)
                ) {
                  var r = new u.Long(0, 0, !1);
                  n.totalQuantizedSteps =
                    e.longs === String
                      ? r.toString()
                      : e.longs === Number
                      ? r.toNumber()
                      : r;
                } else n.totalQuantizedSteps = e.longs === String ? "0" : 0;
                (n.subsequenceInfo = null),
                  u.Long
                    ? ((r = new u.Long(0, 0, !1)),
                      (n.referenceNumber =
                        e.longs === String
                          ? r.toString()
                          : e.longs === Number
                          ? r.toNumber()
                          : r))
                    : (n.referenceNumber = e.longs === String ? "0" : 0),
                  (n.sequenceMetadata = null);
              }
              if (
                (null != t.id && t.hasOwnProperty("id") && (n.id = t.id),
                null != t.filename &&
                  t.hasOwnProperty("filename") &&
                  (n.filename = t.filename),
                null != t.collectionName &&
                  t.hasOwnProperty("collectionName") &&
                  (n.collectionName = t.collectionName),
                null != t.ticksPerQuarter &&
                  t.hasOwnProperty("ticksPerQuarter") &&
                  (n.ticksPerQuarter = t.ticksPerQuarter),
                t.timeSignatures && t.timeSignatures.length)
              ) {
                n.timeSignatures = [];
                for (var i = 0; i < t.timeSignatures.length; ++i)
                  n.timeSignatures[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.TimeSignature.toObject(
                    t.timeSignatures[i],
                    e
                  );
              }
              if (t.keySignatures && t.keySignatures.length)
                for (
                  n.keySignatures = [], i = 0;
                  i < t.keySignatures.length;
                  ++i
                )
                  n.keySignatures[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.KeySignature.toObject(
                    t.keySignatures[i],
                    e
                  );
              if (t.tempos && t.tempos.length)
                for (n.tempos = [], i = 0; i < t.tempos.length; ++i)
                  n.tempos[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.Tempo.toObject(
                    t.tempos[i],
                    e
                  );
              if (t.notes && t.notes.length)
                for (n.notes = [], i = 0; i < t.notes.length; ++i)
                  n.notes[i] = c.tensorflow.magenta.NoteSequence.Note.toObject(
                    t.notes[i],
                    e
                  );
              if (
                (null != t.totalTime &&
                  t.hasOwnProperty("totalTime") &&
                  (n.totalTime =
                    e.json && !isFinite(t.totalTime)
                      ? String(t.totalTime)
                      : t.totalTime),
                t.pitchBends && t.pitchBends.length)
              )
                for (n.pitchBends = [], i = 0; i < t.pitchBends.length; ++i)
                  n.pitchBends[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.PitchBend.toObject(
                    t.pitchBends[i],
                    e
                  );
              if (t.controlChanges && t.controlChanges.length)
                for (
                  n.controlChanges = [], i = 0;
                  i < t.controlChanges.length;
                  ++i
                )
                  n.controlChanges[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.ControlChange.toObject(
                    t.controlChanges[i],
                    e
                  );
              if (t.partInfos && t.partInfos.length)
                for (n.partInfos = [], i = 0; i < t.partInfos.length; ++i)
                  n.partInfos[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.PartInfo.toObject(
                    t.partInfos[i],
                    e
                  );
              if (
                (null != t.sourceInfo &&
                  t.hasOwnProperty("sourceInfo") &&
                  (n.sourceInfo = c.tensorflow.magenta.NoteSequence.SourceInfo.toObject(
                    t.sourceInfo,
                    e
                  )),
                t.textAnnotations && t.textAnnotations.length)
              )
                for (
                  n.textAnnotations = [], i = 0;
                  i < t.textAnnotations.length;
                  ++i
                )
                  n.textAnnotations[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.TextAnnotation.toObject(
                    t.textAnnotations[i],
                    e
                  );
              if (
                (null != t.quantizationInfo &&
                  t.hasOwnProperty("quantizationInfo") &&
                  (n.quantizationInfo = c.tensorflow.magenta.NoteSequence.QuantizationInfo.toObject(
                    t.quantizationInfo,
                    e
                  )),
                null != t.totalQuantizedSteps &&
                  t.hasOwnProperty("totalQuantizedSteps") &&
                  ("number" == typeof t.totalQuantizedSteps
                    ? (n.totalQuantizedSteps =
                        e.longs === String
                          ? String(t.totalQuantizedSteps)
                          : t.totalQuantizedSteps)
                    : (n.totalQuantizedSteps =
                        e.longs === String
                          ? u.Long.prototype.toString.call(
                              t.totalQuantizedSteps
                            )
                          : e.longs === Number
                          ? new u.LongBits(
                              t.totalQuantizedSteps.low >>> 0,
                              t.totalQuantizedSteps.high >>> 0
                            ).toNumber()
                          : t.totalQuantizedSteps)),
                null != t.subsequenceInfo &&
                  t.hasOwnProperty("subsequenceInfo") &&
                  (n.subsequenceInfo = c.tensorflow.magenta.NoteSequence.SubsequenceInfo.toObject(
                    t.subsequenceInfo,
                    e
                  )),
                null != t.referenceNumber &&
                  t.hasOwnProperty("referenceNumber") &&
                  ("number" == typeof t.referenceNumber
                    ? (n.referenceNumber =
                        e.longs === String
                          ? String(t.referenceNumber)
                          : t.referenceNumber)
                    : (n.referenceNumber =
                        e.longs === String
                          ? u.Long.prototype.toString.call(t.referenceNumber)
                          : e.longs === Number
                          ? new u.LongBits(
                              t.referenceNumber.low >>> 0,
                              t.referenceNumber.high >>> 0
                            ).toNumber()
                          : t.referenceNumber)),
                null != t.sequenceMetadata &&
                  t.hasOwnProperty("sequenceMetadata") &&
                  (n.sequenceMetadata = c.tensorflow.magenta.SequenceMetadata.toObject(
                    t.sequenceMetadata,
                    e
                  )),
                t.sectionAnnotations && t.sectionAnnotations.length)
              )
                for (
                  n.sectionAnnotations = [], i = 0;
                  i < t.sectionAnnotations.length;
                  ++i
                )
                  n.sectionAnnotations[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.SectionAnnotation.toObject(
                    t.sectionAnnotations[i],
                    e
                  );
              if (t.sectionGroups && t.sectionGroups.length)
                for (
                  n.sectionGroups = [], i = 0;
                  i < t.sectionGroups.length;
                  ++i
                )
                  n.sectionGroups[
                    i
                  ] = c.tensorflow.magenta.NoteSequence.SectionGroup.toObject(
                    t.sectionGroups[i],
                    e
                  );
              return n;
            }),
            (t.prototype.toJSON = function() {
              return this.constructor.toObject(this, o.util.toJSONOptions);
            }),
            (t.Note = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.pitch = 0),
                (t.prototype.pitchName = 0),
                (t.prototype.velocity = 0),
                (t.prototype.startTime = 0),
                (t.prototype.quantizedStartStep = u.Long
                  ? u.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.endTime = 0),
                (t.prototype.quantizedEndStep = u.Long
                  ? u.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.numerator = 0),
                (t.prototype.denominator = 0),
                (t.prototype.instrument = 0),
                (t.prototype.program = 0),
                (t.prototype.isDrum = !1),
                (t.prototype.part = 0),
                (t.prototype.voice = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.pitch &&
                      t.hasOwnProperty("pitch") &&
                      e.uint32(8).int32(t.pitch),
                    null != t.velocity &&
                      t.hasOwnProperty("velocity") &&
                      e.uint32(16).int32(t.velocity),
                    null != t.startTime &&
                      t.hasOwnProperty("startTime") &&
                      e.uint32(25).double(t.startTime),
                    null != t.endTime &&
                      t.hasOwnProperty("endTime") &&
                      e.uint32(33).double(t.endTime),
                    null != t.numerator &&
                      t.hasOwnProperty("numerator") &&
                      e.uint32(40).int32(t.numerator),
                    null != t.denominator &&
                      t.hasOwnProperty("denominator") &&
                      e.uint32(48).int32(t.denominator),
                    null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      e.uint32(56).int32(t.instrument),
                    null != t.program &&
                      t.hasOwnProperty("program") &&
                      e.uint32(64).int32(t.program),
                    null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      e.uint32(72).bool(t.isDrum),
                    null != t.part &&
                      t.hasOwnProperty("part") &&
                      e.uint32(80).int32(t.part),
                    null != t.pitchName &&
                      t.hasOwnProperty("pitchName") &&
                      e.uint32(88).int32(t.pitchName),
                    null != t.voice &&
                      t.hasOwnProperty("voice") &&
                      e.uint32(96).int32(t.voice),
                    null != t.quantizedStartStep &&
                      t.hasOwnProperty("quantizedStartStep") &&
                      e.uint32(104).int64(t.quantizedStartStep),
                    null != t.quantizedEndStep &&
                      t.hasOwnProperty("quantizedEndStep") &&
                      e.uint32(112).int64(t.quantizedEndStep),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.Note();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.pitch = t.int32();
                        break;
                      case 11:
                        r.pitchName = t.int32();
                        break;
                      case 2:
                        r.velocity = t.int32();
                        break;
                      case 3:
                        r.startTime = t.double();
                        break;
                      case 13:
                        r.quantizedStartStep = u.Long
                          ? t.int64().toNumber()
                          : t.int64();
                        break;
                      case 4:
                        r.endTime = t.double();
                        break;
                      case 14:
                        r.quantizedEndStep = u.Long
                          ? t.int64().toNumber()
                          : t.int64();
                        break;
                      case 5:
                        r.numerator = t.int32();
                        break;
                      case 6:
                        r.denominator = t.int32();
                        break;
                      case 7:
                        r.instrument = t.int32();
                        break;
                      case 8:
                        r.program = t.int32();
                        break;
                      case 9:
                        r.isDrum = t.bool();
                        break;
                      case 10:
                        r.part = t.int32();
                        break;
                      case 12:
                        r.voice = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  if (
                    null != t.pitch &&
                    t.hasOwnProperty("pitch") &&
                    !u.isInteger(t.pitch)
                  )
                    return "pitch: integer expected";
                  if (null != t.pitchName && t.hasOwnProperty("pitchName"))
                    switch (t.pitchName) {
                      default:
                        return "pitchName: enum value expected";
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                      case 5:
                      case 6:
                      case 7:
                      case 8:
                      case 9:
                      case 10:
                      case 11:
                      case 12:
                      case 13:
                      case 14:
                      case 15:
                      case 16:
                      case 17:
                      case 18:
                      case 19:
                      case 20:
                      case 21:
                      case 22:
                      case 23:
                      case 24:
                      case 25:
                      case 26:
                      case 27:
                      case 28:
                      case 29:
                      case 30:
                      case 31:
                      case 32:
                      case 33:
                      case 34:
                      case 35:
                    }
                  return null != t.velocity &&
                    t.hasOwnProperty("velocity") &&
                    !u.isInteger(t.velocity)
                    ? "velocity: integer expected"
                    : null != t.startTime &&
                      t.hasOwnProperty("startTime") &&
                      "number" != typeof t.startTime
                    ? "startTime: number expected"
                    : null != t.quantizedStartStep &&
                      t.hasOwnProperty("quantizedStartStep") &&
                      !(
                        u.isInteger(t.quantizedStartStep) ||
                        (t.quantizedStartStep &&
                          u.isInteger(t.quantizedStartStep.low) &&
                          u.isInteger(t.quantizedStartStep.high))
                      )
                    ? "quantizedStartStep: integer|Long expected"
                    : null != t.endTime &&
                      t.hasOwnProperty("endTime") &&
                      "number" != typeof t.endTime
                    ? "endTime: number expected"
                    : null != t.quantizedEndStep &&
                      t.hasOwnProperty("quantizedEndStep") &&
                      !(
                        u.isInteger(t.quantizedEndStep) ||
                        (t.quantizedEndStep &&
                          u.isInteger(t.quantizedEndStep.low) &&
                          u.isInteger(t.quantizedEndStep.high))
                      )
                    ? "quantizedEndStep: integer|Long expected"
                    : null != t.numerator &&
                      t.hasOwnProperty("numerator") &&
                      !u.isInteger(t.numerator)
                    ? "numerator: integer expected"
                    : null != t.denominator &&
                      t.hasOwnProperty("denominator") &&
                      !u.isInteger(t.denominator)
                    ? "denominator: integer expected"
                    : null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      !u.isInteger(t.instrument)
                    ? "instrument: integer expected"
                    : null != t.program &&
                      t.hasOwnProperty("program") &&
                      !u.isInteger(t.program)
                    ? "program: integer expected"
                    : null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      "boolean" != typeof t.isDrum
                    ? "isDrum: boolean expected"
                    : null != t.part &&
                      t.hasOwnProperty("part") &&
                      !u.isInteger(t.part)
                    ? "part: integer expected"
                    : null != t.voice &&
                      t.hasOwnProperty("voice") &&
                      !u.isInteger(t.voice)
                    ? "voice: integer expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (t instanceof c.tensorflow.magenta.NoteSequence.Note)
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.Note();
                  switch (
                    (null != t.pitch && (e.pitch = 0 | t.pitch), t.pitchName)
                  ) {
                    case "UNKNOWN_PITCH_NAME":
                    case 0:
                      e.pitchName = 0;
                      break;
                    case "F_FLAT_FLAT":
                    case 1:
                      e.pitchName = 1;
                      break;
                    case "C_FLAT_FLAT":
                    case 2:
                      e.pitchName = 2;
                      break;
                    case "G_FLAT_FLAT":
                    case 3:
                      e.pitchName = 3;
                      break;
                    case "D_FLAT_FLAT":
                    case 4:
                      e.pitchName = 4;
                      break;
                    case "A_FLAT_FLAT":
                    case 5:
                      e.pitchName = 5;
                      break;
                    case "E_FLAT_FLAT":
                    case 6:
                      e.pitchName = 6;
                      break;
                    case "B_FLAT_FLAT":
                    case 7:
                      e.pitchName = 7;
                      break;
                    case "F_FLAT":
                    case 8:
                      e.pitchName = 8;
                      break;
                    case "C_FLAT":
                    case 9:
                      e.pitchName = 9;
                      break;
                    case "G_FLAT":
                    case 10:
                      e.pitchName = 10;
                      break;
                    case "D_FLAT":
                    case 11:
                      e.pitchName = 11;
                      break;
                    case "A_FLAT":
                    case 12:
                      e.pitchName = 12;
                      break;
                    case "E_FLAT":
                    case 13:
                      e.pitchName = 13;
                      break;
                    case "B_FLAT":
                    case 14:
                      e.pitchName = 14;
                      break;
                    case "F":
                    case 15:
                      e.pitchName = 15;
                      break;
                    case "C":
                    case 16:
                      e.pitchName = 16;
                      break;
                    case "G":
                    case 17:
                      e.pitchName = 17;
                      break;
                    case "D":
                    case 18:
                      e.pitchName = 18;
                      break;
                    case "A":
                    case 19:
                      e.pitchName = 19;
                      break;
                    case "E":
                    case 20:
                      e.pitchName = 20;
                      break;
                    case "B":
                    case 21:
                      e.pitchName = 21;
                      break;
                    case "F_SHARP":
                    case 22:
                      e.pitchName = 22;
                      break;
                    case "C_SHARP":
                    case 23:
                      e.pitchName = 23;
                      break;
                    case "G_SHARP":
                    case 24:
                      e.pitchName = 24;
                      break;
                    case "D_SHARP":
                    case 25:
                      e.pitchName = 25;
                      break;
                    case "A_SHARP":
                    case 26:
                      e.pitchName = 26;
                      break;
                    case "E_SHARP":
                    case 27:
                      e.pitchName = 27;
                      break;
                    case "B_SHARP":
                    case 28:
                      e.pitchName = 28;
                      break;
                    case "F_SHARP_SHARP":
                    case 29:
                      e.pitchName = 29;
                      break;
                    case "C_SHARP_SHARP":
                    case 30:
                      e.pitchName = 30;
                      break;
                    case "G_SHARP_SHARP":
                    case 31:
                      e.pitchName = 31;
                      break;
                    case "D_SHARP_SHARP":
                    case 32:
                      e.pitchName = 32;
                      break;
                    case "A_SHARP_SHARP":
                    case 33:
                      e.pitchName = 33;
                      break;
                    case "E_SHARP_SHARP":
                    case 34:
                      e.pitchName = 34;
                      break;
                    case "B_SHARP_SHARP":
                    case 35:
                      e.pitchName = 35;
                  }
                  return (
                    null != t.velocity && (e.velocity = 0 | t.velocity),
                    null != t.startTime && (e.startTime = Number(t.startTime)),
                    null != t.quantizedStartStep &&
                      (u.Long
                        ? ((e.quantizedStartStep = u.Long.fromValue(
                            t.quantizedStartStep
                          )).unsigned = !1)
                        : "string" == typeof t.quantizedStartStep
                        ? (e.quantizedStartStep = parseInt(
                            t.quantizedStartStep,
                            10
                          ))
                        : "number" == typeof t.quantizedStartStep
                        ? (e.quantizedStartStep = t.quantizedStartStep)
                        : "object" == typeof t.quantizedStartStep &&
                          (e.quantizedStartStep = new u.LongBits(
                            t.quantizedStartStep.low >>> 0,
                            t.quantizedStartStep.high >>> 0
                          ).toNumber())),
                    null != t.endTime && (e.endTime = Number(t.endTime)),
                    null != t.quantizedEndStep &&
                      (u.Long
                        ? ((e.quantizedEndStep = u.Long.fromValue(
                            t.quantizedEndStep
                          )).unsigned = !1)
                        : "string" == typeof t.quantizedEndStep
                        ? (e.quantizedEndStep = parseInt(
                            t.quantizedEndStep,
                            10
                          ))
                        : "number" == typeof t.quantizedEndStep
                        ? (e.quantizedEndStep = t.quantizedEndStep)
                        : "object" == typeof t.quantizedEndStep &&
                          (e.quantizedEndStep = new u.LongBits(
                            t.quantizedEndStep.low >>> 0,
                            t.quantizedEndStep.high >>> 0
                          ).toNumber())),
                    null != t.numerator && (e.numerator = 0 | t.numerator),
                    null != t.denominator &&
                      (e.denominator = 0 | t.denominator),
                    null != t.instrument && (e.instrument = 0 | t.instrument),
                    null != t.program && (e.program = 0 | t.program),
                    null != t.isDrum && (e.isDrum = Boolean(t.isDrum)),
                    null != t.part && (e.part = 0 | t.part),
                    null != t.voice && (e.voice = 0 | t.voice),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  if (e.defaults) {
                    if (
                      ((n.pitch = 0),
                      (n.velocity = 0),
                      (n.startTime = 0),
                      (n.endTime = 0),
                      (n.numerator = 0),
                      (n.denominator = 0),
                      (n.instrument = 0),
                      (n.program = 0),
                      (n.isDrum = !1),
                      (n.part = 0),
                      (n.pitchName =
                        e.enums === String ? "UNKNOWN_PITCH_NAME" : 0),
                      (n.voice = 0),
                      u.Long)
                    ) {
                      var r = new u.Long(0, 0, !1);
                      n.quantizedStartStep =
                        e.longs === String
                          ? r.toString()
                          : e.longs === Number
                          ? r.toNumber()
                          : r;
                    } else n.quantizedStartStep = e.longs === String ? "0" : 0;
                    u.Long
                      ? ((r = new u.Long(0, 0, !1)),
                        (n.quantizedEndStep =
                          e.longs === String
                            ? r.toString()
                            : e.longs === Number
                            ? r.toNumber()
                            : r))
                      : (n.quantizedEndStep = e.longs === String ? "0" : 0);
                  }
                  return (
                    null != t.pitch &&
                      t.hasOwnProperty("pitch") &&
                      (n.pitch = t.pitch),
                    null != t.velocity &&
                      t.hasOwnProperty("velocity") &&
                      (n.velocity = t.velocity),
                    null != t.startTime &&
                      t.hasOwnProperty("startTime") &&
                      (n.startTime =
                        e.json && !isFinite(t.startTime)
                          ? String(t.startTime)
                          : t.startTime),
                    null != t.endTime &&
                      t.hasOwnProperty("endTime") &&
                      (n.endTime =
                        e.json && !isFinite(t.endTime)
                          ? String(t.endTime)
                          : t.endTime),
                    null != t.numerator &&
                      t.hasOwnProperty("numerator") &&
                      (n.numerator = t.numerator),
                    null != t.denominator &&
                      t.hasOwnProperty("denominator") &&
                      (n.denominator = t.denominator),
                    null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      (n.instrument = t.instrument),
                    null != t.program &&
                      t.hasOwnProperty("program") &&
                      (n.program = t.program),
                    null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      (n.isDrum = t.isDrum),
                    null != t.part &&
                      t.hasOwnProperty("part") &&
                      (n.part = t.part),
                    null != t.pitchName &&
                      t.hasOwnProperty("pitchName") &&
                      (n.pitchName =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.PitchName[
                              t.pitchName
                            ]
                          : t.pitchName),
                    null != t.voice &&
                      t.hasOwnProperty("voice") &&
                      (n.voice = t.voice),
                    null != t.quantizedStartStep &&
                      t.hasOwnProperty("quantizedStartStep") &&
                      ("number" == typeof t.quantizedStartStep
                        ? (n.quantizedStartStep =
                            e.longs === String
                              ? String(t.quantizedStartStep)
                              : t.quantizedStartStep)
                        : (n.quantizedStartStep =
                            e.longs === String
                              ? u.Long.prototype.toString.call(
                                  t.quantizedStartStep
                                )
                              : e.longs === Number
                              ? new u.LongBits(
                                  t.quantizedStartStep.low >>> 0,
                                  t.quantizedStartStep.high >>> 0
                                ).toNumber()
                              : t.quantizedStartStep)),
                    null != t.quantizedEndStep &&
                      t.hasOwnProperty("quantizedEndStep") &&
                      ("number" == typeof t.quantizedEndStep
                        ? (n.quantizedEndStep =
                            e.longs === String
                              ? String(t.quantizedEndStep)
                              : t.quantizedEndStep)
                        : (n.quantizedEndStep =
                            e.longs === String
                              ? u.Long.prototype.toString.call(
                                  t.quantizedEndStep
                                )
                              : e.longs === Number
                              ? new u.LongBits(
                                  t.quantizedEndStep.low >>> 0,
                                  t.quantizedEndStep.high >>> 0
                                ).toNumber()
                              : t.quantizedEndStep)),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.PitchName =
              ((e = {}),
              ((n = Object.create(e))[(e[0] = "UNKNOWN_PITCH_NAME")] = 0),
              (n[(e[1] = "F_FLAT_FLAT")] = 1),
              (n[(e[2] = "C_FLAT_FLAT")] = 2),
              (n[(e[3] = "G_FLAT_FLAT")] = 3),
              (n[(e[4] = "D_FLAT_FLAT")] = 4),
              (n[(e[5] = "A_FLAT_FLAT")] = 5),
              (n[(e[6] = "E_FLAT_FLAT")] = 6),
              (n[(e[7] = "B_FLAT_FLAT")] = 7),
              (n[(e[8] = "F_FLAT")] = 8),
              (n[(e[9] = "C_FLAT")] = 9),
              (n[(e[10] = "G_FLAT")] = 10),
              (n[(e[11] = "D_FLAT")] = 11),
              (n[(e[12] = "A_FLAT")] = 12),
              (n[(e[13] = "E_FLAT")] = 13),
              (n[(e[14] = "B_FLAT")] = 14),
              (n[(e[15] = "F")] = 15),
              (n[(e[16] = "C")] = 16),
              (n[(e[17] = "G")] = 17),
              (n[(e[18] = "D")] = 18),
              (n[(e[19] = "A")] = 19),
              (n[(e[20] = "E")] = 20),
              (n[(e[21] = "B")] = 21),
              (n[(e[22] = "F_SHARP")] = 22),
              (n[(e[23] = "C_SHARP")] = 23),
              (n[(e[24] = "G_SHARP")] = 24),
              (n[(e[25] = "D_SHARP")] = 25),
              (n[(e[26] = "A_SHARP")] = 26),
              (n[(e[27] = "E_SHARP")] = 27),
              (n[(e[28] = "B_SHARP")] = 28),
              (n[(e[29] = "F_SHARP_SHARP")] = 29),
              (n[(e[30] = "C_SHARP_SHARP")] = 30),
              (n[(e[31] = "G_SHARP_SHARP")] = 31),
              (n[(e[32] = "D_SHARP_SHARP")] = 32),
              (n[(e[33] = "A_SHARP_SHARP")] = 33),
              (n[(e[34] = "E_SHARP_SHARP")] = 34),
              (n[(e[35] = "B_SHARP_SHARP")] = 35),
              n)),
            (t.TimeSignature = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.numerator = 0),
                (t.prototype.denominator = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.numerator &&
                      t.hasOwnProperty("numerator") &&
                      e.uint32(16).int32(t.numerator),
                    null != t.denominator &&
                      t.hasOwnProperty("denominator") &&
                      e.uint32(24).int32(t.denominator),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.TimeSignature();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 2:
                        r.numerator = t.int32();
                        break;
                      case 3:
                        r.denominator = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.time &&
                      t.hasOwnProperty("time") &&
                      "number" != typeof t.time
                    ? "time: number expected"
                    : null != t.numerator &&
                      t.hasOwnProperty("numerator") &&
                      !u.isInteger(t.numerator)
                    ? "numerator: integer expected"
                    : null != t.denominator &&
                      t.hasOwnProperty("denominator") &&
                      !u.isInteger(t.denominator)
                    ? "denominator: integer expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof c.tensorflow.magenta.NoteSequence.TimeSignature
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.TimeSignature();
                  return (
                    null != t.time && (e.time = Number(t.time)),
                    null != t.numerator && (e.numerator = 0 | t.numerator),
                    null != t.denominator &&
                      (e.denominator = 0 | t.denominator),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults &&
                      ((n.time = 0), (n.numerator = 0), (n.denominator = 0)),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.numerator &&
                      t.hasOwnProperty("numerator") &&
                      (n.numerator = t.numerator),
                    null != t.denominator &&
                      t.hasOwnProperty("denominator") &&
                      (n.denominator = t.denominator),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.KeySignature = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.key = 0),
                (t.prototype.mode = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.key &&
                      t.hasOwnProperty("key") &&
                      e.uint32(16).int32(t.key),
                    null != t.mode &&
                      t.hasOwnProperty("mode") &&
                      e.uint32(24).int32(t.mode),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.KeySignature();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 2:
                        r.key = t.int32();
                        break;
                      case 3:
                        r.mode = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  if (
                    null != t.time &&
                    t.hasOwnProperty("time") &&
                    "number" != typeof t.time
                  )
                    return "time: number expected";
                  if (null != t.key && t.hasOwnProperty("key"))
                    switch (t.key) {
                      default:
                        return "key: enum value expected";
                      case 0:
                      case 1:
                      case 1:
                      case 2:
                      case 3:
                      case 3:
                      case 4:
                      case 5:
                      case 6:
                      case 6:
                      case 7:
                      case 8:
                      case 8:
                      case 9:
                      case 10:
                      case 10:
                      case 11:
                    }
                  if (null != t.mode && t.hasOwnProperty("mode"))
                    switch (t.mode) {
                      default:
                        return "mode: enum value expected";
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                      case 5:
                      case 6:
                      case 7:
                    }
                  return null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof c.tensorflow.magenta.NoteSequence.KeySignature
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.KeySignature();
                  switch (
                    (null != t.time && (e.time = Number(t.time)), t.key)
                  ) {
                    case "C":
                    case 0:
                      e.key = 0;
                      break;
                    case "C_SHARP":
                    case 1:
                      e.key = 1;
                      break;
                    case "D_FLAT":
                    case 1:
                      e.key = 1;
                      break;
                    case "D":
                    case 2:
                      e.key = 2;
                      break;
                    case "D_SHARP":
                    case 3:
                      e.key = 3;
                      break;
                    case "E_FLAT":
                    case 3:
                      e.key = 3;
                      break;
                    case "E":
                    case 4:
                      e.key = 4;
                      break;
                    case "F":
                    case 5:
                      e.key = 5;
                      break;
                    case "F_SHARP":
                    case 6:
                      e.key = 6;
                      break;
                    case "G_FLAT":
                    case 6:
                      e.key = 6;
                      break;
                    case "G":
                    case 7:
                      e.key = 7;
                      break;
                    case "G_SHARP":
                    case 8:
                      e.key = 8;
                      break;
                    case "A_FLAT":
                    case 8:
                      e.key = 8;
                      break;
                    case "A":
                    case 9:
                      e.key = 9;
                      break;
                    case "A_SHARP":
                    case 10:
                      e.key = 10;
                      break;
                    case "B_FLAT":
                    case 10:
                      e.key = 10;
                      break;
                    case "B":
                    case 11:
                      e.key = 11;
                  }
                  switch (t.mode) {
                    case "MAJOR":
                    case 0:
                      e.mode = 0;
                      break;
                    case "MINOR":
                    case 1:
                      e.mode = 1;
                      break;
                    case "NOT_SPECIFIED":
                    case 2:
                      e.mode = 2;
                      break;
                    case "MIXOLYDIAN":
                    case 3:
                      e.mode = 3;
                      break;
                    case "DORIAN":
                    case 4:
                      e.mode = 4;
                      break;
                    case "PHRYGIAN":
                    case 5:
                      e.mode = 5;
                      break;
                    case "LYDIAN":
                    case 6:
                      e.mode = 6;
                      break;
                    case "LOCRIAN":
                    case 7:
                      e.mode = 7;
                  }
                  return e;
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults &&
                      ((n.time = 0),
                      (n.key = e.enums === String ? "C" : 0),
                      (n.mode = e.enums === String ? "MAJOR" : 0)),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.key &&
                      t.hasOwnProperty("key") &&
                      (n.key =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.KeySignature.Key[
                              t.key
                            ]
                          : t.key),
                    null != t.mode &&
                      t.hasOwnProperty("mode") &&
                      (n.mode =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.KeySignature.Mode[
                              t.mode
                            ]
                          : t.mode),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                (t.Key = (function() {
                  var t = {},
                    e = Object.create(t);
                  return (
                    (e[(t[0] = "C")] = 0),
                    (e[(t[1] = "C_SHARP")] = 1),
                    (e.D_FLAT = 1),
                    (e[(t[2] = "D")] = 2),
                    (e[(t[3] = "D_SHARP")] = 3),
                    (e.E_FLAT = 3),
                    (e[(t[4] = "E")] = 4),
                    (e[(t[5] = "F")] = 5),
                    (e[(t[6] = "F_SHARP")] = 6),
                    (e.G_FLAT = 6),
                    (e[(t[7] = "G")] = 7),
                    (e[(t[8] = "G_SHARP")] = 8),
                    (e.A_FLAT = 8),
                    (e[(t[9] = "A")] = 9),
                    (e[(t[10] = "A_SHARP")] = 10),
                    (e.B_FLAT = 10),
                    (e[(t[11] = "B")] = 11),
                    e
                  );
                })()),
                (t.Mode = (function() {
                  var t = {},
                    e = Object.create(t);
                  return (
                    (e[(t[0] = "MAJOR")] = 0),
                    (e[(t[1] = "MINOR")] = 1),
                    (e[(t[2] = "NOT_SPECIFIED")] = 2),
                    (e[(t[3] = "MIXOLYDIAN")] = 3),
                    (e[(t[4] = "DORIAN")] = 4),
                    (e[(t[5] = "PHRYGIAN")] = 5),
                    (e[(t[6] = "LYDIAN")] = 6),
                    (e[(t[7] = "LOCRIAN")] = 7),
                    e
                  );
                })()),
                t
              );
            })()),
            (t.Tempo = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.qpm = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.qpm &&
                      t.hasOwnProperty("qpm") &&
                      e.uint32(17).double(t.qpm),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.Tempo();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 2:
                        r.qpm = t.double();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.time &&
                      t.hasOwnProperty("time") &&
                      "number" != typeof t.time
                    ? "time: number expected"
                    : null != t.qpm &&
                      t.hasOwnProperty("qpm") &&
                      "number" != typeof t.qpm
                    ? "qpm: number expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (t instanceof c.tensorflow.magenta.NoteSequence.Tempo)
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.Tempo();
                  return (
                    null != t.time && (e.time = Number(t.time)),
                    null != t.qpm && (e.qpm = Number(t.qpm)),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults && ((n.time = 0), (n.qpm = 0)),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.qpm &&
                      t.hasOwnProperty("qpm") &&
                      (n.qpm =
                        e.json && !isFinite(t.qpm) ? String(t.qpm) : t.qpm),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.PitchBend = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.bend = 0),
                (t.prototype.instrument = 0),
                (t.prototype.program = 0),
                (t.prototype.isDrum = !1),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.bend &&
                      t.hasOwnProperty("bend") &&
                      e.uint32(16).int32(t.bend),
                    null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      e.uint32(24).int32(t.instrument),
                    null != t.program &&
                      t.hasOwnProperty("program") &&
                      e.uint32(32).int32(t.program),
                    null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      e.uint32(40).bool(t.isDrum),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.PitchBend();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 2:
                        r.bend = t.int32();
                        break;
                      case 3:
                        r.instrument = t.int32();
                        break;
                      case 4:
                        r.program = t.int32();
                        break;
                      case 5:
                        r.isDrum = t.bool();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.time &&
                      t.hasOwnProperty("time") &&
                      "number" != typeof t.time
                    ? "time: number expected"
                    : null != t.bend &&
                      t.hasOwnProperty("bend") &&
                      !u.isInteger(t.bend)
                    ? "bend: integer expected"
                    : null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      !u.isInteger(t.instrument)
                    ? "instrument: integer expected"
                    : null != t.program &&
                      t.hasOwnProperty("program") &&
                      !u.isInteger(t.program)
                    ? "program: integer expected"
                    : null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      "boolean" != typeof t.isDrum
                    ? "isDrum: boolean expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (t instanceof c.tensorflow.magenta.NoteSequence.PitchBend)
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.PitchBend();
                  return (
                    null != t.time && (e.time = Number(t.time)),
                    null != t.bend && (e.bend = 0 | t.bend),
                    null != t.instrument && (e.instrument = 0 | t.instrument),
                    null != t.program && (e.program = 0 | t.program),
                    null != t.isDrum && (e.isDrum = Boolean(t.isDrum)),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults &&
                      ((n.time = 0),
                      (n.bend = 0),
                      (n.instrument = 0),
                      (n.program = 0),
                      (n.isDrum = !1)),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.bend &&
                      t.hasOwnProperty("bend") &&
                      (n.bend = t.bend),
                    null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      (n.instrument = t.instrument),
                    null != t.program &&
                      t.hasOwnProperty("program") &&
                      (n.program = t.program),
                    null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      (n.isDrum = t.isDrum),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.ControlChange = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.quantizedStep = u.Long
                  ? u.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.controlNumber = 0),
                (t.prototype.controlValue = 0),
                (t.prototype.instrument = 0),
                (t.prototype.program = 0),
                (t.prototype.isDrum = !1),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.controlNumber &&
                      t.hasOwnProperty("controlNumber") &&
                      e.uint32(16).int32(t.controlNumber),
                    null != t.controlValue &&
                      t.hasOwnProperty("controlValue") &&
                      e.uint32(24).int32(t.controlValue),
                    null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      e.uint32(32).int32(t.instrument),
                    null != t.program &&
                      t.hasOwnProperty("program") &&
                      e.uint32(40).int32(t.program),
                    null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      e.uint32(48).bool(t.isDrum),
                    null != t.quantizedStep &&
                      t.hasOwnProperty("quantizedStep") &&
                      e.uint32(56).int64(t.quantizedStep),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.ControlChange();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 7:
                        r.quantizedStep = u.Long
                          ? t.int64().toNumber()
                          : t.int64();
                        break;
                      case 2:
                        r.controlNumber = t.int32();
                        break;
                      case 3:
                        r.controlValue = t.int32();
                        break;
                      case 4:
                        r.instrument = t.int32();
                        break;
                      case 5:
                        r.program = t.int32();
                        break;
                      case 6:
                        r.isDrum = t.bool();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.time &&
                      t.hasOwnProperty("time") &&
                      "number" != typeof t.time
                    ? "time: number expected"
                    : null != t.quantizedStep &&
                      t.hasOwnProperty("quantizedStep") &&
                      !(
                        u.isInteger(t.quantizedStep) ||
                        (t.quantizedStep &&
                          u.isInteger(t.quantizedStep.low) &&
                          u.isInteger(t.quantizedStep.high))
                      )
                    ? "quantizedStep: integer|Long expected"
                    : null != t.controlNumber &&
                      t.hasOwnProperty("controlNumber") &&
                      !u.isInteger(t.controlNumber)
                    ? "controlNumber: integer expected"
                    : null != t.controlValue &&
                      t.hasOwnProperty("controlValue") &&
                      !u.isInteger(t.controlValue)
                    ? "controlValue: integer expected"
                    : null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      !u.isInteger(t.instrument)
                    ? "instrument: integer expected"
                    : null != t.program &&
                      t.hasOwnProperty("program") &&
                      !u.isInteger(t.program)
                    ? "program: integer expected"
                    : null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      "boolean" != typeof t.isDrum
                    ? "isDrum: boolean expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof c.tensorflow.magenta.NoteSequence.ControlChange
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.ControlChange();
                  return (
                    null != t.time && (e.time = Number(t.time)),
                    null != t.quantizedStep &&
                      (u.Long
                        ? ((e.quantizedStep = u.Long.fromValue(
                            t.quantizedStep
                          )).unsigned = !1)
                        : "string" == typeof t.quantizedStep
                        ? (e.quantizedStep = parseInt(t.quantizedStep, 10))
                        : "number" == typeof t.quantizedStep
                        ? (e.quantizedStep = t.quantizedStep)
                        : "object" == typeof t.quantizedStep &&
                          (e.quantizedStep = new u.LongBits(
                            t.quantizedStep.low >>> 0,
                            t.quantizedStep.high >>> 0
                          ).toNumber())),
                    null != t.controlNumber &&
                      (e.controlNumber = 0 | t.controlNumber),
                    null != t.controlValue &&
                      (e.controlValue = 0 | t.controlValue),
                    null != t.instrument && (e.instrument = 0 | t.instrument),
                    null != t.program && (e.program = 0 | t.program),
                    null != t.isDrum && (e.isDrum = Boolean(t.isDrum)),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  if (e.defaults)
                    if (
                      ((n.time = 0),
                      (n.controlNumber = 0),
                      (n.controlValue = 0),
                      (n.instrument = 0),
                      (n.program = 0),
                      (n.isDrum = !1),
                      u.Long)
                    ) {
                      var r = new u.Long(0, 0, !1);
                      n.quantizedStep =
                        e.longs === String
                          ? r.toString()
                          : e.longs === Number
                          ? r.toNumber()
                          : r;
                    } else n.quantizedStep = e.longs === String ? "0" : 0;
                  return (
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.controlNumber &&
                      t.hasOwnProperty("controlNumber") &&
                      (n.controlNumber = t.controlNumber),
                    null != t.controlValue &&
                      t.hasOwnProperty("controlValue") &&
                      (n.controlValue = t.controlValue),
                    null != t.instrument &&
                      t.hasOwnProperty("instrument") &&
                      (n.instrument = t.instrument),
                    null != t.program &&
                      t.hasOwnProperty("program") &&
                      (n.program = t.program),
                    null != t.isDrum &&
                      t.hasOwnProperty("isDrum") &&
                      (n.isDrum = t.isDrum),
                    null != t.quantizedStep &&
                      t.hasOwnProperty("quantizedStep") &&
                      ("number" == typeof t.quantizedStep
                        ? (n.quantizedStep =
                            e.longs === String
                              ? String(t.quantizedStep)
                              : t.quantizedStep)
                        : (n.quantizedStep =
                            e.longs === String
                              ? u.Long.prototype.toString.call(t.quantizedStep)
                              : e.longs === Number
                              ? new u.LongBits(
                                  t.quantizedStep.low >>> 0,
                                  t.quantizedStep.high >>> 0
                                ).toNumber()
                              : t.quantizedStep)),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.PartInfo = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.part = 0),
                (t.prototype.name = ""),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.part &&
                      t.hasOwnProperty("part") &&
                      e.uint32(8).int32(t.part),
                    null != t.name &&
                      t.hasOwnProperty("name") &&
                      e.uint32(18).string(t.name),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.PartInfo();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.part = t.int32();
                        break;
                      case 2:
                        r.name = t.string();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.part &&
                      t.hasOwnProperty("part") &&
                      !u.isInteger(t.part)
                    ? "part: integer expected"
                    : null != t.name &&
                      t.hasOwnProperty("name") &&
                      !u.isString(t.name)
                    ? "name: string expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (t instanceof c.tensorflow.magenta.NoteSequence.PartInfo)
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.PartInfo();
                  return (
                    null != t.part && (e.part = 0 | t.part),
                    null != t.name && (e.name = String(t.name)),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults && ((n.part = 0), (n.name = "")),
                    null != t.part &&
                      t.hasOwnProperty("part") &&
                      (n.part = t.part),
                    null != t.name &&
                      t.hasOwnProperty("name") &&
                      (n.name = t.name),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.SourceInfo = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.sourceType = 0),
                (t.prototype.encodingType = 0),
                (t.prototype.parser = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.sourceType &&
                      t.hasOwnProperty("sourceType") &&
                      e.uint32(8).int32(t.sourceType),
                    null != t.encodingType &&
                      t.hasOwnProperty("encodingType") &&
                      e.uint32(16).int32(t.encodingType),
                    null != t.parser &&
                      t.hasOwnProperty("parser") &&
                      e.uint32(24).int32(t.parser),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.SourceInfo();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.sourceType = t.int32();
                        break;
                      case 2:
                        r.encodingType = t.int32();
                        break;
                      case 3:
                        r.parser = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  if (null != t.sourceType && t.hasOwnProperty("sourceType"))
                    switch (t.sourceType) {
                      default:
                        return "sourceType: enum value expected";
                      case 0:
                      case 1:
                      case 2:
                    }
                  if (
                    null != t.encodingType &&
                    t.hasOwnProperty("encodingType")
                  )
                    switch (t.encodingType) {
                      default:
                        return "encodingType: enum value expected";
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                    }
                  if (null != t.parser && t.hasOwnProperty("parser"))
                    switch (t.parser) {
                      default:
                        return "parser: enum value expected";
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                      case 5:
                      case 6:
                    }
                  return null;
                }),
                (t.fromObject = function(t) {
                  if (t instanceof c.tensorflow.magenta.NoteSequence.SourceInfo)
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.SourceInfo();
                  switch (t.sourceType) {
                    case "UNKNOWN_SOURCE_TYPE":
                    case 0:
                      e.sourceType = 0;
                      break;
                    case "SCORE_BASED":
                    case 1:
                      e.sourceType = 1;
                      break;
                    case "PERFORMANCE_BASED":
                    case 2:
                      e.sourceType = 2;
                  }
                  switch (t.encodingType) {
                    case "UNKNOWN_ENCODING_TYPE":
                    case 0:
                      e.encodingType = 0;
                      break;
                    case "MUSIC_XML":
                    case 1:
                      e.encodingType = 1;
                      break;
                    case "ABC":
                    case 2:
                      e.encodingType = 2;
                      break;
                    case "MIDI":
                    case 3:
                      e.encodingType = 3;
                      break;
                    case "MUSICNET":
                    case 4:
                      e.encodingType = 4;
                  }
                  switch (t.parser) {
                    case "UNKNOWN_PARSER":
                    case 0:
                      e.parser = 0;
                      break;
                    case "MUSIC21":
                    case 1:
                      e.parser = 1;
                      break;
                    case "PRETTY_MIDI":
                    case 2:
                      e.parser = 2;
                      break;
                    case "MAGENTA_MUSIC_XML":
                    case 3:
                      e.parser = 3;
                      break;
                    case "MAGENTA_MUSICNET":
                    case 4:
                      e.parser = 4;
                      break;
                    case "MAGENTA_ABC":
                    case 5:
                      e.parser = 5;
                      break;
                    case "TONEJS_MIDI_CONVERT":
                    case 6:
                      e.parser = 6;
                  }
                  return e;
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults &&
                      ((n.sourceType =
                        e.enums === String ? "UNKNOWN_SOURCE_TYPE" : 0),
                      (n.encodingType =
                        e.enums === String ? "UNKNOWN_ENCODING_TYPE" : 0),
                      (n.parser = e.enums === String ? "UNKNOWN_PARSER" : 0)),
                    null != t.sourceType &&
                      t.hasOwnProperty("sourceType") &&
                      (n.sourceType =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.SourceInfo
                              .SourceType[t.sourceType]
                          : t.sourceType),
                    null != t.encodingType &&
                      t.hasOwnProperty("encodingType") &&
                      (n.encodingType =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.SourceInfo
                              .EncodingType[t.encodingType]
                          : t.encodingType),
                    null != t.parser &&
                      t.hasOwnProperty("parser") &&
                      (n.parser =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.SourceInfo.Parser[
                              t.parser
                            ]
                          : t.parser),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                (t.SourceType = (function() {
                  var t = {},
                    e = Object.create(t);
                  return (
                    (e[(t[0] = "UNKNOWN_SOURCE_TYPE")] = 0),
                    (e[(t[1] = "SCORE_BASED")] = 1),
                    (e[(t[2] = "PERFORMANCE_BASED")] = 2),
                    e
                  );
                })()),
                (t.EncodingType = (function() {
                  var t = {},
                    e = Object.create(t);
                  return (
                    (e[(t[0] = "UNKNOWN_ENCODING_TYPE")] = 0),
                    (e[(t[1] = "MUSIC_XML")] = 1),
                    (e[(t[2] = "ABC")] = 2),
                    (e[(t[3] = "MIDI")] = 3),
                    (e[(t[4] = "MUSICNET")] = 4),
                    e
                  );
                })()),
                (t.Parser = (function() {
                  var t = {},
                    e = Object.create(t);
                  return (
                    (e[(t[0] = "UNKNOWN_PARSER")] = 0),
                    (e[(t[1] = "MUSIC21")] = 1),
                    (e[(t[2] = "PRETTY_MIDI")] = 2),
                    (e[(t[3] = "MAGENTA_MUSIC_XML")] = 3),
                    (e[(t[4] = "MAGENTA_MUSICNET")] = 4),
                    (e[(t[5] = "MAGENTA_ABC")] = 5),
                    (e[(t[6] = "TONEJS_MIDI_CONVERT")] = 6),
                    e
                  );
                })()),
                t
              );
            })()),
            (t.TextAnnotation = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.quantizedStep = u.Long
                  ? u.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.text = ""),
                (t.prototype.annotationType = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.text &&
                      t.hasOwnProperty("text") &&
                      e.uint32(18).string(t.text),
                    null != t.annotationType &&
                      t.hasOwnProperty("annotationType") &&
                      e.uint32(24).int32(t.annotationType),
                    null != t.quantizedStep &&
                      t.hasOwnProperty("quantizedStep") &&
                      e.uint32(32).int64(t.quantizedStep),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.TextAnnotation();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 4:
                        r.quantizedStep = u.Long
                          ? t.int64().toNumber()
                          : t.int64();
                        break;
                      case 2:
                        r.text = t.string();
                        break;
                      case 3:
                        r.annotationType = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  if (
                    null != t.time &&
                    t.hasOwnProperty("time") &&
                    "number" != typeof t.time
                  )
                    return "time: number expected";
                  if (
                    null != t.quantizedStep &&
                    t.hasOwnProperty("quantizedStep") &&
                    !(
                      u.isInteger(t.quantizedStep) ||
                      (t.quantizedStep &&
                        u.isInteger(t.quantizedStep.low) &&
                        u.isInteger(t.quantizedStep.high))
                    )
                  )
                    return "quantizedStep: integer|Long expected";
                  if (
                    null != t.text &&
                    t.hasOwnProperty("text") &&
                    !u.isString(t.text)
                  )
                    return "text: string expected";
                  if (
                    null != t.annotationType &&
                    t.hasOwnProperty("annotationType")
                  )
                    switch (t.annotationType) {
                      default:
                        return "annotationType: enum value expected";
                      case 0:
                      case 1:
                      case 2:
                    }
                  return null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof
                    c.tensorflow.magenta.NoteSequence.TextAnnotation
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.TextAnnotation();
                  switch (
                    (null != t.time && (e.time = Number(t.time)),
                    null != t.quantizedStep &&
                      (u.Long
                        ? ((e.quantizedStep = u.Long.fromValue(
                            t.quantizedStep
                          )).unsigned = !1)
                        : "string" == typeof t.quantizedStep
                        ? (e.quantizedStep = parseInt(t.quantizedStep, 10))
                        : "number" == typeof t.quantizedStep
                        ? (e.quantizedStep = t.quantizedStep)
                        : "object" == typeof t.quantizedStep &&
                          (e.quantizedStep = new u.LongBits(
                            t.quantizedStep.low >>> 0,
                            t.quantizedStep.high >>> 0
                          ).toNumber())),
                    null != t.text && (e.text = String(t.text)),
                    t.annotationType)
                  ) {
                    case "UNKNOWN":
                    case 0:
                      e.annotationType = 0;
                      break;
                    case "CHORD_SYMBOL":
                    case 1:
                      e.annotationType = 1;
                      break;
                    case "BEAT":
                    case 2:
                      e.annotationType = 2;
                  }
                  return e;
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  if (e.defaults)
                    if (
                      ((n.time = 0),
                      (n.text = ""),
                      (n.annotationType = e.enums === String ? "UNKNOWN" : 0),
                      u.Long)
                    ) {
                      var r = new u.Long(0, 0, !1);
                      n.quantizedStep =
                        e.longs === String
                          ? r.toString()
                          : e.longs === Number
                          ? r.toNumber()
                          : r;
                    } else n.quantizedStep = e.longs === String ? "0" : 0;
                  return (
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.text &&
                      t.hasOwnProperty("text") &&
                      (n.text = t.text),
                    null != t.annotationType &&
                      t.hasOwnProperty("annotationType") &&
                      (n.annotationType =
                        e.enums === String
                          ? c.tensorflow.magenta.NoteSequence.TextAnnotation
                              .TextAnnotationType[t.annotationType]
                          : t.annotationType),
                    null != t.quantizedStep &&
                      t.hasOwnProperty("quantizedStep") &&
                      ("number" == typeof t.quantizedStep
                        ? (n.quantizedStep =
                            e.longs === String
                              ? String(t.quantizedStep)
                              : t.quantizedStep)
                        : (n.quantizedStep =
                            e.longs === String
                              ? u.Long.prototype.toString.call(t.quantizedStep)
                              : e.longs === Number
                              ? new u.LongBits(
                                  t.quantizedStep.low >>> 0,
                                  t.quantizedStep.high >>> 0
                                ).toNumber()
                              : t.quantizedStep)),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                (t.TextAnnotationType = (function() {
                  var t = {},
                    e = Object.create(t);
                  return (
                    (e[(t[0] = "UNKNOWN")] = 0),
                    (e[(t[1] = "CHORD_SYMBOL")] = 1),
                    (e[(t[2] = "BEAT")] = 2),
                    e
                  );
                })()),
                t
              );
            })()),
            (t.QuantizationInfo = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              var e;
              return (
                (t.prototype.stepsPerQuarter = 0),
                (t.prototype.stepsPerSecond = 0),
                Object.defineProperty(t.prototype, "resolution", {
                  get: u.oneOfGetter(
                    (e = ["stepsPerQuarter", "stepsPerSecond"])
                  ),
                  set: u.oneOfSetter(e)
                }),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.stepsPerQuarter &&
                      t.hasOwnProperty("stepsPerQuarter") &&
                      e.uint32(8).int32(t.stepsPerQuarter),
                    null != t.stepsPerSecond &&
                      t.hasOwnProperty("stepsPerSecond") &&
                      e.uint32(16).int32(t.stepsPerSecond),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.QuantizationInfo();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.stepsPerQuarter = t.int32();
                        break;
                      case 2:
                        r.stepsPerSecond = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  var e = {};
                  if (
                    null != t.stepsPerQuarter &&
                    t.hasOwnProperty("stepsPerQuarter") &&
                    ((e.resolution = 1), !u.isInteger(t.stepsPerQuarter))
                  )
                    return "stepsPerQuarter: integer expected";
                  if (
                    null != t.stepsPerSecond &&
                    t.hasOwnProperty("stepsPerSecond")
                  ) {
                    if (1 === e.resolution)
                      return "resolution: multiple values";
                    if (((e.resolution = 1), !u.isInteger(t.stepsPerSecond)))
                      return "stepsPerSecond: integer expected";
                  }
                  return null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof
                    c.tensorflow.magenta.NoteSequence.QuantizationInfo
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.QuantizationInfo();
                  return (
                    null != t.stepsPerQuarter &&
                      (e.stepsPerQuarter = 0 | t.stepsPerQuarter),
                    null != t.stepsPerSecond &&
                      (e.stepsPerSecond = 0 | t.stepsPerSecond),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    null != t.stepsPerQuarter &&
                      t.hasOwnProperty("stepsPerQuarter") &&
                      ((n.stepsPerQuarter = t.stepsPerQuarter),
                      e.oneofs && (n.resolution = "stepsPerQuarter")),
                    null != t.stepsPerSecond &&
                      t.hasOwnProperty("stepsPerSecond") &&
                      ((n.stepsPerSecond = t.stepsPerSecond),
                      e.oneofs && (n.resolution = "stepsPerSecond")),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.SubsequenceInfo = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.startTimeOffset = 0),
                (t.prototype.endTimeOffset = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.startTimeOffset &&
                      t.hasOwnProperty("startTimeOffset") &&
                      e.uint32(9).double(t.startTimeOffset),
                    null != t.endTimeOffset &&
                      t.hasOwnProperty("endTimeOffset") &&
                      e.uint32(17).double(t.endTimeOffset),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.SubsequenceInfo();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.startTimeOffset = t.double();
                        break;
                      case 2:
                        r.endTimeOffset = t.double();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.startTimeOffset &&
                      t.hasOwnProperty("startTimeOffset") &&
                      "number" != typeof t.startTimeOffset
                    ? "startTimeOffset: number expected"
                    : null != t.endTimeOffset &&
                      t.hasOwnProperty("endTimeOffset") &&
                      "number" != typeof t.endTimeOffset
                    ? "endTimeOffset: number expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof
                    c.tensorflow.magenta.NoteSequence.SubsequenceInfo
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.SubsequenceInfo();
                  return (
                    null != t.startTimeOffset &&
                      (e.startTimeOffset = Number(t.startTimeOffset)),
                    null != t.endTimeOffset &&
                      (e.endTimeOffset = Number(t.endTimeOffset)),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    e.defaults &&
                      ((n.startTimeOffset = 0), (n.endTimeOffset = 0)),
                    null != t.startTimeOffset &&
                      t.hasOwnProperty("startTimeOffset") &&
                      (n.startTimeOffset =
                        e.json && !isFinite(t.startTimeOffset)
                          ? String(t.startTimeOffset)
                          : t.startTimeOffset),
                    null != t.endTimeOffset &&
                      t.hasOwnProperty("endTimeOffset") &&
                      (n.endTimeOffset =
                        e.json && !isFinite(t.endTimeOffset)
                          ? String(t.endTimeOffset)
                          : t.endTimeOffset),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.SectionAnnotation = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.time = 0),
                (t.prototype.sectionId = u.Long
                  ? u.Long.fromBits(0, 0, !1)
                  : 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      e.uint32(9).double(t.time),
                    null != t.sectionId &&
                      t.hasOwnProperty("sectionId") &&
                      e.uint32(32).int64(t.sectionId),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.SectionAnnotation();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.time = t.double();
                        break;
                      case 4:
                        r.sectionId = u.Long ? t.int64().toNumber() : t.int64();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  return "object" != typeof t || null === t
                    ? "object expected"
                    : null != t.time &&
                      t.hasOwnProperty("time") &&
                      "number" != typeof t.time
                    ? "time: number expected"
                    : null != t.sectionId &&
                      t.hasOwnProperty("sectionId") &&
                      !(
                        u.isInteger(t.sectionId) ||
                        (t.sectionId &&
                          u.isInteger(t.sectionId.low) &&
                          u.isInteger(t.sectionId.high))
                      )
                    ? "sectionId: integer|Long expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof
                    c.tensorflow.magenta.NoteSequence.SectionAnnotation
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.SectionAnnotation();
                  return (
                    null != t.time && (e.time = Number(t.time)),
                    null != t.sectionId &&
                      (u.Long
                        ? ((e.sectionId = u.Long.fromValue(
                            t.sectionId
                          )).unsigned = !1)
                        : "string" == typeof t.sectionId
                        ? (e.sectionId = parseInt(t.sectionId, 10))
                        : "number" == typeof t.sectionId
                        ? (e.sectionId = t.sectionId)
                        : "object" == typeof t.sectionId &&
                          (e.sectionId = new u.LongBits(
                            t.sectionId.low >>> 0,
                            t.sectionId.high >>> 0
                          ).toNumber())),
                    e
                  );
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  if (e.defaults)
                    if (((n.time = 0), u.Long)) {
                      var r = new u.Long(0, 0, !1);
                      n.sectionId =
                        e.longs === String
                          ? r.toString()
                          : e.longs === Number
                          ? r.toNumber()
                          : r;
                    } else n.sectionId = e.longs === String ? "0" : 0;
                  return (
                    null != t.time &&
                      t.hasOwnProperty("time") &&
                      (n.time =
                        e.json && !isFinite(t.time) ? String(t.time) : t.time),
                    null != t.sectionId &&
                      t.hasOwnProperty("sectionId") &&
                      ("number" == typeof t.sectionId
                        ? (n.sectionId =
                            e.longs === String
                              ? String(t.sectionId)
                              : t.sectionId)
                        : (n.sectionId =
                            e.longs === String
                              ? u.Long.prototype.toString.call(t.sectionId)
                              : e.longs === Number
                              ? new u.LongBits(
                                  t.sectionId.low >>> 0,
                                  t.sectionId.high >>> 0
                                ).toNumber()
                              : t.sectionId)),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.Section = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              var e;
              return (
                (t.prototype.sectionId = u.Long
                  ? u.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.sectionGroup = null),
                Object.defineProperty(t.prototype, "sectionType", {
                  get: u.oneOfGetter((e = ["sectionId", "sectionGroup"])),
                  set: u.oneOfSetter(e)
                }),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  return (
                    e || (e = s.create()),
                    null != t.sectionId &&
                      t.hasOwnProperty("sectionId") &&
                      e.uint32(8).int64(t.sectionId),
                    null != t.sectionGroup &&
                      t.hasOwnProperty("sectionGroup") &&
                      c.tensorflow.magenta.NoteSequence.SectionGroup.encode(
                        t.sectionGroup,
                        e.uint32(18).fork()
                      ).ldelim(),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.Section();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.sectionId = u.Long ? t.int64().toNumber() : t.int64();
                        break;
                      case 2:
                        r.sectionGroup = c.tensorflow.magenta.NoteSequence.SectionGroup.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  var e = {};
                  if (
                    null != t.sectionId &&
                    t.hasOwnProperty("sectionId") &&
                    ((e.sectionType = 1),
                    !(
                      u.isInteger(t.sectionId) ||
                      (t.sectionId &&
                        u.isInteger(t.sectionId.low) &&
                        u.isInteger(t.sectionId.high))
                    ))
                  )
                    return "sectionId: integer|Long expected";
                  if (
                    null != t.sectionGroup &&
                    t.hasOwnProperty("sectionGroup")
                  ) {
                    if (1 === e.sectionType)
                      return "sectionType: multiple values";
                    e.sectionType = 1;
                    var n = c.tensorflow.magenta.NoteSequence.SectionGroup.verify(
                      t.sectionGroup
                    );
                    if (n) return "sectionGroup." + n;
                  }
                  return null;
                }),
                (t.fromObject = function(t) {
                  if (t instanceof c.tensorflow.magenta.NoteSequence.Section)
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.Section();
                  if (
                    (null != t.sectionId &&
                      (u.Long
                        ? ((e.sectionId = u.Long.fromValue(
                            t.sectionId
                          )).unsigned = !1)
                        : "string" == typeof t.sectionId
                        ? (e.sectionId = parseInt(t.sectionId, 10))
                        : "number" == typeof t.sectionId
                        ? (e.sectionId = t.sectionId)
                        : "object" == typeof t.sectionId &&
                          (e.sectionId = new u.LongBits(
                            t.sectionId.low >>> 0,
                            t.sectionId.high >>> 0
                          ).toNumber())),
                    null != t.sectionGroup)
                  ) {
                    if ("object" != typeof t.sectionGroup)
                      throw TypeError(
                        ".tensorflow.magenta.NoteSequence.Section.sectionGroup: object expected"
                      );
                    e.sectionGroup = c.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(
                      t.sectionGroup
                    );
                  }
                  return e;
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  return (
                    null != t.sectionId &&
                      t.hasOwnProperty("sectionId") &&
                      ("number" == typeof t.sectionId
                        ? (n.sectionId =
                            e.longs === String
                              ? String(t.sectionId)
                              : t.sectionId)
                        : (n.sectionId =
                            e.longs === String
                              ? u.Long.prototype.toString.call(t.sectionId)
                              : e.longs === Number
                              ? new u.LongBits(
                                  t.sectionId.low >>> 0,
                                  t.sectionId.high >>> 0
                                ).toNumber()
                              : t.sectionId),
                      e.oneofs && (n.sectionType = "sectionId")),
                    null != t.sectionGroup &&
                      t.hasOwnProperty("sectionGroup") &&
                      ((n.sectionGroup = c.tensorflow.magenta.NoteSequence.SectionGroup.toObject(
                        t.sectionGroup,
                        e
                      )),
                      e.oneofs && (n.sectionType = "sectionGroup")),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            (t.SectionGroup = (function() {
              function t(t) {
                if (((this.sections = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.sections = u.emptyArray),
                (t.prototype.numTimes = 0),
                (t.create = function(e) {
                  return new t(e);
                }),
                (t.encode = function(t, e) {
                  if (
                    (e || (e = s.create()),
                    null != t.sections && t.sections.length)
                  )
                    for (var n = 0; n < t.sections.length; ++n)
                      c.tensorflow.magenta.NoteSequence.Section.encode(
                        t.sections[n],
                        e.uint32(10).fork()
                      ).ldelim();
                  return (
                    null != t.numTimes &&
                      t.hasOwnProperty("numTimes") &&
                      e.uint32(16).int32(t.numTimes),
                    e
                  );
                }),
                (t.encodeDelimited = function(t, e) {
                  return this.encode(t, e).ldelim();
                }),
                (t.decode = function(t, e) {
                  t instanceof a || (t = a.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new c.tensorflow.magenta.NoteSequence.SectionGroup();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        (r.sections && r.sections.length) || (r.sections = []),
                          r.sections.push(
                            c.tensorflow.magenta.NoteSequence.Section.decode(
                              t,
                              t.uint32()
                            )
                          );
                        break;
                      case 2:
                        r.numTimes = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.decodeDelimited = function(t) {
                  return (
                    t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
                  );
                }),
                (t.verify = function(t) {
                  if ("object" != typeof t || null === t)
                    return "object expected";
                  if (null != t.sections && t.hasOwnProperty("sections")) {
                    if (!Array.isArray(t.sections))
                      return "sections: array expected";
                    for (var e = 0; e < t.sections.length; ++e) {
                      var n = c.tensorflow.magenta.NoteSequence.Section.verify(
                        t.sections[e]
                      );
                      if (n) return "sections." + n;
                    }
                  }
                  return null != t.numTimes &&
                    t.hasOwnProperty("numTimes") &&
                    !u.isInteger(t.numTimes)
                    ? "numTimes: integer expected"
                    : null;
                }),
                (t.fromObject = function(t) {
                  if (
                    t instanceof c.tensorflow.magenta.NoteSequence.SectionGroup
                  )
                    return t;
                  var e = new c.tensorflow.magenta.NoteSequence.SectionGroup();
                  if (t.sections) {
                    if (!Array.isArray(t.sections))
                      throw TypeError(
                        ".tensorflow.magenta.NoteSequence.SectionGroup.sections: array expected"
                      );
                    e.sections = [];
                    for (var n = 0; n < t.sections.length; ++n) {
                      if ("object" != typeof t.sections[n])
                        throw TypeError(
                          ".tensorflow.magenta.NoteSequence.SectionGroup.sections: object expected"
                        );
                      e.sections[
                        n
                      ] = c.tensorflow.magenta.NoteSequence.Section.fromObject(
                        t.sections[n]
                      );
                    }
                  }
                  return null != t.numTimes && (e.numTimes = 0 | t.numTimes), e;
                }),
                (t.toObject = function(t, e) {
                  e || (e = {});
                  var n = {};
                  if (
                    ((e.arrays || e.defaults) && (n.sections = []),
                    e.defaults && (n.numTimes = 0),
                    t.sections && t.sections.length)
                  ) {
                    n.sections = [];
                    for (var r = 0; r < t.sections.length; ++r)
                      n.sections[
                        r
                      ] = c.tensorflow.magenta.NoteSequence.Section.toObject(
                        t.sections[r],
                        e
                      );
                  }
                  return (
                    null != t.numTimes &&
                      t.hasOwnProperty("numTimes") &&
                      (n.numTimes = t.numTimes),
                    n
                  );
                }),
                (t.prototype.toJSON = function() {
                  return this.constructor.toObject(this, o.util.toJSONOptions);
                }),
                t
              );
            })()),
            t
          );
        })()),
        (r.SequenceMetadata = (function() {
          function t(t) {
            if (((this.genre = []), (this.composers = []), t))
              for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                null != t[e[n]] && (this[e[n]] = t[e[n]]);
          }
          return (
            (t.prototype.title = ""),
            (t.prototype.artist = ""),
            (t.prototype.genre = u.emptyArray),
            (t.prototype.composers = u.emptyArray),
            (t.create = function(e) {
              return new t(e);
            }),
            (t.encode = function(t, e) {
              if (
                (e || (e = s.create()),
                null != t.title &&
                  t.hasOwnProperty("title") &&
                  e.uint32(10).string(t.title),
                null != t.artist &&
                  t.hasOwnProperty("artist") &&
                  e.uint32(18).string(t.artist),
                null != t.genre && t.genre.length)
              )
                for (var n = 0; n < t.genre.length; ++n)
                  e.uint32(26).string(t.genre[n]);
              if (null != t.composers && t.composers.length)
                for (n = 0; n < t.composers.length; ++n)
                  e.uint32(34).string(t.composers[n]);
              return e;
            }),
            (t.encodeDelimited = function(t, e) {
              return this.encode(t, e).ldelim();
            }),
            (t.decode = function(t, e) {
              t instanceof a || (t = a.create(t));
              for (
                var n = void 0 === e ? t.len : t.pos + e,
                  r = new c.tensorflow.magenta.SequenceMetadata();
                t.pos < n;

              ) {
                var i = t.uint32();
                switch (i >>> 3) {
                  case 1:
                    r.title = t.string();
                    break;
                  case 2:
                    r.artist = t.string();
                    break;
                  case 3:
                    (r.genre && r.genre.length) || (r.genre = []),
                      r.genre.push(t.string());
                    break;
                  case 4:
                    (r.composers && r.composers.length) || (r.composers = []),
                      r.composers.push(t.string());
                    break;
                  default:
                    t.skipType(7 & i);
                }
              }
              return r;
            }),
            (t.decodeDelimited = function(t) {
              return (
                t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
              );
            }),
            (t.verify = function(t) {
              if ("object" != typeof t || null === t) return "object expected";
              if (
                null != t.title &&
                t.hasOwnProperty("title") &&
                !u.isString(t.title)
              )
                return "title: string expected";
              if (
                null != t.artist &&
                t.hasOwnProperty("artist") &&
                !u.isString(t.artist)
              )
                return "artist: string expected";
              if (null != t.genre && t.hasOwnProperty("genre")) {
                if (!Array.isArray(t.genre)) return "genre: array expected";
                for (var e = 0; e < t.genre.length; ++e)
                  if (!u.isString(t.genre[e]))
                    return "genre: string[] expected";
              }
              if (null != t.composers && t.hasOwnProperty("composers")) {
                if (!Array.isArray(t.composers))
                  return "composers: array expected";
                for (e = 0; e < t.composers.length; ++e)
                  if (!u.isString(t.composers[e]))
                    return "composers: string[] expected";
              }
              return null;
            }),
            (t.fromObject = function(t) {
              if (t instanceof c.tensorflow.magenta.SequenceMetadata) return t;
              var e = new c.tensorflow.magenta.SequenceMetadata();
              if (
                (null != t.title && (e.title = String(t.title)),
                null != t.artist && (e.artist = String(t.artist)),
                t.genre)
              ) {
                if (!Array.isArray(t.genre))
                  throw TypeError(
                    ".tensorflow.magenta.SequenceMetadata.genre: array expected"
                  );
                e.genre = [];
                for (var n = 0; n < t.genre.length; ++n)
                  e.genre[n] = String(t.genre[n]);
              }
              if (t.composers) {
                if (!Array.isArray(t.composers))
                  throw TypeError(
                    ".tensorflow.magenta.SequenceMetadata.composers: array expected"
                  );
                for (e.composers = [], n = 0; n < t.composers.length; ++n)
                  e.composers[n] = String(t.composers[n]);
              }
              return e;
            }),
            (t.toObject = function(t, e) {
              e || (e = {});
              var n = {};
              if (
                ((e.arrays || e.defaults) &&
                  ((n.genre = []), (n.composers = [])),
                e.defaults && ((n.title = ""), (n.artist = "")),
                null != t.title &&
                  t.hasOwnProperty("title") &&
                  (n.title = t.title),
                null != t.artist &&
                  t.hasOwnProperty("artist") &&
                  (n.artist = t.artist),
                t.genre && t.genre.length)
              ) {
                n.genre = [];
                for (var r = 0; r < t.genre.length; ++r)
                  n.genre[r] = t.genre[r];
              }
              if (t.composers && t.composers.length)
                for (n.composers = [], r = 0; r < t.composers.length; ++r)
                  n.composers[r] = t.composers[r];
              return n;
            }),
            (t.prototype.toJSON = function() {
              return this.constructor.toObject(this, o.util.toJSONOptions);
            }),
            t
          );
        })()),
        (r.VelocityRange = (function() {
          function t(t) {
            if (t)
              for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                null != t[e[n]] && (this[e[n]] = t[e[n]]);
          }
          return (
            (t.prototype.min = 0),
            (t.prototype.max = 0),
            (t.create = function(e) {
              return new t(e);
            }),
            (t.encode = function(t, e) {
              return (
                e || (e = s.create()),
                null != t.min &&
                  t.hasOwnProperty("min") &&
                  e.uint32(8).int32(t.min),
                null != t.max &&
                  t.hasOwnProperty("max") &&
                  e.uint32(16).int32(t.max),
                e
              );
            }),
            (t.encodeDelimited = function(t, e) {
              return this.encode(t, e).ldelim();
            }),
            (t.decode = function(t, e) {
              t instanceof a || (t = a.create(t));
              for (
                var n = void 0 === e ? t.len : t.pos + e,
                  r = new c.tensorflow.magenta.VelocityRange();
                t.pos < n;

              ) {
                var i = t.uint32();
                switch (i >>> 3) {
                  case 1:
                    r.min = t.int32();
                    break;
                  case 2:
                    r.max = t.int32();
                    break;
                  default:
                    t.skipType(7 & i);
                }
              }
              return r;
            }),
            (t.decodeDelimited = function(t) {
              return (
                t instanceof a || (t = new a(t)), this.decode(t, t.uint32())
              );
            }),
            (t.verify = function(t) {
              return "object" != typeof t || null === t
                ? "object expected"
                : null != t.min &&
                  t.hasOwnProperty("min") &&
                  !u.isInteger(t.min)
                ? "min: integer expected"
                : null != t.max &&
                  t.hasOwnProperty("max") &&
                  !u.isInteger(t.max)
                ? "max: integer expected"
                : null;
            }),
            (t.fromObject = function(t) {
              if (t instanceof c.tensorflow.magenta.VelocityRange) return t;
              var e = new c.tensorflow.magenta.VelocityRange();
              return (
                null != t.min && (e.min = 0 | t.min),
                null != t.max && (e.max = 0 | t.max),
                e
              );
            }),
            (t.toObject = function(t, e) {
              e || (e = {});
              var n = {};
              return (
                e.defaults && ((n.min = 0), (n.max = 0)),
                null != t.min && t.hasOwnProperty("min") && (n.min = t.min),
                null != t.max && t.hasOwnProperty("max") && (n.max = t.max),
                n
              );
            }),
            (t.prototype.toJSON = function() {
              return this.constructor.toObject(this, o.util.toJSONOptions);
            }),
            t
          );
        })()),
        r)),
      i)),
      (t.exports = c);
  },
  function(t, e, n) {
    "use strict";
    t.exports = n(196);
  },
  function(t, e, n) {
    "use strict";
    var r = e;
    function i() {
      r.Reader._configure(r.BufferReader), r.util._configure();
    }
    (r.build = "minimal"),
      (r.Writer = n(95)),
      (r.BufferWriter = n(205)),
      (r.Reader = n(96)),
      (r.BufferReader = n(206)),
      (r.util = n(15)),
      (r.rpc = n(207)),
      (r.roots = n(209)),
      (r.configure = i),
      r.Writer._configure(r.BufferWriter),
      i();
  },
  function(t, e, n) {
    "use strict";
    t.exports = function(t, e) {
      var n = new Array(arguments.length - 1),
        r = 0,
        i = 2,
        o = !0;
      for (; i < arguments.length; ) n[r++] = arguments[i++];
      return new Promise(function(i, a) {
        n[r] = function(t) {
          if (o)
            if (((o = !1), t)) a(t);
            else {
              for (
                var e = new Array(arguments.length - 1), n = 0;
                n < e.length;

              )
                e[n++] = arguments[n];
              i.apply(null, e);
            }
        };
        try {
          t.apply(e || null, n);
        } catch (t) {
          o && ((o = !1), a(t));
        }
      });
    };
  },
  function(t, e, n) {
    "use strict";
    var r = e;
    r.length = function(t) {
      var e = t.length;
      if (!e) return 0;
      for (var n = 0; --e % 4 > 1 && "=" === t.charAt(e); ) ++n;
      return Math.ceil(3 * t.length) / 4 - n;
    };
    for (var i = new Array(64), o = new Array(123), a = 0; a < 64; )
      o[
        (i[a] =
          a < 26 ? a + 65 : a < 52 ? a + 71 : a < 62 ? a - 4 : (a - 59) | 43)
      ] = a++;
    r.encode = function(t, e, n) {
      for (var r, o = null, a = [], s = 0, u = 0; e < n; ) {
        var c = t[e++];
        switch (u) {
          case 0:
            (a[s++] = i[c >> 2]), (r = (3 & c) << 4), (u = 1);
            break;
          case 1:
            (a[s++] = i[r | (c >> 4)]), (r = (15 & c) << 2), (u = 2);
            break;
          case 2:
            (a[s++] = i[r | (c >> 6)]), (a[s++] = i[63 & c]), (u = 0);
        }
        s > 8191 &&
          ((o || (o = [])).push(String.fromCharCode.apply(String, a)), (s = 0));
      }
      return (
        u && ((a[s++] = i[r]), (a[s++] = 61), 1 === u && (a[s++] = 61)),
        o
          ? (s && o.push(String.fromCharCode.apply(String, a.slice(0, s))),
            o.join(""))
          : String.fromCharCode.apply(String, a.slice(0, s))
      );
    };
    (r.decode = function(t, e, n) {
      for (var r, i = n, a = 0, s = 0; s < t.length; ) {
        var u = t.charCodeAt(s++);
        if (61 === u && a > 1) break;
        if (void 0 === (u = o[u])) throw Error("invalid encoding");
        switch (a) {
          case 0:
            (r = u), (a = 1);
            break;
          case 1:
            (e[n++] = (r << 2) | ((48 & u) >> 4)), (r = u), (a = 2);
            break;
          case 2:
            (e[n++] = ((15 & r) << 4) | ((60 & u) >> 2)), (r = u), (a = 3);
            break;
          case 3:
            (e[n++] = ((3 & r) << 6) | u), (a = 0);
        }
      }
      if (1 === a) throw Error("invalid encoding");
      return n - i;
    }),
      (r.test = function(t) {
        return /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(
          t
        );
      });
  },
  function(t, e, n) {
    "use strict";
    function r() {
      this._listeners = {};
    }
    (t.exports = r),
      (r.prototype.on = function(t, e, n) {
        return (
          (this._listeners[t] || (this._listeners[t] = [])).push({
            fn: e,
            ctx: n || this
          }),
          this
        );
      }),
      (r.prototype.off = function(t, e) {
        if (void 0 === t) this._listeners = {};
        else if (void 0 === e) this._listeners[t] = [];
        else
          for (var n = this._listeners[t], r = 0; r < n.length; )
            n[r].fn === e ? n.splice(r, 1) : ++r;
        return this;
      }),
      (r.prototype.emit = function(t) {
        var e = this._listeners[t];
        if (e) {
          for (var n = [], r = 1; r < arguments.length; )
            n.push(arguments[r++]);
          for (r = 0; r < e.length; ) e[r].fn.apply(e[r++].ctx, n);
        }
        return this;
      });
  },
  function(t, e, n) {
    "use strict";
    function r(t) {
      return (
        "undefined" != typeof Float32Array
          ? (function() {
              var e = new Float32Array([-0]),
                n = new Uint8Array(e.buffer),
                r = 128 === n[3];
              function i(t, r, i) {
                (e[0] = t),
                  (r[i] = n[0]),
                  (r[i + 1] = n[1]),
                  (r[i + 2] = n[2]),
                  (r[i + 3] = n[3]);
              }
              function o(t, r, i) {
                (e[0] = t),
                  (r[i] = n[3]),
                  (r[i + 1] = n[2]),
                  (r[i + 2] = n[1]),
                  (r[i + 3] = n[0]);
              }
              function a(t, r) {
                return (
                  (n[0] = t[r]),
                  (n[1] = t[r + 1]),
                  (n[2] = t[r + 2]),
                  (n[3] = t[r + 3]),
                  e[0]
                );
              }
              function s(t, r) {
                return (
                  (n[3] = t[r]),
                  (n[2] = t[r + 1]),
                  (n[1] = t[r + 2]),
                  (n[0] = t[r + 3]),
                  e[0]
                );
              }
              (t.writeFloatLE = r ? i : o),
                (t.writeFloatBE = r ? o : i),
                (t.readFloatLE = r ? a : s),
                (t.readFloatBE = r ? s : a);
            })()
          : (function() {
              function e(t, e, n, r) {
                var i = e < 0 ? 1 : 0;
                if ((i && (e = -e), 0 === e))
                  t(1 / e > 0 ? 0 : 2147483648, n, r);
                else if (isNaN(e)) t(2143289344, n, r);
                else if (e > 3.4028234663852886e38)
                  t(((i << 31) | 2139095040) >>> 0, n, r);
                else if (e < 1.1754943508222875e-38)
                  t(
                    ((i << 31) | Math.round(e / 1.401298464324817e-45)) >>> 0,
                    n,
                    r
                  );
                else {
                  var o = Math.floor(Math.log(e) / Math.LN2);
                  t(
                    ((i << 31) |
                      ((o + 127) << 23) |
                      (8388607 & Math.round(e * Math.pow(2, -o) * 8388608))) >>>
                      0,
                    n,
                    r
                  );
                }
              }
              function n(t, e, n) {
                var r = t(e, n),
                  i = 2 * (r >> 31) + 1,
                  o = (r >>> 23) & 255,
                  a = 8388607 & r;
                return 255 === o
                  ? a
                    ? NaN
                    : i * (1 / 0)
                  : 0 === o
                  ? 1.401298464324817e-45 * i * a
                  : i * Math.pow(2, o - 150) * (a + 8388608);
              }
              (t.writeFloatLE = e.bind(null, i)),
                (t.writeFloatBE = e.bind(null, o)),
                (t.readFloatLE = n.bind(null, a)),
                (t.readFloatBE = n.bind(null, s));
            })(),
        "undefined" != typeof Float64Array
          ? (function() {
              var e = new Float64Array([-0]),
                n = new Uint8Array(e.buffer),
                r = 128 === n[7];
              function i(t, r, i) {
                (e[0] = t),
                  (r[i] = n[0]),
                  (r[i + 1] = n[1]),
                  (r[i + 2] = n[2]),
                  (r[i + 3] = n[3]),
                  (r[i + 4] = n[4]),
                  (r[i + 5] = n[5]),
                  (r[i + 6] = n[6]),
                  (r[i + 7] = n[7]);
              }
              function o(t, r, i) {
                (e[0] = t),
                  (r[i] = n[7]),
                  (r[i + 1] = n[6]),
                  (r[i + 2] = n[5]),
                  (r[i + 3] = n[4]),
                  (r[i + 4] = n[3]),
                  (r[i + 5] = n[2]),
                  (r[i + 6] = n[1]),
                  (r[i + 7] = n[0]);
              }
              function a(t, r) {
                return (
                  (n[0] = t[r]),
                  (n[1] = t[r + 1]),
                  (n[2] = t[r + 2]),
                  (n[3] = t[r + 3]),
                  (n[4] = t[r + 4]),
                  (n[5] = t[r + 5]),
                  (n[6] = t[r + 6]),
                  (n[7] = t[r + 7]),
                  e[0]
                );
              }
              function s(t, r) {
                return (
                  (n[7] = t[r]),
                  (n[6] = t[r + 1]),
                  (n[5] = t[r + 2]),
                  (n[4] = t[r + 3]),
                  (n[3] = t[r + 4]),
                  (n[2] = t[r + 5]),
                  (n[1] = t[r + 6]),
                  (n[0] = t[r + 7]),
                  e[0]
                );
              }
              (t.writeDoubleLE = r ? i : o),
                (t.writeDoubleBE = r ? o : i),
                (t.readDoubleLE = r ? a : s),
                (t.readDoubleBE = r ? s : a);
            })()
          : (function() {
              function e(t, e, n, r, i, o) {
                var a = r < 0 ? 1 : 0;
                if ((a && (r = -r), 0 === r))
                  t(0, i, o + e), t(1 / r > 0 ? 0 : 2147483648, i, o + n);
                else if (isNaN(r)) t(0, i, o + e), t(2146959360, i, o + n);
                else if (r > 1.7976931348623157e308)
                  t(0, i, o + e), t(((a << 31) | 2146435072) >>> 0, i, o + n);
                else {
                  var s;
                  if (r < 2.2250738585072014e-308)
                    t((s = r / 5e-324) >>> 0, i, o + e),
                      t(((a << 31) | (s / 4294967296)) >>> 0, i, o + n);
                  else {
                    var u = Math.floor(Math.log(r) / Math.LN2);
                    1024 === u && (u = 1023),
                      t(
                        (4503599627370496 * (s = r * Math.pow(2, -u))) >>> 0,
                        i,
                        o + e
                      ),
                      t(
                        ((a << 31) |
                          ((u + 1023) << 20) |
                          ((1048576 * s) & 1048575)) >>>
                          0,
                        i,
                        o + n
                      );
                  }
                }
              }
              function n(t, e, n, r, i) {
                var o = t(r, i + e),
                  a = t(r, i + n),
                  s = 2 * (a >> 31) + 1,
                  u = (a >>> 20) & 2047,
                  c = 4294967296 * (1048575 & a) + o;
                return 2047 === u
                  ? c
                    ? NaN
                    : s * (1 / 0)
                  : 0 === u
                  ? 5e-324 * s * c
                  : s * Math.pow(2, u - 1075) * (c + 4503599627370496);
              }
              (t.writeDoubleLE = e.bind(null, i, 0, 4)),
                (t.writeDoubleBE = e.bind(null, o, 4, 0)),
                (t.readDoubleLE = n.bind(null, a, 0, 4)),
                (t.readDoubleBE = n.bind(null, s, 4, 0));
            })(),
        t
      );
    }
    function i(t, e, n) {
      (e[n] = 255 & t),
        (e[n + 1] = (t >>> 8) & 255),
        (e[n + 2] = (t >>> 16) & 255),
        (e[n + 3] = t >>> 24);
    }
    function o(t, e, n) {
      (e[n] = t >>> 24),
        (e[n + 1] = (t >>> 16) & 255),
        (e[n + 2] = (t >>> 8) & 255),
        (e[n + 3] = 255 & t);
    }
    function a(t, e) {
      return (
        (t[e] | (t[e + 1] << 8) | (t[e + 2] << 16) | (t[e + 3] << 24)) >>> 0
      );
    }
    function s(t, e) {
      return (
        ((t[e] << 24) | (t[e + 1] << 16) | (t[e + 2] << 8) | t[e + 3]) >>> 0
      );
    }
    t.exports = r(r);
  },
  function(module, exports, __webpack_require__) {
    "use strict";
    function inquire(moduleName) {
      try {
        var mod = eval("quire".replace(/^/, "re"))(moduleName);
        if (mod && (mod.length || Object.keys(mod).length)) return mod;
      } catch (t) {}
      return null;
    }
    module.exports = inquire;
  },
  function(t, e, n) {
    "use strict";
    var r = e;
    (r.length = function(t) {
      for (var e = 0, n = 0, r = 0; r < t.length; ++r)
        (n = t.charCodeAt(r)) < 128
          ? (e += 1)
          : n < 2048
          ? (e += 2)
          : 55296 == (64512 & n) && 56320 == (64512 & t.charCodeAt(r + 1))
          ? (++r, (e += 4))
          : (e += 3);
      return e;
    }),
      (r.read = function(t, e, n) {
        if (n - e < 1) return "";
        for (var r, i = null, o = [], a = 0; e < n; )
          (r = t[e++]) < 128
            ? (o[a++] = r)
            : r > 191 && r < 224
            ? (o[a++] = ((31 & r) << 6) | (63 & t[e++]))
            : r > 239 && r < 365
            ? ((r =
                (((7 & r) << 18) |
                  ((63 & t[e++]) << 12) |
                  ((63 & t[e++]) << 6) |
                  (63 & t[e++])) -
                65536),
              (o[a++] = 55296 + (r >> 10)),
              (o[a++] = 56320 + (1023 & r)))
            : (o[a++] =
                ((15 & r) << 12) | ((63 & t[e++]) << 6) | (63 & t[e++])),
            a > 8191 &&
              ((i || (i = [])).push(String.fromCharCode.apply(String, o)),
              (a = 0));
        return i
          ? (a && i.push(String.fromCharCode.apply(String, o.slice(0, a))),
            i.join(""))
          : String.fromCharCode.apply(String, o.slice(0, a));
      }),
      (r.write = function(t, e, n) {
        for (var r, i, o = n, a = 0; a < t.length; ++a)
          (r = t.charCodeAt(a)) < 128
            ? (e[n++] = r)
            : r < 2048
            ? ((e[n++] = (r >> 6) | 192), (e[n++] = (63 & r) | 128))
            : 55296 == (64512 & r) &&
              56320 == (64512 & (i = t.charCodeAt(a + 1)))
            ? ((r = 65536 + ((1023 & r) << 10) + (1023 & i)),
              ++a,
              (e[n++] = (r >> 18) | 240),
              (e[n++] = ((r >> 12) & 63) | 128),
              (e[n++] = ((r >> 6) & 63) | 128),
              (e[n++] = (63 & r) | 128))
            : ((e[n++] = (r >> 12) | 224),
              (e[n++] = ((r >> 6) & 63) | 128),
              (e[n++] = (63 & r) | 128));
        return n - o;
      });
  },
  function(t, e, n) {
    "use strict";
    t.exports = function(t, e, n) {
      var r = n || 8192,
        i = r >>> 1,
        o = null,
        a = r;
      return function(n) {
        if (n < 1 || n > i) return t(n);
        a + n > r && ((o = t(r)), (a = 0));
        var s = e.call(o, a, (a += n));
        return 7 & a && (a = 1 + (7 | a)), s;
      };
    };
  },
  function(t, e, n) {
    "use strict";
    t.exports = i;
    var r = n(15);
    function i(t, e) {
      (this.lo = t >>> 0), (this.hi = e >>> 0);
    }
    var o = (i.zero = new i(0, 0));
    (o.toNumber = function() {
      return 0;
    }),
      (o.zzEncode = o.zzDecode = function() {
        return this;
      }),
      (o.length = function() {
        return 1;
      });
    var a = (i.zeroHash = "\0\0\0\0\0\0\0\0");
    (i.fromNumber = function(t) {
      if (0 === t) return o;
      var e = t < 0;
      e && (t = -t);
      var n = t >>> 0,
        r = ((t - n) / 4294967296) >>> 0;
      return (
        e &&
          ((r = ~r >>> 0),
          (n = ~n >>> 0),
          ++n > 4294967295 && ((n = 0), ++r > 4294967295 && (r = 0))),
        new i(n, r)
      );
    }),
      (i.from = function(t) {
        if ("number" == typeof t) return i.fromNumber(t);
        if (r.isString(t)) {
          if (!r.Long) return i.fromNumber(parseInt(t, 10));
          t = r.Long.fromString(t);
        }
        return t.low || t.high ? new i(t.low >>> 0, t.high >>> 0) : o;
      }),
      (i.prototype.toNumber = function(t) {
        if (!t && this.hi >>> 31) {
          var e = (1 + ~this.lo) >>> 0,
            n = ~this.hi >>> 0;
          return e || (n = (n + 1) >>> 0), -(e + 4294967296 * n);
        }
        return this.lo + 4294967296 * this.hi;
      }),
      (i.prototype.toLong = function(t) {
        return r.Long
          ? new r.Long(0 | this.lo, 0 | this.hi, Boolean(t))
          : { low: 0 | this.lo, high: 0 | this.hi, unsigned: Boolean(t) };
      });
    var s = String.prototype.charCodeAt;
    (i.fromHash = function(t) {
      return t === a
        ? o
        : new i(
            (s.call(t, 0) |
              (s.call(t, 1) << 8) |
              (s.call(t, 2) << 16) |
              (s.call(t, 3) << 24)) >>>
              0,
            (s.call(t, 4) |
              (s.call(t, 5) << 8) |
              (s.call(t, 6) << 16) |
              (s.call(t, 7) << 24)) >>>
              0
          );
    }),
      (i.prototype.toHash = function() {
        return String.fromCharCode(
          255 & this.lo,
          (this.lo >>> 8) & 255,
          (this.lo >>> 16) & 255,
          this.lo >>> 24,
          255 & this.hi,
          (this.hi >>> 8) & 255,
          (this.hi >>> 16) & 255,
          this.hi >>> 24
        );
      }),
      (i.prototype.zzEncode = function() {
        var t = this.hi >> 31;
        return (
          (this.hi = (((this.hi << 1) | (this.lo >>> 31)) ^ t) >>> 0),
          (this.lo = ((this.lo << 1) ^ t) >>> 0),
          this
        );
      }),
      (i.prototype.zzDecode = function() {
        var t = -(1 & this.lo);
        return (
          (this.lo = (((this.lo >>> 1) | (this.hi << 31)) ^ t) >>> 0),
          (this.hi = ((this.hi >>> 1) ^ t) >>> 0),
          this
        );
      }),
      (i.prototype.length = function() {
        var t = this.lo,
          e = ((this.lo >>> 28) | (this.hi << 4)) >>> 0,
          n = this.hi >>> 24;
        return 0 === n
          ? 0 === e
            ? t < 16384
              ? t < 128
                ? 1
                : 2
              : t < 2097152
              ? 3
              : 4
            : e < 16384
            ? e < 128
              ? 5
              : 6
            : e < 2097152
            ? 7
            : 8
          : n < 128
          ? 9
          : 10;
      });
  },
  function(t, e, n) {
    "use strict";
    t.exports = a;
    var r = n(95);
    (a.prototype = Object.create(r.prototype)).constructor = a;
    var i = n(15),
      o = i.Buffer;
    function a() {
      r.call(this);
    }
    a.alloc = function(t) {
      return (a.alloc = i._Buffer_allocUnsafe)(t);
    };
    var s =
      o && o.prototype instanceof Uint8Array && "set" === o.prototype.set.name
        ? function(t, e, n) {
            e.set(t, n);
          }
        : function(t, e, n) {
            if (t.copy) t.copy(e, n, 0, t.length);
            else for (var r = 0; r < t.length; ) e[n++] = t[r++];
          };
    function u(t, e, n) {
      t.length < 40 ? i.utf8.write(t, e, n) : e.utf8Write(t, n);
    }
    (a.prototype.bytes = function(t) {
      i.isString(t) && (t = i._Buffer_from(t, "base64"));
      var e = t.length >>> 0;
      return this.uint32(e), e && this._push(s, e, t), this;
    }),
      (a.prototype.string = function(t) {
        var e = o.byteLength(t);
        return this.uint32(e), e && this._push(u, e, t), this;
      });
  },
  function(t, e, n) {
    "use strict";
    t.exports = o;
    var r = n(96);
    (o.prototype = Object.create(r.prototype)).constructor = o;
    var i = n(15);
    function o(t) {
      r.call(this, t);
    }
    i.Buffer && (o.prototype._slice = i.Buffer.prototype.slice),
      (o.prototype.string = function() {
        var t = this.uint32();
        return this.buf.utf8Slice(
          this.pos,
          (this.pos = Math.min(this.pos + t, this.len))
        );
      });
  },
  function(t, e, n) {
    "use strict";
    e.Service = n(208);
  },
  function(t, e, n) {
    "use strict";
    t.exports = i;
    var r = n(15);
    function i(t, e, n) {
      if ("function" != typeof t) throw TypeError("rpcImpl must be a function");
      r.EventEmitter.call(this),
        (this.rpcImpl = t),
        (this.requestDelimited = Boolean(e)),
        (this.responseDelimited = Boolean(n));
    }
    ((i.prototype = Object.create(r.EventEmitter.prototype)).constructor = i),
      (i.prototype.rpcCall = function t(e, n, i, o, a) {
        if (!o) throw TypeError("request must be specified");
        var s = this;
        if (!a) return r.asPromise(t, s, e, n, i, o);
        if (s.rpcImpl)
          try {
            return s.rpcImpl(
              e,
              n[s.requestDelimited ? "encodeDelimited" : "encode"](o).finish(),
              function(t, n) {
                if (t) return s.emit("error", t, e), a(t);
                if (null !== n) {
                  if (!(n instanceof i))
                    try {
                      n = i[s.responseDelimited ? "decodeDelimited" : "decode"](
                        n
                      );
                    } catch (t) {
                      return s.emit("error", t, e), a(t);
                    }
                  return s.emit("data", n, e), a(null, n);
                }
                s.end(!0);
              }
            );
          } catch (t) {
            return (
              s.emit("error", t, e),
              void setTimeout(function() {
                a(t);
              }, 0)
            );
          }
        else
          setTimeout(function() {
            a(Error("already ended"));
          }, 0);
      }),
      (i.prototype.end = function(t) {
        return (
          this.rpcImpl &&
            (t || this.rpcImpl(null, null, null),
            (this.rpcImpl = null),
            this.emit("end").off()),
          this
        );
      });
  },
  function(t, e, n) {
    "use strict";
    t.exports = {};
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(248),
      a = n(12),
      s = n(9),
      u = n(26),
      c = (function(t) {
        function e(e) {
          var n = this.constructor,
            r = t.call(this, e) || this;
          return Object.setPrototypeOf(r, n.prototype), r;
        }
        return i(e, t), e;
      })(Error);
    function l(t) {
      var e = o.parse(t),
        n = a.NoteSequence.create();
      (n.ticksPerQuarter = e.header.PPQ),
        (n.sourceInfo = a.NoteSequence.SourceInfo.create({
          parser: a.NoteSequence.SourceInfo.Parser.TONEJS_MIDI_CONVERT,
          encodingType: a.NoteSequence.SourceInfo.EncodingType.MIDI
        })),
        e.header.timeSignature
          ? n.timeSignatures.push(
              a.NoteSequence.TimeSignature.create({
                time: 0,
                numerator: e.header.timeSignature[0],
                denominator: e.header.timeSignature[1]
              })
            )
          : n.timeSignatures.push(
              a.NoteSequence.TimeSignature.create({
                time: 0,
                numerator: 4,
                denominator: 4
              })
            ),
        n.tempos.push(
          a.NoteSequence.Tempo.create({ time: 0, qpm: e.header.bpm })
        );
      for (var r = -1, i = 0, u = e.tracks; i < u.length; i++) {
        var c = u[i];
        c.notes.length > 0 && (r += 1);
        for (var l = 0, h = c.notes; l < h.length; l++) {
          var f = h[l],
            p = f.time,
            d = p + f.duration;
          n.notes.push(
            a.NoteSequence.Note.create({
              instrument: r,
              program: c.instrumentNumber,
              startTime: p,
              endTime: d,
              pitch: f.midi,
              velocity: Math.floor(f.velocity * s.MIDI_VELOCITIES),
              isDrum: c.isPercussion
            })
          ),
            d > n.totalTime && (n.totalTime = d);
        }
      }
      return n;
    }
    function h(t) {
      return new Promise(function(e, n) {
        fetch(t)
          .then(function(t) {
            return t.blob();
          })
          .then(function(t) {
            e(t);
          })
          .catch(function(t) {
            return n(t);
          });
      });
    }
    function f(t) {
      return new Promise(function(e, n) {
        var r = new FileReader();
        (r.onload = function(t) {
          e(l(r.result));
        }),
          (r.onerror = function(t) {
            return n(t);
          }),
          r.readAsBinaryString(t);
      });
    }
    (e.MidiConversionError = c),
      (e.midiToSequenceProto = l),
      (e.sequenceProtoToMidi = function(t) {
        u.isQuantizedSequence(t) && (t = u.unquantizeSequence(t));
        var e = function(t) {
          return 0 === t || void 0 === t;
        };
        if (
          ((t.tempos && 0 !== t.tempos.length) ||
            (t.tempos = [{ time: 0, qpm: s.DEFAULT_QUARTERS_PER_MINUTE }]),
          (t.timeSignatures && 0 !== t.timeSignatures.length) ||
            (t.timeSignatures = [{ time: 0, numerator: 4, denominator: 4 }]),
          1 !== t.tempos.length || !e(t.tempos[0].time))
        )
          throw new c("NoteSequence must have exactly 1 tempo at time 0");
        if (1 !== t.timeSignatures.length || !e(t.timeSignatures[0].time))
          throw new c(
            "NoteSequence must have exactly 1 time signature at time 0"
          );
        for (
          var n = {
              header: {
                bpm: t.tempos[0].qpm,
                PPQ: t.ticksPerQuarter
                  ? t.ticksPerQuarter
                  : s.DEFAULT_TICKS_PER_QUARTER,
                timeSignature: [
                  t.timeSignatures[0].numerator,
                  t.timeSignatures[0].denominator
                ]
              },
              tracks: []
            },
            r = new Map(),
            i = 0,
            a = t.notes;
          i < a.length;
          i++
        ) {
          var l = a[i],
            h = l.instrument ? l.instrument : 0;
          r.has(h) || r.set(h, []), r.get(h).push(l);
        }
        for (
          var f = Array.from(r.keys()).sort(function(t, e) {
              return t - e;
            }),
            p = 0;
          p < f.length;
          p++
        ) {
          if (p !== f[p])
            throw new c("Instrument list must be continuous and start at 0");
          var d = r.get(p),
            m = {
              id: p,
              notes: [],
              isPercussion: void 0 !== d[0].isDrum && d[0].isDrum,
              channelNumber: d[0].isDrum ? s.DRUM_CHANNEL : s.DEFAULT_CHANNEL,
              instrumentNumber:
                void 0 === d[0].program ? s.DEFAULT_PROGRAM : d[0].program
            };
          (m.notes = d.map(function(t) {
            var e = void 0 === t.velocity ? s.DEFAULT_VELOCITY : t.velocity;
            return {
              midi: t.pitch,
              time: t.startTime,
              duration: t.endTime - t.startTime,
              velocity: (e + 1) / s.MIDI_VELOCITIES
            };
          })),
            n.tracks.push(m);
        }
        return new Uint8Array(o.fromJSON(n).toArray());
      }),
      (e.urlToBlob = h),
      (e.blobToNoteSequence = f),
      (e.urlToNoteSequence = function(t) {
        return h(t).then(f);
      });
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }),
      o =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      a =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var s = n(51),
      u = n(12),
      c = n(49),
      l = n(9),
      h = n(32),
      f = n(212);
    function p(t, e) {
      return t.quantizedStartStep < e.quantizedStartStep
        ? -1
        : t.quantizedStartStep > e.quantizedStartStep
        ? 1
        : t.pitch < e.pitch
        ? -1
        : 1;
    }
    var d = (function() {
      return function() {};
    })();
    e.BasePlayerCallback = d;
    var m = (function() {
      function t(t, e) {
        void 0 === t && (t = !1),
          (this.playClick = t),
          (this.callbackObject = e),
          (this.desiredQPM = void 0);
      }
      return (
        (t.prototype.setTempo = function(t) {
          (this.desiredQPM = t),
            "started" === s.Transport.state && (s.Transport.bpm.value = t);
        }),
        (t.prototype.makeClickSequence = function(t) {
          for (
            var e = c.sequences.clone(t),
              n = e.notes.map(function(t) {
                return t.quantizedEndStep;
              }),
              r = Math.max.apply(Math, n),
              i = 0;
            i < r;
            i += 4
          ) {
            var o = {
              pitch: i % 16 == 0 ? l.LO_CLICK_PITCH : l.HI_CLICK_PITCH,
              quantizedStartStep: i,
              isDrum: !0,
              quantizedEndStep: i + 1
            };
            e.notes.push(o);
          }
          return e.notes.sort(p), e;
        }),
        (t.prototype.resumeContext = function() {
          s.context.resume();
        }),
        (t.prototype.start = function(t, e) {
          var n = this;
          this.resumeContext();
          var r = c.sequences.isQuantizedSequence(t);
          if (
            (this.playClick && r && (t = this.makeClickSequence(t)),
            e
              ? (s.Transport.bpm.value = e)
              : t.tempos && t.tempos.length > 0 && t.tempos[0].qpm > 0
              ? (s.Transport.bpm.value = t.tempos[0].qpm)
              : (s.Transport.bpm.value = l.DEFAULT_QUARTERS_PER_MINUTE),
            r)
          )
            t = c.sequences.unquantizeSequence(t, e);
          else if (e)
            throw new Error(
              "Cannot specify a `qpm` for a non-quantized sequence."
            );
          return (
            (this.currentPart = new s.Part(
              function(t, e) {
                (n.playClick ||
                  (e.pitch !== l.LO_CLICK_PITCH &&
                    e.pitch !== l.HI_CLICK_PITCH)) &&
                  n.playNote(t, e),
                  n.callbackObject &&
                    s.Draw.schedule(function() {
                      n.callbackObject.run(e, t);
                    }, t);
              },
              t.notes.map(function(t) {
                return [t.startTime, t];
              })
            )),
            this.desiredQPM && (s.Transport.bpm.value = this.desiredQPM),
            this.currentPart.start(),
            "started" !== s.Transport.state && s.Transport.start(),
            new Promise(function(e) {
              n.scheduledStop = s.Transport.schedule(function() {
                n.stop(), e(), n.callbackObject && n.callbackObject.stop();
              }, "+" + t.totalTime);
            })
          );
        }),
        (t.prototype.stop = function() {
          this.currentPart &&
            (this.currentPart.stop(),
            s.Transport.stop(),
            (this.currentPart = null)),
            s.Transport.clear(this.scheduledStop),
            (this.scheduledStop = void 0),
            (this.desiredQPM = void 0);
        }),
        (t.prototype.pause = function() {
          s.Transport.pause();
        }),
        (t.prototype.resume = function() {
          s.Transport.start();
        }),
        (t.prototype.isPlaying = function() {
          return !!this.currentPart;
        }),
        (t.prototype.getPlayState = function() {
          return s.Transport.state;
        }),
        t
      );
    })();
    e.BasePlayer = m;
    var y = (function() {
        function t() {
          var t = this;
          (this.DRUM_PITCH_TO_CLASS = new Map()),
            (this.kick = new s.MembraneSynth().toMaster()),
            (this.tomLow = new s.MembraneSynth({
              pitchDecay: 0.008,
              envelope: { attack: 0.01, decay: 0.5, sustain: 0 }
            }).toMaster()),
            (this.tomMid = new s.MembraneSynth({
              pitchDecay: 0.008,
              envelope: { attack: 0.01, decay: 0.5, sustain: 0 }
            }).toMaster()),
            (this.tomHigh = new s.MembraneSynth({
              pitchDecay: 0.008,
              envelope: { attack: 0.01, decay: 0.5, sustain: 0 }
            }).toMaster()),
            (this.closedHihat = new s.MetalSynth({
              frequency: 400,
              envelope: { attack: 0.001, decay: 0.1, release: 0.8 },
              harmonicity: 5.1,
              modulationIndex: 32,
              resonance: 4e3,
              octaves: 1
            }).toMaster()),
            (this.openHihat = new s.MetalSynth({
              frequency: 400,
              envelope: { attack: 0.001, decay: 0.5, release: 0.8, sustain: 1 },
              harmonicity: 5.1,
              modulationIndex: 32,
              resonance: 4e3,
              octaves: 1
            }).toMaster()),
            (this.ride = new s.MetalSynth().toMaster()),
            (this.crash = new s.MetalSynth({
              frequency: 300,
              envelope: { attack: 0.001, decay: 1, release: 3 },
              harmonicity: 5.1,
              modulationIndex: 64,
              resonance: 4e3,
              octaves: 1.5
            }).toMaster()),
            (this.snare = new s.NoiseSynth({
              noise: { type: "white" },
              envelope: {
                attack: 0.005,
                decay: 0.05,
                sustain: 0.1,
                release: 0.4
              }
            }).toMaster()),
            (this.loClick = new s.MembraneSynth({
              pitchDecay: 0.008,
              envelope: { attack: 0.001, decay: 0.3, sustain: 0 }
            }).toMaster()),
            (this.hiClick = new s.MembraneSynth({
              pitchDecay: 0.008,
              envelope: { attack: 0.001, decay: 0.3, sustain: 0 }
            }).toMaster()),
            (this.pitchPlayers = [
              function(e, n) {
                return (
                  void 0 === n && (n = 1),
                  t.kick.triggerAttackRelease("C2", "8n", e, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 1),
                  t.snare.triggerAttackRelease("16n", e, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 1),
                  t.closedHihat.triggerAttack(e, 0.3, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 1), t.openHihat.triggerAttack(e, 0.3, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 0.5), t.tomLow.triggerAttack("G3", e, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 0.5), t.tomMid.triggerAttack("C4", e, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 0.5), t.tomHigh.triggerAttack("F4", e, n)
                );
              },
              function(e, n) {
                return void 0 === n && (n = 1), t.crash.triggerAttack(e, 1, n);
              },
              function(e, n) {
                return void 0 === n && (n = 1), t.ride.triggerAttack(e, 0.5, n);
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 0.5), t.loClick.triggerAttack("G5", e, n)
                );
              },
              function(e, n) {
                return (
                  void 0 === n && (n = 0.5), t.hiClick.triggerAttack("C6", e, n)
                );
              }
            ]);
          for (
            var e = function(e) {
                h.DEFAULT_DRUM_PITCH_CLASSES[e].forEach(function(n) {
                  t.DRUM_PITCH_TO_CLASS.set(n, e);
                });
              },
              n = 0;
            n < h.DEFAULT_DRUM_PITCH_CLASSES.length;
            ++n
          )
            e(n);
          this.DRUM_PITCH_TO_CLASS.set(l.LO_CLICK_PITCH, l.LO_CLICK_CLASS),
            this.DRUM_PITCH_TO_CLASS.set(l.HI_CLICK_PITCH, l.HI_CLICK_CLASS);
        }
        return (
          (t.getInstance = function() {
            return t.instance || (t.instance = new t()), t.instance;
          }),
          (t.prototype.playNote = function(t, e, n) {
            this.pitchPlayers[this.DRUM_PITCH_TO_CLASS.get(t)](e, n);
          }),
          t
        );
      })(),
      g = (function(t) {
        function e() {
          var e = (null !== t && t.apply(this, arguments)) || this;
          return (e.synths = new Map()), (e.drumKit = y.getInstance()), e;
        }
        return (
          i(e, t),
          (e.prototype.playNote = function(t, e) {
            var n = e.hasOwnProperty("velocity")
              ? e.velocity / l.MAX_MIDI_VELOCITY
              : void 0;
            if (e.isDrum) this.drumKit.playNote(e.pitch, t, n);
            else {
              var r = new s.Frequency(e.pitch, "midi"),
                i = e.endTime - e.startTime;
              this.getSynth(e.instrument, e.program).triggerAttackRelease(
                r,
                i,
                t,
                n
              );
            }
          }),
          (e.prototype.getSynth = function(t, e) {
            if (this.synths.has(t)) return this.synths.get(t);
            if (void 0 !== e && e >= 32 && e <= 39) {
              var n = new s.Synth({
                oscillator: { type: "triangle" }
              }).toMaster();
              (n.volume.value = 5), this.synths.set(t, n);
            } else this.synths.set(t, new s.PolySynth(10).toMaster());
            return this.synths.get(t);
          }),
          (e.tone = s),
          e
        );
      })(m);
    e.Player = g;
    var v = (function(t) {
      function e(e, n, r, i, o) {
        void 0 === n && (n = s.Master);
        var a = t.call(this, !1, o) || this;
        return (
          (a.soundFont = new f.SoundFont(e)),
          (a.output = n),
          (a.programOutputs = r),
          (a.drumOutputs = i),
          a
        );
      }
      return (
        i(e, t),
        (e.prototype.loadSamples = function(t) {
          return o(this, void 0, void 0, function() {
            return a(this, function(e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    this.soundFont.loadSamples(
                      t.notes.map(function(t) {
                        return {
                          pitch: t.pitch,
                          velocity: t.velocity,
                          program: t.program || 0,
                          isDrum: t.isDrum || !1
                        };
                      })
                    )
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (e.prototype.loadAllSamples = function(t, e) {
          return (
            void 0 === t && (t = 0),
            void 0 === e && (e = !1),
            o(this, void 0, void 0, function() {
              var n, r, i, o, s;
              return a(this, function(a) {
                for (
                  n = u.NoteSequence.create(),
                    r = e ? l.MIN_DRUM_PITCH : l.MIN_PIANO_PITCH,
                    i = e ? l.MAX_DRUM_PITCH : l.MAX_PIANO_PITCH,
                    o = r;
                  o <= i;
                  o++
                )
                  for (s = l.MIN_MIDI_VELOCITY; s < l.MAX_MIDI_VELOCITY; s++)
                    n.notes.push({
                      pitch: o,
                      velocity: s,
                      program: t,
                      isDrum: e
                    });
                return [2, this.loadSamples(n)];
              });
            })
          );
        }),
        (e.prototype.resumeContext = function() {
          s.context.resume();
        }),
        (e.prototype.start = function(e, n) {
          var r = this;
          return (
            this.resumeContext(),
            this.loadSamples(e).then(function() {
              return t.prototype.start.call(r, e, n);
            })
          );
        }),
        (e.prototype.playNote = function(t, e) {
          this.soundFont.playNote(
            e.pitch,
            e.velocity,
            t,
            e.endTime - e.startTime,
            e.program,
            e.isDrum,
            this.getAudioNodeOutput(e)
          );
        }),
        (e.prototype.playNoteDown = function(t) {
          this.soundFont.playNoteDown(
            t.pitch,
            t.velocity,
            t.program,
            t.isDrum,
            this.getAudioNodeOutput(t)
          );
        }),
        (e.prototype.playNoteUp = function(t) {
          this.soundFont.playNoteUp(
            t.pitch,
            t.velocity,
            t.program,
            t.isDrum,
            this.getAudioNodeOutput(t)
          );
        }),
        (e.prototype.getAudioNodeOutput = function(t) {
          var e = this.output;
          return (
            this.programOutputs && !t.isDrum
              ? this.programOutputs.has(t.program) &&
                (e = this.programOutputs.get(t.program))
              : this.drumOutputs &&
                t.isDrum &&
                this.drumOutputs.has(t.pitch) &&
                (e = this.drumOutputs.get(t.pitch)),
            e
          );
        }),
        e
      );
    })(m);
    e.SoundFontPlayer = v;
    var b = (function(t) {
      function e(e) {
        return t.call(this, !0, e) || this;
      }
      return i(e, t), e;
    })(g);
    e.PlayerWithClick = b;
    var w = (function(t) {
      function e(e) {
        var n = t.call(this, !1, e) || this;
        return (
          (n.outputs = []),
          (n.availableOutputs = []),
          (n.NOTE_ON = 144),
          (n.NOTE_OFF = 128),
          n
        );
      }
      return (
        i(e, t),
        (e.prototype.requestMIDIAccess = function() {
          return o(this, void 0, void 0, function() {
            var t = this;
            return a(this, function(e) {
              return navigator.requestMIDIAccess
                ? [
                    2,
                    new Promise(function(e, n) {
                      navigator.requestMIDIAccess().then(
                        function(n) {
                          n.addEventListener("statechange", function(e) {
                            return t.initOutputs(n);
                          }),
                            e(t.initOutputs(n));
                        },
                        function(t) {
                          return console.log("Something went wrong", n(t));
                        }
                      );
                    })
                  ]
                : [2, null];
            });
          });
        }),
        (e.prototype.initOutputs = function(t) {
          for (
            var e = t.outputs.values(), n = e.next();
            n && !n.done;
            n = e.next()
          )
            this.availableOutputs.push(n.value);
          return this.availableOutputs;
        }),
        (e.prototype.playNote = function(t, e) {
          for (
            var n = e.velocity || 100,
              r = 1e3 * (e.endTime - e.startTime),
              i = [this.NOTE_ON, e.pitch, n],
              o = [this.NOTE_OFF, e.pitch, n],
              a = this.outputs ? this.outputs : this.availableOutputs,
              s = 0;
            s < a.length;
            s++
          )
            this.sendMessageToOutput(a[s], i),
              this.sendMessageToOutput(a[s], o, window.performance.now() + r);
        }),
        (e.prototype.sendMessageToOutput = function(t, e, n) {
          t && t.send(e, n);
        }),
        (e.prototype.playNoteDown = function(t) {
          for (
            var e = [this.NOTE_ON, t.pitch, t.velocity],
              n = this.outputs ? this.outputs : this.availableOutputs,
              r = 0;
            r < n.length;
            r++
          )
            this.sendMessageToOutput(n[r], e);
        }),
        (e.prototype.playNoteUp = function(t) {
          for (
            var e = [this.NOTE_OFF, t.pitch, t.velocity],
              n = this.outputs ? this.outputs : this.availableOutputs,
              r = 0;
            r < n.length;
            r++
          )
            this.sendMessageToOutput(n[r], e, t.endTime - t.startTime);
        }),
        e
      );
    })(m);
    e.MIDIPlayer = w;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(51),
      a = n(9),
      s = (function() {
        function t(t) {
          (this.FADE_SECONDS = 0.1),
            (this.baseURL = t),
            (this.buffers = new o.Buffers([])),
            (this.sourceMap = new Map()),
            (this.initialized = !1);
        }
        return (
          (t.prototype.initialize = function() {
            return r(this, void 0, void 0, function() {
              var t = this;
              return i(this, function(e) {
                switch (e.label) {
                  case 0:
                    return [
                      4,
                      fetch(this.baseURL + "/instrument.json")
                        .then(function(t) {
                          return t.json();
                        })
                        .then(function(e) {
                          (t.name = e.name),
                            (t.minPitch = e.minPitch),
                            (t.maxPitch = e.maxPitch),
                            (t.durationSeconds = e.durationSeconds),
                            (t.releaseSeconds = e.releaseSeconds),
                            (t.percussive = e.percussive),
                            (t.velocities = e.velocities),
                            (t.initialized = !0);
                        })
                    ];
                  case 1:
                    return e.sent(), [2];
                }
              });
            });
          }),
          (t.prototype.sampleInfoToName = function(t) {
            return this.velocities
              ? "p" + t.pitch + "_v" + t.velocity
              : "p" + t.pitch;
          }),
          (t.prototype.sampleNameToURL = function(t) {
            return this.baseURL + "/" + t + ".mp3";
          }),
          (t.prototype.nearestVelocity = function(t) {
            if (!this.velocities) return t;
            t || (t = a.DEFAULT_VELOCITY);
            var e = void 0,
              n = a.MIDI_VELOCITIES;
            return (
              this.velocities.forEach(function(r) {
                var i = Math.abs(r - t);
                i < n && ((e = r), (n = i));
              }),
              e
            );
          }),
          (t.prototype.loadSamples = function(t) {
            return r(this, void 0, void 0, function() {
              var e,
                n,
                r,
                a = this;
              return i(this, function(i) {
                switch (i.label) {
                  case 0:
                    return this.initialized ? [3, 2] : [4, this.initialize()];
                  case 1:
                    i.sent(), (i.label = 2);
                  case 2:
                    return (
                      (e = t
                        .filter(function(t) {
                          return (
                            !(t.pitch < a.minPitch || t.pitch > a.maxPitch) ||
                            (console.log(
                              "Pitch " +
                                t.pitch +
                                " is outside the valid range for " +
                                a.name +
                                ", ignoring."
                            ),
                            !1)
                          );
                        })
                        .map(function(t) {
                          return a.sampleInfoToName({
                            pitch: t.pitch,
                            velocity: a.nearestVelocity(t.velocity)
                          });
                        })),
                      (n = Array.from(new Set(e)).filter(function(t) {
                        return !a.buffers.has(t);
                      })),
                      (r = n.map(function(t) {
                        return { name: t, url: a.sampleNameToURL(t) };
                      })).length > 0
                        ? (r.forEach(function(t) {
                            return a.buffers.add(t.name, t.url);
                          }),
                          [
                            4,
                            new Promise(function(t) {
                              return o.Buffer.on("load", t);
                            })
                          ])
                        : [3, 4]
                    );
                  case 3:
                    i.sent(),
                      console.log("Loaded samples for " + this.name + "."),
                      (i.label = 4);
                  case 4:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.playNote = function(t, e, n, r, i) {
            var a = this.getBuffer(t, e);
            r > this.durationSeconds &&
              console.log(
                "Requested note duration longer than sample duration: " +
                  r +
                  " > " +
                  this.durationSeconds
              );
            var s = new o.BufferSource(a).connect(i);
            if (
              (s.start(n, 0, void 0, 1, 0),
              !this.percussive && r < this.durationSeconds)
            ) {
              var u = new o.BufferSource(a).connect(i);
              s.stop(n + r + this.FADE_SECONDS, this.FADE_SECONDS),
                u.start(
                  n + r,
                  this.durationSeconds,
                  void 0,
                  1,
                  this.FADE_SECONDS
                );
            }
          }),
          (t.prototype.playNoteDown = function(t, e, n) {
            var r = this.getBuffer(t, e),
              i = new o.BufferSource(r).connect(n);
            i.start(0, 0, void 0, 1, 0),
              this.sourceMap.has(t) &&
                this.sourceMap
                  .get(t)
                  .stop(o.now() + this.FADE_SECONDS, this.FADE_SECONDS),
              this.sourceMap.set(t, i);
          }),
          (t.prototype.playNoteUp = function(t, e, n) {
            if (this.sourceMap.has(t)) {
              var r = this.getBuffer(t, e);
              new o.BufferSource(r)
                .connect(n)
                .start(0, this.durationSeconds, void 0, 1, this.FADE_SECONDS),
                this.sourceMap
                  .get(t)
                  .stop(o.now() + this.FADE_SECONDS, this.FADE_SECONDS),
                this.sourceMap.delete(t);
            }
          }),
          (t.prototype.getBuffer = function(t, e) {
            if (!this.initialized)
              throw new Error("Instrument is not initialized.");
            if (!(t < this.minPitch || t > this.maxPitch)) {
              var n = this.sampleInfoToName({
                pitch: t,
                velocity: this.nearestVelocity(e)
              });
              if (!this.buffers.has(n))
                throw new Error("Buffer not found for " + this.name + ": " + n);
              var r = this.buffers.get(n);
              if (!r.loaded)
                throw new Error(
                  "Buffer not loaded for " + this.name + ": " + n
                );
              return r;
            }
            console.log(
              "Pitch " +
                t +
                " is outside the valid range for " +
                this.name +
                " (" +
                this.minPitch +
                "-" +
                this.maxPitch +
                ")"
            );
          }),
          t
        );
      })();
    e.Instrument = s;
    var u = (function() {
      function t(t) {
        (this.baseURL = t),
          (this.instruments = new Map()),
          (this.initialized = !1);
      }
      return (
        (t.prototype.initialize = function() {
          return r(this, void 0, void 0, function() {
            var t = this;
            return i(this, function(e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    fetch(this.baseURL + "/soundfont.json")
                      .then(function(t) {
                        return t.json();
                      })
                      .then(function(e) {
                        for (var n in ((t.name = e.name), e.instruments)) {
                          var r = t.baseURL + "/" + e.instruments[n];
                          t.instruments.set(
                            "drums" === n ? "drums" : +n,
                            new s(r)
                          );
                        }
                        t.initialized = !0;
                      })
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (t.prototype.loadSamples = function(t) {
          return r(this, void 0, void 0, function() {
            var e,
              n = this;
            return i(this, function(r) {
              switch (r.label) {
                case 0:
                  return this.initialized ? [3, 2] : [4, this.initialize()];
                case 1:
                  r.sent(), (r.label = 2);
                case 2:
                  return (
                    (e = new Map()),
                    t.forEach(function(t) {
                      (t.isDrum = t.isDrum || !1), (t.program = t.program || 0);
                      var r = t.isDrum ? "drums" : t.program,
                        i = { pitch: t.pitch, velocity: t.velocity };
                      e.has(r)
                        ? e.get(r).push(i)
                        : n.instruments.has(r)
                        ? e.set(r, [i])
                        : console.log(
                            "No instrument in " +
                              n.name +
                              " for: program=" +
                              t.program +
                              ", isDrum=" +
                              t.isDrum
                          );
                    }),
                    [
                      4,
                      Promise.all(
                        Array.from(e.keys()).map(function(t) {
                          return n.instruments.get(t).loadSamples(e.get(t));
                        })
                      )
                    ]
                  );
                case 3:
                  return r.sent(), [2];
              }
            });
          });
        }),
        (t.prototype.playNote = function(t, e, n, r, i, o, a) {
          void 0 === i && (i = 0), void 0 === o && (o = !1);
          var s = o ? "drums" : i;
          if (!this.initialized)
            throw new Error("SoundFont is not initialized.");
          this.instruments.has(s)
            ? this.instruments.get(s).playNote(t, e, n, r, a)
            : console.log(
                "No instrument in " +
                  this.name +
                  " for: program=" +
                  i +
                  ", isDrum=" +
                  o
              );
        }),
        (t.prototype.playNoteDown = function(t, e, n, r, i) {
          void 0 === n && (n = 0), void 0 === r && (r = !1);
          var o = r ? "drums" : n;
          if (!this.initialized)
            throw new Error("SoundFont is not initialized.");
          this.instruments.has(o)
            ? this.instruments.get(o).playNoteDown(t, e, i)
            : console.log(
                "No instrument in " +
                  this.name +
                  " for: program=" +
                  n +
                  ", isDrum=" +
                  r
              );
        }),
        (t.prototype.playNoteUp = function(t, e, n, r, i) {
          void 0 === n && (n = 0), void 0 === r && (r = !1);
          var o = r ? "drums" : n;
          if (!this.initialized)
            throw new Error("SoundFont is not initialized.");
          this.instruments.has(o)
            ? this.instruments.get(o).playNoteUp(t, e, i)
            : console.log(
                "No instrument in " +
                  this.name +
                  " for: program=" +
                  n +
                  ", isDrum=" +
                  r
              );
        }),
        t
      );
    })();
    e.SoundFont = u;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(51),
      a = n(12),
      s = n(9),
      u = (function() {
        return function() {};
      })();
    e.BaseRecorderCallback = u;
    var c = (function() {
      function t(t, e) {
        void 0 === t && (t = {}),
          (this.notes = []),
          (this.midiInputs = []),
          (this.loClick = new o.MembraneSynth({
            pitchDecay: 0.008,
            envelope: { attack: 0.001, decay: 0.3, sustain: 0 }
          }).toMaster()),
          (this.hiClick = new o.MembraneSynth({
            pitchDecay: 0.008,
            envelope: { attack: 0.001, decay: 0.3, sustain: 0 }
          }).toMaster()),
          (this.config = {
            playClick: t.playClick,
            qpm: t.qpm || s.DEFAULT_QUARTERS_PER_MINUTE,
            playCountIn: t.playCountIn,
            startRecordingAtFirstNote: t.startRecordingAtFirstNote || !1
          }),
          (this.callbackObject = e),
          (this.recording = !1),
          (this.onNotes = new Map());
      }
      return (
        (t.prototype.initialize = function() {
          return r(this, void 0, void 0, function() {
            var t = this;
            return i(this, function(e) {
              switch (e.label) {
                case 0:
                  return [
                    4,
                    navigator.requestMIDIAccess().then(
                      function(e) {
                        return t.midiReady(e);
                      },
                      function(t) {
                        return console.log("Something went wrong", t);
                      }
                    )
                  ];
                case 1:
                  return e.sent(), [2];
              }
            });
          });
        }),
        (t.prototype.midiReady = function(t) {
          console.log("Initialized Recorder");
          for (
            var e = t.inputs.values(), n = e.next();
            n && !n.done;
            n = e.next()
          )
            this.midiInputs.push(n.value);
        }),
        (t.prototype.isRecording = function() {
          return this.recording;
        }),
        (t.prototype.setTempo = function(t) {
          (this.config.qpm = t),
            "started" === o.Transport.state && (o.Transport.bpm.value = t);
        }),
        (t.prototype.enablePlayClick = function(t) {
          this.config.playClick = t;
        }),
        (t.prototype.enablePlayCountIn = function(t) {
          this.config.playCountIn = t;
        }),
        (t.prototype.initClickLoop = function() {
          var t = this,
            e = 0;
          this.clickLoop = new o.Loop(function(n) {
            e % 4 == 0
              ? t.loClick.triggerAttack("G5", n)
              : t.hiClick.triggerAttack("C6", n),
              e++,
              t.config.playCountIn &&
                4 === e &&
                (o.Transport.stop(), t.clickLoop.stop());
          }, "4n");
        }),
        (t.prototype.getMIDIInputs = function() {
          return this.midiInputs;
        }),
        (t.prototype.start = function(t) {
          for (
            var e = this, n = 0, r = t || this.midiInputs;
            n < r.length;
            n++
          ) {
            r[n].onmidimessage = function(t) {
              e.midiMessageReceived(t);
            };
          }
          if (
            (this.config.playClick || this.config.playCountIn
              ? (this.initClickLoop(),
                (o.Transport.bpm.value = this.config.qpm),
                o.Transport.start(),
                this.clickLoop.start())
              : (this.clickLoop = null),
            (this.recording = !0),
            (this.firstNoteTimestamp = void 0),
            (this.notes = []),
            (this.onNotes = new Map()),
            !this.startRecordingAtFirstNote)
          ) {
            var i = Date.now();
            this.firstNoteTimestamp = i;
          }
        }),
        (t.prototype.stop = function() {
          var t = this;
          this.recording = !1;
          var e = Date.now();
          this.onNotes.forEach(function(n, r) {
            t.noteOff(r, e);
          });
          for (var n = 0, r = this.midiInputs; n < r.length; n++) {
            r[n].onmidimessage = null;
          }
          return (
            this.clickLoop && (o.Transport.stop(), this.clickLoop.stop()),
            0 === this.notes.length ? null : this.getNoteSequence()
          );
        }),
        (t.prototype.getNoteSequence = function() {
          return 0 === this.notes.length
            ? null
            : a.NoteSequence.create({
                notes: this.notes,
                totalTime: this.notes[this.notes.length - 1].endTime
              });
        }),
        (t.prototype.reset = function() {
          var t = this.stop();
          return (
            (this.firstNoteTimestamp = void 0),
            (this.notes = []),
            (this.onNotes = new Map()),
            t
          );
        }),
        (t.prototype.midiMessageReceived = function(t) {
          if (this.recording) {
            var e =
              (void 0 !== t.timeStamp && 0 !== t.timeStamp
                ? t.timeStamp
                : performance.now()) + performance.timing.navigationStart;
            void 0 === this.firstNoteTimestamp && (this.firstNoteTimestamp = e);
            var n = t.data[0] >> 4,
              r = t.data[1],
              i = t.data.length > 2 ? t.data[2] : 1,
              o = t.srcElement;
            8 === n || (9 === n && 0 === i)
              ? (this.callbackObject &&
                  this.callbackObject.noteOff &&
                  this.callbackObject.noteOff(r, i, o),
                this.noteOff(r, e),
                this.callbackObject &&
                  this.callbackObject.run &&
                  this.callbackObject.run(this.getNoteSequence()))
              : 9 === n &&
                (this.callbackObject &&
                  this.callbackObject.noteOn &&
                  this.callbackObject.noteOn(r, i, o),
                this.noteOn(r, i, e));
          }
        }),
        (t.prototype.noteOn = function(t, e, n) {
          var r = new a.NoteSequence.Note();
          (r.pitch = t),
            (r.startTime = (n - this.firstNoteTimestamp) / 1e3),
            (r.velocity = e),
            this.onNotes.set(t, r);
        }),
        (t.prototype.noteOff = function(t, e) {
          var n = this.onNotes.get(t);
          n &&
            ((n.endTime = (e - this.firstNoteTimestamp) / 1e3),
            this.notes.push(n)),
            this.onNotes.delete(t);
        }),
        t
      );
    })();
    e.Recorder = c;
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(49),
      a = n(9),
      s = (function() {
        function t(t, e) {
          void 0 === e && (e = {}),
            (this.noteSequence = t),
            (this.sequenceIsQuantized = o.sequences.isQuantizedSequence(
              this.noteSequence
            ));
          if (
            ((this.config = {
              noteHeight: e.noteHeight || 6,
              noteSpacing: e.noteSpacing || 1,
              pixelsPerTimeStep: e.pixelsPerTimeStep || 30,
              noteRGB: e.noteRGB || "8, 41, 64",
              activeNoteRGB: e.activeNoteRGB || "240, 84, 119",
              minPitch: e.minPitch,
              maxPitch: e.maxPitch
            }),
            this.sequenceIsQuantized)
          ) {
            var n = t.quantizationInfo.stepsPerQuarter;
            this.config.pixelsPerTimeStep = n
              ? this.config.pixelsPerTimeStep / n
              : 7;
          }
          var r = this.getSize();
          (this.width = r.width), (this.height = r.height);
        }
        return (
          (t.prototype.getSize = function() {
            if (
              void 0 === this.config.minPitch ||
              void 0 === this.config.maxPitch
            ) {
              (this.config.minPitch = a.MAX_MIDI_PITCH),
                (this.config.maxPitch = a.MIN_MIDI_PITCH);
              for (var t = 0, e = this.noteSequence.notes; t < e.length; t++) {
                var n = e[t];
                (this.config.minPitch = Math.min(
                  n.pitch,
                  this.config.minPitch
                )),
                  (this.config.maxPitch = Math.max(
                    n.pitch,
                    this.config.maxPitch
                  ));
              }
              (this.config.minPitch -= 2), (this.config.maxPitch += 2);
            }
            var r =
                (this.config.maxPitch - this.config.minPitch) *
                this.config.noteHeight,
              i = this.sequenceIsQuantized
                ? this.noteSequence.totalQuantizedSteps
                : this.noteSequence.totalTime;
            if (!i)
              throw new Error(
                "The sequence you are using with the mm.PianoRollSVGVisualizer does not have a " +
                  (this.sequenceIsQuantized
                    ? "totalQuantizedSteps"
                    : "totalTime") +
                  " field set, so the visualizer can't be horizontally sized correctly."
              );
            return { width: i * this.config.pixelsPerTimeStep, height: r };
          }),
          (t.prototype.getNotePosition = function(t, e) {
            var n = this.getNoteStartTime(t) * this.config.pixelsPerTimeStep,
              r =
                this.config.pixelsPerTimeStep *
                  (this.getNoteEndTime(t) - this.getNoteStartTime(t)) -
                this.config.noteSpacing;
            return {
              x: n,
              y:
                this.height -
                (t.pitch - this.config.minPitch) * this.config.noteHeight,
              w: r,
              h: this.config.noteHeight
            };
          }),
          (t.prototype.scrollIntoViewIfNeeded = function(t, e) {
            if (t && this.parentElement) {
              var n = this.parentElement.getBoundingClientRect().width;
              e > this.parentElement.scrollLeft + n &&
                (this.parentElement.scrollLeft = e - 20);
            }
          }),
          (t.prototype.getNoteStartTime = function(t) {
            return this.sequenceIsQuantized
              ? t.quantizedStartStep
              : Math.round(1e8 * t.startTime) / 1e8;
          }),
          (t.prototype.getNoteEndTime = function(t) {
            return this.sequenceIsQuantized
              ? t.quantizedEndStep
              : Math.round(1e8 * t.endTime) / 1e8;
          }),
          (t.prototype.isPaintingActiveNote = function(t, e) {
            var n = this.getNoteStartTime(t) === this.getNoteStartTime(e),
              r =
                this.getNoteStartTime(t) <= this.getNoteStartTime(e) &&
                this.getNoteEndTime(t) >= this.getNoteEndTime(e);
            return n || r;
          }),
          t
        );
      })();
    e.BaseVisualizer = s;
    var u = (function(t) {
      function e(e, n, r) {
        void 0 === r && (r = {});
        var i = t.call(this, e, r) || this;
        (i.ctx = n.getContext("2d")), (i.parentElement = n.parentElement);
        var o = window.devicePixelRatio || 1;
        return (
          i.ctx &&
            ((i.ctx.canvas.width = o * i.width),
            (i.ctx.canvas.height = o * i.height),
            (n.style.width = i.width + "px"),
            (n.style.height = i.height + "px"),
            i.ctx.scale(o, o)),
          i.redraw(),
          i
        );
      }
      return (
        i(e, t),
        (e.prototype.redraw = function(t, e) {
          var n;
          this.clear();
          for (var r = 0; r < this.noteSequence.notes.length; r++) {
            var i = this.noteSequence.notes[r],
              o = this.getNotePosition(i, r),
              a = i.velocity ? i.velocity / 100 + 0.2 : 1,
              s = t && this.isPaintingActiveNote(i, t),
              u =
                "rgba(" +
                (s ? this.config.activeNoteRGB : this.config.noteRGB) +
                ",\n  " +
                a +
                ")";
            this.redrawNote(o.x, o.y, o.w, o.h, u), s && i === t && (n = o.x);
          }
          return this.scrollIntoViewIfNeeded(e, n), n;
        }),
        (e.prototype.clear = function() {
          this.ctx.clearRect(
            0,
            0,
            this.ctx.canvas.width,
            this.ctx.canvas.height
          );
        }),
        (e.prototype.redrawNote = function(t, e, n, r, i) {
          (this.ctx.fillStyle = i),
            this.ctx.fillRect(
              Math.round(t),
              Math.round(e),
              Math.round(n),
              Math.round(r)
            );
        }),
        e
      );
    })(s);
    e.PianoRollCanvasVisualizer = u;
    var c = (function(t) {
      function e(e, n, r) {
        void 0 === r && (r = {});
        var i = t.call(this, e, n, r) || this;
        return (
          o.logging.log(
            "mm.Visualizer is deprecated, and will be removed in a future          version. Please use mm.PianoRollCanvasVisualizer instead",
            "mm.Visualizer",
            5
          ),
          i
        );
      }
      return i(e, t), e;
    })(u);
    e.Visualizer = c;
    var l = (function(t) {
      function e(e, n, r) {
        void 0 === r && (r = {});
        var i = t.call(this, e, r) || this;
        if (!(n instanceof SVGSVGElement))
          throw new Error(
            "mm.PianoRollSVGVisualizer requires an <svg> element to display the visualization"
          );
        return (
          (i.svg = n),
          (i.parentElement = n.parentElement),
          (i.drawn = !1),
          (i.svg.style.width = i.width + "px"),
          (i.svg.style.height = i.height + "px"),
          i.clear(),
          i.draw(),
          i
        );
      }
      return (
        i(e, t),
        (e.prototype.redraw = function(t, e) {
          if ((this.drawn || this.draw(), !t)) return null;
          for (
            var n, r = this.svg.querySelectorAll("rect.active"), i = 0;
            i < r.length;
            ++i
          ) {
            var o = r[i],
              a = this.getNoteFillColor(
                this.noteSequence.notes[
                  parseInt(o.getAttribute("data-index"), 10)
                ],
                !1
              );
            o.setAttribute("fill", a), o.removeAttribute("class");
          }
          for (i = 0; i < this.noteSequence.notes.length; i++) {
            var s = this.noteSequence.notes[i];
            if (t && this.isPaintingActiveNote(s, t)) {
              (o = this.svg.querySelector('rect[data-index="' + i + '"]')),
                (a = this.getNoteFillColor(s, !0));
              o.setAttribute("fill", a),
                o.setAttribute("class", "active"),
                s === t && (n = parseFloat(o.getAttribute("x")));
            }
          }
          return this.scrollIntoViewIfNeeded(e, n), n;
        }),
        (e.prototype.draw = function() {
          for (var t = 0; t < this.noteSequence.notes.length; t++) {
            var e = this.noteSequence.notes[t],
              n = this.getNotePosition(e, t),
              r = this.getNoteFillColor(e, !1);
            this.drawNote(n.x, n.y, n.w, n.h, r, t);
          }
          this.drawn = !0;
        }),
        (e.prototype.getNoteFillColor = function(t, e) {
          var n = t.velocity ? t.velocity / 100 + 0.2 : 1;
          return (
            "rgba(" +
            (e ? this.config.activeNoteRGB : this.config.noteRGB) +
            ",\n  " +
            n +
            ")"
          );
        }),
        (e.prototype.drawNote = function(t, e, n, r, i, o) {
          if (this.svg) {
            var a = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "rect"
            );
            a.setAttribute("fill", i),
              a.setAttribute("x", "" + Math.round(t)),
              a.setAttribute("y", "" + Math.round(e)),
              a.setAttribute("width", "" + Math.round(n)),
              a.setAttribute("height", "" + Math.round(r)),
              a.setAttribute("data-index", "" + o),
              this.svg.appendChild(a);
          }
        }),
        (e.prototype.clear = function() {
          (this.svg.innerHTML = ""), (this.drawn = !1);
        }),
        e
      );
    })(s);
    e.PianoRollSVGVisualizer = l;
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(216);
    e.Coconet = r.Coconet;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(0),
      a = n(35),
      s = n(217),
      u = {
        useSoftmaxLoss: !0,
        batchNormVarianceEpsilon: 1e-7,
        numInstruments: 4,
        numFilters: 128,
        numLayers: 33,
        numRegularConvLayers: 0,
        dilation: [
          [1, 1],
          [2, 2],
          [4, 4],
          [8, 8],
          [16, 16],
          [16, 32],
          [1, 1],
          [2, 2],
          [4, 4],
          [8, 8],
          [16, 16],
          [16, 32],
          [1, 1],
          [2, 2],
          [4, 4],
          [8, 8],
          [16, 16],
          [16, 32],
          [1, 1],
          [2, 2],
          [4, 4],
          [8, 8],
          [16, 16],
          [16, 32],
          [1, 1],
          [2, 2],
          [4, 4],
          [8, 8],
          [16, 16],
          [16, 32]
        ],
        layers: null,
        interleaveSplitEveryNLayers: 16,
        numPointwiseSplits: 4
      },
      c = (function() {
        function t(t, e) {
          (this.residualPeriod = 2),
            (this.outputForResidual = null),
            (this.residualCounter = -1),
            (this.rawVars = null),
            (this.spec = t),
            (this.rawVars = e);
        }
        return (
          (t.prototype.dispose = function() {
            null !== this.rawVars && o.dispose(this.rawVars),
              this.outputForResidual && this.outputForResidual.dispose();
          }),
          (t.prototype.predictFromPianoroll = function(t, e) {
            var n = this;
            return o.tidy(function() {
              for (
                var r = n.getConvnetInput(t, e),
                  i = n.spec.layers.length,
                  o = 0;
                o < i;
                o++
              ) {
                (n.residualCounter += 1), n.residualSave(r);
                var a = null;
                n.spec.interleaveSplitEveryNLayers &&
                  o > 0 &&
                  o < i - 2 &&
                  o % (n.spec.interleaveSplitEveryNLayers + 1) == 0 &&
                  (a = n.spec.numPointwiseSplits),
                  (r = n.applyConvolution(
                    r,
                    n.spec.layers[o],
                    o,
                    o >= n.spec.numRegularConvLayers,
                    a
                  )),
                  (r = n.applyResidual(r, 0 === o, o === i - 1, o)),
                  (r = n.applyActivation(r, n.spec.layers[o], o)),
                  (r = n.applyPooling(r, n.spec.layers[o], o));
              }
              return n.computePredictions(r);
            });
          }),
          (t.prototype.computePredictions = function(t) {
            return this.spec.useSoftmaxLoss
              ? t
                  .transpose([0, 1, 3, 2])
                  .softmax()
                  .transpose([0, 1, 3, 2])
              : t.sigmoid();
          }),
          (t.prototype.residualReset = function() {
            (this.outputForResidual = null), (this.residualCounter = 0);
          }),
          (t.prototype.residualSave = function(t) {
            this.residualCounter % this.residualPeriod == 1 &&
              (this.outputForResidual = t);
          }),
          (t.prototype.applyResidual = function(t, e, n, r) {
            return null == this.outputForResidual
              ? t
              : this.outputForResidual.shape[
                  this.outputForResidual.shape.length - 1
                ] !== t.shape[t.shape.length - 1]
              ? (this.residualReset(), t)
              : (this.residualCounter % this.residualPeriod == 0 &&
                  (e || n || (t = t.add(this.outputForResidual))),
                t);
          }),
          (t.prototype.getVar = function(t, e) {
            var n = "model/conv" + e + "/" + t;
            return this.rawVars[n];
          }),
          (t.prototype.getSepConvVar = function(t, e) {
            var n = "model/conv" + e + "/SeparableConv2d/" + t;
            return this.rawVars[n];
          }),
          (t.prototype.getPointwiseSplitVar = function(t, e, n) {
            var r = "model/conv" + e + "/split_" + e + "_" + n + "/" + t;
            return this.rawVars[r];
          }),
          (t.prototype.applyConvolution = function(t, e, n, r, i) {
            if (null == e.filters) return t;
            var a = e.filters,
              s = e.convStride || 1,
              u = e.convPad ? e.convPad.toLowerCase() : "same",
              c = null;
            if (r) {
              var l = this.getSepConvVar("depthwise_weights", n);
              if (i) {
                c = o.depthwiseConv2d(t, l, [s, s], u, "NHWC", e.dilation);
                for (
                  var h = o.split(c, i, c.rank - 1), f = [], p = 0;
                  p < i;
                  p++
                ) {
                  var d = a[3] / i,
                    m = this.getPointwiseSplitVar("kernel", n, p),
                    y =
                      ((b = this.getPointwiseSplitVar("bias", n, p)),
                      o.matMul(h[p].reshape([-1, d]), m, !1, !1)),
                    g = o.add(y, b);
                  f.push(
                    g.reshape([h[p].shape[0], h[p].shape[1], h[p].shape[2], d])
                  );
                }
                c = o.concat(f, c.rank - 1);
              } else {
                var v = this.getSepConvVar("pointwise_weights", n),
                  b = this.getSepConvVar("biases", n);
                c = o
                  .separableConv2d(t, l, v, [s, s], u, e.dilation, "NHWC")
                  .add(b);
              }
            } else {
              m = this.getVar("weights", n);
              var w = e.convStride || 1,
                _ = e.convPad ? e.convPad.toLowerCase() : "same";
              c = o.conv2d(t, m, [w, w], _, "NHWC", [1, 1]);
            }
            return this.applyBatchnorm(c, n);
          }),
          (t.prototype.applyBatchnorm = function(t, e) {
            var n = this,
              r = this.getVar("gamma", e),
              i = this.getVar("beta", e),
              a = this.getVar("popmean", e),
              u = this.getVar("popvariance", e);
            if (s.IS_IOS) {
              var c = u.arraySync()[0][0][0],
                l = o.tensor(
                  c.map(function(t) {
                    return Math.sqrt(t + n.spec.batchNormVarianceEpsilon);
                  })
                );
              return t
                .sub(a)
                .mul(r.div(l))
                .add(i);
            }
            return o.batchNorm(
              t,
              o.squeeze(a),
              o.squeeze(u),
              o.squeeze(i),
              o.squeeze(r),
              this.spec.batchNormVarianceEpsilon
            );
          }),
          (t.prototype.applyActivation = function(t, e, n) {
            return "identity" === e.activation ? t : t.relu();
          }),
          (t.prototype.applyPooling = function(t, e, n) {
            if (null == e.pooling) return t;
            var r = e.pooling,
              i = e.poolPad ? e.poolPad.toLowerCase() : "same";
            return o.maxPool(t, [r[0], r[1]], [r[0], r[1]], i);
          }),
          (t.prototype.getConvnetInput = function(t, e) {
            return (
              (t = o
                .scalar(1, "float32")
                .sub(e)
                .mul(t)),
              (e = o.scalar(1, "float32").sub(e)),
              t.concat(e, 3)
            );
          }),
          t
        );
      })(),
      l = (function() {
        function t(t) {
          (this.spec = null),
            (this.initialized = !1),
            (this.checkpointURL = t),
            (this.spec = u);
        }
        return (
          (t.prototype.initialize = function() {
            return r(this, void 0, void 0, function() {
              var t,
                e,
                n = this;
              return i(this, function(r) {
                switch (r.label) {
                  case 0:
                    return (
                      this.dispose(),
                      (t = performance.now()),
                      this.instantiateFromSpec(),
                      [
                        4,
                        fetch(this.checkpointURL + "/weights_manifest.json")
                          .then(function(t) {
                            return t.json();
                          })
                          .then(function(t) {
                            return o.io.loadWeights(t, n.checkpointURL);
                          })
                      ]
                    );
                  case 1:
                    return (
                      (e = r.sent()),
                      (this.convnet = new c(this.spec, e)),
                      (this.initialized = !0),
                      a.logging.logWithDuration(
                        "Initialized model",
                        t,
                        "Coconet"
                      ),
                      [2]
                    );
                }
              });
            });
          }),
          (t.prototype.dispose = function() {
            this.convnet && this.convnet.dispose(), (this.initialized = !1);
          }),
          (t.prototype.isInitialized = function() {
            return this.initialized;
          }),
          (t.prototype.instantiateFromSpec = function() {
            (this.spec.layers = []),
              this.spec.layers.push({
                filters: [
                  3,
                  3,
                  2 * this.spec.numInstruments,
                  this.spec.numFilters
                ]
              });
            for (var t = 0; t < this.spec.numLayers - 3; t++)
              this.spec.layers.push({
                filters: [3, 3, this.spec.numFilters, this.spec.numFilters],
                dilation: this.spec.dilation ? this.spec.dilation[t] : null
              });
            this.spec.layers.push({
              filters: [2, 2, this.spec.numFilters, this.spec.numFilters]
            }),
              this.spec.layers.push({
                filters: [2, 2, this.spec.numFilters, this.spec.numInstruments],
                activation: "identity"
              });
          }),
          (t.prototype.infill = function(t, e) {
            return r(this, void 0, void 0, function() {
              var n, r, o, u, c, l, h;
              return i(this, function(i) {
                switch (i.label) {
                  case 0:
                    if (
                      (a.sequences.assertIsRelativeQuantizedSequence(t),
                      0 === t.notes.length)
                    )
                      throw new Error(
                        "NoteSequence " +
                          t.id +
                          " does not have any notes to infill."
                      );
                    return (
                      (n =
                        t.totalQuantizedSteps ||
                        t.notes[t.notes.length - 1].quantizedEndStep),
                      (r = s.sequenceToPianoroll(t, n)),
                      (o = 0.99),
                      (u = 96),
                      e
                        ? ((u = e.numIterations || u),
                          (o = e.temperature || o),
                          (c = this.getCompletionMaskFromInput(
                            e.infillMask,
                            r
                          )))
                        : (c = this.getCompletionMask(r)),
                      [4, this.run(r, u, o, c)]
                    );
                  case 1:
                    return (
                      (l = i.sent()),
                      (h = s.pianorollToSequence(l, n)),
                      r.dispose(),
                      l.dispose(),
                      c.dispose(),
                      [2, h]
                    );
                }
              });
            });
          }),
          (t.prototype.run = function(t, e, n, o) {
            return r(this, void 0, void 0, function() {
              return i(this, function(r) {
                return [2, this.gibbs(t, e, n, o)];
              });
            });
          }),
          (t.prototype.getCompletionMaskFromInput = function(t, e) {
            if (t) {
              for (var n = o.buffer([e.shape[1], 4]), r = 0; r < t.length; r++)
                n.set(1, t[r].step, t[r].voice);
              return o.tidy(function() {
                return n
                  .toTensor()
                  .expandDims(1)
                  .tile([1, s.NUM_PITCHES, 1])
                  .expandDims(0);
              });
            }
            return this.getCompletionMask(e);
          }),
          (t.prototype.getCompletionMask = function(t) {
            return o.tidy(function() {
              var e = t.sum(2, !0).equal(o.scalar(0, "float32"));
              return o.cast(e, "float32").add(o.zerosLike(t));
            });
          }),
          (t.prototype.gibbs = function(t, e, n, a) {
            return r(this, void 0, void 0, function() {
              var r,
                s,
                u,
                c,
                l,
                h = this;
              return i(this, function(f) {
                switch (f.label) {
                  case 0:
                    (r = o.scalar(e, "float32")),
                      (s = t.clone()),
                      (u = function(t) {
                        var e, u, l;
                        return i(this, function(i) {
                          switch (i.label) {
                            case 0:
                              return (
                                (e = c.yaoSchedule(t, r)),
                                (u = c.bernoulliMask(s.shape, e, a)),
                                [4, o.nextFrame()]
                              );
                            case 1:
                              return (
                                i.sent(),
                                (l = o.tidy(function() {
                                  return h.convnet.predictFromPianoroll(s, u);
                                })),
                                [4, o.nextFrame()]
                              );
                            case 2:
                              return (
                                i.sent(),
                                (s = o.tidy(function() {
                                  var t = h.samplePredictions(l, n),
                                    r = o.where(o.cast(u, "bool"), t, s);
                                  return (
                                    s.dispose(),
                                    l.dispose(),
                                    u.dispose(),
                                    e.dispose(),
                                    r
                                  );
                                })),
                                [4, o.nextFrame()]
                              );
                            case 3:
                              return i.sent(), [2];
                          }
                        });
                      }),
                      (c = this),
                      (l = 0),
                      (f.label = 1);
                  case 1:
                    return l < e ? [5, u(l)] : [3, 4];
                  case 2:
                    f.sent(), (f.label = 3);
                  case 3:
                    return l++, [3, 1];
                  case 4:
                    return r.dispose(), [2, s];
                }
              });
            });
          }),
          (t.prototype.yaoSchedule = function(t, e) {
            return o.tidy(function() {
              var n = o.scalar(0.1, "float32"),
                r = o.scalar(0.9, "float32"),
                i = o.scalar(0.7, "float32"),
                a = r
                  .sub(n)
                  .mul(o.scalar(t, "float32"))
                  .div(e),
                s = r.sub(a).div(i);
              return n
                .reshape([1])
                .concat(s.reshape([1]))
                .max();
            });
          }),
          (t.prototype.bernoulliMask = function(t, e, n) {
            return o.tidy(function() {
              var r = t[0],
                i = t[1],
                a = t[2],
                s = t[3],
                u = o
                  .tile(o.randomUniform([r, i, 1, s], 0, 1, "float32"), [
                    1,
                    1,
                    a,
                    1
                  ])
                  .less(e);
              return o.cast(u, "float32").mul(n);
            });
          }),
          (t.prototype.samplePredictions = function(t, e) {
            return o.tidy(function() {
              t = o.pow(t, o.scalar(1 / e, "float32"));
              var n = o.cumsum(t, 2, !1, !1),
                r = n.slice(
                  [0, 0, n.shape[2] - 1, 0],
                  [n.shape[0], n.shape[1], 1, n.shape[3]]
                ),
                i = o
                  .randomUniform(r.shape, 0, 1, "float32")
                  .mul(r)
                  .less(n)
                  .argMax(2);
              return o
                .oneHot(i.flatten(), t.shape[2], 1, 0)
                .reshape([t.shape[0], t.shape[1], t.shape[3], t.shape[2]])
                .transpose([0, 1, 3, 2]);
            });
          }),
          t
        );
      })();
    e.Coconet = l;
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(0),
      i = n(35),
      o = n(12);
    (e.IS_IOS = /iPad|iPhone|iPod/.test(navigator.userAgent)),
      (e.NUM_PITCHES = 46),
      (e.MIN_PITCH = 36),
      (e.NUM_VOICES = 4),
      (e.pianorollToSequence = function(t, n) {
        for (
          var i = r.tidy(function() {
              return t.reshape([n, e.NUM_PITCHES, e.NUM_VOICES]).arraySync();
            }),
            a = o.NoteSequence.create(),
            s = [],
            u = 0;
          u < n;
          u++
        )
          for (var c = 0; c < e.NUM_PITCHES; c++)
            for (var l = 0; l < e.NUM_VOICES; l++)
              if (1 === i[u][c][l]) {
                var h = o.NoteSequence.Note.create({
                  pitch: c + e.MIN_PITCH,
                  instrument: l,
                  quantizedStartStep: u,
                  quantizedEndStep: u + 1
                });
                s.push(h);
              }
        return (
          (a.notes = s),
          (a.totalQuantizedSteps = s[s.length - 1].quantizedEndStep),
          (a.quantizationInfo = { stepsPerQuarter: 4 }),
          a
        );
      }),
      (e.sequenceToPianoroll = function(t, n) {
        var o = r.tidy(function() {
          return r.zeros([n, e.NUM_PITCHES, e.NUM_VOICES]).arraySync();
        });
        return (
          t.notes.forEach(function(r) {
            var a = r.pitch - e.MIN_PITCH,
              s = r.quantizedStartStep,
              u = r.quantizedEndStep - r.quantizedStartStep,
              c = r.instrument;
            if (c < 0 || c >= e.NUM_VOICES)
              i.logging.log(
                "Found invalid voice " + c + ". Skipping.",
                "Coconet",
                5
              );
            else {
              if (s + u > n)
                throw new Error(
                  "NoteSequence " +
                    t.id +
                    " has notes that are longer than the sequence's\n          totalQuantizedSteps."
                );
              for (var l = s; l < s + u; l++) o[l][a][c] = 1;
            }
          }),
          r.tensor([o])
        );
      });
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(219);
    e.MusicRNN = r.MusicRNN;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7),
      a = n(94),
      s = n(50),
      u = n(32),
      c = n(16),
      l = n(26),
      h = n(220),
      f = (function() {
        function t(t, e) {
          (this.checkpointURL = t),
            (this.spec = e),
            (this.initialized = !1),
            (this.rawVars = {}),
            (this.biasShapes = []),
            (this.lstmCells = []);
        }
        return (
          (t.prototype.isInitialized = function() {
            return this.initialized;
          }),
          (t.prototype.instantiateFromSpec = function() {
            (this.dataConverter = u.converterFromSpec(this.spec.dataConverter)),
              (this.attentionLength = this.spec.attentionLength),
              (this.chordEncoder = this.spec.chordEncoder
                ? s.chordEncoderFromType(this.spec.chordEncoder)
                : void 0),
              (this.auxInputs = this.spec.auxInputs
                ? this.spec.auxInputs.map(function(t) {
                    return a.auxiliaryInputFromSpec(t);
                  })
                : void 0);
          }),
          (t.prototype.initialize = function() {
            return r(this, void 0, void 0, function() {
              var t,
                e,
                n,
                r,
                a,
                s,
                u,
                l = this;
              return i(this, function(i) {
                switch (i.label) {
                  case 0:
                    return (
                      this.dispose(),
                      (t = performance.now()),
                      this.spec
                        ? [3, 2]
                        : [
                            4,
                            fetch(this.checkpointURL + "/config.json")
                              .then(function(t) {
                                return t.json();
                              })
                              .then(function(t) {
                                if ("MusicRNN" !== t.type)
                                  throw new Error(
                                    "Attempted to instantiate MusicRNN model with incorrect type:\n                  " +
                                      t.type
                                  );
                                l.spec = t;
                              })
                          ]
                    );
                  case 1:
                    i.sent(), (i.label = 2);
                  case 2:
                    return (
                      this.instantiateFromSpec(),
                      [
                        4,
                        fetch(this.checkpointURL + "/weights_manifest.json")
                          .then(function(t) {
                            return t.json();
                          })
                          .then(function(t) {
                            return o.io.loadWeights(t, l.checkpointURL);
                          })
                      ]
                    );
                  case 3:
                    for (
                      e = i.sent(),
                        n = h.AttentionWrapper.isWrapped(e),
                        r = n ? "rnn/" + h.ATTENTION_PREFIX : "rnn/",
                        this.forgetBias = o.scalar(1),
                        this.lstmCells.length = 0,
                        this.biasShapes.length = 0,
                        a = 0,
                        s = function() {
                          var t =
                            r +
                            "multi_rnn_cell/cell_%d/basic_lstm_cell/".replace(
                              "%d",
                              a.toString()
                            );
                          if (!(t + "kernel" in e)) return "break";
                          u.lstmCells.push(function(n, r, i) {
                            return o.basicLSTMCell(
                              l.forgetBias,
                              e[t + "kernel"],
                              e[t + "bias"],
                              n,
                              r,
                              i
                            );
                          }),
                            u.biasShapes.push(e[t + "bias"].shape[0]),
                            ++a;
                        },
                        u = this;
                      "break" !== s();

                    );
                    return (
                      (this.lstmFcW = e["fully_connected/weights"]),
                      (this.lstmFcB = e["fully_connected/biases"]),
                      n &&
                        ((this.attentionWrapper = new h.AttentionWrapper(
                          this.lstmCells,
                          this.attentionLength,
                          this.biasShapes[0] / 4
                        )),
                        this.attentionWrapper.initialize(e)),
                      (this.rawVars = e),
                      (this.initialized = !0),
                      c.logWithDuration("Initialized model", t, "MusicRNN"),
                      [2]
                    );
                }
              });
            });
          }),
          (t.prototype.dispose = function() {
            var t = this;
            Object.keys(this.rawVars).forEach(function(e) {
              return t.rawVars[e].dispose();
            }),
              (this.rawVars = {}),
              this.forgetBias &&
                (this.forgetBias.dispose(), (this.forgetBias = void 0)),
              (this.initialized = !1);
          }),
          (t.prototype.continueSequence = function(t, e, n, o) {
            return r(this, void 0, void 0, function() {
              return i(this, function(r) {
                switch (r.label) {
                  case 0:
                    return [4, this.continueSequenceImpl(t, e, n, o, !1)];
                  case 1:
                    return [2, r.sent().sequence];
                }
              });
            });
          }),
          (t.prototype.continueSequenceAndReturnProbabilities = function(
            t,
            e,
            n,
            o
          ) {
            return r(this, void 0, void 0, function() {
              return i(this, function(r) {
                return [2, this.continueSequenceImpl(t, e, n, o, !0)];
              });
            });
          }),
          (t.prototype.continueSequenceImpl = function(t, e, n, a, s) {
            return r(this, void 0, void 0, function() {
              var r,
                u,
                h,
                f,
                p,
                d,
                m,
                y,
                g = this;
              return i(this, function(i) {
                switch (i.label) {
                  case 0:
                    if (
                      (l.assertIsRelativeQuantizedSequence(t),
                      this.chordEncoder && !a)
                    )
                      throw new Error(
                        "Chord progression expected but not provided."
                      );
                    if (!this.chordEncoder && a)
                      throw new Error("Unexpected chord progression provided.");
                    return this.initialized ? [3, 2] : [4, this.initialize()];
                  case 1:
                    i.sent(), (i.label = 2);
                  case 2:
                    return (
                      (r = performance.now()),
                      [
                        4,
                        (u = o.tidy(function() {
                          var r = g.dataConverter.toTensor(t),
                            i = r.shape[0],
                            u = r.shape[1],
                            c = g.chordEncoder
                              ? g.chordEncoder.encodeProgression(a, i + e)
                              : void 0,
                            l = g.auxInputs
                              ? o.concat(
                                  g.auxInputs.map(function(t) {
                                    return t.getTensors(i + e);
                                  }),
                                  1
                                )
                              : void 0,
                            h = g.sampleRnn(r, e, n, c, l, s),
                            f = h.samples;
                          return {
                            samples: o.stack(f).as2D(f.length, u),
                            probs: h.probs
                          };
                        }))
                      ]
                    );
                  case 3:
                    if (
                      ((h = i.sent()),
                      (f = this.dataConverter.toNoteSequence(
                        h.samples,
                        t.quantizationInfo.stepsPerQuarter
                      )),
                      (p = []),
                      !s)
                    )
                      return [3, 7];
                    (d = 0), (i.label = 4);
                  case 4:
                    return d < h.probs.length
                      ? ((y = (m = p).push), [4, h.probs[d].data()])
                      : [3, 7];
                  case 5:
                    y.apply(m, [i.sent()]), h.probs[d].dispose(), (i.label = 6);
                  case 6:
                    return d++, [3, 4];
                  case 7:
                    return (
                      u.samples.dispose(),
                      f.then(function() {
                        return c.logWithDuration(
                          "Continuation completed",
                          r,
                          "MusicRNN",
                          20
                        );
                      }),
                      [2, { sequence: f, probs: p }]
                    );
                }
              });
            });
          }),
          (t.prototype.sampleRnn = function(t, e, n, r, i, a) {
            for (
              var s, u = t.shape[0], c = t.shape[1], l = [], h = [], f = 0;
              f < this.biasShapes.length;
              f++
            )
              l.push(o.zeros([1, this.biasShapes[f] / 4])),
                h.push(o.zeros([1, this.biasShapes[f] / 4]));
            var p,
              d = this.attentionWrapper
                ? this.attentionWrapper.initState()
                : null;
            t = t.toFloat();
            var m = [],
              y = [],
              g = o.split(t.toFloat(), u),
              v = r ? o.split(r, r.shape[0]) : void 0,
              b = i ? o.split(i, i.shape[0]) : void 0;
            for (f = 0; f < u + e; f++) {
              var w = void 0;
              if (f < u) w = g[f];
              else {
                var _ = p
                    .matMul(this.lstmFcW)
                    .add(this.lstmFcB)
                    .as1D(),
                  S = void 0;
                n
                  ? ((_ = _.div(o.scalar(n))), (S = o.multinomial(_, 1).as1D()))
                  : (S = _.argMax().as1D()),
                  a && y.push(o.softmax(_)),
                  (w = o.oneHot(S, c).toFloat()),
                  m.push(w.as1D());
              }
              if (f === u + e - 1) break;
              var x = [];
              if (
                (v && x.push(v[f + 1]),
                x.push(w),
                b && x.push(b[f]),
                (w = o.concat(x, 1)),
                this.attentionWrapper)
              ) {
                var T = this.attentionWrapper.call(w, l, h, d);
                (l = T.c), (h = T.h), (d = T.attentionState), (p = T.output);
              } else
                (l = (s = o.multiRNNCell(this.lstmCells, w, l, h))[0]),
                  (p = (h = s[1])[h.length - 1]);
            }
            return { samples: m, probs: y };
          }),
          t
        );
      })();
    e.MusicRNN = f;
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(7);
    e.ATTENTION_PREFIX = "attention_cell_wrapper/";
    var i = (function() {
      function t(t, e, n) {
        (this.cells = t), (this.attnLength = e), (this.attnSize = n);
      }
      return (
        (t.isWrapped = function(t) {
          return "rnn/" + e.ATTENTION_PREFIX + "kernel" in t;
        }),
        (t.prototype.initialize = function(t) {
          var n = "rnn/" + e.ATTENTION_PREFIX;
          (this.attnInputMatrix = t[n + "kernel"]),
            (this.attnInputBias = t[n + "bias"]),
            (this.attnW = t[n + "attention/attn_w"]),
            (this.attnV = t[n + "attention/attn_v"]),
            (this.attnMatrix = t[n + "attention/kernel"]),
            (this.attnBias = t[n + "attention/bias"]),
            (this.attnOutputMatrix =
              t[n + "attention_output_projection/kernel"]),
            (this.attnOutputBias = t[n + "attention_output_projection/bias"]);
        }),
        (t.prototype.initState = function() {
          return {
            attention: r.zeros([this.attnSize]),
            attentionState: r.zeros([1, this.attnSize * this.attnLength])
          };
        }),
        (t.prototype.call = function(t, e, n, i) {
          var o,
            a = r.concat([t, i.attention.as2D(1, -1)], 1),
            s = r.add(
              r.matMul(a, this.attnInputMatrix),
              this.attnInputBias.as2D(1, -1)
            );
          (e = (o = r.multiRNNCell(this.cells, s, e, n))[0]), (n = o[1]);
          for (
            var u = r.reshape(i.attentionState, [
                -1,
                this.attnLength,
                1,
                this.attnSize
              ]),
              c = r.conv2d(u, this.attnW, [1, 1], "same"),
              l = [],
              h = 0;
            h < e.length;
            h++
          )
            l.push(e[h]), l.push(n[h]);
          var f = r.concat(l, 1),
            p = r.matMul(f, this.attnMatrix).reshape([-1, 1, 1, this.attnSize]),
            d = r.sum(r.mul(this.attnV, r.tanh(r.add(c, p))), [2, 3]),
            m = r.softmax(d),
            y = r
              .sum(r.mul(r.reshape(m, [-1, this.attnLength, 1, 1]), u), [1, 2])
              .reshape([-1, this.attnSize]),
            g = i.attentionState.reshape([-1, this.attnLength, this.attnSize]),
            v = r.slice(g, [0, 1, 0], [g.shape[0], g.shape[1] - 1, g.shape[2]]),
            b = r.add(
              r.matMul(r.concat([n[2], y], 1), this.attnOutputMatrix),
              this.attnOutputBias
            ),
            w = y.flatten(),
            _ = r
              .concat([v, b.as3D(b.shape[0], 1, b.shape[1])], 1)
              .reshape([-1, this.attnLength * this.attnSize]);
          return {
            output: b,
            c: e,
            h: n,
            attentionState: { attention: w, attentionState: _ }
          };
        }),
        t
      );
    })();
    e.AttentionWrapper = i;
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(222);
    e.MidiMe = r.MidiMe;
    var i = n(223);
    (e.Decoder = i.Decoder), (e.Encoder = i.Encoder), (e.MusicVAE = i.MusicVAE);
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }),
      o =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      a =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var s = n(7),
      u = n(16),
      c = (function(t) {
        function e() {
          return t.call(this, {}) || this;
        }
        return (
          i(e, t),
          (e.prototype.computeOutputShape = function(t) {
            return t[0];
          }),
          (e.prototype.call = function(t) {
            return s.tidy(function() {
              var e = t[0],
                n = t[1];
              return s.add(s.mul(s.randomNormal(n.shape), n), e);
            });
          }),
          (e.prototype.getClassName = function() {
            return "SamplingLayer";
          }),
          e
        );
      })(s.layers.Layer),
      l = (function() {
        function t(t) {
          void 0 === t && (t = {}),
            (this.trained = !1),
            (this.initialized = !1),
            (this.config = {
              encoder_layers: t.encoder_layers || [1024, 256, 64],
              decoder_layers: t.decoder_layers || [64, 256, 1024],
              input_size: t.input_size || 256,
              latent_size: t.latent_size || 4,
              beta: t.beta || 1,
              epochs: t.epochs || 10
            });
        }
        return (
          (t.prototype.dispose = function() {
            this.initialized &&
              (this.encoder.dispose(),
              this.decoder.dispose(),
              this.vae.dispose(),
              (this.initialized = !1));
          }),
          (t.prototype.initialize = function() {
            this.dispose();
            var t = performance.now(),
              e = s.input({ shape: [this.config.input_size] });
            this.encoder = this.getEncoder(e);
            var n = this.encoder.apply(e)[0];
            this.decoder = this.getDecoder(n.shape.slice(1));
            var r = this.decoder.apply(n);
            (this.vae = s.model({ inputs: e, outputs: r, name: "vae" })),
              (this.initialized = !0),
              u.logWithDuration("Initialized model", t, "MidiMe");
          }),
          (t.prototype.train = function(t, e) {
            return o(this, void 0, void 0, function() {
              var n,
                r,
                i,
                o,
                c,
                l = this;
              return a(this, function(h) {
                switch (h.label) {
                  case 0:
                    (n = performance.now()),
                      (this.trained = !1),
                      (r = 0.001),
                      !1 === s.ENV.get("WEBGL_RENDER_FLOAT32_ENABLED") &&
                        !1 === s.ENV.get("WEBGL_DOWNLOAD_FLOAT_ENABLED") &&
                        1 === s.ENV.get("WEBGL_VERSION") &&
                        (r = 5e-5),
                      (i = s.train.adam(r)),
                      (o = function(n) {
                        return a(this, function(r) {
                          switch (r.label) {
                            case 0:
                              return [4, s.nextFrame()];
                            case 1:
                              return (
                                r.sent(),
                                [
                                  4,
                                  i.minimize(function() {
                                    return s.tidy(function() {
                                      var r = l.encoder.predict(t),
                                        i = r[1],
                                        o = r[2],
                                        a = l.vae.predict(t),
                                        s = l.loss(i, o, a, t);
                                      return (
                                        e &&
                                          e(n, {
                                            y: a,
                                            total: s.totalLoss.arraySync(),
                                            losses: [
                                              s.reconLoss.arraySync(),
                                              s.latentLoss.arraySync()
                                            ]
                                          }),
                                        s.totalLoss
                                      );
                                    });
                                  })
                                ]
                              );
                            case 2:
                              return r.sent(), [4, s.nextFrame()];
                            case 3:
                              return r.sent(), [2];
                          }
                        });
                      }),
                      (c = 0),
                      (h.label = 1);
                  case 1:
                    return c < this.config.epochs ? [5, o(c)] : [3, 4];
                  case 2:
                    h.sent(), (h.label = 3);
                  case 3:
                    return c++, [3, 1];
                  case 4:
                    return (
                      u.logWithDuration("Training finished", n, "MidiMe"),
                      (this.trained = !0),
                      i.dispose(),
                      [2]
                    );
                }
              });
            });
          }),
          (t.prototype.sample = function(t) {
            return (
              void 0 === t && (t = 1),
              o(this, void 0, void 0, function() {
                var e = this;
                return a(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return this.initialized ? [3, 2] : [4, this.initialize()];
                    case 1:
                      n.sent(), (n.label = 2);
                    case 2:
                      return [
                        2,
                        s.tidy(function() {
                          var n = s.randomNormal([t, e.config.latent_size]);
                          return e.decoder.predict(n);
                        })
                      ];
                  }
                });
              })
            );
          }),
          (t.prototype.decode = function(t) {
            return o(this, void 0, void 0, function() {
              return a(this, function(e) {
                switch (e.label) {
                  case 0:
                    return this.initialized ? [3, 2] : [4, this.initialize()];
                  case 1:
                    e.sent(), (e.label = 2);
                  case 2:
                    return [2, this.decoder.predict(t)];
                }
              });
            });
          }),
          (t.prototype.encode = function(t) {
            return o(this, void 0, void 0, function() {
              var e;
              return a(this, function(n) {
                switch (n.label) {
                  case 0:
                    return this.initialized ? [3, 2] : [4, this.initialize()];
                  case 1:
                    n.sent(), (n.label = 2);
                  case 2:
                    return (e = this.encoder.predict(t)), [2, e[0]];
                }
              });
            });
          }),
          (t.prototype.predict = function(t) {
            return this.vae.predict(t);
          }),
          (t.prototype.getEncoder = function(t) {
            for (var e = t, n = 0; n < this.config.encoder_layers.length; n++)
              e = s.layers
                .dense({
                  units: this.config.encoder_layers[n],
                  activation: "relu"
                })
                .apply(e);
            var r = this.getAffineLayers(e, this.config.latent_size, t, !1),
              i = this.getAffineLayers(e, this.config.latent_size, t, !0),
              o = new c().apply([r, i]);
            return s.model({ inputs: t, outputs: [o, r, i], name: "encoder" });
          }),
          (t.prototype.getDecoder = function(t) {
            for (
              var e = s.input({ shape: t }), n = e, r = 0;
              r < this.config.decoder_layers.length;
              r++
            )
              n = s.layers
                .dense({
                  units: this.config.decoder_layers[r],
                  activation: "relu"
                })
                .apply(n);
            var i = this.getAffineLayers(n, this.config.input_size, e, !1);
            return s.model({ inputs: e, outputs: i, name: "decoder" });
          }),
          (t.prototype.loss = function(t, e, n, r) {
            var i = this;
            return s.tidy(function() {
              var o = i.klLoss(t, e),
                a = i.reconstructionLoss(r, n);
              return {
                latentLoss: o,
                reconLoss: a,
                totalLoss: s.add(a, s.mul(o, i.config.beta))
              };
            });
          }),
          (t.prototype.reconstructionLoss = function(t, e) {
            return s.tidy(function() {
              var n = s.pow(s.sub(t, e), 2),
                r = s.div(n, s.mul(2, s.pow(s.ones([1]), 2)));
              return s.mean(s.sum(r, -1));
            });
          }),
          (t.prototype.klLoss = function(t, e) {
            return s.tidy(function() {
              var n = s.pow(t, 2),
                r = s.pow(e, 2),
                i = s.add(1, s.log(r)),
                o = s.add(n, r),
                a = s.sub(i, o),
                u = s.div(s.mean(s.sum(a, -1)), 2);
              return s.mul(-1, u);
            });
          }),
          (t.prototype.getAffineLayers = function(t, e, n, r) {
            var i = s.layers.dense({ units: e }).apply(t);
            return r
              ? s.layers.activation({ activation: "softplus" }).apply(i)
              : i;
          }),
          t
        );
      })();
    e.MidiMe = l;
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }),
      o =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      a =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var s = n(7),
      u = n(50),
      c = n(9),
      l = n(32),
      h = n(16),
      f = (function() {
        return function(t, e) {
          if (void 0 === t) throw Error("`kernel` is undefined.");
          if (void 0 === e) throw Error("`bias` is undefined.");
          (this.kernel = t), (this.bias = e);
        };
      })();
    function p(t, e) {
      return e.matMul(t.kernel).add(t.bias);
    }
    e.LayerVars = f;
    var d = (function() {
      return function() {};
    })();
    e.Encoder = d;
    var m = (function(t) {
        function e(e, n, r) {
          var i = t.call(this) || this;
          return (
            (i.lstmFwVars = e),
            (i.lstmBwVars = n),
            (i.muVars = r),
            (i.zDims = r ? i.muVars.bias.shape[0] : null),
            i
          );
        }
        return (
          i(e, t),
          (e.prototype.encode = function(t, e) {
            var n = this;
            if (e)
              throw new Error(
                "Variable-length segments not supported in flat encoder"
              );
            return s.tidy(function() {
              var e = n.singleDirection(t, !0),
                r = n.singleDirection(t, !1),
                i = s.concat([e[1], r[1]], 1);
              return n.muVars ? p(n.muVars, i) : i;
            });
          }),
          (e.prototype.singleDirection = function(t, e) {
            for (
              var n = t.shape[0],
                r = t.shape[1],
                i = e ? this.lstmFwVars : this.lstmBwVars,
                o = [
                  s.zeros([n, i.bias.shape[0] / 4]),
                  s.zeros([n, i.bias.shape[0] / 4])
                ],
                a = s.scalar(1),
                u = function(t, e) {
                  return s.basicLSTMCell(a, i.kernel, i.bias, t, e[0], e[1]);
                },
                c = s.split(t.toFloat(), r, 1),
                l = 0,
                h = e ? c : c.reverse();
              l < h.length;
              l++
            ) {
              o = u(h[l].squeeze([1]), o);
            }
            return o;
          }),
          e
        );
      })(d),
      y = (function(t) {
        function e(e, n, r) {
          var i = t.call(this) || this;
          return (
            (i.baseEncoders = e),
            (i.numSteps = n),
            (i.muVars = r),
            (i.zDims = i.muVars.bias.shape[0]),
            i
          );
        }
        return (
          i(e, t),
          (e.prototype.encode = function(t, e) {
            var n = this;
            if (e) {
              if (1 !== t.shape[0])
                throw new Error(
                  "When using variable-length segments, batch size must be 1."
                );
              if (e.length !== this.numSteps[0])
                throw new Error(
                  "Must provide length for all variable-length segments."
                );
            }
            return s.tidy(function() {
              for (var r = t, i = 0; i < n.baseEncoders.length; ++i) {
                for (
                  var o = n.numSteps[i], a = s.split(r, o, 1), u = [], c = 0;
                  c < o;
                  ++c
                )
                  u.push(
                    n.baseEncoders[i].encode(
                      0 === i && e
                        ? s.slice3d(a[c], [0, 0, 0], [1, e[c], -1])
                        : a[c]
                    )
                  );
                r = s.stack(u, 1);
              }
              return p(n.muVars, r.squeeze([1]));
            });
          }),
          e
        );
      })(d);
    function g(t, e, n) {
      for (
        var r = [],
          i = [],
          o = [],
          a = s.split(p(n, t).tanh(), 2 * e.length, 1),
          u = function(t) {
            var n = e[t],
              u = s.scalar(1);
            r.push(function(t, e, r) {
              return s.basicLSTMCell(u, n.kernel, n.bias, t, e, r);
            }),
              i.push(a[2 * t]),
              o.push(a[2 * t + 1]);
          },
          c = 0;
        c < e.length;
        ++c
      )
        u(c);
      return { cell: r, c: i, h: o };
    }
    var v = (function() {
      return function() {};
    })();
    e.Decoder = v;
    var b = (function(t) {
        function e(e, n, r, i) {
          var o = t.call(this) || this;
          return (
            (o.lstmCellVars = e),
            (o.zToInitStateVars = n),
            (o.outputProjectVars = r),
            (o.zDims = o.zToInitStateVars.kernel.shape[0]),
            (o.outputDims = i || r.bias.shape[0]),
            o
          );
        }
        return (
          i(e, t),
          (e.prototype.decode = function(t, e, n, r, i) {
            var o = this,
              a = t.shape[0];
            return s.tidy(function() {
              for (
                var u,
                  c = g(t, o.lstmCellVars, o.zToInitStateVars),
                  l = [],
                  h = n || s.zeros([a, o.outputDims]),
                  f = i ? s.split(s.tile(i, [a, 1]), i.shape[0]) : void 0,
                  d = 0;
                d < e;
                ++d
              ) {
                var m = f ? [h, t, f[d]] : [h, t];
                (u = s.multiRNNCell(c.cell, s.concat(m, 1), c.c, c.h)),
                  (c.c = u[0]),
                  (c.h = u[1]);
                var y = p(o.outputProjectVars, c.h[c.h.length - 1]);
                (h = o.sample(y, r)), l.push(h);
              }
              return s.stack(l, 1);
            });
          }),
          e
        );
      })(v),
      w = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.sample = function(t, e) {
            var n = t,
              r = e
                ? s.multinomial(n.div(s.scalar(e)), 1).as1D()
                : n.argMax(1).as1D();
            return s.oneHot(r, this.outputDims).toFloat();
          }),
          e
        );
      })(b),
      _ = (function(t) {
        function e(e, n, r, i) {
          var o = t.call(this, e, n, r, i.numDims) || this;
          return (o.nade = i), o;
        }
        return (
          i(e, t),
          (e.prototype.sample = function(t, e) {
            var n = s.split(t, [this.nade.numHidden, this.nade.numDims], 1),
              r = n[0],
              i = n[1];
            return this.nade.sample(r, i);
          }),
          e
        );
      })(b),
      S = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.sample = function(t, e) {
            var n = s.split(t, 3, 1),
              r = n[0],
              i = n[1],
              o = n[2];
            if (((i = s.sigmoid(i)), (o = s.tanh(o)), e)) {
              r = s.sigmoid(r.div(s.scalar(e)));
              var a = s.randomUniform(r.shape, 0, 1);
              r = s.greater(r, a).toFloat();
            } else r = s.greater(s.sigmoid(r), 0.5).toFloat();
            return s.concat([r, i, o], 1);
          }),
          e
        );
      })(b),
      x = (function(t) {
        function e(e, n, r, i) {
          var o = t.call(this) || this;
          return (
            (o.coreDecoders = e),
            (o.lstmCellVars = n),
            (o.zToInitStateVars = r),
            (o.numSteps = i),
            (o.zDims = o.zToInitStateVars.kernel.shape[0]),
            (o.outputDims = o.coreDecoders.reduce(function(t, e) {
              return t + e.outputDims;
            }, 0)),
            o
          );
        }
        return (
          i(e, t),
          (e.prototype.decode = function(t, e, n, r, i) {
            var o = this,
              a = t.shape[0];
            return s.tidy(function() {
              for (
                var n,
                  u = g(t, o.lstmCellVars, o.zToInitStateVars),
                  c = [],
                  l = o.coreDecoders.map(function(t) {}),
                  h = s.zeros([a, 1]),
                  f = i ? s.split(i, o.numSteps) : void 0,
                  p = 0;
                p < o.numSteps;
                ++p
              ) {
                (n = s.multiRNNCell(u.cell, h, u.c, u.h)),
                  (u.c = n[0]),
                  (u.h = n[1]);
                for (var d = [], m = 0; m < o.coreDecoders.length; ++m)
                  d.push(
                    o.coreDecoders[m].decode(
                      u.h[u.h.length - 1],
                      e / o.numSteps,
                      l[m],
                      r,
                      f ? f[p] : void 0
                    )
                  );
                c.push(s.concat(d, -1)),
                  (l = d.map(function(t) {
                    return t
                      .slice([0, -1, 0], [a, 1, t.shape[t.rank - 1]])
                      .squeeze([1])
                      .toFloat();
                  }));
              }
              return s.concat(c, 1);
            });
          }),
          e
        );
      })(v),
      T = (function() {
        function t(t, e) {
          (this.numDims = t.shape[0]),
            (this.numHidden = t.shape[2]),
            (this.encWeights = t.as2D(this.numDims, this.numHidden)),
            (this.decWeightsT = e.as2D(this.numDims, this.numHidden));
        }
        return (
          (t.prototype.sample = function(t, e) {
            var n = this,
              r = t.shape[0];
            return s.tidy(function() {
              for (var i = [], o = t.clone(), a = 0; a < n.numDims; a++) {
                var u = s.sigmoid(o),
                  c = n.encWeights.slice([a, 0], [1, n.numHidden]).as1D(),
                  l = n.decWeightsT.slice([a, 0], [1, n.numHidden]),
                  h = e
                    .slice([0, a], [r, 1])
                    .add(s.matMul(u, l, !1, !0))
                    .sigmoid()
                    .greaterEqual(s.scalar(0.5))
                    .toFloat()
                    .as1D();
                a < n.numDims - 1 &&
                  (o = o.add(s.outerProduct(h.toFloat(), c))),
                  i.push(h);
              }
              return s.stack(i, 1);
            });
          }),
          t
        );
      })();
    e.Nade = T;
    var A = (function() {
      function t(t, e) {
        (this.initialized = !1), (this.checkpointURL = t), (this.spec = e);
      }
      return (
        (t.prototype.instantiateFromSpec = function() {
          (this.dataConverter = l.converterFromSpec(this.spec.dataConverter)),
            (this.chordEncoder = this.spec.chordEncoder
              ? u.chordEncoderFromType(this.spec.chordEncoder)
              : void 0);
        }),
        (t.prototype.dispose = function() {
          var t = this;
          void 0 !== this.rawVars &&
            Object.keys(this.rawVars).forEach(function(e) {
              return t.rawVars[e].dispose();
            }),
            (this.encoder = void 0),
            (this.decoder = void 0),
            (this.initialized = !1);
        }),
        (t.prototype.getLstmLayers = function(t, e) {
          for (var n = [], r = 0; ; ) {
            var i = t.replace("%d", r.toString());
            if (!(i + "kernel" in e)) break;
            n.push(new f(e[i + "kernel"], e[i + "bias"])), ++r;
          }
          return n;
        }),
        (t.prototype.initialize = function() {
          return o(this, void 0, void 0, function() {
            var t,
              e,
              n,
              r,
              i,
              o,
              u,
              c,
              l,
              p,
              d,
              g,
              v,
              b,
              A,
              k,
              E,
              N,
              O,
              C,
              I = this;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  return (
                    this.dispose(),
                    (t = performance.now()),
                    this.spec
                      ? [3, 2]
                      : [
                          4,
                          fetch(this.checkpointURL + "/config.json")
                            .then(function(t) {
                              return t.json();
                            })
                            .then(function(t) {
                              if ("MusicVAE" !== t.type)
                                throw new Error(
                                  "Attempted to instantiate MusicVAE model with incorrect type:\n                  " +
                                    t.type
                                );
                              I.spec = t;
                            })
                        ]
                  );
                case 1:
                  a.sent(), (a.label = 2);
                case 2:
                  return (
                    this.instantiateFromSpec(),
                    (n = "multi_rnn_cell/" + (e = "cell_%d/lstm_cell/")),
                    (r = "decoder/hierarchical_level_0/"),
                    (o =
                      "encoder/" +
                      (i =
                        "cell_%d/bidirectional_rnn/%s/multi_rnn_cell/cell_0/lstm_cell/")),
                    (u =
                      "encoder/hierarchical_level_%d/" + i.replace("%d", "0")),
                    [
                      4,
                      fetch(this.checkpointURL + "/weights_manifest.json")
                        .then(function(t) {
                          return t.json();
                        })
                        .then(function(t) {
                          return s.io.loadWeights(t, I.checkpointURL);
                        })
                    ]
                  );
                case 3:
                  if (
                    ((c = a.sent()),
                    (this.rawVars = c),
                    (l = new f(c["encoder/mu/kernel"], c["encoder/mu/bias"])),
                    this.dataConverter.numSegments)
                  ) {
                    if (
                      ((p = this.getLstmLayers(u.replace("%s", "fw"), c)),
                      (d = this.getLstmLayers(u.replace("%s", "bw"), c)),
                      p.length !== d.length || 2 !== p.length)
                    )
                      throw Error(
                        "Only 2 hierarchical encoder levels are supported. Got " +
                          p.length +
                          " forward and " +
                          d.length +
                          " backward."
                      );
                    (g = [0, 1].map(function(t) {
                      return new m(p[t], d[t]);
                    })),
                      (this.encoder = new y(
                        g,
                        [this.dataConverter.numSegments, 1],
                        l
                      ));
                  } else {
                    if (
                      ((v = this.getLstmLayers(o.replace("%s", "fw"), c)),
                      (b = this.getLstmLayers(o.replace("%s", "bw"), c)),
                      v.length !== b.length || 1 !== v.length)
                    )
                      throw Error(
                        "Only single-layer bidirectional encoders are supported. Got " +
                          v.length +
                          " forward and " +
                          b.length +
                          " backward."
                      );
                    this.encoder = new m(v[0], b[0], l);
                  }
                  if (
                    ((A = this.dataConverter.numSegments
                      ? "core_decoder/"
                      : ""),
                    (k = []),
                    this.dataConverter.NUM_SPLITS)
                  )
                    for (E = 0; E < this.dataConverter.NUM_SPLITS; ++E)
                      k.push(A + "core_decoder_" + E + "/decoder/");
                  else k.push(A + "decoder/");
                  if (
                    ((N = k.map(function(t) {
                      var e = I.getLstmLayers(t + n, c),
                        r = new f(
                          c[t + "z_to_initial_state/kernel"],
                          c[t + "z_to_initial_state/bias"]
                        ),
                        i = new f(
                          c[t + "output_projection/kernel"],
                          c[t + "output_projection/bias"]
                        );
                      return t + "nade/w_enc" in c
                        ? new _(
                            e,
                            r,
                            i,
                            new T(c[t + "nade/w_enc"], c[t + "nade/w_dec_t"])
                          )
                        : "GrooveConverter" === I.spec.dataConverter.type
                        ? new S(e, r, i)
                        : new w(e, r, i);
                    })),
                    this.dataConverter.numSegments)
                  )
                    (O = this.getLstmLayers(r + e, c)),
                      (C = new f(
                        c[r + "initial_state/kernel"],
                        c[r + "initial_state/bias"]
                      )),
                      (this.decoder = new x(
                        N,
                        O,
                        C,
                        this.dataConverter.numSegments
                      ));
                  else {
                    if (1 !== N.length)
                      throw Error(
                        "Unexpected number of base decoders without conductor: " +
                          N.length
                      );
                    this.decoder = N[0];
                  }
                  return (
                    (this.initialized = !0),
                    h.logWithDuration("Initialized model", t, "MusicVAE"),
                    [2]
                  );
              }
            });
          });
        }),
        (t.prototype.isInitialized = function() {
          return this.initialized;
        }),
        (t.prototype.interpolate = function(t, e, n, r) {
          return o(this, void 0, void 0, function() {
            var i,
              o,
              u,
              c,
              l = this;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  if (this.chordEncoder && !r)
                    throw new Error(
                      "Chord progression expected but not provided."
                    );
                  if (!this.chordEncoder && r)
                    throw new Error("Unexpected chord progression provided.");
                  return this.initialized ? [3, 2] : [4, this.initialize()];
                case 1:
                  a.sent(), (a.label = 2);
                case 2:
                  return (i = 0), [4, this.encode(t, r)];
                case 3:
                  return (
                    (o = a.sent()),
                    (u = s.tidy(function() {
                      return l.getInterpolatedZs(o, e);
                    })),
                    o.dispose(),
                    (c = this.decode(u, n, r)),
                    u.dispose(),
                    c.then(function() {
                      return h.logWithDuration(
                        "Interpolation completed",
                        i,
                        "MusicVAE",
                        20
                      );
                    }),
                    [2, c]
                  );
              }
            });
          });
        }),
        (t.prototype.getSegmentLengths = function(t) {
          return o(this, void 0, void 0, function() {
            var e,
              n,
              r,
              i,
              o,
              u,
              c,
              l,
              h = this;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  if (t.shape[0] > 1)
                    throw new Error(
                      "Variable-length segments not supported for batch size > 1."
                    );
                  return (
                    (e = this.dataConverter.numSteps),
                    (n = this.dataConverter.numSegments),
                    [
                      4,
                      (r = s.tidy(function() {
                        return s.min(
                          s.equal(
                            t.squeeze([0]),
                            h.dataConverter.endTensor.expandDims(0)
                          ),
                          1
                        );
                      })).data()
                    ]
                  );
                case 1:
                  for (
                    i = a.sent(),
                      r.dispose(),
                      o = e / n,
                      u = [],
                      c = 0,
                      l = i.indexOf(1);
                    -1 !== l;

                  )
                    u.push(l - c + 1), (c += o), (l = i.indexOf(1, c));
                  if (u.length !== n)
                    throw new Error(
                      "Incorrect number of segments: " + u.length + " != " + n
                    );
                  return [2, u];
              }
            });
          });
        }),
        (t.prototype.encodeChordProgression = function(t) {
          var e = this.dataConverter.numSteps,
            n = this.dataConverter.numSegments,
            r = this.dataConverter.SEGMENTED_BY_TRACK ? e / n : e,
            i = this.dataConverter.SEGMENTED_BY_TRACK
              ? s.concat2d(
                  [
                    this.chordEncoder.encode(c.NO_CHORD).expandDims(0),
                    this.chordEncoder.encodeProgression(t, r - 1)
                  ],
                  0
                )
              : this.chordEncoder.encodeProgression(t, r);
          return this.dataConverter.SEGMENTED_BY_TRACK ? s.tile(i, [n, 1]) : i;
        }),
        (t.prototype.encode = function(t, e) {
          return o(this, void 0, void 0, function() {
            var n,
              r,
              i,
              o,
              u,
              c,
              l = this;
            return a(this, function(a) {
              switch (a.label) {
                case 0:
                  if (this.chordEncoder && !e)
                    throw new Error(
                      "Chord progression expected but not provided."
                    );
                  if (!this.chordEncoder && e)
                    throw new Error("Unexpected chord progression provided.");
                  if (
                    this.chordEncoder &&
                    this.dataConverter.endTensor &&
                    e.length > 1
                  )
                    throw new Error(
                      "Multiple chords not supported when using variable-length segments."
                    );
                  return this.initialized ? [3, 2] : [4, this.initialize()];
                case 1:
                  a.sent(), (a.label = 2);
                case 2:
                  return (
                    (n = performance.now()),
                    (r = s.tidy(function() {
                      return s.stack(
                        t.map(function(t) {
                          return l.dataConverter.toTensor(t);
                        })
                      );
                    })),
                    this.dataConverter.endTensor
                      ? [4, this.getSegmentLengths(r)]
                      : [3, 4]
                  );
                case 3:
                  return (o = a.sent()), [3, 5];
                case 4:
                  (o = void 0), (a.label = 5);
                case 5:
                  return (
                    (i = o),
                    this.chordEncoder &&
                      ((u = s.tidy(function() {
                        var n = l.encodeChordProgression(e),
                          i = s.tile(s.expandDims(n, 0), [t.length, 1, 1]);
                        return r.concat(i, 2);
                      })),
                      r.dispose(),
                      (r = u)),
                    (c = this.encoder.encode(r, i)),
                    r.dispose(),
                    h.logWithDuration("Encoding completed", n, "MusicVAE", 20),
                    [2, c]
                  );
              }
            });
          });
        }),
        (t.prototype.decode = function(t, e, n, r, i) {
          return (
            void 0 === r && (r = c.DEFAULT_STEPS_PER_QUARTER),
            void 0 === i && (i = c.DEFAULT_QUARTERS_PER_MINUTE),
            o(this, void 0, void 0, function() {
              var o,
                u,
                c,
                l,
                f,
                p,
                d,
                m,
                y,
                g = this;
              return a(this, function(a) {
                switch (a.label) {
                  case 0:
                    if (this.chordEncoder && !n)
                      throw new Error(
                        "Chord progression expected but not provided."
                      );
                    if (!this.chordEncoder && n)
                      throw new Error("Unexpected chord progression provided.");
                    if (
                      this.chordEncoder &&
                      this.dataConverter.endTensor &&
                      n.length > 1
                    )
                      throw new Error(
                        "Multiple chords not supported when using variable-length segments."
                      );
                    return this.initialized ? [3, 2] : [4, this.initialize()];
                  case 1:
                    a.sent(), (a.label = 2);
                  case 2:
                    (o = performance.now()),
                      (u = this.dataConverter.numSteps),
                      (c = s.tidy(function() {
                        var r = g.chordEncoder
                            ? g.encodeChordProgression(n)
                            : void 0,
                          i = g.decoder.decode(t, u, void 0, e, r);
                        return s.split(i, i.shape[0]).map(function(t) {
                          return t.squeeze([0]);
                        });
                      })),
                      (l = []),
                      (f = 0),
                      (p = c),
                      (a.label = 3);
                  case 3:
                    return f < p.length
                      ? ((d = p[f]),
                        (y = (m = l).push),
                        [4, this.dataConverter.toNoteSequence(d, r, i)])
                      : [3, 6];
                  case 4:
                    y.apply(m, [a.sent()]), d.dispose(), (a.label = 5);
                  case 5:
                    return f++, [3, 3];
                  case 6:
                    return (
                      h.logWithDuration(
                        "Decoding completed",
                        o,
                        "MusicVAE",
                        20
                      ),
                      [2, l]
                    );
                }
              });
            })
          );
        }),
        (t.prototype.getInterpolatedZs = function(t, e) {
          if (
            ("number" == typeof e && (e = [e]),
            2 !== t.shape[0] && 4 !== t.shape[0])
          )
            throw new Error(
              "Invalid number of input sequences. Requires length 2, or 4"
            );
          if (1 !== e.length && 2 !== e.length)
            throw new Error(
              "Invalid number of dimensions. Requires length 1, or 2."
            );
          var n = e[0],
            r = 2 === e.length ? e[1] : n;
          return s.tidy(function() {
            var e = s.linspace(0, 1, n),
              i = t.slice([0, 0], [1, t.shape[1]]).as1D(),
              o = t.slice([1, 0], [1, t.shape[1]]).as1D();
            if (2 === t.shape[0]) {
              var a = o.sub(i);
              return s.outerProduct(e, a).add(i);
            }
            if (4 === t.shape[0]) {
              var u = s.linspace(0, 1, r),
                c = t.slice([2, 0], [1, t.shape[1]]).as1D(),
                l = t.slice([3, 0], [1, t.shape[1]]).as1D(),
                h = s.scalar(1).sub(e),
                f = s.scalar(1).sub(u),
                p = i.mul(s.outerProduct(f, h).as3D(r, n, 1));
              return (
                (p = s.addStrict(p, o.mul(s.outerProduct(u, h).as3D(r, n, 1)))),
                (p = s.addStrict(p, c.mul(s.outerProduct(f, e).as3D(r, n, 1)))),
                (p = s.addStrict(
                  p,
                  l.mul(s.outerProduct(u, e).as3D(r, n, 1))
                )).as2D(n * r, t.shape[1])
              );
            }
            throw new Error(
              "Invalid number of note sequences. Requires length 2, or 4"
            );
          });
        }),
        (t.prototype.sample = function(t, e, n, r, i) {
          return (
            void 0 === e && (e = 0.5),
            void 0 === r && (r = c.DEFAULT_STEPS_PER_QUARTER),
            void 0 === i && (i = c.DEFAULT_QUARTERS_PER_MINUTE),
            o(this, void 0, void 0, function() {
              var i,
                o,
                u,
                c = this;
              return a(this, function(a) {
                switch (a.label) {
                  case 0:
                    if (this.chordEncoder && !n)
                      throw new Error(
                        "Chord progression expected but not provided."
                      );
                    if (!this.chordEncoder && n)
                      throw new Error("Unexpected chord progression provided.");
                    return this.initialized ? [3, 2] : [4, this.initialize()];
                  case 1:
                    a.sent(), (a.label = 2);
                  case 2:
                    return (
                      (i = performance.now()),
                      (o = s.tidy(function() {
                        return s.randomNormal([t, c.decoder.zDims]);
                      })),
                      (u = this.decode(o, e, n, r)),
                      o.dispose(),
                      u.then(function() {
                        return h.logWithDuration(
                          "Sampling completed",
                          i,
                          "MusicVAE",
                          20
                        );
                      }),
                      [2, u]
                    );
                }
              });
            })
          );
        }),
        t
      );
    })();
    e.MusicVAE = A;
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(225);
    (e.PianoGenie = r.PianoGenie),
      (e.PianoGenieKeysig = r.PianoGenieKeysig),
      (e.PianoGenieChord = r.PianoGenieChord),
      (e.PianoGenieKeysigChordFamily = r.PianoGenieKeysigChordFamily),
      (e.PianoGenieKeysigChord = r.PianoGenieKeysigChord);
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }),
      o =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      a =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var s = n(7),
      u = 2,
      c = 128;
    function l(t) {
      for (var e = 0; e < u; ++e) t.c[e].dispose(), t.h[e].dispose();
    }
    function h(t, e, n) {
      if ((e = void 0 !== e ? e : 1) < 0 || e > 1)
        throw new Error("Invalid temperature specified");
      var r;
      if (0 === e) r = s.argMax(t, 0);
      else {
        e < 1 && (t = s.div(t, s.scalar(e, "float32")));
        var i = s.reshape(s.softmax(t, 0), [1, -1]),
          o = s.multinomial(i, 1, n, !0);
        r = s.reshape(o, []);
      }
      return r;
    }
    var f,
      p,
      d = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.getRnnInputFeats = function() {
            var e = this;
            return s.tidy(function() {
              var n,
                r = [t.prototype.getRnnInputFeats.call(e)],
                i = e.lastOutput,
                o = e.lastTime,
                a = e.time;
              void 0 === e.deltaTimeOverride
                ? (n = (a.getTime() - o.getTime()) / 1e3)
                : ((n = e.deltaTimeOverride), (e.deltaTimeOverride = void 0));
              var u = s.scalar(i, "int32"),
                c = s.addStrict(u, s.scalar(1, "int32")),
                l = s.cast(s.oneHot(c, 89), "float32");
              r.push(l);
              var h = s.scalar(n, "float32"),
                f = s.round(s.mul(h, 31.25)),
                p = s.minimum(f, 32),
                d = s.cast(s.add(p, 1e-4), "int32"),
                m = s.oneHot(d, 33),
                y = s.cast(m, "float32");
              return r.push(y), (e.lastTime = a), s.concat1d(r);
            });
          }),
          (e.prototype.nextWithCustomSamplingFunction = function(e, n) {
            this.time = new Date();
            var r = t.prototype.nextWithCustomSamplingFunction.call(this, e, n);
            return (this.lastOutput = r), (this.lastTime = this.time), r;
          }),
          (e.prototype.overrideLastOutput = function(t) {
            this.lastOutput = t;
          }),
          (e.prototype.overrideDeltaTime = function(t) {
            this.deltaTimeOverride = t;
          }),
          (e.prototype.resetState = function() {
            t.prototype.resetState.call(this),
              (this.lastOutput = -1),
              (this.lastTime = new Date()),
              this.lastTime.setSeconds(this.lastTime.getSeconds() - 1e5),
              (this.time = new Date());
          }),
          e
        );
      })(
        (function() {
          function t(t) {
            (this.checkpointURL = t), (this.initialized = !1);
          }
          return (
            (t.prototype.isInitialized = function() {
              return this.initialized;
            }),
            (t.prototype.initialize = function(t) {
              return o(this, void 0, void 0, function() {
                var e,
                  n,
                  r,
                  i,
                  o = this;
                return a(this, function(a) {
                  switch (a.label) {
                    case 0:
                      if (
                        (this.initialized && this.dispose(),
                        void 0 === this.checkpointURL && void 0 === t)
                      )
                        throw new Error(
                          "Need to specify either URI or static variables"
                        );
                      return void 0 !== t
                        ? [3, 2]
                        : [
                            4,
                            fetch(this.checkpointURL + "/weights_manifest.json")
                              .then(function(t) {
                                return t.json();
                              })
                              .then(function(t) {
                                return s.io.loadWeights(t, o.checkpointURL);
                              })
                          ];
                    case 1:
                      return (e = a.sent()), (this.modelVars = e), [3, 3];
                    case 2:
                      (this.modelVars = t), (a.label = 3);
                    case 3:
                      for (
                        this.decLSTMCells = [],
                          this.decForgetBias = s.scalar(1, "float32"),
                          n = function(t) {
                            var e =
                              "phero_model/decoder/rnn/rnn/multi_rnn_cell/cell_" +
                              t +
                              "/lstm_cell/";
                            r.decLSTMCells.push(function(t, n, r) {
                              return s.basicLSTMCell(
                                o.decForgetBias,
                                o.modelVars[e + "kernel"],
                                o.modelVars[e + "bias"],
                                t,
                                n,
                                r
                              );
                            });
                          },
                          r = this,
                          i = 0;
                        i < u;
                        ++i
                      )
                        n(i);
                      return (
                        this.resetState(),
                        (this.initialized = !0),
                        this.next(0),
                        this.resetState(),
                        [2]
                      );
                  }
                });
              });
            }),
            (t.prototype.getRnnInputFeats = function() {
              var t = this;
              return s.tidy(function() {
                var e = s.tensor1d([t.button], "float32");
                return s.sub(s.mul(2, s.div(e, 7)), 1).as1D();
              });
            }),
            (t.prototype.next = function(t, e, n) {
              return this.nextWithCustomSamplingFunction(t, function(t) {
                return h(t, e, n);
              });
            }),
            (t.prototype.nextFromKeyWhitelist = function(t, e, n, r) {
              return this.nextWithCustomSamplingFunction(t, function(t) {
                var i = s.tensor1d(e, "int32"),
                  o = h((t = s.gather(t, i)), n, r),
                  a = s.gather(i, s.reshape(o, [1]));
                return (o = s.reshape(a, []));
              });
            }),
            (t.prototype.nextWithCustomSamplingFunction = function(t, e) {
              var n = this.lastState;
              this.button = t;
              var r = this.getRnnInputFeats(),
                i = this.evaluateModelAndSample(r, n, e),
                o = i[0],
                a = i[1];
              return r.dispose(), l(this.lastState), (this.lastState = o), a;
            }),
            (t.prototype.evaluateModelAndSample = function(t, e, n) {
              var r = this;
              if (!this.initialized)
                throw new Error("Model is not initialized.");
              var i = s.tidy(function() {
                var i = s.matMul(
                  s.expandDims(t, 0),
                  r.modelVars["phero_model/decoder/rnn_input/dense/kernel"]
                );
                i = s.add(
                  i,
                  r.modelVars["phero_model/decoder/rnn_input/dense/bias"]
                );
                var o = s.multiRNNCell(r.decLSTMCells, i, e.c, e.h),
                  a = o[0],
                  c = o[1],
                  l = { c: a, h: c },
                  h = s.matMul(
                    c[u - 1],
                    r.modelVars["phero_model/decoder/pitches/dense/kernel"]
                  );
                h = s.add(
                  h,
                  r.modelVars["phero_model/decoder/pitches/dense/bias"]
                );
                var f = s.reshape(h, [88]);
                return [l, n(f).dataSync()[0]];
              });
              return [i[0], i[1]];
            }),
            (t.prototype.resetState = function() {
              void 0 !== this.lastState && l(this.lastState),
                (this.lastState = (function() {
                  for (var t = { c: [], h: [] }, e = 0; e < u; ++e)
                    t.c.push(s.zeros([1, c], "float32")),
                      t.h.push(s.zeros([1, c], "float32"));
                  return t;
                })());
            }),
            (t.prototype.dispose = function() {
              var t = this;
              this.initialized &&
                (Object.keys(this.modelVars).forEach(function(e) {
                  return t.modelVars[e].dispose();
                }),
                this.decForgetBias.dispose(),
                l(this.lastState),
                (this.initialized = !1));
            }),
            t
          );
        })()
      );
    !(function(t) {
      (t[(t.None = 0)] = "None"),
        (t[(t.C = 1)] = "C"),
        (t[(t.Cs = 2)] = "Cs"),
        (t[(t.D = 3)] = "D"),
        (t[(t.Eb = 4)] = "Eb"),
        (t[(t.E = 5)] = "E"),
        (t[(t.F = 6)] = "F"),
        (t[(t.Fs = 7)] = "Fs"),
        (t[(t.G = 8)] = "G"),
        (t[(t.Ab = 9)] = "Ab"),
        (t[(t.A = 10)] = "A"),
        (t[(t.Bb = 11)] = "Bb"),
        (t[(t.B = 12)] = "B");
    })(f || (f = {})),
      (e.PitchClass = f),
      (function(t) {
        (t[(t.None = 0)] = "None"),
          (t[(t.Maj = 1)] = "Maj"),
          (t[(t.Min = 2)] = "Min"),
          (t[(t.Aug = 3)] = "Aug"),
          (t[(t.Dim = 4)] = "Dim"),
          (t[(t.Seven = 5)] = "Seven"),
          (t[(t.Maj7 = 6)] = "Maj7"),
          (t[(t.Min7 = 7)] = "Min7"),
          (t[(t.Min7b5 = 8)] = "Min7b5");
      })(p || (p = {})),
      (e.ChordFamily = p);
    var m = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.getRnnInputFeats = function() {
            var e = this;
            return s.tidy(function() {
              var n = [t.prototype.getRnnInputFeats.call(e)],
                r = s.scalar(e.chordRoot, "int32"),
                i = s.subStrict(r, s.scalar(1, "int32")),
                o = s.cast(s.oneHot(i, 12), "float32");
              n.push(o);
              var a = s.scalar(e.chordFamily, "int32"),
                u = s.subStrict(a, s.scalar(1, "int32")),
                c = s.cast(s.oneHot(u, 8), "float32");
              return n.push(c), s.concat1d(n);
            });
          }),
          (e.prototype.setChordRoot = function(t) {
            this.chordRoot = t;
          }),
          (e.prototype.setChordFamily = function(t) {
            this.chordFamily = t;
          }),
          (e.prototype.resetState = function() {
            t.prototype.resetState.call(this),
              (this.chordRoot = f.None),
              (this.chordFamily = p.None);
          }),
          e
        );
      })(d),
      y = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.getRnnInputFeats = function() {
            var e = this;
            return s.tidy(function() {
              var n = [t.prototype.getRnnInputFeats.call(e)],
                r = s.scalar(e.keySignature, "int32"),
                i = s.subStrict(r, s.scalar(1, "int32")),
                o = s.cast(s.oneHot(i, 12), "float32");
              return n.push(o), s.concat1d(n);
            });
          }),
          (e.prototype.setKeySignature = function(t) {
            this.keySignature = t;
          }),
          (e.prototype.resetState = function() {
            t.prototype.resetState.call(this), (this.keySignature = f.None);
          }),
          e
        );
      })(d),
      g = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.getRnnInputFeats = function() {
            var e = this;
            return s.tidy(function() {
              var n = [t.prototype.getRnnInputFeats.call(e)],
                r = s.scalar(e.chordRoot, "int32"),
                i = s.subStrict(r, s.scalar(1, "int32")),
                o = s.cast(s.oneHot(i, 12), "float32");
              n.push(o);
              var a = s.scalar(e.chordFamily, "int32"),
                u = s.subStrict(a, s.scalar(1, "int32")),
                c = s.cast(s.oneHot(u, 8), "float32");
              return n.push(c), s.concat1d(n);
            });
          }),
          (e.prototype.setChordRoot = function(t) {
            this.chordRoot = t;
          }),
          (e.prototype.setChordFamily = function(t) {
            this.chordFamily = t;
          }),
          (e.prototype.resetState = function() {
            t.prototype.resetState.call(this),
              (this.chordRoot = f.None),
              (this.chordFamily = p.None);
          }),
          e
        );
      })(y),
      v = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          i(e, t),
          (e.prototype.getRnnInputFeats = function() {
            var e = this;
            return s.tidy(function() {
              var n = [t.prototype.getRnnInputFeats.call(e)],
                r = s.scalar(e.chordFamily, "int32"),
                i = s.subStrict(r, s.scalar(1, "int32")),
                o = s.cast(s.oneHot(i, 8), "float32");
              return n.push(o), s.concat1d(n);
            });
          }),
          (e.prototype.setChordFamily = function(t) {
            this.chordFamily = t;
          }),
          (e.prototype.resetState = function() {
            t.prototype.resetState.call(this), (this.chordFamily = p.None);
          }),
          e
        );
      })(y),
      b = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return i(e, t), e;
      })(d);
    e.PianoGenie = b;
    var w = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return i(e, t), e;
    })(m);
    e.PianoGenieChord = w;
    var _ = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return i(e, t), e;
    })(y);
    e.PianoGenieKeysig = _;
    var S = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return i(e, t), e;
    })(g);
    e.PianoGenieKeysigChord = S;
    var x = (function(t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return i(e, t), e;
    })(v);
    e.PianoGenieKeysigChordFamily = x;
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(227);
    e.OnsetsAndFrames = r.OnsetsAndFrames;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7),
      a = n(52),
      s = n(16),
      u = n(240),
      c = n(55),
      l = n(241),
      h = (function() {
        function t(t, e) {
          void 0 === e && (e = 250),
            (this.checkpointURL = t),
            (this.chunkLength = e);
        }
        return (
          (t.prototype.initialize = function() {
            return r(this, void 0, void 0, function() {
              var t,
                e,
                n = this;
              return i(this, function(r) {
                switch (r.label) {
                  case 0:
                    return (
                      this.dispose(),
                      (t = performance.now()),
                      [
                        4,
                        fetch(this.checkpointURL + "/weights_manifest.json")
                          .then(function(t) {
                            return t.json();
                          })
                          .then(function(t) {
                            return o.io.loadWeights(t, n.checkpointURL);
                          })
                      ]
                    );
                  case 1:
                    return (
                      (e = r.sent()),
                      this.build(e),
                      Object.keys(e).map(function(t) {
                        return e[t].dispose();
                      }),
                      (this.initialized = !0),
                      s.logWithDuration("Initialized model", t, "O&F"),
                      [2]
                    );
                }
              });
            });
          }),
          (t.prototype.dispose = function() {
            this.initialized &&
              (this.onsetsCnn.dispose(),
              this.onsetsRnn.dispose(),
              this.activationCnn.dispose(),
              this.frameRnn.dispose(),
              this.velocityCnn.dispose(),
              (this.initialized = !1));
          }),
          (t.prototype.isInitialized = function() {
            return this.initialized;
          }),
          (t.prototype.transcribeFromMelSpec = function(t, e) {
            return (
              void 0 === e && (e = 4),
              r(this, void 0, void 0, function() {
                var n,
                  r,
                  a,
                  u,
                  c,
                  h,
                  f = this;
                return i(this, function(i) {
                  return (
                    this.isInitialized() || this.initialize(),
                    (n = performance.now()),
                    s.log(
                      "Computing onsets, frames, and velocities...",
                      "O&F",
                      20
                    ),
                    (r = o.tidy(function() {
                      var n = l.batchInput(t, f.chunkLength);
                      return f.processBatches(n, f.chunkLength, t.length, e);
                    })),
                    (a = r[0]),
                    (u = r[1]),
                    (c = r[2]),
                    s.log("Converting to NoteSequence...", "O&F", 20),
                    (h = l.pianorollToNoteSequence(a, u, c)).then(function() {
                      a.dispose(),
                        u.dispose(),
                        c.dispose(),
                        s.logWithDuration(
                          "Transcribed from mel spec",
                          n,
                          "O&F"
                        );
                    }),
                    [2, h]
                  );
                });
              })
            );
          }),
          (t.prototype.transcribeFromAudioBuffer = function(t, e) {
            return (
              void 0 === e && (e = 4),
              r(this, void 0, void 0, function() {
                var n,
                  r,
                  o = this;
                return i(this, function(i) {
                  return (
                    (n = performance.now()),
                    (r = u.preprocessAudio(t)).then(function() {
                      return s.logWithDuration(
                        "Converted audio to mel spec",
                        n,
                        "O&F",
                        20
                      );
                    }),
                    [
                      2,
                      r.then(function(t) {
                        return o.transcribeFromMelSpec(
                          t.map(function(t) {
                            return Array.from(t);
                          }, e)
                        );
                      })
                    ]
                  );
                });
              })
            );
          }),
          (t.prototype.transcribeFromAudioFile = function(t) {
            return r(this, void 0, void 0, function() {
              var e;
              return i(this, function(n) {
                switch (n.label) {
                  case 0:
                    return [4, a.loadAudioFromFile(t)];
                  case 1:
                    return (
                      (e = n.sent()), [2, this.transcribeFromAudioBuffer(e)]
                    );
                }
              });
            });
          }),
          (t.prototype.transcribeFromAudioURL = function(t) {
            return r(this, void 0, void 0, function() {
              var e;
              return i(this, function(n) {
                switch (n.label) {
                  case 0:
                    return [4, a.loadAudioFromUrl(t)];
                  case 1:
                    return (
                      (e = n.sent()), [2, this.transcribeFromAudioBuffer(e)]
                    );
                }
              });
            });
          }),
          (t.prototype.processBatches = function(t, e, n, r) {
            var i,
              a,
              s,
              u,
              c = this,
              h = function(t) {
                return [
                  c.onsetsCnn.predict(t, r),
                  c.activationCnn.predict(t, r),
                  c.velocityCnn.predict(t, r)
                ];
              };
            if (1 === t.shape[0])
              (a = (i = h(t.expandDims(-1)))[0]), (s = i[1]), (u = i[2]);
            else {
              for (var f = h(t.expandDims(-1)), p = [], d = 0; d < 3; ++d)
                p.push(l.unbatchOutput(f[d], e, n));
              (a = p[0]), (s = p[1]), (u = p[2]);
            }
            var m = this.onsetsRnn.predict(a, this.chunkLength);
            a.dispose();
            var y = o.concat3d([m, s], -1);
            s.dispose();
            var g = this.frameRnn.predict(y, this.chunkLength),
              v = o
                .clipByValue(u, 0, 1)
                .mul(o.scalar(80))
                .add(o.scalar(10))
                .toInt();
            return u.dispose(), [g.squeeze(), m.squeeze(), v.squeeze()];
          }),
          (t.prototype.build = function(t) {
            var e = this;
            o.tidy(function() {
              (e.onsetsCnn = new f()),
                e.onsetsCnn.setWeights(t, "onsets"),
                (e.onsetsRnn = new p([null, e.onsetsCnn.outputShape[2]])),
                e.onsetsRnn.setWeights(t, "onsets", "onset_probs"),
                (e.activationCnn = new f("sigmoid")),
                e.activationCnn.setWeights(t, "frame", "activation_probs"),
                (e.frameRnn = new p([null, 2 * c.MIDI_PITCHES])),
                e.frameRnn.setWeights(t, "frame", "frame_probs"),
                (e.velocityCnn = new f("linear")),
                e.velocityCnn.setWeights(t, "velocity", "onset_velocities");
            });
          }),
          t
        );
      })();
    e.OnsetsAndFrames = h;
    var f = (function() {
        function t(t) {
          this.nn = o.sequential();
          var e = {
              filters: 48,
              kernelSize: [3, 3],
              activation: "linear",
              useBias: !1,
              padding: "same",
              dilationRate: [1, 1],
              inputShape: [null, c.MEL_SPEC_BINS, 1],
              trainable: !1
            },
            n = { scale: !1, trainable: !1 };
          this.nn.add(o.layers.conv2d(e)),
            this.nn.add(o.layers.batchNormalization(n)),
            this.nn.add(o.layers.activation({ activation: "relu" })),
            (e.inputShape = null),
            this.nn.add(o.layers.conv2d(e)),
            this.nn.add(o.layers.batchNormalization(n)),
            this.nn.add(o.layers.activation({ activation: "relu" })),
            this.nn.add(
              o.layers.maxPooling2d({ poolSize: [1, 2], strides: [1, 2] })
            ),
            (e.filters = 96),
            this.nn.add(o.layers.conv2d(e)),
            this.nn.add(o.layers.batchNormalization(n)),
            this.nn.add(o.layers.activation({ activation: "relu" })),
            this.nn.add(
              o.layers.maxPooling2d({ poolSize: [1, 2], strides: [1, 2] })
            );
          var r = this.nn.outputShape;
          this.nn.add(o.layers.reshape({ targetShape: [r[1], r[2] * r[3]] })),
            this.nn.add(
              o.layers.dense({ units: 768, activation: "relu", trainable: !1 })
            ),
            t &&
              this.nn.add(
                o.layers.dense({
                  units: c.MIDI_PITCHES,
                  activation: t,
                  trainable: !1
                })
              ),
            (this.outputShape = this.nn.outputShape);
        }
        return (
          (t.prototype.dispose = function() {
            this.nn.dispose();
          }),
          (t.prototype.predict = function(t, e) {
            return this.nn.predict(t, { batchSize: e });
          }),
          (t.prototype.setWeights = function(t, e, n) {
            function r(e) {
              var n = t[e];
              if (void 0 === n) throw Error("Variable not found: " + e);
              return n;
            }
            var i = [
              r(e + "/conv0/weights"),
              r(e + "/conv0/BatchNorm/beta"),
              r(e + "/conv0/BatchNorm/moving_mean"),
              r(e + "/conv0/BatchNorm/moving_variance"),
              r(e + "/conv1/weights"),
              r(e + "/conv1/BatchNorm/beta"),
              r(e + "/conv1/BatchNorm/moving_mean"),
              r(e + "/conv1/BatchNorm/moving_variance"),
              r(e + "/conv2/weights"),
              r(e + "/conv2/BatchNorm/beta"),
              r(e + "/conv2/BatchNorm/moving_mean"),
              r(e + "/conv2/BatchNorm/moving_variance"),
              r(e + "/fc_end/weights"),
              r(e + "/fc_end/biases")
            ];
            n &&
              (i = i.concat([
                r(e + "/" + n + "/weights"),
                r(e + "/" + n + "/biases")
              ])),
              this.nn.setWeights(i);
          }),
          t
        );
      })(),
      p = (function() {
        function t(t, e) {
          var n, r, i;
          void 0 === e && (e = 384),
            (this.dense = o.sequential()),
            (this.units = e),
            (this.lstm =
              ((n = o.layers.lstm({
                inputShape: t,
                units: e,
                returnSequences: !0,
                recurrentActivation: "sigmoid",
                returnState: !0,
                kernelInitializer: "zeros",
                recurrentInitializer: "zeros",
                biasInitializer: "zeros",
                trainable: !1
              })),
              (r = [
                o.input({ shape: t }),
                o.input({ shape: [e] }),
                o.input({ shape: [e] })
              ]),
              (i = n.apply(r)),
              o.model({ inputs: r, outputs: i }))),
            this.dense.add(
              o.layers.dense({
                inputShape: [null, e],
                units: c.MIDI_PITCHES,
                activation: "sigmoid",
                trainable: !1
              })
            );
        }
        return (
          (t.prototype.dispose = function() {
            this.lstm.dispose(), this.dense.dispose();
          }),
          (t.prototype.setWeights = function(t, e, n) {
            var r = this;
            function i(e) {
              var n = t[e];
              if (void 0 === n) throw Error("Variable not found: " + e);
              return n;
            }
            var a,
              s = function(t, e) {
                void 0 === e && (e = 0);
                var n = o.split(t, 4, -1),
                  r = n[0],
                  i = n[1],
                  a = n[2],
                  s = n[3];
                return o.concat([r, a.add(o.scalar(e)), i, s], -1);
              },
              u =
                "cudnn_lstm/rnn/multi_rnn_cell/cell_0/cudnn_compatible_lstm_cell";
            this.lstm.setWeights(
              ((a = i(e + "/" + u + "/kernel")),
              o.split(s(a), [a.shape[0] - r.units, r.units])).concat(
                s(i(e + "/" + u + "/bias"), 1)
              )
            ),
              this.dense.setWeights([
                i(e + "/" + n + "/weights"),
                i(e + "/" + n + "/biases")
              ]);
          }),
          (t.prototype.predict = function(t, e) {
            var n = this;
            return o.tidy(function() {
              return n.predictImpl(t, e);
            });
          }),
          (t.prototype.predictImpl = function(t, e) {
            for (
              var n = t.shape[1],
                r = Math.ceil(n / e),
                i = [o.zeros([1, this.units]), o.zeros([1, this.units])],
                a = [],
                s = 0;
              s < r;
              ++s
            ) {
              var u = t.slice([0, s * e], [-1, s < r - 1 ? e : -1]),
                c = this.lstm.predict([u, i[0], i[1]]);
              a.push(this.dense.predict(c[0])), (i = c.slice(1));
            }
            return 1 === a.length ? a[0] : o.concat3d(a, 1);
          }),
          t
        );
      })();
  },
  function(t, e, n) {
    "use strict";
    t.exports = function(t) {
      for (var e = new Array(t), n = 0; n < t; ++n) e[n] = n;
      return e;
    };
  },
  function(t, e) {
    function n(t) {
      return (
        !!t.constructor &&
        "function" == typeof t.constructor.isBuffer &&
        t.constructor.isBuffer(t)
      );
    }
    /*!
     * Determine if an object is a Buffer
     *
     * @author   Feross Aboukhadijeh <https://feross.org>
     * @license  MIT
     */
    t.exports = function(t) {
      return (
        null != t &&
        (n(t) ||
          (function(t) {
            return (
              "function" == typeof t.readFloatLE &&
              "function" == typeof t.slice &&
              n(t.slice(0, 0))
            );
          })(t) ||
          !!t._isBuffer)
      );
    };
  },
  function(t, e, n) {
    "use strict";
    var r = n(231),
      i = n(236),
      o = n(54),
      a = n(237)({
        args: ["array", "array", "scalar", "scalar", "scalar"],
        body: function(t, e, n, r, i) {
          var o = e * n;
          o < r && (o = r), o > i && (o = i);
        }
      });
    t.exports = function(t, e, n, s) {
      void 0 === n && (n = -1 / 0), void 0 === s && (s = 1 / 0);
      var u = e.shape,
        c = t.shape;
      if (e.shape.length !== t.shape.length)
        throw new Error(
          "ndarray-resample: input and output arrays should have the same dimensions"
        );
      var l,
        h = u.map(function() {
          return 0;
        });
      if (1 === t.size)
        return (
          (l = o.sum(e) / e.size) < n && (l = n),
          l > s && (l = s),
          void t.set.apply(t, h.concat(l))
        );
      if (1 === e.size)
        return (
          (l = e.get.apply(e, h)) < n && (l = n),
          l > s && (l = s),
          void o.assigns(t, l)
        );
      for (var f = u.length, p = new Array(f), d = !1, m = 0; m < f; m++)
        (p[m] = Math.min(c[m], u[m])), c[m] > u[m] && (d = !0);
      var y = i.malloc(u),
        g = i.malloc(u);
      o.assign(y, e), o.assigns(g, 0), r(1, y, g);
      var v = y.lo,
        b = y.hi,
        w = i.malloc(c),
        _ = i.malloc(c);
      d && (o.assigns(w, 0), o.assigns(_, 0));
      var S = new Array(f),
        x = new Array(f),
        T = new Array(f),
        A = new Array(f);
      for (m = 0; m < 1 << f; ++m) {
        for (var k = 0; k < f; ++k)
          if (m & (1 << k)) {
            if (((S[k] = p[k] - ((p[k] + 1) >>> 1)), 0 === S[k])) continue;
            (x[k] = c[k] - S[k]),
              (T[k] = u[k] - S[k]),
              (A[k] = 1 & p[k] ? 0 : 1);
          } else (S[k] = (p[k] + 1) >>> 1), (x[k] = 0), (T[k] = 0), (A[k] = 0);
        o.assign(b.apply(v.apply(w, x), S), b.apply(v.apply(y, T), S)),
          o.assign(
            v.apply(b.apply(v.apply(_, x), S), A),
            v.apply(b.apply(v.apply(g, T), S), A)
          ),
          o.assigns(b.apply(b.apply(v.apply(_, x), S), A), 0);
      }
      r(-1, w, _),
        a(t, w, t.size / e.size, n, s),
        i.free(y),
        i.free(g),
        i.free(w),
        i.free(_);
    };
  },
  function(t, e, n) {
    "use strict";
    var r = n(54),
      i = n(53),
      o = n(101),
      a = n(235);
    t.exports = function(t, e, n) {
      var s,
        u,
        c = e.shape,
        l = c.length,
        h = 1,
        f = new Array(l),
        p = 0;
      for (s = l - 1; s >= 0; --s)
        if (
          ((f[s] = h),
          (h *= c[s]),
          (p = Math.max(p, a.scratchMemory(c[s]))),
          e.shape[s] !== n.shape[s])
        )
          throw new Error(
            "Shape mismatch, real and imaginary arrays must have same size"
          );
      var d,
        m = 4 * h + p;
      d =
        "array" === e.dtype || "float64" === e.dtype || "custom" === e.dtype
          ? o.mallocDouble(m)
          : o.mallocFloat(m);
      var y,
        g,
        v,
        b,
        w = i(d, c.slice(0), f, 0),
        _ = i(d, c.slice(0), f.slice(0), h),
        S = i(d, c.slice(0), f.slice(0), 2 * h),
        x = i(d, c.slice(0), f.slice(0), 3 * h),
        T = 4 * h;
      for (
        r.assign(w, e), r.assign(_, n), s = l - 1;
        s >= 0 && (a(t, h / c[s], c[s], d, w.offset, _.offset, T), 0 !== s);
        --s
      ) {
        for (g = 1, v = S.stride, b = x.stride, u = s - 1; u < l; ++u)
          (b[u] = v[u] = g), (g *= c[u]);
        for (u = s - 2; u >= 0; --u) (b[u] = v[u] = g), (g *= c[u]);
        r.assign(S, w),
          r.assign(x, _),
          (y = w),
          (w = S),
          (S = y),
          (y = _),
          (_ = x),
          (x = y);
      }
      r.assign(e, w), r.assign(n, _), o.free(d);
    };
  },
  function(t, e, n) {
    "use strict";
    var r = n(233);
    t.exports = function(t) {
      var e = ["'use strict'", "var CACHED={}"],
        n = [],
        i = t.funcName + "_cwise_thunk";
      e.push(["return function ", i, "(", t.shimArgs.join(","), "){"].join(""));
      for (
        var o = [],
          a = [],
          s = [
            [
              "array",
              t.arrayArgs[0],
              ".shape.slice(",
              Math.max(0, t.arrayBlockIndices[0]),
              t.arrayBlockIndices[0] < 0
                ? "," + t.arrayBlockIndices[0] + ")"
                : ")"
            ].join("")
          ],
          u = [],
          c = [],
          l = 0;
        l < t.arrayArgs.length;
        ++l
      ) {
        var h = t.arrayArgs[l];
        n.push(
          ["t", h, "=array", h, ".dtype,", "r", h, "=array", h, ".order"].join(
            ""
          )
        ),
          o.push("t" + h),
          o.push("r" + h),
          a.push("t" + h),
          a.push("r" + h + ".join()"),
          s.push("array" + h + ".data"),
          s.push("array" + h + ".stride"),
          s.push("array" + h + ".offset|0"),
          l > 0 &&
            (u.push(
              "array" +
                t.arrayArgs[0] +
                ".shape.length===array" +
                h +
                ".shape.length+" +
                (Math.abs(t.arrayBlockIndices[0]) -
                  Math.abs(t.arrayBlockIndices[l]))
            ),
            c.push(
              "array" +
                t.arrayArgs[0] +
                ".shape[shapeIndex+" +
                Math.max(0, t.arrayBlockIndices[0]) +
                "]===array" +
                h +
                ".shape[shapeIndex+" +
                Math.max(0, t.arrayBlockIndices[l]) +
                "]"
            ));
      }
      for (
        t.arrayArgs.length > 1 &&
          (e.push(
            "if (!(" +
              u.join(" && ") +
              ")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"
          ),
          e.push(
            "for(var shapeIndex=array" +
              t.arrayArgs[0] +
              ".shape.length-" +
              Math.abs(t.arrayBlockIndices[0]) +
              "; shapeIndex--\x3e0;) {"
          ),
          e.push(
            "if (!(" +
              c.join(" && ") +
              ")) throw new Error('cwise: Arrays do not all have the same shape!')"
          ),
          e.push("}")),
          l = 0;
        l < t.scalarArgs.length;
        ++l
      )
        s.push("scalar" + t.scalarArgs[l]);
      return (
        n.push(["type=[", a.join(","), "].join()"].join("")),
        n.push("proc=CACHED[type]"),
        e.push("var " + n.join(",")),
        e.push(
          [
            "if(!proc){",
            "CACHED[type]=proc=compile([",
            o.join(","),
            "])}",
            "return proc(",
            s.join(","),
            ")}"
          ].join("")
        ),
        t.debug &&
          console.log(
            "-----Generated thunk:\n" + e.join("\n") + "\n----------"
          ),
        new Function("compile", e.join("\n"))(r.bind(void 0, t))
      );
    };
  },
  function(t, e, n) {
    "use strict";
    var r = n(100);
    function i(t, e, n) {
      var r,
        i,
        o = t.length,
        a = e.arrayArgs.length,
        s = e.indexArgs.length > 0,
        u = [],
        c = [],
        l = 0,
        h = 0;
      for (r = 0; r < o; ++r) c.push(["i", r, "=0"].join(""));
      for (i = 0; i < a; ++i)
        for (r = 0; r < o; ++r)
          (h = l),
            (l = t[r]),
            0 === r
              ? c.push(["d", i, "s", r, "=t", i, "p", l].join(""))
              : c.push(
                  [
                    "d",
                    i,
                    "s",
                    r,
                    "=(t",
                    i,
                    "p",
                    l,
                    "-s",
                    h,
                    "*t",
                    i,
                    "p",
                    h,
                    ")"
                  ].join("")
                );
      for (c.length > 0 && u.push("var " + c.join(",")), r = o - 1; r >= 0; --r)
        (l = t[r]),
          u.push(["for(i", r, "=0;i", r, "<s", l, ";++i", r, "){"].join(""));
      for (u.push(n), r = 0; r < o; ++r) {
        for (h = l, l = t[r], i = 0; i < a; ++i)
          u.push(["p", i, "+=d", i, "s", r].join(""));
        s &&
          (r > 0 && u.push(["index[", h, "]-=s", h].join("")),
          u.push(["++index[", l, "]"].join(""))),
          u.push("}");
      }
      return u.join("\n");
    }
    function o(t, e, n) {
      for (var r = t.body, i = [], o = [], a = 0; a < t.args.length; ++a) {
        var s = t.args[a];
        if (!(s.count <= 0)) {
          var u = new RegExp(s.name, "g"),
            c = "",
            l = e.arrayArgs.indexOf(a);
          switch (e.argTypes[a]) {
            case "offset":
              var h = e.offsetArgIndex.indexOf(a);
              (l = e.offsetArgs[h].array), (c = "+q" + h);
            case "array":
              c = "p" + l + c;
              var f = "l" + a,
                p = "a" + l;
              if (0 === e.arrayBlockIndices[l])
                1 === s.count
                  ? "generic" === n[l]
                    ? s.lvalue
                      ? (i.push(["var ", f, "=", p, ".get(", c, ")"].join("")),
                        (r = r.replace(u, f)),
                        o.push([p, ".set(", c, ",", f, ")"].join("")))
                      : (r = r.replace(u, [p, ".get(", c, ")"].join("")))
                    : (r = r.replace(u, [p, "[", c, "]"].join("")))
                  : "generic" === n[l]
                  ? (i.push(["var ", f, "=", p, ".get(", c, ")"].join("")),
                    (r = r.replace(u, f)),
                    s.lvalue && o.push([p, ".set(", c, ",", f, ")"].join("")))
                  : (i.push(["var ", f, "=", p, "[", c, "]"].join("")),
                    (r = r.replace(u, f)),
                    s.lvalue && o.push([p, "[", c, "]=", f].join("")));
              else {
                for (
                  var d = [s.name], m = [c], y = 0;
                  y < Math.abs(e.arrayBlockIndices[l]);
                  y++
                )
                  d.push("\\s*\\[([^\\]]+)\\]"),
                    m.push("$" + (y + 1) + "*t" + l + "b" + y);
                if (
                  ((u = new RegExp(d.join(""), "g")),
                  (c = m.join("+")),
                  "generic" === n[l])
                )
                  throw new Error(
                    "cwise: Generic arrays not supported in combination with blocks!"
                  );
                r = r.replace(u, [p, "[", c, "]"].join(""));
              }
              break;
            case "scalar":
              r = r.replace(u, "Y" + e.scalarArgs.indexOf(a));
              break;
            case "index":
              r = r.replace(u, "index");
              break;
            case "shape":
              r = r.replace(u, "shape");
          }
        }
      }
      return [i.join("\n"), r, o.join("\n")].join("\n").trim();
    }
    function a(t) {
      for (var e = new Array(t.length), n = !0, r = 0; r < t.length; ++r) {
        var i = t[r],
          o = i.match(/\d+/);
        (o = o ? o[0] : ""),
          0 === i.charAt(0)
            ? (e[r] = "u" + i.charAt(1) + o)
            : (e[r] = i.charAt(0) + o),
          r > 0 && (n = n && e[r] === e[r - 1]);
      }
      return n ? e[0] : e.join("");
    }
    t.exports = function(t, e) {
      for (
        var n = (e[1].length - Math.abs(t.arrayBlockIndices[0])) | 0,
          s = new Array(t.arrayArgs.length),
          u = new Array(t.arrayArgs.length),
          c = 0;
        c < t.arrayArgs.length;
        ++c
      )
        (u[c] = e[2 * c]), (s[c] = e[2 * c + 1]);
      var l = [],
        h = [],
        f = [],
        p = [],
        d = [];
      for (c = 0; c < t.arrayArgs.length; ++c) {
        t.arrayBlockIndices[c] < 0
          ? (f.push(0),
            p.push(n),
            l.push(n),
            h.push(n + t.arrayBlockIndices[c]))
          : (f.push(t.arrayBlockIndices[c]),
            p.push(t.arrayBlockIndices[c] + n),
            l.push(0),
            h.push(t.arrayBlockIndices[c]));
        for (var m = [], y = 0; y < s[c].length; y++)
          f[c] <= s[c][y] && s[c][y] < p[c] && m.push(s[c][y] - f[c]);
        d.push(m);
      }
      var g = ["SS"],
        v = ["'use strict'"],
        b = [];
      for (y = 0; y < n; ++y) b.push(["s", y, "=SS[", y, "]"].join(""));
      for (c = 0; c < t.arrayArgs.length; ++c) {
        for (
          g.push("a" + c), g.push("t" + c), g.push("p" + c), y = 0;
          y < n;
          ++y
        )
          b.push(["t", c, "p", y, "=t", c, "[", f[c] + y, "]"].join(""));
        for (y = 0; y < Math.abs(t.arrayBlockIndices[c]); ++y)
          b.push(["t", c, "b", y, "=t", c, "[", l[c] + y, "]"].join(""));
      }
      for (c = 0; c < t.scalarArgs.length; ++c) g.push("Y" + c);
      if (
        (t.shapeArgs.length > 0 && b.push("shape=SS.slice(0)"),
        t.indexArgs.length > 0)
      ) {
        var w = new Array(n);
        for (c = 0; c < n; ++c) w[c] = "0";
        b.push(["index=[", w.join(","), "]"].join(""));
      }
      for (c = 0; c < t.offsetArgs.length; ++c) {
        var _ = t.offsetArgs[c],
          S = [];
        for (y = 0; y < _.offset.length; ++y)
          0 !== _.offset[y] &&
            (1 === _.offset[y]
              ? S.push(["t", _.array, "p", y].join(""))
              : S.push([_.offset[y], "*t", _.array, "p", y].join("")));
        0 === S.length
          ? b.push("q" + c + "=0")
          : b.push(["q", c, "=", S.join("+")].join(""));
      }
      var x = r(
        []
          .concat(t.pre.thisVars)
          .concat(t.body.thisVars)
          .concat(t.post.thisVars)
      );
      for (
        (b = b.concat(x)).length > 0 && v.push("var " + b.join(",")), c = 0;
        c < t.arrayArgs.length;
        ++c
      )
        v.push("p" + c + "|=0");
      t.pre.body.length > 3 && v.push(o(t.pre, t, u));
      var T = o(t.body, t, u),
        A = (function(t) {
          for (var e = 0, n = t[0].length; e < n; ) {
            for (var r = 1; r < t.length; ++r)
              if (t[r][e] !== t[0][e]) return e;
            ++e;
          }
          return e;
        })(d);
      A < n
        ? v.push(
            (function(t, e, n, r) {
              for (
                var o = e.length,
                  a = n.arrayArgs.length,
                  s = n.blockSize,
                  u = n.indexArgs.length > 0,
                  c = [],
                  l = 0;
                l < a;
                ++l
              )
                c.push(["var offset", l, "=p", l].join(""));
              for (l = t; l < o; ++l)
                c.push(
                  ["for(var j" + l + "=SS[", e[l], "]|0;j", l, ">0;){"].join("")
                ),
                  c.push(["if(j", l, "<", s, "){"].join("")),
                  c.push(["s", e[l], "=j", l].join("")),
                  c.push(["j", l, "=0"].join("")),
                  c.push(["}else{s", e[l], "=", s].join("")),
                  c.push(["j", l, "-=", s, "}"].join("")),
                  u && c.push(["index[", e[l], "]=j", l].join(""));
              for (l = 0; l < a; ++l) {
                for (var h = ["offset" + l], f = t; f < o; ++f)
                  h.push(["j", f, "*t", l, "p", e[f]].join(""));
                c.push(["p", l, "=(", h.join("+"), ")"].join(""));
              }
              for (c.push(i(e, n, r)), l = t; l < o; ++l) c.push("}");
              return c.join("\n");
            })(A, d[0], t, T)
          )
        : v.push(i(d[0], t, T)),
        t.post.body.length > 3 && v.push(o(t.post, t, u)),
        t.debug &&
          console.log(
            "-----Generated cwise routine for ",
            e,
            ":\n" + v.join("\n") + "\n----------"
          );
      var k = [
        t.funcName || "unnamed",
        "_cwise_loop_",
        s[0].join("s"),
        "m",
        A,
        a(u)
      ].join("");
      return new Function(
        [
          "function ",
          k,
          "(",
          g.join(","),
          "){",
          v.join("\n"),
          "} return ",
          k
        ].join("")
      )();
    };
  },
  function(t, e, n) {
    "use strict";
    t.exports = function(t, e) {
      switch ((void 0 === e && (e = 0), typeof t)) {
        case "number":
          if (t > 0)
            return (function(t, e) {
              var n, r;
              for (n = new Array(t), r = 0; r < t; ++r) n[r] = e;
              return n;
            })(0 | t, e);
          break;
        case "object":
          if ("number" == typeof t.length)
            return (function t(e, n, r) {
              var i = 0 | e[r];
              if (i <= 0) return [];
              var o,
                a = new Array(i);
              if (r === e.length - 1) for (o = 0; o < i; ++o) a[o] = n;
              else for (o = 0; o < i; ++o) a[o] = t(e, n, r + 1);
              return a;
            })(t, e, 0);
      }
      return [];
    };
  },
  function(t, e, n) {
    var r = n(102);
    function i(t, e, n, i, o, a) {
      var s,
        u,
        c,
        l,
        h,
        f,
        p,
        d,
        m,
        y,
        g,
        v,
        b,
        w,
        _,
        S,
        x,
        T,
        A,
        k,
        E,
        N,
        O,
        C;
      for (
        t |= 0, e |= 0, o |= 0, a |= 0, s = n |= 0, u = r.log2(s), T = 0;
        T < e;
        ++T
      ) {
        for (p = s >> 1, h = 0, c = 0; c < s - 1; c++) {
          for (
            c < h &&
              ((b = i[o + c]),
              (i[o + c] = i[o + h]),
              (i[o + h] = b),
              (b = i[a + c]),
              (i[a + c] = i[a + h]),
              (i[a + h] = b)),
              f = p;
            f <= h;

          )
            (h -= f), (f >>= 1);
          h += f;
        }
        for (g = -1, v = 0, y = 1, d = 0; d < u; d++) {
          for (m = y, y <<= 1, S = 1, x = 0, h = 0; h < m; h++) {
            for (c = h; c < s; c += y)
              (A = i[o + (l = c + m)]),
                (k = i[a + l]),
                (E = i[o + c]),
                (N = i[a + c]),
                (w = (O = S * (A + k)) - k * (S + x)),
                (_ = O + (C = A * (x - S))),
                (i[o + l] = E - w),
                (i[a + l] = N - _),
                (i[o + c] += w),
                (i[a + c] += _);
            (C = S * (v - g)),
              (S = (O = g * (S + x)) - x * (g + v)),
              (x = O + C);
          }
          (v = Math.sqrt((1 - g) / 2)),
            t < 0 && (v = -v),
            (g = Math.sqrt((1 + g) / 2));
        }
        if (t < 0) {
          var I = 1 / s;
          for (c = 0; c < s; c++) (i[o + c] *= I), (i[a + c] *= I);
        }
        (o += n), (a += n);
      }
    }
    (t.exports = function(t, e, n, o, a, s, u) {
      (t |= 0),
        (e |= 0),
        (n |= 0),
        (a |= 0),
        (s |= 0),
        r.isPow2(n)
          ? i(t, e, n, o, a, s)
          : (function(t, e, n, o, a, s, u) {
              (t |= 0), (e |= 0), (n |= 0), (a |= 0), (s |= 0), (u |= 0);
              var c,
                l,
                h,
                f,
                p,
                d,
                m,
                y,
                g,
                v = r.nextPow2(2 * n + 1),
                b = u,
                w = b + n,
                _ = w + n,
                S = _ + v,
                x = S + v,
                T = x + v,
                A = (-t * Math.PI) / n;
              for (g = 0; g < n; ++g)
                (l = A * ((g * g) % (2 * n))),
                  (f = Math.cos(l)),
                  (p = Math.sin(l)),
                  (o[x + (v - g)] = o[x + g] = o[b + g] = f),
                  (o[T + (v - g)] = o[T + g] = o[w + g] = p);
              for (g = n; g <= v - n; ++g) o[x + g] = 0;
              for (g = n; g <= v - n; ++g) o[T + g] = 0;
              for (
                i(1, 1, v, o, x, T), A = t < 0 ? 1 / n : 1, c = 0;
                c < e;
                ++c
              ) {
                for (g = 0; g < n; ++g)
                  (l = o[a + g]),
                    (h = o[s + g]),
                    (f = o[b + g]),
                    (p = -o[w + g]),
                    (d = f * (l + h)),
                    (m = l * (p - f)),
                    (y = h * (f + p)),
                    (o[_ + g] = d - y),
                    (o[S + g] = d + m);
                for (g = n; g < v; ++g) o[_ + g] = 0;
                for (g = n; g < v; ++g) o[S + g] = 0;
                for (i(1, 1, v, o, _, S), g = 0; g < v; ++g)
                  (l = o[_ + g]),
                    (h = o[S + g]),
                    (f = o[x + g]),
                    (p = o[T + g]),
                    (d = f * (l + h)),
                    (m = l * (p - f)),
                    (y = h * (f + p)),
                    (o[_ + g] = d - y),
                    (o[S + g] = d + m);
                for (i(-1, 1, v, o, _, S), g = 0; g < n; ++g)
                  (l = o[_ + g]),
                    (h = o[S + g]),
                    (f = o[b + g]),
                    (p = -o[w + g]),
                    (d = f * (l + h)),
                    (m = l * (p - f)),
                    (y = h * (f + p)),
                    (o[a + g] = A * (d - y)),
                    (o[s + g] = A * (d + m));
                (a += n), (s += n);
              }
            })(t, e, n, o, a, s, u);
    }),
      (t.exports.scratchMemory = function(t) {
        return r.isPow2(t) ? 0 : 2 * t + 4 * r.nextPow2(2 * t + 1);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(53),
      i = n(54),
      o = n(101);
    (e.clone = function(t) {
      var e = t.dtype;
      ("generic" !== e && "array" !== e) || (e = "double");
      var n = o.malloc(t.size, e),
        a = r(n, t.shape);
      return i.assign(a, t), a;
    }),
      (e.malloc = function(t, e) {
        e || (e = "double");
        for (var n = 1, i = new Array(t.length), a = t.length - 1; a >= 0; --a)
          (i[a] = n), (n *= t[a]);
        return r(o.malloc(n, e), t, i, 0);
      }),
      (e.free = function(t) {
        "generic" !== t.dtype && "array" !== t.dtype && o.free(t.data);
      }),
      (e.zeros = function(t, e) {
        e || (e = "double");
        for (var n = 1, i = new Array(t.length), a = t.length - 1; a >= 0; --a)
          (i[a] = n), (n *= t[a]);
        var s = o.malloc(n, e);
        for (a = 0; a < n; ++a) s[a] = 0;
        return r(s, t, i, 0);
      }),
      (e.ones = function(t, e) {
        e || (e = "double");
        for (var n = 1, i = new Array(t.length), a = t.length - 1; a >= 0; --a)
          (i[a] = n), (n *= t[a]);
        var s = o.malloc(n, e);
        for (a = 0; a < n; ++a) s[a] = 1;
        return r(s, t, i, 0);
      }),
      (e.eye = function(t, e) {
        var n, i;
        e || (e = "double");
        var a = 1,
          s = new Array(t.length);
        for (n = t.length - 1; n >= 0; --n) (s[n] = a), (a *= t[n]);
        var u = o.malloc(a, e);
        for (n = 0; n < a; ++n) u[n] = 0;
        var c = 1 / 0,
          l = 0;
        for (n = t.length - 1; n >= 0; n--)
          (l += s[n]), (c = Math.min(c, t[n]));
        for (n = 0, i = 0; n < c; n++, i += l) u[i] = 1;
        return r(u, t, s, 0);
      });
  },
  function(t, e, n) {
    "use strict";
    var r = n(238),
      i = n(99),
      o = ["args", "body"],
      a = ["pre", "post", "printCode", "funcName", "blockSize"];
    t.exports = function(t) {
      for (var e in t)
        o.indexOf(e) < 0 &&
          a.indexOf(e) < 0 &&
          console.warn(
            "cwise: Unknown argument '" + e + "' passed to expression compiler"
          );
      for (var n = 0; n < o.length; ++n)
        if (!t[o[n]]) throw new Error("cwise: Missing argument: " + o[n]);
      return i({
        args: t.args,
        pre: r(t.pre || function() {}),
        body: r(t.body),
        post: r(t.post || function() {}),
        debug: !!t.printCode,
        funcName: t.funcName || t.body.name || "cwise",
        blockSize: t.blockSize || 64
      });
    };
  },
  function(t, e, n) {
    "use strict";
    (function(e) {
      var r = n(239),
        i = n(100),
        o = 0;
      function a(t, e, n) {
        (this.name = t), (this.lvalue = e), (this.rvalue = n), (this.count = 0);
      }
      function s(t, e, n, r) {
        (this.body = t),
          (this.args = e),
          (this.thisVars = n),
          (this.localVars = r);
      }
      t.exports = function(t) {
        for (
          var n = ["(", t, ")()"].join(""),
            u = r.parse(n, { range: !0 }),
            c = "_inline_" + o++ + "_",
            l = (function(t) {
              for (
                var e = t.body[0].expression.callee.params,
                  n = new Array(e.length),
                  r = 0;
                r < e.length;
                ++r
              )
                n[r] = e[r].name;
              return n;
            })(u),
            h = new Array(l.length),
            f = 0;
          f < l.length;
          ++f
        )
          h[f] = new a([c, "arg", f, "_"].join(""), !1, !1);
        for (var p = new Array(n.length), d = ((f = 0), n.length); f < d; ++f)
          p[f] = n.charAt(f);
        var m = [],
          y = [];
        function g(t, e) {
          for (var n = t.range[0], r = t.range[1], i = n + 1; i < r; ++i)
            p[i] = "";
          p[n] = e;
        }
        var v,
          b = 1,
          w = 2;
        return (
          (function t(n, r) {
            if (((n.parent = r), "MemberExpression" === n.type))
              n.computed
                ? (t(n.object, n), t(n.property, n))
                : "ThisExpression" === n.object.type
                ? g(
                    n,
                    ((_ = n.property.name),
                    (S = "this_" + _.replace(/\_/g, "__")),
                    y.push(S),
                    S)
                  )
                : t(n.object, n);
            else {
              if ("ThisExpression" === n.type)
                throw new Error("cwise-parser: Computed this is not allowed");
              if ("Identifier" === n.type) {
                var i = n.name,
                  o = l.indexOf(i);
                if (o >= 0) {
                  var a = h[o],
                    s = (function(t) {
                      return "AssignmentExpression" === t.parent.type &&
                        t.parent.left === t
                        ? "=" === t.parent.operator
                          ? b
                          : b | w
                        : "UpdateExpression" === t.parent.type
                        ? b | w
                        : w;
                    })(n);
                  s & b && (a.lvalue = !0),
                    s & w && (a.rvalue = !0),
                    ++a.count,
                    g(n, a.name);
                } else
                  (function(t) {
                    if ("eval" === t)
                      throw new Error("cwise-parser: eval() not allowed");
                    return "undefined" != typeof window
                      ? t in window
                      : void 0 !== e
                      ? t in e
                      : "undefined" != typeof self && t in self;
                  })(i) ||
                    g(
                      n,
                      (function(t) {
                        var e = c + t.replace(/\_/g, "__");
                        return m.push(e), e;
                      })(i)
                    );
              } else if ("Literal" === n.type)
                "string" == typeof n.value &&
                  g(
                    n,
                    "'" +
                      n.value.replace(/\_/g, "\\_").replace(/\'/g, "'") +
                      "'"
                  );
              else {
                if ("WithStatement" === n.type)
                  throw new Error(
                    "cwise-parser: with() statements not allowed"
                  );
                for (var u = Object.keys(n), f = 0, p = u.length; f < p; ++f)
                  if ("parent" !== u[f]) {
                    var d = n[u[f]];
                    if (d)
                      if (d instanceof Array)
                        for (var v = 0; v < d.length; ++v)
                          d[v] && "string" == typeof d[v].type && t(d[v], n);
                      else "string" == typeof d.type && t(d, n);
                  }
              }
            }
            var _, S;
          })(u.body[0].expression.callee.body, void 0),
          i(m),
          i(y),
          new s(
            ((v = u.body[0].expression.callee.body),
            p.slice(v.range[0], v.range[1]).join("")),
            h,
            y,
            m
          )
        );
      };
    }.call(this, n(5)));
  },
  function(t, e, n) {
    var r, i, o;
    !(function(n, a) {
      "use strict";
      (i = [e]),
        void 0 ===
          (o =
            "function" ==
            typeof (r = function(t) {
              var e, n, r, i, o, a, s, u, c, l, h, f, p, d, m, y, g, v;
              function b(t, e) {
                if (!t) throw new Error("ASSERT: " + e);
              }
              function w(t) {
                return t >= 48 && t <= 57;
              }
              function _(t) {
                return "0123456789abcdefABCDEF".indexOf(t) >= 0;
              }
              function S(t) {
                return "01234567".indexOf(t) >= 0;
              }
              function x(t) {
                return (
                  32 === t ||
                  9 === t ||
                  11 === t ||
                  12 === t ||
                  160 === t ||
                  (t >= 5760 &&
                    [
                      5760,
                      6158,
                      8192,
                      8193,
                      8194,
                      8195,
                      8196,
                      8197,
                      8198,
                      8199,
                      8200,
                      8201,
                      8202,
                      8239,
                      8287,
                      12288,
                      65279
                    ].indexOf(t) >= 0)
                );
              }
              function T(t) {
                return 10 === t || 13 === t || 8232 === t || 8233 === t;
              }
              function A(t) {
                return (
                  36 === t ||
                  95 === t ||
                  (t >= 65 && t <= 90) ||
                  (t >= 97 && t <= 122) ||
                  92 === t ||
                  (t >= 128 &&
                    s.NonAsciiIdentifierStart.test(String.fromCharCode(t)))
                );
              }
              function k(t) {
                return (
                  36 === t ||
                  95 === t ||
                  (t >= 65 && t <= 90) ||
                  (t >= 97 && t <= 122) ||
                  (t >= 48 && t <= 57) ||
                  92 === t ||
                  (t >= 128 &&
                    s.NonAsciiIdentifierPart.test(String.fromCharCode(t)))
                );
              }
              function E(t) {
                switch (t) {
                  case "implements":
                  case "interface":
                  case "package":
                  case "private":
                  case "protected":
                  case "public":
                  case "static":
                  case "yield":
                  case "let":
                    return !0;
                  default:
                    return !1;
                }
              }
              function N(t) {
                return "eval" === t || "arguments" === t;
              }
              function O(t, e, n, r, i) {
                var o;
                b("number" == typeof n, "Comment must have valid position"),
                  g.lastCommentStart >= n ||
                    ((g.lastCommentStart = n),
                    (o = { type: t, value: e }),
                    v.range && (o.range = [n, r]),
                    v.loc && (o.loc = i),
                    v.comments.push(o),
                    v.attachComment &&
                      (v.leadingComments.push(o), v.trailingComments.push(o)));
              }
              function C(t) {
                var e, n, r, i;
                for (
                  e = h - t, n = { start: { line: f, column: h - p - t } };
                  h < d;

                )
                  if (((r = c.charCodeAt(h)), ++h, T(r)))
                    return (
                      v.comments &&
                        ((i = c.slice(e + t, h - 1)),
                        (n.end = { line: f, column: h - p - 1 }),
                        O("Line", i, e, h - 1, n)),
                      13 === r && 10 === c.charCodeAt(h) && ++h,
                      ++f,
                      void (p = h)
                    );
                v.comments &&
                  ((i = c.slice(e + t, h)),
                  (n.end = { line: f, column: h - p }),
                  O("Line", i, e, h, n));
              }
              function I() {
                var t, e, n, r;
                for (
                  v.comments &&
                  ((t = h - 2),
                  (e = { start: { line: f, column: h - p - 2 } }));
                  h < d;

                )
                  if (T((n = c.charCodeAt(h))))
                    13 === n && 10 === c.charCodeAt(h + 1) && ++h,
                      ++f,
                      (p = ++h),
                      h >= d && K({}, a.UnexpectedToken, "ILLEGAL");
                  else if (42 === n) {
                    if (47 === c.charCodeAt(h + 1))
                      return (
                        ++h,
                        ++h,
                        void (
                          v.comments &&
                          ((r = c.slice(t + 2, h - 2)),
                          (e.end = { line: f, column: h - p }),
                          O("Block", r, t, h, e))
                        )
                      );
                    ++h;
                  } else ++h;
                K({}, a.UnexpectedToken, "ILLEGAL");
              }
              function M() {
                var t, e;
                for (e = 0 === h; h < d; )
                  if (x((t = c.charCodeAt(h)))) ++h;
                  else if (T(t))
                    ++h,
                      13 === t && 10 === c.charCodeAt(h) && ++h,
                      ++f,
                      (p = h),
                      (e = !0);
                  else if (47 === t)
                    if (47 === (t = c.charCodeAt(h + 1)))
                      ++h, ++h, C(2), (e = !0);
                    else {
                      if (42 !== t) break;
                      ++h, ++h, I();
                    }
                  else if (e && 45 === t) {
                    if (
                      45 !== c.charCodeAt(h + 1) ||
                      62 !== c.charCodeAt(h + 2)
                    )
                      break;
                    (h += 3), C(3);
                  } else {
                    if (60 !== t) break;
                    if ("!--" !== c.slice(h + 1, h + 4)) break;
                    ++h, ++h, ++h, ++h, C(4);
                  }
              }
              function P(t) {
                var e,
                  n,
                  r,
                  i = 0;
                for (n = "u" === t ? 4 : 2, e = 0; e < n; ++e) {
                  if (!(h < d && _(c[h]))) return "";
                  (r = c[h++]),
                    (i = 16 * i + "0123456789abcdef".indexOf(r.toLowerCase()));
                }
                return String.fromCharCode(i);
              }
              function R() {
                var t, e;
                for (
                  t = c.charCodeAt(h++),
                    e = String.fromCharCode(t),
                    92 === t &&
                      (117 !== c.charCodeAt(h) &&
                        K({}, a.UnexpectedToken, "ILLEGAL"),
                      ++h,
                      ((t = P("u")) && "\\" !== t && A(t.charCodeAt(0))) ||
                        K({}, a.UnexpectedToken, "ILLEGAL"),
                      (e = t));
                  h < d && k((t = c.charCodeAt(h)));

                )
                  ++h,
                    (e += String.fromCharCode(t)),
                    92 === t &&
                      ((e = e.substr(0, e.length - 1)),
                      117 !== c.charCodeAt(h) &&
                        K({}, a.UnexpectedToken, "ILLEGAL"),
                      ++h,
                      ((t = P("u")) && "\\" !== t && k(t.charCodeAt(0))) ||
                        K({}, a.UnexpectedToken, "ILLEGAL"),
                      (e += t));
                return e;
              }
              function D() {
                var t, n;
                return (
                  (t = h),
                  (n =
                    92 === c.charCodeAt(h)
                      ? R()
                      : (function() {
                          var t, e;
                          t = h++;
                          for (; h < d; ) {
                            if (92 === (e = c.charCodeAt(h)))
                              return (h = t), R();
                            if (!k(e)) break;
                            ++h;
                          }
                          return c.slice(t, h);
                        })()),
                  {
                    type:
                      1 === n.length
                        ? e.Identifier
                        : (function(t) {
                            if (l && E(t)) return !0;
                            switch (t.length) {
                              case 2:
                                return "if" === t || "in" === t || "do" === t;
                              case 3:
                                return (
                                  "var" === t ||
                                  "for" === t ||
                                  "new" === t ||
                                  "try" === t ||
                                  "let" === t
                                );
                              case 4:
                                return (
                                  "this" === t ||
                                  "else" === t ||
                                  "case" === t ||
                                  "void" === t ||
                                  "with" === t ||
                                  "enum" === t
                                );
                              case 5:
                                return (
                                  "while" === t ||
                                  "break" === t ||
                                  "catch" === t ||
                                  "throw" === t ||
                                  "const" === t ||
                                  "yield" === t ||
                                  "class" === t ||
                                  "super" === t
                                );
                              case 6:
                                return (
                                  "return" === t ||
                                  "typeof" === t ||
                                  "delete" === t ||
                                  "switch" === t ||
                                  "export" === t ||
                                  "import" === t
                                );
                              case 7:
                                return (
                                  "default" === t ||
                                  "finally" === t ||
                                  "extends" === t
                                );
                              case 8:
                                return (
                                  "function" === t ||
                                  "continue" === t ||
                                  "debugger" === t
                                );
                              case 10:
                                return "instanceof" === t;
                              default:
                                return !1;
                            }
                          })(n)
                        ? e.Keyword
                        : "null" === n
                        ? e.NullLiteral
                        : "true" === n || "false" === n
                        ? e.BooleanLiteral
                        : e.Identifier,
                    value: n,
                    lineNumber: f,
                    lineStart: p,
                    start: t,
                    end: h
                  }
                );
              }
              function F() {
                var t,
                  n,
                  r,
                  i,
                  o = h,
                  s = c.charCodeAt(h),
                  u = c[h];
                switch (s) {
                  case 46:
                  case 40:
                  case 41:
                  case 59:
                  case 44:
                  case 123:
                  case 125:
                  case 91:
                  case 93:
                  case 58:
                  case 63:
                  case 126:
                    return (
                      ++h,
                      v.tokenize &&
                        (40 === s
                          ? (v.openParenToken = v.tokens.length)
                          : 123 === s && (v.openCurlyToken = v.tokens.length)),
                      {
                        type: e.Punctuator,
                        value: String.fromCharCode(s),
                        lineNumber: f,
                        lineStart: p,
                        start: o,
                        end: h
                      }
                    );
                  default:
                    if (61 === (t = c.charCodeAt(h + 1)))
                      switch (s) {
                        case 43:
                        case 45:
                        case 47:
                        case 60:
                        case 62:
                        case 94:
                        case 124:
                        case 37:
                        case 38:
                        case 42:
                          return (
                            (h += 2),
                            {
                              type: e.Punctuator,
                              value:
                                String.fromCharCode(s) + String.fromCharCode(t),
                              lineNumber: f,
                              lineStart: p,
                              start: o,
                              end: h
                            }
                          );
                        case 33:
                        case 61:
                          return (
                            (h += 2),
                            61 === c.charCodeAt(h) && ++h,
                            {
                              type: e.Punctuator,
                              value: c.slice(o, h),
                              lineNumber: f,
                              lineStart: p,
                              start: o,
                              end: h
                            }
                          );
                      }
                }
                return ">>>=" === (i = c.substr(h, 4))
                  ? ((h += 4),
                    {
                      type: e.Punctuator,
                      value: i,
                      lineNumber: f,
                      lineStart: p,
                      start: o,
                      end: h
                    })
                  : ">>>" === (r = i.substr(0, 3)) || "<<=" === r || ">>=" === r
                  ? ((h += 3),
                    {
                      type: e.Punctuator,
                      value: r,
                      lineNumber: f,
                      lineStart: p,
                      start: o,
                      end: h
                    })
                  : ((n = r.substr(0, 2)),
                    (u === n[1] && "+-<>&|".indexOf(u) >= 0) || "=>" === n
                      ? ((h += 2),
                        {
                          type: e.Punctuator,
                          value: n,
                          lineNumber: f,
                          lineStart: p,
                          start: o,
                          end: h
                        })
                      : "<>=!+-*%&|^/".indexOf(u) >= 0
                      ? (++h,
                        {
                          type: e.Punctuator,
                          value: u,
                          lineNumber: f,
                          lineStart: p,
                          start: o,
                          end: h
                        })
                      : void K({}, a.UnexpectedToken, "ILLEGAL"));
              }
              function z() {
                var t, n, r;
                if (
                  (b(
                    w((r = c[h]).charCodeAt(0)) || "." === r,
                    "Numeric literal must start with a decimal digit or a decimal point"
                  ),
                  (n = h),
                  (t = ""),
                  "." !== r)
                ) {
                  if (((t = c[h++]), (r = c[h]), "0" === t)) {
                    if ("x" === r || "X" === r)
                      return (
                        ++h,
                        (function(t) {
                          var n = "";
                          for (; h < d && _(c[h]); ) n += c[h++];
                          0 === n.length && K({}, a.UnexpectedToken, "ILLEGAL");
                          A(c.charCodeAt(h)) &&
                            K({}, a.UnexpectedToken, "ILLEGAL");
                          return {
                            type: e.NumericLiteral,
                            value: parseInt("0x" + n, 16),
                            lineNumber: f,
                            lineStart: p,
                            start: t,
                            end: h
                          };
                        })(n)
                      );
                    if (
                      S(r) &&
                      (function() {
                        var t, e;
                        for (t = h + 1; t < d; ++t) {
                          if ("8" === (e = c[t]) || "9" === e) return !1;
                          if (!S(e)) return !0;
                        }
                        return !0;
                      })()
                    )
                      return (function(t) {
                        var n = "0" + c[h++];
                        for (; h < d && S(c[h]); ) n += c[h++];
                        (A(c.charCodeAt(h)) || w(c.charCodeAt(h))) &&
                          K({}, a.UnexpectedToken, "ILLEGAL");
                        return {
                          type: e.NumericLiteral,
                          value: parseInt(n, 8),
                          octal: !0,
                          lineNumber: f,
                          lineStart: p,
                          start: t,
                          end: h
                        };
                      })(n);
                  }
                  for (; w(c.charCodeAt(h)); ) t += c[h++];
                  r = c[h];
                }
                if ("." === r) {
                  for (t += c[h++]; w(c.charCodeAt(h)); ) t += c[h++];
                  r = c[h];
                }
                if ("e" === r || "E" === r)
                  if (
                    ((t += c[h++]),
                    ("+" !== (r = c[h]) && "-" !== r) || (t += c[h++]),
                    w(c.charCodeAt(h)))
                  )
                    for (; w(c.charCodeAt(h)); ) t += c[h++];
                  else K({}, a.UnexpectedToken, "ILLEGAL");
                return (
                  A(c.charCodeAt(h)) && K({}, a.UnexpectedToken, "ILLEGAL"),
                  {
                    type: e.NumericLiteral,
                    value: parseFloat(t),
                    lineNumber: f,
                    lineStart: p,
                    start: n,
                    end: h
                  }
                );
              }
              function L() {
                var t, n, r, i;
                return (
                  (y = null),
                  M(),
                  (t = h),
                  (n = (function() {
                    var t, e, n, r;
                    b(
                      "/" === (t = c[h]),
                      "Regular expression literal must start with a slash"
                    ),
                      (e = c[h++]),
                      (n = !1),
                      (r = !1);
                    for (; h < d; )
                      if (((t = c[h++]), (e += t), "\\" === t))
                        T((t = c[h++]).charCodeAt(0)) &&
                          K({}, a.UnterminatedRegExp),
                          (e += t);
                      else if (T(t.charCodeAt(0))) K({}, a.UnterminatedRegExp);
                      else if (n) "]" === t && (n = !1);
                      else {
                        if ("/" === t) {
                          r = !0;
                          break;
                        }
                        "[" === t && (n = !0);
                      }
                    r || K({}, a.UnterminatedRegExp);
                    return { value: e.substr(1, e.length - 2), literal: e };
                  })()),
                  (r = (function() {
                    var t, e, n, r;
                    (e = ""), (n = "");
                    for (; h < d && k((t = c[h]).charCodeAt(0)); )
                      if ((++h, "\\" === t && h < d))
                        if ("u" === (t = c[h])) {
                          if (((r = ++h), (t = P("u"))))
                            for (n += t, e += "\\u"; r < h; ++r) e += c[r];
                          else (h = r), (n += "u"), (e += "\\u");
                          Q({}, a.UnexpectedToken, "ILLEGAL");
                        } else (e += "\\"), Q({}, a.UnexpectedToken, "ILLEGAL");
                      else (n += t), (e += t);
                    return { value: n, literal: e };
                  })()),
                  (i = (function(t, e) {
                    var n;
                    try {
                      n = new RegExp(t, e);
                    } catch (t) {
                      K({}, a.InvalidRegExp);
                    }
                    return n;
                  })(n.value, r.value)),
                  v.tokenize
                    ? {
                        type: e.RegularExpression,
                        value: i,
                        lineNumber: f,
                        lineStart: p,
                        start: t,
                        end: h
                      }
                    : {
                        literal: n.literal + r.literal,
                        value: i,
                        start: t,
                        end: h
                      }
                );
              }
              function j() {
                var t, e, n, r;
                return (
                  M(),
                  (t = h),
                  (e = { start: { line: f, column: h - p } }),
                  (n = L()),
                  (e.end = { line: f, column: h - p }),
                  v.tokenize ||
                    (v.tokens.length > 0 &&
                      (r = v.tokens[v.tokens.length - 1]).range[0] === t &&
                      "Punctuator" === r.type &&
                      (("/" !== r.value && "/=" !== r.value) || v.tokens.pop()),
                    v.tokens.push({
                      type: "RegularExpression",
                      value: n.literal,
                      range: [t, h],
                      loc: e
                    })),
                  n
                );
              }
              function B() {
                var t;
                return (
                  M(),
                  h >= d
                    ? {
                        type: e.EOF,
                        lineNumber: f,
                        lineStart: p,
                        start: h,
                        end: h
                      }
                    : A((t = c.charCodeAt(h)))
                    ? D()
                    : 40 === t || 41 === t || 59 === t
                    ? F()
                    : 39 === t || 34 === t
                    ? (function() {
                        var t,
                          n,
                          r,
                          i,
                          o,
                          s,
                          u,
                          l,
                          m = "",
                          y = !1;
                        (u = f),
                          (l = p),
                          b(
                            "'" === (t = c[h]) || '"' === t,
                            "String literal must starts with a quote"
                          ),
                          (n = h),
                          ++h;
                        for (; h < d; ) {
                          if ((r = c[h++]) === t) {
                            t = "";
                            break;
                          }
                          if ("\\" === r)
                            if ((r = c[h++]) && T(r.charCodeAt(0)))
                              ++f, "\r" === r && "\n" === c[h] && ++h, (p = h);
                            else
                              switch (r) {
                                case "u":
                                case "x":
                                  (s = h),
                                    (o = P(r)) ? (m += o) : ((h = s), (m += r));
                                  break;
                                case "n":
                                  m += "\n";
                                  break;
                                case "r":
                                  m += "\r";
                                  break;
                                case "t":
                                  m += "\t";
                                  break;
                                case "b":
                                  m += "\b";
                                  break;
                                case "f":
                                  m += "\f";
                                  break;
                                case "v":
                                  m += "\v";
                                  break;
                                default:
                                  S(r)
                                    ? (0 !== (i = "01234567".indexOf(r)) &&
                                        (y = !0),
                                      h < d &&
                                        S(c[h]) &&
                                        ((y = !0),
                                        (i =
                                          8 * i + "01234567".indexOf(c[h++])),
                                        "0123".indexOf(r) >= 0 &&
                                          h < d &&
                                          S(c[h]) &&
                                          (i =
                                            8 * i +
                                            "01234567".indexOf(c[h++]))),
                                      (m += String.fromCharCode(i)))
                                    : (m += r);
                              }
                          else {
                            if (T(r.charCodeAt(0))) break;
                            m += r;
                          }
                        }
                        "" !== t && K({}, a.UnexpectedToken, "ILLEGAL");
                        return {
                          type: e.StringLiteral,
                          value: m,
                          octal: y,
                          startLineNumber: u,
                          startLineStart: l,
                          lineNumber: f,
                          lineStart: p,
                          start: n,
                          end: h
                        };
                      })()
                    : 46 === t
                    ? w(c.charCodeAt(h + 1))
                      ? z()
                      : F()
                    : w(t)
                    ? z()
                    : v.tokenize && 47 === t
                    ? (function() {
                        var t, e;
                        if (!(t = v.tokens[v.tokens.length - 1])) return j();
                        if ("Punctuator" === t.type) {
                          if ("]" === t.value) return F();
                          if (")" === t.value)
                            return !(e = v.tokens[v.openParenToken - 1]) ||
                              "Keyword" !== e.type ||
                              ("if" !== e.value &&
                                "while" !== e.value &&
                                "for" !== e.value &&
                                "with" !== e.value)
                              ? F()
                              : j();
                          if ("}" === t.value) {
                            if (
                              v.tokens[v.openCurlyToken - 3] &&
                              "Keyword" === v.tokens[v.openCurlyToken - 3].type
                            ) {
                              if (!(e = v.tokens[v.openCurlyToken - 4]))
                                return F();
                            } else {
                              if (
                                !v.tokens[v.openCurlyToken - 4] ||
                                "Keyword" !==
                                  v.tokens[v.openCurlyToken - 4].type
                              )
                                return F();
                              if (!(e = v.tokens[v.openCurlyToken - 5]))
                                return j();
                            }
                            return r.indexOf(e.value) >= 0 ? F() : j();
                          }
                          return j();
                        }
                        if ("Keyword" === t.type && "this" !== t.value)
                          return j();
                        return F();
                      })()
                    : F()
                );
              }
              function q() {
                var t, r, i;
                return (
                  M(),
                  (t = { start: { line: f, column: h - p } }),
                  (r = B()),
                  (t.end = { line: f, column: h - p }),
                  r.type !== e.EOF &&
                    ((i = c.slice(r.start, r.end)),
                    v.tokens.push({
                      type: n[r.type],
                      value: i,
                      range: [r.start, r.end],
                      loc: t
                    })),
                  r
                );
              }
              function U() {
                var t;
                return (
                  (h = (t = y).end),
                  (f = t.lineNumber),
                  (p = t.lineStart),
                  (y = void 0 !== v.tokens ? q() : B()),
                  (h = t.end),
                  (f = t.lineNumber),
                  (p = t.lineStart),
                  t
                );
              }
              function V() {
                var t, e, n;
                (t = h),
                  (e = f),
                  (n = p),
                  (y = void 0 !== v.tokens ? q() : B()),
                  (h = t),
                  (f = e),
                  (p = n);
              }
              function W(t, e) {
                (this.line = t), (this.column = e);
              }
              function G(t, e, n, r) {
                (this.start = new W(t, e)), (this.end = new W(n, r));
              }
              function H() {
                var t, e, n, r;
                return (
                  (t = h),
                  (e = f),
                  (n = p),
                  M(),
                  (r = f !== e),
                  (h = t),
                  (f = e),
                  (p = n),
                  r
                );
              }
              function K(t, e) {
                var n,
                  r = Array.prototype.slice.call(arguments, 2),
                  i = e.replace(/%(\d)/g, function(t, e) {
                    return (
                      b(e < r.length, "Message reference must be in range"),
                      r[e]
                    );
                  });
                throw ("number" == typeof t.lineNumber
                  ? (((n = new Error("Line " + t.lineNumber + ": " + i)).index =
                      t.start),
                    (n.lineNumber = t.lineNumber),
                    (n.column = t.start - p + 1))
                  : (((n = new Error("Line " + f + ": " + i)).index = h),
                    (n.lineNumber = f),
                    (n.column = h - p + 1)),
                (n.description = i),
                n);
              }
              function Q() {
                try {
                  K.apply(null, arguments);
                } catch (t) {
                  if (!v.errors) throw t;
                  v.errors.push(t);
                }
              }
              function X(t) {
                if (
                  (t.type === e.EOF && K(t, a.UnexpectedEOS),
                  t.type === e.NumericLiteral && K(t, a.UnexpectedNumber),
                  t.type === e.StringLiteral && K(t, a.UnexpectedString),
                  t.type === e.Identifier && K(t, a.UnexpectedIdentifier),
                  t.type === e.Keyword)
                ) {
                  if (
                    (function(t) {
                      switch (t) {
                        case "class":
                        case "enum":
                        case "export":
                        case "extends":
                        case "import":
                        case "super":
                          return !0;
                        default:
                          return !1;
                      }
                    })(t.value)
                  )
                    K(t, a.UnexpectedReserved);
                  else if (l && E(t.value))
                    return void Q(t, a.StrictReservedWord);
                  K(t, a.UnexpectedToken, t.value);
                }
                K(t, a.UnexpectedToken, t.value);
              }
              function $(t) {
                var n = U();
                (n.type === e.Punctuator && n.value === t) || X(n);
              }
              function Y(t) {
                var n = U();
                (n.type === e.Keyword && n.value === t) || X(n);
              }
              function J(t) {
                return y.type === e.Punctuator && y.value === t;
              }
              function Z(t) {
                return y.type === e.Keyword && y.value === t;
              }
              function tt() {
                var t,
                  n = h,
                  r = f,
                  i = p,
                  o = y;
                if (59 === c.charCodeAt(h) || J(";")) U();
                else {
                  if (((t = f), M(), f !== t))
                    return (h = n), (f = r), (p = i), void (y = o);
                  y.type === e.EOF || J("}") || X(y);
                }
              }
              function et(t) {
                return t.type === i.Identifier || t.type === i.MemberExpression;
              }
              function nt(t, e) {
                var n, r, i;
                return (
                  (n = l),
                  (i = y),
                  (r = At()),
                  e && l && N(t[0].name) && Q(e, a.StrictParamName),
                  (l = n),
                  m.markEnd(m.createFunctionExpression(null, t, [], r), i)
                );
              }
              function rt() {
                var t, n;
                return (
                  (n = y),
                  (t = U()).type === e.StringLiteral ||
                  t.type === e.NumericLiteral
                    ? (l && t.octal && Q(t, a.StrictOctalLiteral),
                      m.markEnd(m.createLiteral(t), n))
                    : m.markEnd(m.createIdentifier(t.value), n)
                );
              }
              function it() {
                var t, n, r, i, o, s;
                return (
                  (s = y),
                  (t = y).type === e.Identifier
                    ? ((r = rt()),
                      "get" !== t.value || J(":")
                        ? "set" !== t.value || J(":")
                          ? ($(":"),
                            (i = mt()),
                            m.markEnd(m.createProperty("init", r, i), s))
                          : ((n = rt()),
                            $("("),
                            (t = y).type !== e.Identifier
                              ? ($(")"),
                                Q(t, a.UnexpectedToken, t.value),
                                (i = nt([])))
                              : ((o = [vt()]), $(")"), (i = nt(o, t))),
                            m.markEnd(m.createProperty("set", n, i), s))
                        : ((n = rt()),
                          $("("),
                          $(")"),
                          (i = nt([])),
                          m.markEnd(m.createProperty("get", n, i), s)))
                    : t.type !== e.EOF && t.type !== e.Punctuator
                    ? ((n = rt()),
                      $(":"),
                      (i = mt()),
                      m.markEnd(m.createProperty("init", n, i), s))
                    : void X(t)
                );
              }
              function ot() {
                var t, n, r, s;
                if (J("("))
                  return (function() {
                    var t;
                    return $("("), (t = yt()), $(")"), t;
                  })();
                if (J("["))
                  return (function() {
                    var t,
                      e = [];
                    (t = y), $("[");
                    for (; !J("]"); )
                      J(",")
                        ? (U(), e.push(null))
                        : (e.push(mt()), J("]") || $(","));
                    return U(), m.markEnd(m.createArrayExpression(e), t);
                  })();
                if (J("{"))
                  return (function() {
                    var t,
                      e,
                      n,
                      r,
                      s,
                      u = [],
                      c = {},
                      h = String;
                    (s = y), $("{");
                    for (; !J("}"); )
                      (t = it()),
                        (e =
                          t.key.type === i.Identifier
                            ? t.key.name
                            : h(t.key.value)),
                        (r =
                          "init" === t.kind
                            ? o.Data
                            : "get" === t.kind
                            ? o.Get
                            : o.Set),
                        (n = "$" + e),
                        Object.prototype.hasOwnProperty.call(c, n)
                          ? (c[n] === o.Data
                              ? l && r === o.Data
                                ? Q({}, a.StrictDuplicateProperty)
                                : r !== o.Data && Q({}, a.AccessorDataProperty)
                              : r === o.Data
                              ? Q({}, a.AccessorDataProperty)
                              : c[n] & r && Q({}, a.AccessorGetSet),
                            (c[n] |= r))
                          : (c[n] = r),
                        u.push(t),
                        J("}") || $(",");
                    return $("}"), m.markEnd(m.createObjectExpression(u), s);
                  })();
                if (((t = y.type), (s = y), t === e.Identifier))
                  r = m.createIdentifier(U().value);
                else if (t === e.StringLiteral || t === e.NumericLiteral)
                  l && y.octal && Q(y, a.StrictOctalLiteral),
                    (r = m.createLiteral(U()));
                else if (t === e.Keyword) {
                  if (Z("function"))
                    return (function() {
                      var t,
                        e,
                        n,
                        r,
                        i,
                        o,
                        s,
                        u,
                        c = null,
                        h = [];
                      (u = y),
                        Y("function"),
                        J("(") ||
                          ((t = y),
                          (c = vt()),
                          l
                            ? N(t.value) && Q(t, a.StrictFunctionName)
                            : N(t.value)
                            ? ((n = t), (r = a.StrictFunctionName))
                            : E(t.value) &&
                              ((n = t), (r = a.StrictReservedWord)));
                      (i = kt(n)),
                        (h = i.params),
                        (e = i.stricted),
                        (n = i.firstRestricted),
                        i.message && (r = i.message);
                      (s = l), (o = At()), l && n && K(n, r);
                      l && e && Q(e, r);
                      return (
                        (l = s),
                        m.markEnd(m.createFunctionExpression(c, h, [], o), u)
                      );
                    })();
                  Z("this") ? (U(), (r = m.createThisExpression())) : X(U());
                } else
                  t === e.BooleanLiteral
                    ? (((n = U()).value = "true" === n.value),
                      (r = m.createLiteral(n)))
                    : t === e.NullLiteral
                    ? (((n = U()).value = null), (r = m.createLiteral(n)))
                    : J("/") || J("/=")
                    ? ((r =
                        void 0 !== v.tokens
                          ? m.createLiteral(j())
                          : m.createLiteral(L())),
                      V())
                    : X(U());
                return m.markEnd(r, s);
              }
              function at() {
                var t = [];
                if (($("("), !J(")")))
                  for (; h < d && (t.push(mt()), !J(")")); ) $(",");
                return $(")"), t;
              }
              function st() {
                var t, n;
                return (
                  (n = y),
                  (function(t) {
                    return (
                      t.type === e.Identifier ||
                      t.type === e.Keyword ||
                      t.type === e.BooleanLiteral ||
                      t.type === e.NullLiteral
                    );
                  })((t = U())) || X(t),
                  m.markEnd(m.createIdentifier(t.value), n)
                );
              }
              function ut() {
                return $("."), st();
              }
              function ct() {
                var t;
                return $("["), (t = yt()), $("]"), t;
              }
              function lt() {
                var t, e, n;
                return (
                  (n = y),
                  Y("new"),
                  (t = (function() {
                    var t, e, n;
                    b(
                      g.allowIn,
                      "callee of new expression always allow in keyword."
                    ),
                      (n = y),
                      (t = Z("new") ? lt() : ot());
                    for (; J(".") || J("["); )
                      J("[")
                        ? ((e = ct()),
                          (t = m.createMemberExpression("[", t, e)))
                        : ((e = ut()),
                          (t = m.createMemberExpression(".", t, e))),
                        m.markEnd(t, n);
                    return t;
                  })()),
                  (e = J("(") ? at() : []),
                  m.markEnd(m.createNewExpression(t, e), n)
                );
              }
              function ht() {
                var t,
                  n,
                  r = y;
                return (
                  (t = (function() {
                    var t,
                      e,
                      n,
                      r,
                      i = g.allowIn;
                    for (
                      r = y, g.allowIn = !0, t = Z("new") ? lt() : ot();
                      ;

                    ) {
                      if (J("."))
                        (n = ut()), (t = m.createMemberExpression(".", t, n));
                      else if (J("("))
                        (e = at()), (t = m.createCallExpression(t, e));
                      else {
                        if (!J("[")) break;
                        (n = ct()), (t = m.createMemberExpression("[", t, n));
                      }
                      m.markEnd(t, r);
                    }
                    return (g.allowIn = i), t;
                  })()),
                  y.type === e.Punctuator &&
                    ((!J("++") && !J("--")) ||
                      H() ||
                      (l &&
                        t.type === i.Identifier &&
                        N(t.name) &&
                        Q({}, a.StrictLHSPostfix),
                      et(t) || Q({}, a.InvalidLHSInAssignment),
                      (n = U()),
                      (t = m.markEnd(
                        m.createPostfixExpression(n.value, t),
                        r
                      )))),
                  t
                );
              }
              function ft() {
                var t, n, r;
                return (
                  y.type !== e.Punctuator && y.type !== e.Keyword
                    ? (n = ht())
                    : J("++") || J("--")
                    ? ((r = y),
                      (t = U()),
                      (n = ft()),
                      l &&
                        n.type === i.Identifier &&
                        N(n.name) &&
                        Q({}, a.StrictLHSPrefix),
                      et(n) || Q({}, a.InvalidLHSInAssignment),
                      (n = m.createUnaryExpression(t.value, n)),
                      (n = m.markEnd(n, r)))
                    : J("+") || J("-") || J("~") || J("!")
                    ? ((r = y),
                      (t = U()),
                      (n = ft()),
                      (n = m.createUnaryExpression(t.value, n)),
                      (n = m.markEnd(n, r)))
                    : Z("delete") || Z("void") || Z("typeof")
                    ? ((r = y),
                      (t = U()),
                      (n = ft()),
                      (n = m.createUnaryExpression(t.value, n)),
                      (n = m.markEnd(n, r)),
                      l &&
                        "delete" === n.operator &&
                        n.argument.type === i.Identifier &&
                        Q({}, a.StrictDelete))
                    : (n = ht()),
                  n
                );
              }
              function pt(t, n) {
                var r = 0;
                if (t.type !== e.Punctuator && t.type !== e.Keyword) return 0;
                switch (t.value) {
                  case "||":
                    r = 1;
                    break;
                  case "&&":
                    r = 2;
                    break;
                  case "|":
                    r = 3;
                    break;
                  case "^":
                    r = 4;
                    break;
                  case "&":
                    r = 5;
                    break;
                  case "==":
                  case "!=":
                  case "===":
                  case "!==":
                    r = 6;
                    break;
                  case "<":
                  case ">":
                  case "<=":
                  case ">=":
                  case "instanceof":
                    r = 7;
                    break;
                  case "in":
                    r = n ? 7 : 0;
                    break;
                  case "<<":
                  case ">>":
                  case ">>>":
                    r = 8;
                    break;
                  case "+":
                  case "-":
                    r = 9;
                    break;
                  case "*":
                  case "/":
                  case "%":
                    r = 11;
                }
                return r;
              }
              function dt() {
                var t, e, n, r, i;
                return (
                  (i = y),
                  (t = (function() {
                    var t, e, n, r, i, o, a, s, u, c;
                    if (
                      ((t = y), (u = ft()), 0 === (i = pt((r = y), g.allowIn)))
                    )
                      return u;
                    (r.prec = i),
                      U(),
                      (e = [t, y]),
                      (a = ft()),
                      (o = [u, r, a]);
                    for (; (i = pt(y, g.allowIn)) > 0; ) {
                      for (; o.length > 2 && i <= o[o.length - 2].prec; )
                        (a = o.pop()),
                          (s = o.pop().value),
                          (u = o.pop()),
                          (n = m.createBinaryExpression(s, u, a)),
                          e.pop(),
                          (t = e[e.length - 1]),
                          m.markEnd(n, t),
                          o.push(n);
                      ((r = U()).prec = i),
                        o.push(r),
                        e.push(y),
                        (n = ft()),
                        o.push(n);
                    }
                    (c = o.length - 1), (n = o[c]), e.pop();
                    for (; c > 1; )
                      (n = m.createBinaryExpression(
                        o[c - 1].value,
                        o[c - 2],
                        n
                      )),
                        (c -= 2),
                        (t = e.pop()),
                        m.markEnd(n, t);
                    return n;
                  })()),
                  J("?") &&
                    (U(),
                    (e = g.allowIn),
                    (g.allowIn = !0),
                    (n = mt()),
                    (g.allowIn = e),
                    $(":"),
                    (r = mt()),
                    (t = m.createConditionalExpression(t, n, r)),
                    m.markEnd(t, i)),
                  t
                );
              }
              function mt() {
                var t, n, r, o, s;
                return (
                  (t = y),
                  (s = y),
                  (o = n = dt()),
                  (function() {
                    var t;
                    if (y.type !== e.Punctuator) return !1;
                    return (
                      "=" === (t = y.value) ||
                      "*=" === t ||
                      "/=" === t ||
                      "%=" === t ||
                      "+=" === t ||
                      "-=" === t ||
                      "<<=" === t ||
                      ">>=" === t ||
                      ">>>=" === t ||
                      "&=" === t ||
                      "^=" === t ||
                      "|=" === t
                    );
                  })() &&
                    (et(n) || Q({}, a.InvalidLHSInAssignment),
                    l &&
                      n.type === i.Identifier &&
                      N(n.name) &&
                      Q(t, a.StrictLHSAssignment),
                    (t = U()),
                    (r = mt()),
                    (o = m.markEnd(
                      m.createAssignmentExpression(t.value, n, r),
                      s
                    ))),
                  o
                );
              }
              function yt() {
                var t,
                  e = y;
                if (((t = mt()), J(","))) {
                  for (t = m.createSequenceExpression([t]); h < d && J(","); )
                    U(), t.expressions.push(mt());
                  m.markEnd(t, e);
                }
                return t;
              }
              function gt() {
                var t, e;
                return (
                  (e = y),
                  $("{"),
                  (t = (function() {
                    var t,
                      e = [];
                    for (; h < d && !J("}") && void 0 !== (t = Nt()); )
                      e.push(t);
                    return e;
                  })()),
                  $("}"),
                  m.markEnd(m.createBlockStatement(t), e)
                );
              }
              function vt() {
                var t, n;
                return (
                  (n = y),
                  (t = U()).type !== e.Identifier && X(t),
                  m.markEnd(m.createIdentifier(t.value), n)
                );
              }
              function bt(t) {
                var e,
                  n,
                  r = null;
                return (
                  (n = y),
                  (e = vt()),
                  l && N(e.name) && Q({}, a.StrictVarName),
                  "const" === t
                    ? ($("="), (r = mt()))
                    : J("=") && (U(), (r = mt())),
                  m.markEnd(m.createVariableDeclarator(e, r), n)
                );
              }
              function wt(t) {
                var e = [];
                do {
                  if ((e.push(bt(t)), !J(","))) break;
                  U();
                } while (h < d);
                return e;
              }
              function _t() {
                var t,
                  e,
                  n,
                  r,
                  i,
                  o,
                  s,
                  u,
                  c,
                  l,
                  h = g.allowIn;
                return (
                  (t = e = n = null),
                  Y("for"),
                  $("("),
                  J(";")
                    ? U()
                    : (Z("var") || Z("let")
                        ? ((g.allowIn = !1),
                          (l = y),
                          (u = U()),
                          (c = wt()),
                          (t = m.markEnd(
                            m.createVariableDeclaration(c, u.value),
                            l
                          )),
                          (g.allowIn = h),
                          1 === t.declarations.length &&
                            Z("in") &&
                            (U(), (r = t), (i = yt()), (t = null)))
                        : ((g.allowIn = !1),
                          (t = yt()),
                          (g.allowIn = h),
                          Z("in") &&
                            (et(t) || Q({}, a.InvalidLHSInForIn),
                            U(),
                            (r = t),
                            (i = yt()),
                            (t = null))),
                      void 0 === r && $(";")),
                  void 0 === r &&
                    (J(";") || (e = yt()), $(";"), J(")") || (n = yt())),
                  $(")"),
                  (s = g.inIteration),
                  (g.inIteration = !0),
                  (o = Tt()),
                  (g.inIteration = s),
                  void 0 === r
                    ? m.createForStatement(t, e, n, o)
                    : m.createForInStatement(r, i, o)
                );
              }
              function St() {
                var t,
                  e,
                  n,
                  r = [];
                for (
                  n = y,
                    Z("default") ? (U(), (t = null)) : (Y("case"), (t = yt())),
                    $(":");
                  h < d && !(J("}") || Z("default") || Z("case"));

                )
                  (e = Tt()), r.push(e);
                return m.markEnd(m.createSwitchCase(t, r), n);
              }
              function xt() {
                var t,
                  e = [],
                  n = null;
                return (
                  Y("try"),
                  (t = gt()),
                  Z("catch") &&
                    e.push(
                      (function() {
                        var t, e, n;
                        (n = y), Y("catch"), $("("), J(")") && X(y);
                        (t = vt()),
                          l && N(t.name) && Q({}, a.StrictCatchVariable);
                        return (
                          $(")"),
                          (e = gt()),
                          m.markEnd(m.createCatchClause(t, e), n)
                        );
                      })()
                    ),
                  Z("finally") && (U(), (n = gt())),
                  0 !== e.length || n || K({}, a.NoCatchOrFinally),
                  m.createTryStatement(t, [], e, n)
                );
              }
              function Tt() {
                var t,
                  n,
                  r,
                  o,
                  s,
                  u,
                  f,
                  p,
                  v = y.type;
                if (
                  (v === e.EOF && X(y), v === e.Punctuator && "{" === y.value)
                )
                  return gt();
                if (((o = y), v === e.Punctuator))
                  switch (y.value) {
                    case ";":
                      return m.markEnd(($(";"), m.createEmptyStatement()), o);
                    case "(":
                      return m.markEnd(
                        (function() {
                          var t = yt();
                          return tt(), m.createExpressionStatement(t);
                        })(),
                        o
                      );
                  }
                if (v === e.Keyword)
                  switch (y.value) {
                    case "break":
                      return m.markEnd(
                        (function() {
                          var t,
                            n = null;
                          if ((Y("break"), 59 === c.charCodeAt(h)))
                            return (
                              U(),
                              g.inIteration ||
                                g.inSwitch ||
                                K({}, a.IllegalBreak),
                              m.createBreakStatement(null)
                            );
                          if (H())
                            return (
                              g.inIteration ||
                                g.inSwitch ||
                                K({}, a.IllegalBreak),
                              m.createBreakStatement(null)
                            );
                          y.type === e.Identifier &&
                            ((n = vt()),
                            (t = "$" + n.name),
                            Object.prototype.hasOwnProperty.call(
                              g.labelSet,
                              t
                            ) || K({}, a.UnknownLabel, n.name));
                          tt(),
                            null !== n ||
                              g.inIteration ||
                              g.inSwitch ||
                              K({}, a.IllegalBreak);
                          return m.createBreakStatement(n);
                        })(),
                        o
                      );
                    case "continue":
                      return m.markEnd(
                        (function() {
                          var t,
                            n = null;
                          if ((Y("continue"), 59 === c.charCodeAt(h)))
                            return (
                              U(),
                              g.inIteration || K({}, a.IllegalContinue),
                              m.createContinueStatement(null)
                            );
                          if (H())
                            return (
                              g.inIteration || K({}, a.IllegalContinue),
                              m.createContinueStatement(null)
                            );
                          y.type === e.Identifier &&
                            ((n = vt()),
                            (t = "$" + n.name),
                            Object.prototype.hasOwnProperty.call(
                              g.labelSet,
                              t
                            ) || K({}, a.UnknownLabel, n.name));
                          tt(),
                            null !== n ||
                              g.inIteration ||
                              K({}, a.IllegalContinue);
                          return m.createContinueStatement(n);
                        })(),
                        o
                      );
                    case "debugger":
                      return m.markEnd(
                        (Y("debugger"), tt(), m.createDebuggerStatement()),
                        o
                      );
                    case "do":
                      return m.markEnd(
                        (function() {
                          var t, e, n;
                          Y("do"),
                            (n = g.inIteration),
                            (g.inIteration = !0),
                            (t = Tt()),
                            (g.inIteration = n),
                            Y("while"),
                            $("("),
                            (e = yt()),
                            $(")"),
                            J(";") && U();
                          return m.createDoWhileStatement(t, e);
                        })(),
                        o
                      );
                    case "for":
                      return m.markEnd(_t(), o);
                    case "function":
                      return m.markEnd(Et(), o);
                    case "if":
                      return m.markEnd(
                        (function() {
                          var t, e, n;
                          Y("if"),
                            $("("),
                            (t = yt()),
                            $(")"),
                            (e = Tt()),
                            Z("else") ? (U(), (n = Tt())) : (n = null);
                          return m.createIfStatement(t, e, n);
                        })(),
                        o
                      );
                    case "return":
                      return m.markEnd(
                        (function() {
                          var t = null;
                          Y("return"),
                            g.inFunctionBody || Q({}, a.IllegalReturn);
                          if (32 === c.charCodeAt(h) && A(c.charCodeAt(h + 1)))
                            return (t = yt()), tt(), m.createReturnStatement(t);
                          if (H()) return m.createReturnStatement(null);
                          J(";") || J("}") || y.type === e.EOF || (t = yt());
                          return tt(), m.createReturnStatement(t);
                        })(),
                        o
                      );
                    case "switch":
                      return m.markEnd(
                        (function() {
                          var t, e, n, r, i;
                          if (
                            (Y("switch"),
                            $("("),
                            (t = yt()),
                            $(")"),
                            $("{"),
                            (e = []),
                            J("}"))
                          )
                            return U(), m.createSwitchStatement(t, e);
                          (r = g.inSwitch), (g.inSwitch = !0), (i = !1);
                          for (; h < d && !J("}"); )
                            null === (n = St()).test &&
                              (i && K({}, a.MultipleDefaultsInSwitch),
                              (i = !0)),
                              e.push(n);
                          return (
                            (g.inSwitch = r),
                            $("}"),
                            m.createSwitchStatement(t, e)
                          );
                        })(),
                        o
                      );
                    case "throw":
                      return m.markEnd(
                        (function() {
                          var t;
                          Y("throw"), H() && K({}, a.NewlineAfterThrow);
                          return (t = yt()), tt(), m.createThrowStatement(t);
                        })(),
                        o
                      );
                    case "try":
                      return m.markEnd(xt(), o);
                    case "var":
                      return m.markEnd(
                        (Y("var"),
                        (p = wt()),
                        tt(),
                        m.createVariableDeclaration(p, "var")),
                        o
                      );
                    case "while":
                      return m.markEnd(
                        (Y("while"),
                        $("("),
                        (s = yt()),
                        $(")"),
                        (f = g.inIteration),
                        (g.inIteration = !0),
                        (u = Tt()),
                        (g.inIteration = f),
                        m.createWhileStatement(s, u)),
                        o
                      );
                    case "with":
                      return m.markEnd(
                        (function() {
                          var t, e;
                          l && (M(), Q({}, a.StrictModeWith));
                          return (
                            Y("with"),
                            $("("),
                            (t = yt()),
                            $(")"),
                            (e = Tt()),
                            m.createWithStatement(t, e)
                          );
                        })(),
                        o
                      );
                  }
                return (t = yt()).type === i.Identifier && J(":")
                  ? (U(),
                    (r = "$" + t.name),
                    Object.prototype.hasOwnProperty.call(g.labelSet, r) &&
                      K({}, a.Redeclaration, "Label", t.name),
                    (g.labelSet[r] = !0),
                    (n = Tt()),
                    delete g.labelSet[r],
                    m.markEnd(m.createLabeledStatement(t, n), o))
                  : (tt(), m.markEnd(m.createExpressionStatement(t), o));
              }
              function At() {
                var t,
                  n,
                  r,
                  o,
                  s,
                  u,
                  f,
                  p,
                  v = [];
                for (
                  p = y, $("{");
                  h < d &&
                  y.type === e.StringLiteral &&
                  ((n = y),
                  (t = Nt()),
                  v.push(t),
                  t.expression.type === i.Literal);

                )
                  "use strict" === c.slice(n.start + 1, n.end - 1)
                    ? ((l = !0), r && Q(r, a.StrictOctalLiteral))
                    : !r && n.octal && (r = n);
                for (
                  o = g.labelSet,
                    s = g.inIteration,
                    u = g.inSwitch,
                    f = g.inFunctionBody,
                    g.labelSet = {},
                    g.inIteration = !1,
                    g.inSwitch = !1,
                    g.inFunctionBody = !0;
                  h < d && !J("}") && void 0 !== (t = Nt());

                )
                  v.push(t);
                return (
                  $("}"),
                  (g.labelSet = o),
                  (g.inIteration = s),
                  (g.inSwitch = u),
                  (g.inFunctionBody = f),
                  m.markEnd(m.createBlockStatement(v), p)
                );
              }
              function kt(t) {
                var e,
                  n,
                  r,
                  i,
                  o,
                  s,
                  u = [];
                if (($("("), !J(")")))
                  for (
                    i = {};
                    h < d &&
                    ((n = y),
                    (e = vt()),
                    (o = "$" + n.value),
                    l
                      ? (N(n.value) && ((r = n), (s = a.StrictParamName)),
                        Object.prototype.hasOwnProperty.call(i, o) &&
                          ((r = n), (s = a.StrictParamDupe)))
                      : t ||
                        (N(n.value)
                          ? ((t = n), (s = a.StrictParamName))
                          : E(n.value)
                          ? ((t = n), (s = a.StrictReservedWord))
                          : Object.prototype.hasOwnProperty.call(i, o) &&
                            ((t = n), (s = a.StrictParamDupe))),
                    u.push(e),
                    (i[o] = !0),
                    !J(")"));

                  )
                    $(",");
                return (
                  $(")"),
                  { params: u, stricted: r, firstRestricted: t, message: s }
                );
              }
              function Et() {
                var t,
                  e,
                  n,
                  r,
                  i,
                  o,
                  s,
                  u,
                  c,
                  h = [];
                return (
                  (c = y),
                  Y("function"),
                  (n = y),
                  (t = vt()),
                  l
                    ? N(n.value) && Q(n, a.StrictFunctionName)
                    : N(n.value)
                    ? ((o = n), (s = a.StrictFunctionName))
                    : E(n.value) && ((o = n), (s = a.StrictReservedWord)),
                  (i = kt(o)),
                  (h = i.params),
                  (r = i.stricted),
                  (o = i.firstRestricted),
                  i.message && (s = i.message),
                  (u = l),
                  (e = At()),
                  l && o && K(o, s),
                  l && r && Q(r, s),
                  (l = u),
                  m.markEnd(m.createFunctionDeclaration(t, h, [], e), c)
                );
              }
              function Nt() {
                if (y.type === e.Keyword)
                  switch (y.value) {
                    case "const":
                    case "let":
                      return (
                        (t = y.value),
                        (r = y),
                        Y(t),
                        (n = wt(t)),
                        tt(),
                        m.markEnd(m.createVariableDeclaration(n, t), r)
                      );
                    case "function":
                      return Et();
                    default:
                      return Tt();
                  }
                var t, n, r;
                if (y.type !== e.EOF) return Tt();
              }
              function Ot() {
                var t, n;
                return (
                  M(),
                  V(),
                  (n = y),
                  (l = !1),
                  (t = (function() {
                    var t,
                      n,
                      r,
                      o = [];
                    for (
                      ;
                      h < d &&
                      (n = y).type === e.StringLiteral &&
                      ((t = Nt()), o.push(t), t.expression.type === i.Literal);

                    )
                      "use strict" === c.slice(n.start + 1, n.end - 1)
                        ? ((l = !0), r && Q(r, a.StrictOctalLiteral))
                        : !r && n.octal && (r = n);
                    for (; h < d && void 0 !== (t = Nt()); ) o.push(t);
                    return o;
                  })()),
                  m.markEnd(m.createProgram(t), n)
                );
              }
              function Ct() {
                var t,
                  e,
                  n,
                  r = [];
                for (t = 0; t < v.tokens.length; ++t)
                  (e = v.tokens[t]),
                    (n = { type: e.type, value: e.value }),
                    v.range && (n.range = e.range),
                    v.loc && (n.loc = e.loc),
                    r.push(n);
                v.tokens = r;
              }
              ((n = {})[
                (e = {
                  BooleanLiteral: 1,
                  EOF: 2,
                  Identifier: 3,
                  Keyword: 4,
                  NullLiteral: 5,
                  NumericLiteral: 6,
                  Punctuator: 7,
                  StringLiteral: 8,
                  RegularExpression: 9
                }).BooleanLiteral
              ] = "Boolean"),
                (n[e.EOF] = "<end>"),
                (n[e.Identifier] = "Identifier"),
                (n[e.Keyword] = "Keyword"),
                (n[e.NullLiteral] = "Null"),
                (n[e.NumericLiteral] = "Numeric"),
                (n[e.Punctuator] = "Punctuator"),
                (n[e.StringLiteral] = "String"),
                (n[e.RegularExpression] = "RegularExpression"),
                (r = [
                  "(",
                  "{",
                  "[",
                  "in",
                  "typeof",
                  "instanceof",
                  "new",
                  "return",
                  "case",
                  "delete",
                  "throw",
                  "void",
                  "=",
                  "+=",
                  "-=",
                  "*=",
                  "/=",
                  "%=",
                  "<<=",
                  ">>=",
                  ">>>=",
                  "&=",
                  "|=",
                  "^=",
                  ",",
                  "+",
                  "-",
                  "*",
                  "/",
                  "%",
                  "++",
                  "--",
                  "<<",
                  ">>",
                  ">>>",
                  "&",
                  "|",
                  "^",
                  "!",
                  "~",
                  "&&",
                  "||",
                  "?",
                  ":",
                  "===",
                  "==",
                  ">=",
                  "<=",
                  "<",
                  ">",
                  "!=",
                  "!=="
                ]),
                (i = {
                  AssignmentExpression: "AssignmentExpression",
                  ArrayExpression: "ArrayExpression",
                  BlockStatement: "BlockStatement",
                  BinaryExpression: "BinaryExpression",
                  BreakStatement: "BreakStatement",
                  CallExpression: "CallExpression",
                  CatchClause: "CatchClause",
                  ConditionalExpression: "ConditionalExpression",
                  ContinueStatement: "ContinueStatement",
                  DoWhileStatement: "DoWhileStatement",
                  DebuggerStatement: "DebuggerStatement",
                  EmptyStatement: "EmptyStatement",
                  ExpressionStatement: "ExpressionStatement",
                  ForStatement: "ForStatement",
                  ForInStatement: "ForInStatement",
                  FunctionDeclaration: "FunctionDeclaration",
                  FunctionExpression: "FunctionExpression",
                  Identifier: "Identifier",
                  IfStatement: "IfStatement",
                  Literal: "Literal",
                  LabeledStatement: "LabeledStatement",
                  LogicalExpression: "LogicalExpression",
                  MemberExpression: "MemberExpression",
                  NewExpression: "NewExpression",
                  ObjectExpression: "ObjectExpression",
                  Program: "Program",
                  Property: "Property",
                  ReturnStatement: "ReturnStatement",
                  SequenceExpression: "SequenceExpression",
                  SwitchStatement: "SwitchStatement",
                  SwitchCase: "SwitchCase",
                  ThisExpression: "ThisExpression",
                  ThrowStatement: "ThrowStatement",
                  TryStatement: "TryStatement",
                  UnaryExpression: "UnaryExpression",
                  UpdateExpression: "UpdateExpression",
                  VariableDeclaration: "VariableDeclaration",
                  VariableDeclarator: "VariableDeclarator",
                  WhileStatement: "WhileStatement",
                  WithStatement: "WithStatement"
                }),
                (o = { Data: 1, Get: 2, Set: 4 }),
                (a = {
                  UnexpectedToken: "Unexpected token %0",
                  UnexpectedNumber: "Unexpected number",
                  UnexpectedString: "Unexpected string",
                  UnexpectedIdentifier: "Unexpected identifier",
                  UnexpectedReserved: "Unexpected reserved word",
                  UnexpectedEOS: "Unexpected end of input",
                  NewlineAfterThrow: "Illegal newline after throw",
                  InvalidRegExp: "Invalid regular expression",
                  UnterminatedRegExp: "Invalid regular expression: missing /",
                  InvalidLHSInAssignment:
                    "Invalid left-hand side in assignment",
                  InvalidLHSInForIn: "Invalid left-hand side in for-in",
                  MultipleDefaultsInSwitch:
                    "More than one default clause in switch statement",
                  NoCatchOrFinally: "Missing catch or finally after try",
                  UnknownLabel: "Undefined label '%0'",
                  Redeclaration: "%0 '%1' has already been declared",
                  IllegalContinue: "Illegal continue statement",
                  IllegalBreak: "Illegal break statement",
                  IllegalReturn: "Illegal return statement",
                  StrictModeWith:
                    "Strict mode code may not include a with statement",
                  StrictCatchVariable:
                    "Catch variable may not be eval or arguments in strict mode",
                  StrictVarName:
                    "Variable name may not be eval or arguments in strict mode",
                  StrictParamName:
                    "Parameter name eval or arguments is not allowed in strict mode",
                  StrictParamDupe:
                    "Strict mode function may not have duplicate parameter names",
                  StrictFunctionName:
                    "Function name may not be eval or arguments in strict mode",
                  StrictOctalLiteral:
                    "Octal literals are not allowed in strict mode.",
                  StrictDelete:
                    "Delete of an unqualified identifier in strict mode.",
                  StrictDuplicateProperty:
                    "Duplicate data property in object literal not allowed in strict mode",
                  AccessorDataProperty:
                    "Object literal may not have data and accessor property with the same name",
                  AccessorGetSet:
                    "Object literal may not have multiple get/set accessors with the same name",
                  StrictLHSAssignment:
                    "Assignment to eval or arguments is not allowed in strict mode",
                  StrictLHSPostfix:
                    "Postfix increment/decrement may not have eval or arguments operand in strict mode",
                  StrictLHSPrefix:
                    "Prefix increment/decrement may not have eval or arguments operand in strict mode",
                  StrictReservedWord:
                    "Use of future reserved word in strict mode"
                }),
                (s = {
                  NonAsciiIdentifierStart: new RegExp(
                    "[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"
                  ),
                  NonAsciiIdentifierPart: new RegExp(
                    "[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"
                  )
                }),
                (u = {
                  name: "SyntaxTree",
                  processComment: function(t) {
                    var e, n;
                    if (!(t.type === i.Program && t.body.length > 0)) {
                      for (
                        v.trailingComments.length > 0
                          ? v.trailingComments[0].range[0] >= t.range[1]
                            ? ((n = v.trailingComments),
                              (v.trailingComments = []))
                            : (v.trailingComments.length = 0)
                          : v.bottomRightStack.length > 0 &&
                            v.bottomRightStack[v.bottomRightStack.length - 1]
                              .trailingComments &&
                            v.bottomRightStack[v.bottomRightStack.length - 1]
                              .trailingComments[0].range[0] >= t.range[1] &&
                            ((n =
                              v.bottomRightStack[v.bottomRightStack.length - 1]
                                .trailingComments),
                            delete v.bottomRightStack[
                              v.bottomRightStack.length - 1
                            ].trailingComments);
                        v.bottomRightStack.length > 0 &&
                        v.bottomRightStack[v.bottomRightStack.length - 1]
                          .range[0] >= t.range[0];

                      )
                        e = v.bottomRightStack.pop();
                      e
                        ? e.leadingComments &&
                          e.leadingComments[e.leadingComments.length - 1]
                            .range[1] <= t.range[0] &&
                          ((t.leadingComments = e.leadingComments),
                          delete e.leadingComments)
                        : v.leadingComments.length > 0 &&
                          v.leadingComments[v.leadingComments.length - 1]
                            .range[1] <= t.range[0] &&
                          ((t.leadingComments = v.leadingComments),
                          (v.leadingComments = [])),
                        n && (t.trailingComments = n),
                        v.bottomRightStack.push(t);
                    }
                  },
                  markEnd: function(t, e) {
                    return (
                      v.range && (t.range = [e.start, h]),
                      v.loc &&
                        ((t.loc = new G(
                          void 0 === e.startLineNumber
                            ? e.lineNumber
                            : e.startLineNumber,
                          e.start -
                            (void 0 === e.startLineStart
                              ? e.lineStart
                              : e.startLineStart),
                          f,
                          h - p
                        )),
                        this.postProcess(t)),
                      v.attachComment && this.processComment(t),
                      t
                    );
                  },
                  postProcess: function(t) {
                    return v.source && (t.loc.source = v.source), t;
                  },
                  createArrayExpression: function(t) {
                    return { type: i.ArrayExpression, elements: t };
                  },
                  createAssignmentExpression: function(t, e, n) {
                    return {
                      type: i.AssignmentExpression,
                      operator: t,
                      left: e,
                      right: n
                    };
                  },
                  createBinaryExpression: function(t, e, n) {
                    var r =
                      "||" === t || "&&" === t
                        ? i.LogicalExpression
                        : i.BinaryExpression;
                    return { type: r, operator: t, left: e, right: n };
                  },
                  createBlockStatement: function(t) {
                    return { type: i.BlockStatement, body: t };
                  },
                  createBreakStatement: function(t) {
                    return { type: i.BreakStatement, label: t };
                  },
                  createCallExpression: function(t, e) {
                    return { type: i.CallExpression, callee: t, arguments: e };
                  },
                  createCatchClause: function(t, e) {
                    return { type: i.CatchClause, param: t, body: e };
                  },
                  createConditionalExpression: function(t, e, n) {
                    return {
                      type: i.ConditionalExpression,
                      test: t,
                      consequent: e,
                      alternate: n
                    };
                  },
                  createContinueStatement: function(t) {
                    return { type: i.ContinueStatement, label: t };
                  },
                  createDebuggerStatement: function() {
                    return { type: i.DebuggerStatement };
                  },
                  createDoWhileStatement: function(t, e) {
                    return { type: i.DoWhileStatement, body: t, test: e };
                  },
                  createEmptyStatement: function() {
                    return { type: i.EmptyStatement };
                  },
                  createExpressionStatement: function(t) {
                    return { type: i.ExpressionStatement, expression: t };
                  },
                  createForStatement: function(t, e, n, r) {
                    return {
                      type: i.ForStatement,
                      init: t,
                      test: e,
                      update: n,
                      body: r
                    };
                  },
                  createForInStatement: function(t, e, n) {
                    return {
                      type: i.ForInStatement,
                      left: t,
                      right: e,
                      body: n,
                      each: !1
                    };
                  },
                  createFunctionDeclaration: function(t, e, n, r) {
                    return {
                      type: i.FunctionDeclaration,
                      id: t,
                      params: e,
                      defaults: n,
                      body: r,
                      rest: null,
                      generator: !1,
                      expression: !1
                    };
                  },
                  createFunctionExpression: function(t, e, n, r) {
                    return {
                      type: i.FunctionExpression,
                      id: t,
                      params: e,
                      defaults: n,
                      body: r,
                      rest: null,
                      generator: !1,
                      expression: !1
                    };
                  },
                  createIdentifier: function(t) {
                    return { type: i.Identifier, name: t };
                  },
                  createIfStatement: function(t, e, n) {
                    return {
                      type: i.IfStatement,
                      test: t,
                      consequent: e,
                      alternate: n
                    };
                  },
                  createLabeledStatement: function(t, e) {
                    return { type: i.LabeledStatement, label: t, body: e };
                  },
                  createLiteral: function(t) {
                    return {
                      type: i.Literal,
                      value: t.value,
                      raw: c.slice(t.start, t.end)
                    };
                  },
                  createMemberExpression: function(t, e, n) {
                    return {
                      type: i.MemberExpression,
                      computed: "[" === t,
                      object: e,
                      property: n
                    };
                  },
                  createNewExpression: function(t, e) {
                    return { type: i.NewExpression, callee: t, arguments: e };
                  },
                  createObjectExpression: function(t) {
                    return { type: i.ObjectExpression, properties: t };
                  },
                  createPostfixExpression: function(t, e) {
                    return {
                      type: i.UpdateExpression,
                      operator: t,
                      argument: e,
                      prefix: !1
                    };
                  },
                  createProgram: function(t) {
                    return { type: i.Program, body: t };
                  },
                  createProperty: function(t, e, n) {
                    return { type: i.Property, key: e, value: n, kind: t };
                  },
                  createReturnStatement: function(t) {
                    return { type: i.ReturnStatement, argument: t };
                  },
                  createSequenceExpression: function(t) {
                    return { type: i.SequenceExpression, expressions: t };
                  },
                  createSwitchCase: function(t, e) {
                    return { type: i.SwitchCase, test: t, consequent: e };
                  },
                  createSwitchStatement: function(t, e) {
                    return {
                      type: i.SwitchStatement,
                      discriminant: t,
                      cases: e
                    };
                  },
                  createThisExpression: function() {
                    return { type: i.ThisExpression };
                  },
                  createThrowStatement: function(t) {
                    return { type: i.ThrowStatement, argument: t };
                  },
                  createTryStatement: function(t, e, n, r) {
                    return {
                      type: i.TryStatement,
                      block: t,
                      guardedHandlers: e,
                      handlers: n,
                      finalizer: r
                    };
                  },
                  createUnaryExpression: function(t, e) {
                    return "++" === t || "--" === t
                      ? {
                          type: i.UpdateExpression,
                          operator: t,
                          argument: e,
                          prefix: !0
                        }
                      : {
                          type: i.UnaryExpression,
                          operator: t,
                          argument: e,
                          prefix: !0
                        };
                  },
                  createVariableDeclaration: function(t, e) {
                    return {
                      type: i.VariableDeclaration,
                      declarations: t,
                      kind: e
                    };
                  },
                  createVariableDeclarator: function(t, e) {
                    return { type: i.VariableDeclarator, id: t, init: e };
                  },
                  createWhileStatement: function(t, e) {
                    return { type: i.WhileStatement, test: t, body: e };
                  },
                  createWithStatement: function(t, e) {
                    return { type: i.WithStatement, object: t, body: e };
                  }
                }),
                (t.version = "1.2.5"),
                (t.tokenize = function(t, n) {
                  var r, i;
                  (r = String),
                    "string" == typeof t || t instanceof String || (t = r(t));
                  (m = u),
                    (h = 0),
                    (f = (c = t).length > 0 ? 1 : 0),
                    (p = 0),
                    (d = c.length),
                    (y = null),
                    (g = {
                      allowIn: !0,
                      labelSet: {},
                      inFunctionBody: !1,
                      inIteration: !1,
                      inSwitch: !1,
                      lastCommentStart: -1
                    }),
                    (v = {}),
                    ((n = n || {}).tokens = !0),
                    (v.tokens = []),
                    (v.tokenize = !0),
                    (v.openParenToken = -1),
                    (v.openCurlyToken = -1),
                    (v.range = "boolean" == typeof n.range && n.range),
                    (v.loc = "boolean" == typeof n.loc && n.loc),
                    "boolean" == typeof n.comment &&
                      n.comment &&
                      (v.comments = []);
                  "boolean" == typeof n.tolerant &&
                    n.tolerant &&
                    (v.errors = []);
                  try {
                    if ((V(), y.type === e.EOF)) return v.tokens;
                    for (U(); y.type !== e.EOF; )
                      try {
                        U();
                      } catch (t) {
                        if ((y, v.errors)) {
                          v.errors.push(t);
                          break;
                        }
                        throw t;
                      }
                    Ct(),
                      (i = v.tokens),
                      void 0 !== v.comments && (i.comments = v.comments),
                      void 0 !== v.errors && (i.errors = v.errors);
                  } catch (t) {
                    throw t;
                  } finally {
                    v = {};
                  }
                  return i;
                }),
                (t.parse = function(t, e) {
                  var n, r;
                  (r = String),
                    "string" == typeof t || t instanceof String || (t = r(t));
                  (m = u),
                    (h = 0),
                    (f = (c = t).length > 0 ? 1 : 0),
                    (p = 0),
                    (d = c.length),
                    (y = null),
                    (g = {
                      allowIn: !0,
                      labelSet: {},
                      inFunctionBody: !1,
                      inIteration: !1,
                      inSwitch: !1,
                      lastCommentStart: -1
                    }),
                    (v = {}),
                    void 0 !== e &&
                      ((v.range = "boolean" == typeof e.range && e.range),
                      (v.loc = "boolean" == typeof e.loc && e.loc),
                      (v.attachComment =
                        "boolean" == typeof e.attachComment && e.attachComment),
                      v.loc &&
                        null !== e.source &&
                        void 0 !== e.source &&
                        (v.source = r(e.source)),
                      "boolean" == typeof e.tokens &&
                        e.tokens &&
                        (v.tokens = []),
                      "boolean" == typeof e.comment &&
                        e.comment &&
                        (v.comments = []),
                      "boolean" == typeof e.tolerant &&
                        e.tolerant &&
                        (v.errors = []),
                      v.attachComment &&
                        ((v.range = !0),
                        (v.comments = []),
                        (v.bottomRightStack = []),
                        (v.trailingComments = []),
                        (v.leadingComments = [])));
                  try {
                    (n = Ot()),
                      void 0 !== v.comments && (n.comments = v.comments),
                      void 0 !== v.tokens && (Ct(), (n.tokens = v.tokens)),
                      void 0 !== v.errors && (n.errors = v.errors);
                  } catch (t) {
                    throw t;
                  } finally {
                    v = {};
                  }
                  return n;
                }),
                (t.Syntax = (function() {
                  var t,
                    e = {};
                  for (t in ("function" == typeof Object.create &&
                    (e = Object.create(null)),
                  i))
                    i.hasOwnProperty(t) && (e[t] = i[t]);
                  return (
                    "function" == typeof Object.freeze && Object.freeze(e), e
                  );
                })());
            })
              ? r.apply(e, i)
              : r) || (t.exports = o);
    })();
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(52),
      a = n(55);
    e.preprocessAudio = function(t) {
      return r(this, void 0, void 0, function() {
        var e;
        return i(this, function(n) {
          switch (n.label) {
            case 0:
              return [4, o.resampleAndMakeMono(t)];
            case 1:
              return (
                (e = n.sent()),
                [
                  2,
                  o.powerToDb(
                    o.melSpectrogram(e, {
                      sampleRate: a.SAMPLE_RATE,
                      hopLength: a.SPEC_HOP_LENGTH,
                      nMels: a.MEL_SPEC_BINS,
                      nFft: 2048,
                      fMin: 30
                    })
                  )
                ]
              );
          }
        });
      });
    };
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7),
      a = n(12),
      s = n(55),
      u = 3;
    (e.batchInput = function(t, e) {
      var n = Math.ceil(t.length / e),
        r = t.length % e,
        i = 0;
      if ((n > 1 && r > 0 && r <= u && ((n -= 1), (i = r), (r = 0)), 1 === n))
        return o.tensor2d(t).expandDims(0);
      var a,
        s = e + 2 * u,
        c = o.tensor2d(t.slice(0, s)).expandDims(0),
        l = o.tensor2d(t.slice(t.length - s)).expandDims(0);
      if (2 === n) return o.concat([c, l], 0);
      a = r
        ? o
            .tensor2d(t)
            .pad([[0, e - r], [0, 0]])
            .as3D(n, e, -1)
        : o.tensor2d(t.slice(0, t.length - i)).as3D(n, e, -1);
      var h = o.slice(a, [0, e - u], [n - 2, -1]),
        f = o.slice(a, [2, 0], [-1, u]),
        p = o.concat([h, a.slice(1, n - 2), f], 1);
      return o.concat([c, p, l], 0);
    }),
      (e.unbatchOutput = function(t, e, n) {
        return 1 === t.shape[0]
          ? t
          : o.tidy(function() {
              var r = t.slice([0, 0], [1, e]),
                i = n % e;
              i <= u && (i += e);
              var a = t.slice([t.shape[0] - 1, t.shape[1] - i], [-1, -1]),
                s = [r, a];
              if (t.shape[0] > 2) {
                var c = t.shape[0] - 2;
                s = [r, t.slice([1, u], [c, e]).as3D(1, c * e, -1), a];
              }
              return o.concat(s, 1);
            });
      }),
      (e.pianorollToNoteSequence = function(t, e, n, u, c) {
        return (
          void 0 === u && (u = 0.5),
          void 0 === c && (c = 0.5),
          r(this, void 0, void 0, function() {
            function r(t, e) {
              h.notes.push(
                a.NoteSequence.Note.create({
                  pitch: t + s.MIN_MIDI_PITCH,
                  startTime: (f[t] - 1) * s.FRAME_LENGTH_SECONDS,
                  endTime: e * s.FRAME_LENGTH_SECONDS,
                  velocity: p[t]
                })
              ),
                (f[t] = 0);
            }
            function l(t, e, n) {
              f[t]
                ? d[t] || (r(t, e), (f[t] = e + 1), (p[t] = n))
                : ((f[t] = e + 1), (p[t] = n));
            }
            var h, f, p, d, m, y, g, v, b, w, _, S, x;
            return i(this, function(i) {
              switch (i.label) {
                case 0:
                  return (
                    (h = a.NoteSequence.create()),
                    (f = new Uint32Array(s.MIDI_PITCHES)),
                    (p = new Uint8Array(s.MIDI_PITCHES)),
                    (d = new Uint8Array(s.MIDI_PITCHES)),
                    (m = o.tidy(function() {
                      var r = o.greater(e, u),
                        i = o.greater(t, c);
                      return (
                        (r = r.pad([[0, 1], [0, 0]])),
                        (i = i.pad([[0, 1], [0, 0]])),
                        (n = n.pad([[0, 1], [0, 0]])),
                        [(i = o.logicalOr(i, r)), r, n]
                      );
                    })),
                    [
                      4,
                      Promise.all(
                        m.map(function(t) {
                          return t.data();
                        })
                      )
                    ]
                  );
                case 1:
                  for (
                    y = i.sent(),
                      g = y[0],
                      v = y[1],
                      b = y[2],
                      m.forEach(function(t) {
                        return t.dispose();
                      }),
                      w = t.shape[0],
                      _ = 0;
                    _ < w + 1;
                    ++_
                  ) {
                    for (S = 0; S < s.MIDI_PITCHES; ++S)
                      (x = _ * s.MIDI_PITCHES + S),
                        v[x] ? l(S, _, b[x]) : !g[x] && f[S] && r(S, _);
                    d = v.slice(_ * s.MIDI_PITCHES, (_ + 1) * s.MIDI_PITCHES);
                  }
                  return (h.totalTime = w * s.FRAME_LENGTH_SECONDS), [2, h];
              }
            });
          })
        );
      });
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });
    var r = n(243);
    e.GANSynth = r.GANSynth;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7),
      a = n(16),
      s = n(244),
      u = n(247),
      c = (function() {
        function t(t) {
          (this.nn = o.sequential()),
            (this.nLatents = 256),
            (this.nPitches = 61),
            (this.minMidiPitch = 24),
            (this.maxMidiPitch = 84),
            (this.midiPitches = this.maxMidiPitch - this.minMidiPitch + 1),
            (this.checkpointURL = t);
        }
        return (
          (t.prototype.initialize = function() {
            return r(this, void 0, void 0, function() {
              var t,
                e,
                n = this;
              return i(this, function(r) {
                switch (r.label) {
                  case 0:
                    return (
                      (t = performance.now()),
                      [
                        4,
                        fetch(this.checkpointURL + "/weights_manifest.json")
                          .then(function(t) {
                            return t.json();
                          })
                          .then(function(t) {
                            return o.io.loadWeights(t, n.checkpointURL);
                          })
                      ]
                    );
                  case 1:
                    return (
                      (e = r.sent()),
                      o.tidy(function() {
                        for (var r in e)
                          if (r.includes("kernel")) {
                            var i =
                                e[r].shape[0] * e[r].shape[1] * e[r].shape[2],
                              s = e[r];
                            e[r].dispose(), (e[r] = o.mul(s, o.sqrt(2 / i)));
                          }
                        n.build(e),
                          (n.initialized = !0),
                          a.logWithDuration("Initialized model", t, "GANSynth");
                      }),
                      Object.keys(e).map(function(t) {
                        return e[t].dispose();
                      }),
                      [2]
                    );
                }
              });
            });
          }),
          (t.prototype.dispose = function() {
            this.initialized && (this.nn.dispose(), (this.initialized = !1));
          }),
          (t.prototype.isInitialized = function() {
            return this.initialized;
          }),
          (t.prototype.build = function(t) {
            var e = this;
            o.tidy(function() {
              var n = {
                  filters: 256,
                  kernelSize: [2, 16],
                  strides: [1, 1],
                  activation: "linear",
                  useBias: !0,
                  padding: "valid",
                  dilationRate: [1, 1],
                  trainable: !1
                },
                r = { inputShape: [1, 1, e.nLatents + e.nPitches] };
              e.nn.add(u.pixelNorm(1e-8, r)),
                e.nn.add(u.initialPad(2, 16)),
                e.nn.add(o.layers.conv2d(n)),
                e.nn.add(o.layers.leakyReLU({ alpha: 0.2 })),
                e.nn.add(u.pixelNorm()),
                (n.padding = "same"),
                (n.kernelSize = [3, 3]),
                e.nn.add(o.layers.conv2d(n)),
                e.nn.add(o.layers.leakyReLU({ alpha: 0.2 })),
                e.nn.add(u.pixelNorm());
              for (
                var i = [256, 256, 256, 128, 64, 32], a = 0;
                a < i.length;
                a++
              )
                e.nn.add(u.boxUpscale(2)),
                  (n.filters = i[a]),
                  e.nn.add(o.layers.conv2d(n)),
                  e.nn.add(o.layers.leakyReLU({ alpha: 0.2 })),
                  e.nn.add(u.pixelNorm()),
                  e.nn.add(o.layers.conv2d(n)),
                  e.nn.add(o.layers.leakyReLU({ alpha: 0.2 })),
                  e.nn.add(u.pixelNorm());
              (n.filters = 2),
                (n.kernelSize = [1, 1]),
                (n.activation = "tanh"),
                e.nn.add(o.layers.conv2d(n)),
                e.setWeights(t);
            });
          }),
          (t.prototype.setWeights = function(t) {
            function e(e) {
              var n = t[e];
              if (void 0 === n) throw Error("Variable not found: " + e);
              return n;
            }
            var n =
                "Generator/progressive_gan_generator/progressive_gan_block_",
              r = [
                e(n + "1/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "1/conv0/bias/ExponentialMovingAverage"),
                e(n + "1/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "1/conv1/bias/ExponentialMovingAverage"),
                e(n + "2/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "2/conv0/bias/ExponentialMovingAverage"),
                e(n + "2/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "2/conv1/bias/ExponentialMovingAverage"),
                e(n + "3/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "3/conv0/bias/ExponentialMovingAverage"),
                e(n + "3/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "3/conv1/bias/ExponentialMovingAverage"),
                e(n + "4/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "4/conv0/bias/ExponentialMovingAverage"),
                e(n + "4/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "4/conv1/bias/ExponentialMovingAverage"),
                e(n + "5/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "5/conv0/bias/ExponentialMovingAverage"),
                e(n + "5/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "5/conv1/bias/ExponentialMovingAverage"),
                e(n + "6/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "6/conv0/bias/ExponentialMovingAverage"),
                e(n + "6/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "6/conv1/bias/ExponentialMovingAverage"),
                e(n + "7/conv0/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "7/conv0/bias/ExponentialMovingAverage"),
                e(n + "7/conv1/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "7/conv1/bias/ExponentialMovingAverage"),
                e(n + "7/to_rgb/conv2d/kernel/ExponentialMovingAverage"),
                e(n + "7/to_rgb/bias/ExponentialMovingAverage")
              ];
            this.nn.setWeights(r);
          }),
          (t.prototype.predict = function(t, e) {
            return this.nn.predict(t, { batchSize: e });
          }),
          (t.prototype.randomSample = function(t) {
            var e = this;
            return o.tidy(function() {
              var n = o.randomNormal([1, e.nLatents], 0, 1, "float32"),
                r = o.tensor1d([t - e.minMidiPitch], "int32"),
                i = o.oneHot(r, e.midiPitches),
                a = o
                  .concat([n, i], 1)
                  .expandDims(1)
                  .expandDims(1);
              return e.predict(a, 1);
            });
          }),
          (t.prototype.specgramsToAudio = function(t) {
            return s.specgramsToAudio(t);
          }),
          t
        );
      })();
    e.GANSynth = c;
  },
  function(t, e, n) {
    "use strict";
    var r =
        (this && this.__awaiter) ||
        function(t, e, n, r) {
          return new (n || (n = Promise))(function(i, o) {
            function a(t) {
              try {
                u(r.next(t));
              } catch (t) {
                o(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                o(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(a, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        },
      i =
        (this && this.__generator) ||
        function(t, e) {
          var n,
            r,
            i,
            o,
            a = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (o = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (o[Symbol.iterator] = function() {
                return this;
              }),
            o
          );
          function s(o) {
            return function(s) {
              return (function(o) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; a; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & o[0]
                            ? r.return
                            : o[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, o[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                      case 0:
                      case 1:
                        i = o;
                        break;
                      case 4:
                        return a.label++, { value: o[1], done: !1 };
                      case 5:
                        a.label++, (r = o[1]), (o = [0]);
                        continue;
                      case 7:
                        (o = a.ops.pop()), a.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = a.trys).length > 0 && i[i.length - 1]) &&
                          (6 === o[0] || 2 === o[0])
                        ) {
                          a = 0;
                          continue;
                        }
                        if (
                          3 === o[0] &&
                          (!i || (o[1] > i[0] && o[1] < i[3]))
                        ) {
                          a.label = o[1];
                          break;
                        }
                        if (6 === o[0] && a.label < i[1]) {
                          (a.label = i[1]), (i = o);
                          break;
                        }
                        if (i && a.label < i[2]) {
                          (a.label = i[2]), a.ops.push(o);
                          break;
                        }
                        i[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    o = e.call(t, a);
                  } catch (t) {
                    (o = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & o[0]) throw o[1];
                return { value: o[0] ? o[1] : void 0, done: !0 };
              })([o, s]);
            };
          }
        };
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7),
      a = n(98),
      s = n(52),
      u = n(245),
      c = n(246);
    function l() {
      for (
        var t = o.buffer([1024, 1024]), e = 0;
        e < c.MEL_SPARSE_COEFFS.length;
        e++
      ) {
        var n = c.MEL_SPARSE_COEFFS[e];
        t.set(n[2], n[0], n[1]);
      }
      return t.toTensor();
    }
    function h(t, e, n) {
      return o.div(o.sub(t, n), e);
    }
    function f(t) {
      return o.tidy(function() {
        var e = l().expandDims(0),
          n = h(t, u.MAG_DESCALE_A, u.MAG_DESCALE_B),
          r = o.exp(n),
          i = o.matMul(r, e);
        return o.sqrt(i);
      });
    }
    function p(t) {
      return o.tidy(function() {
        var e = l().expandDims(0),
          n = h(t, u.PHASE_DESCALE_A, u.PHASE_DESCALE_B),
          r = o.cumsum(o.mul(n, Math.PI), 1);
        return o.matMul(r, e);
      });
    }
    function d(t, e) {
      for (
        var n = o.tidy(function() {
            var n = o.concat([t, e], 0).expandDims(3);
            n = o.pad(n, [[0, 0], [0, 0], [1, 0], [0, 0]]);
            return o
              .batchToSpaceND(n, [1, 2], [[0, 0], [0, 0]])
              .reshape([128, 4096]);
          }),
          r = n.dataSync(),
          i = [],
          a = 0;
        a < 128;
        a++
      )
        i[a] = r.slice(4096 * a, 4096 * (a + 1));
      return n.dispose(), i;
    }
    function m(t) {
      return r(this, void 0, void 0, function() {
        var e;
        return i(this, function(n) {
          return (
            (e = {
              nFFt: u.N_FFT,
              winLength: u.N_FFT,
              hopLength: u.N_HOP,
              sampleRate: u.SAMPLE_RATE,
              center: !1
            }),
            [2, g(t, e)]
          );
        });
      });
    }
    function y(t) {
      var e = t.length / 2,
        n = new a(e),
        r = n.createComplexArray();
      return n.inverseTransform(r, t), n.fromComplexArray(r);
    }
    function g(t, e) {
      for (
        var n = t.length,
          r = t[0].length / 2,
          i = e.winLength || r,
          o = e.hopLength || Math.floor(i / 4),
          a = e.center || !1,
          c = s.hannWindow(i),
          l = 0;
        l < c.length;
        l++
      )
        c[l] = c[l] / 1.5;
      c = s.padCenterToLength(c, r);
      var h = r + o * (n - 1),
        f = new Float32Array(h);
      for (l = 0; l < n; l++) {
        var p = l * o,
          d = y(t[l]);
        (d = v((d = s.applyWindow(d, c)), f.slice(p, p + r))), f.set(d, p);
      }
      var m = 0,
        g = h;
      return (
        a
          ? ((m = r / 2), (g = f.length - r / 2))
          : ((m = h - u.SAMPLE_LENGTH), (g = f.length - m)),
        f.slice(m, g)
      );
    }
    function v(t, e) {
      if (t.length !== e.length)
        return (
          console.error(
            "Array lengths must be equal to add: " + t.length + ", " + t.length
          ),
          null
        );
      for (var n = new Float32Array(t.length), r = 0; r < t.length; r++)
        n[r] = t[r] + e[r];
      return n;
    }
    (e.melToLinearMatrix = l),
      (e.melToLinear = f),
      (e.ifreqToPhase = p),
      (e.specgramsToAudio = function(t) {
        return r(this, void 0, void 0, function() {
          var e, n;
          return i(this, function(r) {
            switch (r.label) {
              case 0:
                return [
                  4,
                  d(
                    (e = o.tidy(function() {
                      var e = f(
                          o
                            .slice(t, [0, 0, 0, 0], [1, -1, -1, 1])
                            .reshape([1, 128, 1024])
                        ),
                        n = p(
                          o
                            .slice(t, [0, 0, 0, 1], [1, -1, -1, 1])
                            .reshape([1, 128, 1024])
                        ),
                        r = e.mul(o.cos(n)),
                        i = o.reverse(r.slice([0, 0, 0], [1, 128, 1023]), 2);
                      r = o.concat([r, i], 2);
                      var a = e.mul(o.sin(n)),
                        s = o.reverse(a.slice([0, 0, 0], [1, 128, 1023]), 2);
                      return [r, (a = o.concat([a, o.mul(s, -1)], 2))];
                    }))[0],
                    e[1]
                  )
                ];
              case 1:
                return [4, m(r.sent())];
              case 2:
                return (
                  (n = r.sent()),
                  e.forEach(function(t) {
                    return t.dispose();
                  }),
                  [2, n]
                );
            }
          });
        });
      }),
      (e.ifft = y),
      (e.istft = g);
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.MAG_DESCALE_A = 0.0661371661726),
      (e.MAG_DESCALE_B = 0.113718730221),
      (e.PHASE_DESCALE_A = 0.8),
      (e.PHASE_DESCALE_B = 0),
      (e.SAMPLE_RATE = 16e3),
      (e.SAMPLE_LENGTH = 64e3),
      (e.N_HOP = 512),
      (e.N_FFT = 2048);
  },
  function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.MEL_SPARSE_COEFFS = [
        [1, 1, 1.0087615084725814],
        [2, 1, 0.029087889211125567],
        [2, 2, 0.958243896036208],
        [3, 2, 0.5326346877272624],
        [3, 3, 0.45988057223186607],
        [4, 3, 1.0072850129664943],
        [5, 4, 1.0050894259864507],
        [6, 4, 0.016233689242197466],
        [6, 5, 0.9763230964529687],
        [7, 5, 0.5149287456976357],
        [7, 6, 0.48299891928441196],
        [8, 6, 1.0020339883784544],
        [9, 7, 1.0013940582804204],
        [10, 7, 0.004285414445239434],
        [10, 8, 0.9936677765505681],
        [11, 8, 0.4979349533263788],
        [11, 9, 0.5020647178266697],
        [12, 9, 0.9896782321684733],
        [12, 10, 0.006967080931645349],
        [13, 10, 1.0022486641537054],
        [14, 11, 1.0033233953996759],
        [15, 11, 0.4782757843614299],
        [15, 12, 0.5183887055972138],
        [16, 12, 0.9736767011426267],
        [16, 13, 0.01804416217807709],
        [17, 13, 1.0056329663266226],
        [18, 14, 1.00808642668908],
        [19, 14, 0.4576416347984229],
        [19, 15, 0.5340800956534676],
        [20, 15, 0.9582897445862256],
        [20, 16, 0.028988367857957848],
        [21, 16, 1.008754652772106],
        [22, 17, 1.0122552436937966],
        [23, 17, 0.4380796830853842],
        [23, 18, 0.5491738237632201],
        [24, 18, 0.9434838949694413],
        [24, 19, 0.039794474296176746],
        [25, 19, 1.0116287566447584],
        [26, 20, 1.0158945544322868],
        [27, 20, 0.41952402212367873],
        [27, 21, 0.5637020154076856],
        [28, 21, 0.9292283399303117],
        [28, 22, 0.05045785324282485],
        [29, 22, 1.0142694870195312],
        [30, 23, 1.0190617246342517],
        [31, 23, 0.40191289323704393],
        [31, 24, 0.5776942788784806],
        [32, 24, 0.915494649120402],
        [32, 25, 0.060974426459003916],
        [33, 25, 1.016690283888679],
        [34, 26, 1.0218076651124588],
        [35, 26, 0.3851885348435194],
        [35, 27, 0.5911779611807773],
        [36, 27, 0.9022565352474414],
        [36, 28, 0.07134062388959171],
        [37, 28, 1.0189038677945517],
        [38, 29, 1.0241776077147466],
        [39, 29, 0.369297000124277],
        [39, 30, 0.6041783722578726],
        [40, 30, 0.8894896443111251],
        [40, 31, 0.08155334505527755],
        [41, 31, 1.0209222848386956],
        [42, 32, 1.0262117836546005],
        [43, 32, 0.35418795675261777],
        [43, 33, 0.6167189821271176],
        [44, 33, 0.87717137085618],
        [44, 34, 0.09160992335204851],
        [45, 34, 1.0227569476841007],
        [46, 35, 1.0279460165329002],
        [47, 35, 0.3398144781420294],
        [47, 36, 0.628821594757742],
        [48, 36, 0.8652806947525041],
        [48, 37, 0.10150809298528844],
        [49, 37, 1.0244186730654867],
        [50, 38, 1.029412240942602],
        [51, 38, 0.32613283297317347],
        [51, 39, 0.6405065019041107],
        [52, 39, 0.8537980365619783],
        [52, 40, 0.11124595830527892],
        [53, 40, 1.0259177162406141],
        [54, 41, 1.030638956235277],
        [55, 41, 0.3131022777355948],
        [55, 42, 0.6517926196031543],
        [56, 42, 0.8427051290118196],
        [56, 43, 0.12082196533877268],
        [57, 43, 1.0272638027474759],
        [58, 44, 1.031651623831845],
        [59, 44, 0.3006848555240512],
        [59, 45, 0.6626976096262132],
        [60, 45, 0.8319849024715039],
        [60, 46, 0.13023487533380312],
        [61, 46, 1.0284661577762764],
        [62, 47, 1.0324730153919173],
        [63, 47, 0.28884520321029805],
        [63, 48, 0.6732379878311283],
        [64, 48, 0.821621382643116],
        [64, 49, 0.1394837401591093],
        [65, 49, 1.0295335334192939],
        [66, 50, 1.0331235182054521],
        [67, 50, 0.27755036829985363],
        [67, 51, 0.68342922107227],
        [68, 51, 0.8115995989355603],
        [68, 52, 0.148567879414825],
        [69, 52, 1.0304742340231496],
        [70, 53, 1.0336214033370148],
        [71, 53, 0.2667696361817086],
        [71, 54, 0.6932858140884962],
        [72, 54, 0.8019055022130549],
        [72, 55, 0.1574868591255191],
        [73, 55, 1.031296139836255],
        [74, 56, 1.0339830613212895],
        [75, 56, 0.2564743680536822],
        [75, 57, 0.7028213875855097],
        [76, 57, 0.7925258907912134],
        [76, 58, 0.16624047189958738],
        [77, 58, 1.032006729117501],
        [78, 59, 1.0342232095724524],
        [79, 59, 0.24663784949713183],
        [79, 60, 0.7120487485622758],
        [80, 60, 0.7834483437084975],
        [80, 61, 0.17482871845079165],
        [81, 61, 1.032613098850059],
        [82, 62, 1.0343550751159198],
        [83, 62, 0.2372351494674972],
        [83, 63, 0.7209799537859948],
        [84, 63, 0.7746611604312031],
        [84, 64, 0.18325179038711914],
        [85, 64, 1.0331219841851924],
        [86, 65, 1.0343905557724016],
        [87, 65, 0.22824298931879333],
        [87, 66, 0.7296263672031092],
        [88, 66, 0.7661533062642226],
        [88, 67, 0.19151005417692718],
        [89, 67, 1.0335397767254908],
        [90, 68, 1.0343403625078313],
        [91, 68, 0.21963962139622123],
        [91, 69, 0.7379987119645334],
        [92, 69, 0.7579143628308538],
        [92, 70, 0.19960403621540457],
        [93, 70, 1.0338725417430177],
        [94, 71, 1.0342141453043734],
        [95, 71, 0.21140471667072153],
        [95, 72, 0.746107117663542],
        [96, 72, 0.7499344830670268],
        [96, 73, 0.20753440891552338],
        [97, 73, 1.0341260344172454],
        [98, 74, 1.034020604597683],
        [99, 74, 0.20351926086574523],
        [99, 75, 0.7539611633021215],
        [100, 75, 0.7422043502477234],
        [100, 76, 0.2153019777561019],
        [101, 76, 1.0343057151671131],
        [102, 77, 1.0337675900563705],
        [103, 77, 0.19596545852169872],
        [103, 78, 0.7615699164421695],
        [104, 78, 0.734715140616724],
        [104, 79, 0.22290766922455862],
        [105, 79, 1.034416764143981],
        [106, 80, 1.03346218824938],
        [107, 80, 0.1887266444456389],
        [107, 81, 0.7689419689404797],
        [108, 81, 0.7274584892496355],
        [108, 82, 0.23035251959385997],
        [109, 82, 1.0344640949448594],
        [110, 83, 1.0331108005456808],
        [111, 83, 0.18178720201436843],
        [111, 84, 0.7760854696185804],
        [112, 84, 0.7204264588178948],
        [112, 85, 0.23763766448199494],
        [113, 85, 1.0344523675990727],
        [114, 86, 1.032719212418228],
        [115, 86, 0.1751324878193402],
        [115, 87, 0.7830081541774375],
        [116, 87, 0.7136115109646374],
        [116, 88, 0.2447643291417676],
        [117, 88, 1.0343860008764458],
        [118, 89, 1.0322926551739824],
        [119, 89, 0.16874876216974247],
        [119, 90, 0.789717372631832],
        [120, 90, 0.7070064800338803],
        [120, 91, 0.2517338194331562],
        [121, 91, 1.0342691839607763],
        [122, 92, 1.0318358610025598],
        [123, 92, 0.16262312499771858],
        [123, 93, 0.7962201145052664],
        [124, 93, 0.7006045489251309],
        [124, 94, 0.25854751343650967],
        [125, 94, 1.0341058875275075],
        [126, 95, 1.0313531121234998],
        [127, 95, 0.15674345673841866],
        [127, 96, 0.8025230320033012],
        [128, 96, 0.6943992268713032],
        [128, 97, 0.2652068536620191],
        [129, 97, 1.033899874262366],
        [130, 98, 1.030848284714744],
        [131, 98, 0.1510983637896712],
        [131, 99, 0.8086324613545763],
        [132, 99, 0.6883843289574696],
        [132, 100, 0.2717133398209474],
        [133, 100, 1.033654708853177],
        [134, 101, 1.0303248882205327],
        [135, 101, 0.14567712818173575],
        [135, 102, 0.8145544424922615],
        [136, 102, 0.6825539572209546],
        [136, 103, 0.2780685221191216],
        [137, 103, 1.033373767485838],
        [138, 104, 1.0297861005632643],
        [139, 104, 0.14046966111762169],
        [139, 105, 0.8202947372282664],
        [140, 105, 0.6769024831869065],
        [140, 106, 0.28427399504058354],
        [141, 106, 1.0330602468722847],
        [142, 107, 1.029234799720434],
        [143, 107, 0.13546646006984392],
        [143, 108, 0.8258588460540109],
        [144, 108, 0.671424531713726],
        [144, 109, 0.290331391589362],
        [145, 109, 1.0327171728357682],
        [146, 110, 1.0286735920712562],
        [147, 110, 0.13065856914309196],
        [147, 111, 0.8312520236957351],
        [148, 111, 0.6661149660273628],
        [148, 112, 0.2962423779602388],
        [149, 112, 1.03234740847843],
        [150, 113, 1.0281048378703825],
        [151, 113, 0.12603754244145],
        [151, 114, 0.8364792935255917],
        [152, 114, 0.6609688738465388],
        [152, 115, 0.30200864860954885],
        [153, 115, 1.0319536619522978],
        [154, 116, 1.0275306741623285],
        [155, 116, 0.12159541018943322],
        [155, 117, 0.8415454609370665],
        [156, 117, 0.655981554500098],
        [156, 118, 0.3076319217011811],
        [157, 118, 1.031538493855763],
        [158, 119, 1.0269530354146845],
        [159, 119, 0.11732464738966399],
        [159, 120, 0.846455125764718],
        [160, 120, 0.6511485069565366],
        [160, 121, 0.3131139349019227],
        [161, 121, 1.0311043242739946],
        [162, 122, 1.0263736721146446],
        [163, 122, 0.11321814480714538],
        [163, 123, 0.851212693834753],
        [164, 123, 0.6464654186857061],
        [164, 124, 0.3184564415055735],
        [165, 124, 1.0306534394819706],
        [166, 125, 1.0257941675461106],
        [167, 125, 0.10926918209624069],
        [167, 126, 0.8558223877141483],
        [168, 126, 0.6419281552876014],
        [168, 127, 0.32366120686047056],
        [169, 127, 1.0301879983273805],
        [170, 128, 1.0252159529388847],
        [171, 128, 0.10547140289367021],
        [171, 129, 0.8602882567276612],
        [172, 129, 0.6375327508240597],
        [172, 130, 0.32873000508360367],
        [173, 130, 1.0297100383091813],
        [174, 131, 1.0246403211604227],
        [175, 131, 0.10181879172477112],
        [175, 132, 0.8646141862987496],
        [176, 132, 0.6332753987956673],
        [176, 133, 0.33366461604209907],
        [177, 133, 1.0292214813668379],
        [178, 134, 1.0240684391009978],
        [179, 134, 0.09830565257411007],
        [179, 135, 0.8688039066707689],
        [180, 135, 0.6291524437169539],
        [180, 136, 0.3384668225808326],
        [181, 136, 1.0287241393952773],
        [182, 137, 1.0235013588866442],
        [183, 137, 0.0949265889928822],
        [183, 138, 0.8728610010546515],
        [184, 138, 0.6251603732380943],
        [184, 139, 0.3431384079843332],
        [185, 139, 1.0282197194980238],
        [186, 140, 1.0229400280388043],
        [187, 140, 0.09167648561647405],
        [187, 141, 0.8767889132518744],
        [188, 141, 0.6212958107744541],
        [188, 142, 0.3476811536535296],
        [189, 142, 1.0277098289923983],
        [190, 143, 1.0223852986877378],
        [191, 143, 0.08855049098843445],
        [191, 144, 0.8805909547856343],
        [192, 144, 0.6175555086043407],
        [192, 145, 0.35209683698566024],
        [193, 145, 1.0271959801772084],
        [194, 146, 1.021837935933431],
        [195, 146, 0.08554400158179727],
        [195, 147, 0.8842703115872171],
        [196, 147, 0.6139363413989273],
        [196, 148, 0.35638722943949186],
        [197, 148, 1.026679594876984],
        [198, 149, 1.0212986254395027],
        [199, 149, 0.082652646931321],
        [199, 150, 0.8878300502607867],
        [200, 150, 0.6104353001536761],
        [200, 151, 0.3605540947783916],
        [201, 151, 1.0261620087703698],
        [202, 152, 1.020767980334856],
        [203, 152, 0.07987227578640096],
        [203, 153, 0.8912731239662092],
        [204, 153, 0.6070494864912312],
        [204, 154, 0.364599187472458],
        [205, 154, 1.025644475516362],
        [206, 155, 1.0202465474911722],
        [207, 155, 0.07719894321045902],
        [207, 156, 0.8946023779404728],
        [208, 156, 0.6037761073076129],
        [208, 157, 0.36852425125748506],
        [209, 157, 1.0251281706842847],
        [210, 158, 1.0197348132361097],
        [211, 158, 0.07462889855138014],
        [211, 159, 0.8978205546916732],
        [212, 159, 0.6006124697383151],
        [212, 160, 0.3723310178292769],
        [213, 160, 1.0246141955013988],
        [214, 161, 1.0192332085569418],
        [215, 161, 0.07215857422040488],
        [215, 162, 0.9009302988805],
        [216, 162, 0.5975559764226185],
        [216, 163, 0.37602120567284064],
        [217, 163, 1.024103580422386],
        [218, 164, 1.018742113842709],
        [219, 164, 0.06978457521665815],
        [219, 165, 0.9039341619174114],
        [220, 165, 0.5946041210439893],
        [220, 166, 0.3795965190111676],
        [221, 166, 1.0235972885322195],
        [222, 167, 1.0182618632088625],
        [223, 167, 0.0675036693443592],
        [223, 168, 0.9068346062921914],
        [224, 168, 0.5917544841265701],
        [224, 169, 0.3830586468674795],
        [225, 169, 1.0230962187892327],
        [226, 170, 1.0177927484431766],
        [227, 170, 0.06531277806896706],
        [227, 171, 0.9096340096561174],
        [228, 171, 0.5890047290713193],
        [228, 172, 0.38640926223293437],
        [229, 172, 1.0226012091159231],
        [230, 173, 1.017335022608167],
        [231, 173, 0.0632089679653424],
        [231, 174, 0.9123346686734497],
        [232, 174, 0.586352598418078],
        [232, 175, 0.3896500213288084],
        [233, 175, 1.0221130393455482],
        [234, 176, 1.0168889033326205],
        [235, 176, 0.06118944272087777],
        [235, 177, 0.914938802652698],
        [236, 177, 0.5837959103122896],
        [236, 178, 0.39278256296329067],
        [237, 178, 1.0216324340290364],
        [238, 179, 1.0164545758191],
        [239, 179, 0.05925153564332089],
        [239, 180, 0.9174485569826359],
        [240, 180, 0.5813325551691159],
        [240, 181, 0.3958085079669357],
        [241, 181, 1.0211600651125134],
        [242, 182, 1.01603219559476],
        [243, 182, 0.05739270264601734],
        [243, 183, 0.919866006375456],
        [244, 183, 0.578960492519135],
        [244, 184, 0.39872945870775167],
        [245, 184, 1.020696554488055],
        [246, 185, 1.0156218910279706],
        [247, 185, 0.055610515672866775],
        [247, 186, 0.9221931579354511],
        [248, 186, 0.5766777480237313],
        [248, 187, 0.4015469986761612],
        [249, 187, 1.0202424764259312],
        [250, 188, 1.0152237656316911],
        [251, 188, 0.05390265653168126],
        [251, 189, 0.9244319540637365],
        [252, 189, 0.5744824106486663],
        [252, 190, 0.4042626921377848],
        [253, 190, 1.0197983598926021],
        [254, 191, 1.0148379001729047],
        [255, 191, 0.052266911108559244],
        [255, 192, 0.9265842752073952],
        [256, 192, 0.5723726299899468],
        [256, 193, 0.40687808384383367],
        [257, 193, 1.0193646907609162],
        [258, 194, 1.0144643546050645],
        [259, 194, 0.05070116393653833],
        [259, 195, 0.9286519424651887],
        [260, 195, 0.5703466137364466],
        [260, 196, 0.4093946987997115],
        [261, 196, 1.0189419139168765],
        [262, 197, 1.014103169839173],
        [263, 197, 0.04920339309393266],
        [263, 198, 0.9306367200572258],
        [264, 198, 0.5684026252644323],
        [264, 199, 0.41181404208517797],
        [265, 199, 1.0185304352678317],
        [266, 200, 1.0137543693675302],
        [267, 200, 0.04777166540942449],
        [267, 201, 0.9325403176671191],
        [268, 201, 0.5665389813575877],
        [268, 202, 0.4141375987198434],
        [269, 202, 1.0181306236573189],
        [270, 203, 1.0134179607527265],
        [271, 203, 0.04640413195303674],
        [271, 204, 0.934364392667829],
        [272, 204, 0.5647540500383554],
        [272, 205, 0.4163668335733731],
        [273, 205, 1.017742812691386],
        [274, 206, 1.0130939369942324],
        [275, 206, 0.04509902379599986],
        [275, 207, 0.9361105522297561],
        [276, 207, 0.5630462485124229],
        [276, 208, 0.4185031913161667],
        [277, 208, 1.0173673024779883],
        [278, 209, 1.0127822777820206],
        [279, 209, 0.043854648017688035],
        [279, 210, 0.9377803553285139],
        [280, 210, 0.5614140412123577],
        [280, 211, 0.42054809640522234],
        [281, 211, 1.0170043612872055],
        [282, 212, 1.0124829506474082],
        [283, 212, 0.042669383945431606],
        [283, 213, 0.9393753146522579],
        [284, 213, 0.5598559379382144],
        [284, 214, 0.42250295310432634],
        [285, 214, 1.016654227133528],
        [286, 215, 1.0121959120202477],
        [287, 215, 0.04154167961383383],
        [287, 216, 0.9408968984130733],
        [288, 216, 0.5583704920894111],
        [288, 217, 0.42436914553372207],
        [289, 217, 1.0163171092845467],
        [290, 218, 1.0119211081990869],
        [291, 218, 0.04047004842376173],
        [291, 219, 0.9423465320743504],
        [292, 219, 0.5569562989809166],
        [292, 220, 0.4261480377490578],
        [293, 220, 1.0159931896995795],
        [294, 221, 1.0116584762427925],
        [295, 221, 0.03945306599345366],
        [295, 222, 0.9437255999933521],
        [296, 222, 0.5556119942410062],
        [296, 223, 0.4278409738424421],
        [297, 223, 1.0156826244024533],
        [298, 224, 1.0114079447897668],
        [299, 224, 0.038489367187566605],
        [299, 225, 0.9450354469842541],
        [300, 225, 0.5543362522836106],
        [300, 226, 0.42944927807097044],
        [301, 226, 1.015385544788648],
        [302, 227, 1.0111694348102989],
        [303, 227, 0.03757764331096192],
        [303, 228, 0.9462773798108762],
        [304, 228, 0.5531277848528364],
        [304, 229, 0.4309742550012965],
        [305, 229, 1.0151020588742643],
        [306, 230, 1.010942860298229],
        [307, 230, 0.036716639459590646],
        [307, 231, 0.9474526686068676],
        [308, 231, 0.5519853396352962],
        [308, 232, 0.4324171896758833],
        [309, 232, 1.0148322524854105],
        [310, 233, 1.0107281289063446],
        [311, 233, 0.03590515201636021],
        [311, 234, 0.9485625482321702],
        [312, 234, 0.5509076989367998],
        [312, 235, 0.43377934779319954],
        [313, 235, 1.0145761903940136],
        [314, 236, 1.0105251425307091],
        [315, 236, 0.03514202628559325],
        [315, 237, 0.9496082195647421],
        [316, 237, 0.5498936784177629],
        [316, 238, 0.4350619759070698],
        [317, 238, 1.014333917399279],
        [318, 239, 1.0103337978471305],
        [319, 239, 0.03442615425358563],
        [319, 240, 0.9505908507379167],
        [320, 240, 0.5489421258861396],
        [320, 241, 0.43626630163460317],
        [321, 241, 1.0141054593619083],
        [322, 242, 1.01015398680447],
        [323, 242, 0.03375647247069698],
        [323, 243, 0.9515115783174108],
        [324, 243, 0.5480519201477565],
        [324, 244, 0.43739353387882146],
        [325, 244, 1.0138908241879996],
        [326, 245, 1.0099855970782285],
        [327, 245, 0.033131960048180864],
        [327, 246, 0.9523715084281075],
        [328, 246, 0.5472219699015581],
        [328, 247, 0.438444863061944],
        [329, 247, 1.013690002769195],
        [330, 248, 1.009828512486449],
        [331, 248, 0.0325516367573507],
        [331, 249, 0.9531717178331495],
        [332, 249, 0.5464512126887197],
        [332, 250, 0.43942146136466664],
        [333, 250, 1.0135029698801676],
        [334, 251, 1.0096826133725936],
        [335, 251, 0.03201456123217285],
        [335, 252, 0.9539132549610332],
        [336, 252, 0.5457386138858732],
        [336, 253, 0.4403244829779182],
        [337, 253, 1.0133296850325435],
        [338, 254, 1.009547776957031],
        [339, 254, 0.03151982926510845],
        [339, 255, 0.9545971408911784],
        [340, 255, 0.5450831657405287],
        [340, 256, 0.44115506435778573],
        [341, 256, 1.0131700932920482],
        [342, 257, 1.0094238776594737],
        [343, 257, 0.031066572189892106],
        [343, 258, 0.9552243702967873],
        [344, 258, 0.5444838864501296],
        [344, 259, 0.44191432448690826],
        [345, 259, 1.013024126057376],
        [346, 260, 1.0093107873949636],
        [347, 260, 0.030653955347715485],
        [347, 261, 0.9557959123477745],
        [348, 261, 0.5439398192781751],
        [348, 262, 0.44260336514265247],
        [349, 262, 1.01289170180302],
        [350, 263, 1.0092083758457435],
        [351, 263, 0.03028117663272106],
        [351, 264, 0.956312711573757],
        [352, 264, 0.5434500317097861],
        [352, 265, 0.44322327116676213],
        [353, 265, 1.012772726788603],
        [354, 266, 1.0091165107105933],
        [355, 266, 0.029947465111254432],
        [355, 267, 0.9567756886915669],
        [356, 267, 0.5430136146404813],
        [356, 268, 0.443775110739594],
        [357, 268, 1.0126670957357586],
        [358, 269, 1.0090350579329337],
        [359, 269, 0.02965207970869547],
        [359, 270, 0.9571857414000476],
        [360, 270, 0.5426296815994802],
        [360, 271, 0.44425993565630856],
        [361, 271, 1.012574692474406],
        [362, 272, 1.0089638819102829],
        [363, 272, 0.029394307963707546],
        [363, 273, 0.9575437451393404],
        [364, 273, 0.5422973680058967],
        [364, 274, 0.4446787816043237],
        [365, 274, 1.0124953905592755],
        [366, 275, 1.0089028456858484],
        [367, 275, 0.029173464843693937],
        [367, 276, 0.9578505538209541],
        [368, 276, 0.5420158304528419],
        [368, 277, 0.44503266844280676],
        [369, 277, 1.0124290538587923],
        [370, 278, 1.0088518111235036],
        [371, 278, 0.028988891617224174],
        [371, 279, 0.9581070005279474],
        [372, 279, 0.5417842460227992],
        [372, 280, 0.4453226004830567],
        [373, 280, 1.012375537116488],
        [374, 281, 1.0088106390682976],
        [375, 281, 0.028839954783933083],
        [375, 282, 0.9583138981860433],
        [376, 282, 0.5416018116287169],
        [376, 283, 0.4455495667668758],
        [377, 283, 1.0123346864882432],
        [378, 284, 1.008779189492711],
        [379, 284, 0.02872604505481853],
        [379, 285, 0.9584720402070429],
        [380, 285, 0.5414677433849261],
        [380, 286, 0.44571454134485444],
        [381, 286, 1.0123063400541175],
        [382, 287, 1.008757321629678],
        [383, 287, 0.028646576380597488],
        [383, 288, 0.9585822011116006],
        [384, 288, 0.5413812759956369],
        [384, 289, 0.4458184835568685],
        [385, 289, 1.0122903283078832],
        [386, 290, 1.0087448940943453],
        [387, 290, 0.028600985028178233],
        [387, 291, 0.9586451371206854],
        [388, 291, 0.541341662177547],
        [388, 292, 0.44586233830592226],
        [389, 292, 1.0122864746237836],
        [390, 293, 1.0087417649949195],
        [391, 293, 0.028588728701898054],
        [391, 294, 0.9586615867284015],
        [392, 294, 0.5413481720936798],
        [392, 295, 0.44584703633543826],
        [393, 295, 1.0122945957030358],
        [394, 296, 1.0087477920325896],
        [395, 296, 0.028609285702619672],
        [395, 297, 0.958632271251788],
        [396, 297, 0.5414000928186515],
        [396, 298, 0.44577349450072723],
        [397, 298, 1.0123145019997328],
        [398, 299, 1.0087628325926643],
        [399, 299, 0.028662154128659946],
        [399, 300, 0.9585578953591529],
        [400, 300, 0.5414967278190544],
        [400, 301, 0.4456426160405528],
        [401, 301, 1.0123459981276965],
        [402, 302, 1.0087867438270437],
        [403, 302, 0.028746851113718195],
        [403, 303, 0.9584391475775814],
        [404, 303, 0.5416373964555454],
        [404, 304, 0.4454552908447334],
        [405, 304, 1.0123888832492127],
        [406, 305, 1.0088193827286074],
        [407, 305, 0.02886291209986826],
        [407, 306, 0.9582767007831089],
        [408, 306, 0.541821433501071],
        [408, 307, 0.44521239571891796],
        [409, 307, 1.0124429514472502],
        [410, 308, 1.0088606061980132],
        [411, 308, 0.029009890142771087],
        [411, 309, 0.9580712126699451],
        [412, 309, 0.5420481886827784],
        [412, 310, 0.4449147946460895],
        [413, 310, 1.01250799207953],
        [414, 311, 1.0089102711038211],
        [415, 311, 0.029187355249536997],
        [415, 312, 0.9578233262044412],
        [416, 312, 0.5423170262339921],
        [416, 313, 0.44456333904778883],
        [417, 313, 1.0125837901172945],
        [418, 314, 1.0089682343360202],
        [419, 314, 0.02939489374516595],
        [419, 315, 0.9575336700623188],
        [420, 315, 0.5426273244683578],
        [420, 316, 0.4441588680360723],
        [421, 316, 1.0126701264704934],
        [422, 317, 1.0090343528545804],
        [423, 317, 0.029632107670909735],
        [423, 318, 0.9572028590461733],
        [424, 318, 0.5429784753662162],
        [424, 319, 0.44370220866623333],
        [425, 319, 1.0127667782967882],
        [426, 320, 1.0091084837312583],
        [427, 320, 0.02989861420426184],
        [427, 321, 0.9568314944924141],
        [428, 321, 0.5433698841780775],
        [428, 322, 0.44319417618582607],
        [429, 322, 1.0128735192969558],
        [430, 323, 1.0091904841873789],
        [431, 323, 0.03019404510848359],
        [431, 324, 0.9564201646615609],
        [432, 324, 0.5438009690392793],
        [432, 325, 0.442635574278337],
        [433, 325, 1.0129901199984148],
        [434, 326, 1.0092802116265451],
        [435, 326, 0.030518046204357472],
        [435, 327, 0.9559694451142186],
        [436, 327, 0.5442711606026257],
        [436, 328, 0.4420271953022404],
        [437, 328, 1.013116348025554],
        [438, 329, 1.0093775236632159],
        [439, 329, 0.030870276865616747],
        [439, 330, 0.9554798990737882],
        [440, 330, 0.5447799016825403],
        [440, 331, 0.4413698205263152],
        [441, 331, 1.0132519683584005],
        [442, 332, 1.009482278147551],
        [443, 332, 0.03125040953717358],
        [443, 333, 0.9549520777754482],
        [444, 333, 0.5453266469100869],
        [444, 334, 0.4406642203630321],
        [445, 334, 1.0133967435791398],
        [446, 335, 1.009594333186143],
        [447, 335, 0.031658129272365214],
        [447, 336, 0.9543865208053518],
        [448, 336, 0.5459108623998897],
        [448, 337, 0.43991115459682073],
        [449, 337, 1.0135504341086077],
        [450, 338, 1.0097135471594447],
        [451, 338, 0.03209313328990995],
        [451, 339, 0.9537837564264052],
        [452, 339, 0.5465320254328632],
        [452, 340, 0.4391113726049666],
        [453, 340, 1.013712798432744],
        [454, 341, 1.009839778736762],
        [455, 341, 0.03255513055252836],
        [455, 342, 0.9531443018899375],
        [456, 342, 0.5471896241467579],
        [456, 343, 0.43826561357805704],
        [457, 343, 1.0138835933177033],
        [458, 344, 1.0099728868869051],
        [459, 344, 0.033043841357819334],
        [459, 345, 0.9524686637453139],
        [460, 345, 0.5478831572348231],
        [460, 346, 0.437374606734874],
        [461, 346, 1.0140625740178375],
        [462, 347, 1.0101127308880269],
        [463, 347, 0.03355899695286791],
        [463, 348, 0.9517573381261256],
        [464, 348, 0.5486121336621822],
        [464, 349, 0.436439071532636],
        [465, 349, 1.0142494944714182],
        [466, 350, 1.0102591703335964],
        [467, 350, 0.03410033916008615],
        [467, 351, 0.9510108110386514],
        [468, 351, 0.5493760723833191],
        [468, 352, 0.4354597178717026],
        [469, 352, 1.0144441074918717],
        [470, 353, 1.0104120651366326],
        [471, 353, 0.03466762001996195],
        [471, 354, 0.9502295586328896],
        [472, 354, 0.5501745020753853],
        [472, 355, 0.43443724629963687],
        [473, 355, 1.0146461649465606],
        [474, 356, 1.0105712755316636],
        [475, 356, 0.035260601448092795],
        [475, 357, 0.9494140474694148],
        [476, 357, 0.5510069608761691],
        [476, 358, 0.43337234820709825],
        [477, 358, 1.0148554179311553],
        [478, 359, 1.0107366620751033],
        [479, 359, 0.035879054907258415],
        [479, 360, 0.9485647347731454],
        [480, 360, 0.5518729961339426],
        [480, 361, 0.4322657060211073],
        [481, 361, 1.0150716169344107],
        [482, 362, 1.0109080856433987],
        [483, 362, 0.036522761091017805],
        [483, 363, 0.9476820686815849],
        [484, 363, 0.5527721641646695],
        [484, 364, 0.4311179933933358],
        [485, 364, 1.0152945119966836],
        [486, 365, 1.011085407429963],
        [487, 365, 0.037191509621709105],
        [487, 366, 0.9467664884832998],
        [488, 366, 0.5537040300164661],
        [488, 367, 0.42992987538427074],
        [489, 367, 1.0155238528614574],
        [490, 368, 1.0112684889404733],
        [491, 368, 0.03788509876006132],
        [491, 369, 0.945818424848663],
        [492, 369, 0.5546681672409077],
        [492, 370, 0.42870200864543534],
        [493, 370, 1.015759389119438],
        [494, 371, 1.0114571919861517],
        [495, 371, 0.038603335123549486],
        [495, 372, 0.9448383000574974],
        [496, 372, 0.5556641576735553],
        [496, 373, 0.42743504159139284],
        [497, 373, 1.016000870349307],
        [498, 374, 1.0116513786769457],
        [499, 374, 0.03934603342038135],
        [499, 375, 0.9438265282100843],
        [500, 375, 0.556691591222498],
        [500, 376, 0.42612961457530607],
        [501, 376, 1.0162480462474877],
        [502, 377, 1.011850911412824],
        [503, 377, 0.0401130161915153],
        [503, 378, 0.9427835154401112],
        [504, 378, 0.5577500656591832],
        [504, 379, 0.42478636005357434],
        [505, 379, 1.0165006667574357],
        [506, 380, 1.012055652873517],
        [507, 380, 0.04090411356002747],
        [507, 381, 0.9417096601187289],
        [508, 381, 0.5588391864205529],
        [508, 382, 0.4234059027505881],
        [509, 382, 1.016758482190165],
        [510, 383, 1.0122654660085202],
        [511, 383, 0.04171916299559172],
        [511, 384, 0.940605353048487],
        [512, 384, 0.5599585664146272],
        [512, 385, 0.4219888598177451],
        [513, 385, 1.0170212433404524],
        [514, 386, 1.0124802140252198],
        [515, 386, 0.04255800908365318],
        [515, 387, 0.9394709776545362],
        [516, 387, 0.5611078258344457],
        [516, 388, 0.42053584098827806],
        [517, 388, 1.0172887015980372],
        [518, 389, 1.0126997603766286],
        [519, 389, 0.04342050330548295],
        [519, 390, 0.9383069101697904],
        [520, 390, 0.5622865919744513],
        [520, 391, 0.4190474487280153],
        [521, 391, 1.0175606090547666],
        [522, 392, 1.0129239687479124],
        [523, 392, 0.044306503823998804],
        [523, 393, 0.9371135198133816],
        [524, 393, 0.5634944990567509],
        [524, 394, 0.41752427838399275],
        [525, 394, 1.017836718605313],
        [526, 395, 1.0131527030429122],
        [527, 395, 0.04521587528078427],
        [527, 396, 0.9358911689630978],
        [528, 396, 0.5647311880602439],
        [528, 397, 0.4159669183258934],
        [529, 397, 1.0181167840454461],
        [530, 398, 1.013385827369556],
        [531, 398, 0.04614848859869256],
        [531, 399, 0.9346402133241121],
        [532, 399, 0.5659963065530312],
        [532, 400, 0.41437595008823225],
        [533, 400, 1.0184005601646522],
        [534, 401, 1.0136232060250132],
        [535, 401, 0.04710422079259773],
        [535, 402, 0.9333610020906034],
        [536, 402, 0.5672895085344858],
        [536, 403, 0.41275194850334485],
        [537, 403, 1.0186878028359048],
        [538, 404, 1.0138647034793364],
        [539, 404, 0.048082954782625906],
        [539, 405, 0.9320538781067357],
        [540, 405, 0.5686104542795039],
        [540, 406, 0.4110954818363832],
        [541, 406, 1.0189782691001303],
        [542, 407, 1.0141101843606544],
        [543, 407, 0.04908457922335384],
        [543, 408, 0.9307191780153855],
        [544, 408, 0.5699588101870642],
        [544, 409, 0.40940711191046436],
        [545, 409, 1.0192717172488233],
        [546, 410, 1.0143595134378742],
        [547, 410, 0.05010898832967291],
        [547, 411, 0.9293572324099554],
        [548, 411, 0.571334248633412],
        [548, 412, 0.4076873942350095],
        [549, 412, 1.0195679069010588],
        [550, 413, 1.014612555604275],
        [551, 413, 0.05115608171422347],
        [551, 414, 0.9279683659767549],
        [552, 414, 0.5727364478324755],
        [552, 415, 0.4059368781231612],
        [553, 415, 1.0198665990790994],
        [554, 416, 1.0148691758602966],
        [555, 416, 0.05222576422885553],
        [555, 417, 0.9265528976348417],
        [556, 417, 0.5741650916958022],
        [556, 418, 0.40415610681371494],
        [557, 418, 1.0201675562784311],
        [558, 419, 1.0151292392959954],
        [559, 419, 0.05331794581129548],
        [559, 420, 0.9251111406735011],
        [560, 420, 0.575619869698764],
        [560, 421, 0.40234561758289383],
        [561, 421, 1.020470542537326],
        [562, 422, 1.0153926110734461],
        [563, 422, 0.05443254133751677],
        [563, 423, 0.9236434028815992],
        [564, 423, 0.577100476753225],
        [564, 424, 0.40050594185671334],
        [565, 424, 1.0207753235006762],
        [566, 425, 1.0156591564087798],
        [567, 425, 0.05556947047932675],
        [567, 426, 0.9221499866777003],
        [568, 426, 0.5786066130792553],
        [568, 427, 0.3986376053171075],
        [569, 427, 1.021081666483685],
        [570, 428, 1.0159287405542117],
        [571, 428, 0.056728657567230105],
        [571, 429, 0.9206311892316345],
        [572, 429, 0.5801379840824749],
        [572, 430, 0.3967411280111777],
        [573, 430, 1.0213893405291132],
        [574, 431, 1.016201228779567],
        [575, 431, 0.057910031456259455],
        [575, 432, 0.9190873025878152],
        [576, 432, 0.5816943002369833],
        [576, 433, 0.39481702444623007],
        [577, 433, 1.021698116466727],
        [578, 434, 1.0164764863538518],
        [579, 434, 0.05911352539724152],
        [579, 435, 0.9175186137811212],
        [580, 435, 0.5832752769689779],
        [580, 436, 0.3928658036922941],
        [581, 436, 1.0220077669657777],
        [582, 437, 1.0167543785266802],
        [583, 437, 0.06033907691219022],
        [583, 438, 0.9159254049505173],
        [584, 438, 0.5848806345442068],
        [584, 439, 0.3908879694785636],
        [585, 439, 1.022318066586335],
        [586, 440, 1.017034770509633],
        [587, 440, 0.061586627674206584],
        [587, 441, 0.914307953451257],
        [588, 441, 0.58651009795775],
        [588, 442, 0.3888840202832941],
        [589, 442, 1.0226287918300547],
        [590, 443, 1.017317527457434],
        [591, 443, 0.06285612338957339],
        [591, 444, 0.9126665319603182],
        [592, 444, 0.5881633968320044],
        [592, 445, 0.3868544494242516],
        [593, 445, 1.0229397211858324],
        [594, 446, 1.0176025144493452],
        [595, 446, 0.06414751368695158],
        [595, 447, 0.9110014085827639],
        [596, 447, 0.5898402653081352],
        [596, 448, 0.3847997451452973],
        [597, 448, 1.0232506351759092],
        [598, 449, 1.0178895964699735],
        [599, 449, 0.06546075200505637],
        [599, 450, 0.9093128469516464],
        [600, 450, 0.5915404419502857],
        [600, 451, 0.38272039070347513],
        [601, 451, 1.0235613163962847],
        [602, 452, 1.018178638390636],
        [603, 452, 0.06679579548876291],
        [603, 453, 0.9076011063291527],
        [604, 453, 0.5932636696450677],
        [604, 454, 0.3806168644453139],
        [605, 454, 1.0238715495601471],
        [606, 455, 1.0184695049504477],
        [607, 455, 0.06815260488510425],
        [607, 456, 0.9058664416991429],
        [608, 456, 0.5950096955107654],
        [608, 457, 0.37848963988927037],
        [609, 457, 1.024181121533852],
        [610, 458, 1.0187620607370533],
        [611, 458, 0.06953114444294146],
        [611, 459, 0.9041091038666588],
        [612, 459, 0.5967782707982764],
        [612, 460, 0.3763391858013562],
        [613, 460, 1.0244898213757605],
        [614, 461, 1.0190561701684775],
        [615, 461, 0.07093138181829654],
        [615, 462, 0.9023293395404434],
        [616, 462, 0.5985691508103589],
        [616, 463, 0.37416596626748977],
        [617, 463, 1.0247974403689852],
        [618, 464, 1.0193516974735164],
        [619, 464, 0.07235328797779521],
        [619, 465, 0.9005273914292568],
        [620, 465, 0.6003820948062436],
        [620, 466, 0.37197044076689306],
        [621, 466, 1.0251037720559506],
        [622, 467, 1.0196485066733956],
        [623, 467, 0.07379683710904351],
        [623, 468, 0.8987034983230944],
        [624, 468, 0.6022168659211814],
        [624, 469, 0.3697530642404009],
        [625, 469, 1.025408612268551],
        [626, 470, 1.01994646156273],
        [627, 470, 0.07526200653052777],
        [627, 471, 0.8968578951803935],
        [628, 471, 0.6040732310832857],
        [628, 472, 0.36751428715382667],
        [629, 472, 1.0257117591594511],
        [630, 473, 1.0202454256910738],
        [631, 473, 0.07674877660715493],
        [631, 474, 0.8949908132065928],
        [632, 474, 0.6059509609308075],
        [632, 475, 0.3652545555682938],
        [633, 475, 1.0260130132278693],
        [634, 476, 1.0205452623441595],
        [635, 476, 0.07825713066499564],
        [635, 477, 0.8931024799348216],
        [636, 477, 0.6078498297369068],
        [636, 478, 0.36297431119783957],
        [637, 478, 1.026312177347325],
        [638, 479, 1.0208458345252258],
        [639, 479, 0.07978705490923481],
        [639, 480, 0.8911931193041005],
        [640, 480, 0.6097696153313106],
        [640, 481, 0.360673991471839],
        [641, 481, 1.0266090567901067],
        [642, 482, 1.021147004936792],
        [643, 482, 0.08133853834681559],
        [643, 483, 0.8892629517341233],
        [644, 483, 0.6117100990244927],
        [644, 484, 0.3583540295921792],
        [645, 484, 1.0269034592511874],
        [646, 485, 1.0214486359623245],
        [647, 485, 0.08291157270803175],
        [647, 486, 0.8873121941972261],
        [648, 486, 0.6136710655396947],
        [648, 487, 0.35601485458732646],
        [649, 487, 1.0271951948700204],
        [650, 488, 1.0217505896477503],
        [651, 488, 0.08450615237016054],
        [651, 489, 0.885341060291742],
        [652, 489, 0.6156523029400911],
        [652, 490, 0.3536568913681695],
        [653, 490, 1.0274840762511013],
        [654, 491, 1.022052727683594],
        [655, 491, 0.08612227428601159],
        [655, 492, 0.8833497603088218],
        [656, 492, 0.6176536025590085],
        [656, 493, 0.3512805607832744],
        [657, 493, 1.02776991848203],
        [658, 494, 1.0223549113867765],
        [659, 494, 0.08775993791161714],
        [659, 495, 0.8813385013049766],
        [660, 495, 0.6196747589336273],
        [660, 496, 0.34888627966024516],
        [661, 496, 1.028052539155018],
        [662, 497, 1.0226570016825074],
        [663, 497, 0.08941914513388247],
        [663, 498, 0.8793074871648813],
        [664, 498, 0.621715569739104],
        [664, 499, 0.346474460866357],
        [665, 499, 1.0283317583791294],
        [666, 500, 1.0229588590871557],
        [667, 500, 0.09109990020637701],
        [667, 501, 0.8772569186645972],
        [668, 501, 0.6237758357289777],
        [668, 502, 0.34404551334349676],
        [669, 502, 1.0286073987990987],
        [670, 503, 1.023260343690056],
        [671, 503, 0.09280220968027517],
        [671, 504, 0.8751869935378795],
        [672, 504, 0.6258553606671395],
        [672, 505, 0.3415998421603758],
        [673, 505, 1.0288792856085094],
        [674, 506, 1.0235613151361742],
        [675, 506, 0.09452608233896752],
        [675, 507, 0.8730979065358732],
        [676, 507, 0.6279539512706841],
        [676, 508, 0.33913784855416224],
        [677, 508, 1.0291472465628844],
        [678, 509, 1.0238616326091752],
        [679, 509, 0.09627152913686766],
        [679, 510, 0.8709898494841083],
        [680, 510, 0.6300714171530707],
        [680, 511, 0.3366599299694516],
        [681, 511, 1.0294111119920568],
        [682, 512, 1.0241611548135297],
        [683, 512, 0.09803856313307117],
        [683, 513, 0.8688630113461538],
        [684, 513, 0.6322075707612916],
        [684, 514, 0.3341664801038121],
        [685, 514, 1.0296707148107829],
        [686, 515, 1.0244597399582411],
        [687, 515, 0.09982719943517422],
        [687, 516, 0.8667175782751595],
        [688, 516, 0.6343622273238361],
        [688, 517, 0.33165788894132453],
        [689, 517, 1.029925890529174],
        [690, 518, 1.024757245739534],
        [691, 518, 0.10163745513498708],
        [691, 519, 0.864553733672022],
        [692, 519, 0.6365352047963319],
        [692, 520, 0.32913454279236454],
        [693, 520, 1.0301764772610114],
        [694, 521, 1.0250535293244536],
        [695, 521, 0.10346934925456013],
        [695, 522, 0.8623716582378126],
        [696, 522, 0.6387263238040831],
        [696, 523, 0.32659682433041565],
        [697, 523, 1.0304223157317631],
        [698, 524, 1.0253484473338592],
        [699, 524, 0.10532290268142636],
        [699, 525, 0.8601715300305955],
        [700, 525, 0.6409354075949926],
        [700, 526, 0.32404511262442137],
        [701, 526, 1.0306632492858765],
        [702, 527, 1.0256418558269649],
        [703, 527, 0.10719813812199533],
        [703, 528, 0.8579535245094766],
        [704, 528, 0.6431622819855923],
        [704, 529, 0.3214797831731655],
        [705, 529, 1.0308991238920382],
        [706, 530, 1.0259336102845216],
        [707, 530, 0.10909508003982304],
        [707, 531, 0.855717814591042],
        [708, 531, 0.6454067753119441],
        [708, 532, 0.3189012079363341],
        [709, 532, 1.03112978814904],
        [710, 533, 1.0262235655929648],
        [711, 533, 0.11101375459950885],
        [711, 534, 0.8534645706974212],
        [712, 534, 0.6476687183847731],
        [712, 535, 0.31630975536452444],
        [713, 535, 1.0313550932895121],
        [714, 536, 1.0265115760290215],
        [715, 536, 0.11295418962138112],
        [715, 537, 0.8511939607995829],
        [716, 537, 0.6499479444348513],
        [716, 538, 0.3137057904341974],
        [717, 538, 1.0315748931821125],
        [718, 539, 1.0267974952437684],
        [719, 539, 0.11491641452111552],
        [719, 540, 0.8489061504692988],
        [720, 540, 0.6522442890739327],
        [720, 541, 0.3110896746693046],
        [721, 541, 1.0317890443354898],
        [722, 542, 1.027081176247435],
        [723, 542, 0.11690046026072583],
        [723, 543, 0.8466013029223681],
        [724, 543, 0.6545575902471419],
        [724, 544, 0.3084617661720711],
        [725, 544, 1.0319974058989068],
        [726, 545, 1.0273624713942857],
        [727, 545, 0.11890635929917114],
        [727, 546, 0.8442795790631381],
        [728, 546, 0.6568876881880987],
        [728, 547, 0.3058224196480645],
        [729, 547, 1.0321998396634169],
        [730, 548, 1.0276412323675237],
        [731, 548, 0.12093414553884717],
        [731, 549, 0.8419411375296247],
        [732, 549, 0.6592344253774453],
        [732, 550, 0.3031719864317822],
        [733, 550, 1.0323962100616533],
        [734, 551, 1.027917310164898],
        [735, 551, 0.12298385427920393],
        [735, 552, 0.8395861347312832],
        [736, 552, 0.661597646501151],
        [736, 553, 0.30051081451364153],
        [737, 553, 1.0325863841657408],
        [738, 554, 1.028190555083932],
        [739, 554, 0.12505552216817234],
        [739, 555, 0.8372147248951822],
        [740, 555, 0.6639771984076539],
        [740, 556, 0.2978392485576317],
        [741, 556, 1.0327702316879357],
        [742, 557, 1.0284608167076257],
        [743, 557, 0.12714918714905468],
        [743, 558, 0.8348270601054527],
        [744, 558, 0.6663729300704698],
        [744, 559, 0.2951576299293991],
        [745, 559, 1.0329476249762861],
        [746, 560, 1.0287279438905246],
        [747, 560, 0.12926488841857217],
        [747, 561, 0.8324232903405301],
        [748, 561, 0.6687846925454237],
        [748, 562, 0.2924662967182933],
        [749, 562, 1.0331184390116956],
        [750, 563, 1.0289917847447467],
        [751, 563, 0.13140266637549056],
        [751, 564, 0.8300035635173267],
        [752, 564, 0.6712123389365675],
        [752, 565, 0.28976558374944045],
        [753, 565, 1.033282551406384],
        [754, 566, 1.0292521866268258],
        [755, 566, 0.13356256257828694],
        [755, 567, 0.8275680255195722],
        [756, 567, 0.6736557243576808],
        [756, 568, 0.28705582261488644],
        [757, 568, 1.0334398423957492],
        [758, 569, 1.0295089961237516],
        [759, 569, 0.1357446196959754],
        [759, 570, 0.8251168202441111],
        [760, 570, 0.6761147058925864],
        [760, 571, 0.2843373416864493],
        [761, 571, 1.0335901948361186],
        [762, 572, 1.0297620590403478],
        [763, 572, 0.13794888146102224],
        [763, 573, 0.822650089632257],
        [764, 573, 0.6785891425651428],
        [764, 574, 0.2816104661359854],
        [765, 574, 1.0337334941973482],
        [766, 575, 1.0300112203862977],
        [767, 575, 0.1401753926301894],
        [767, 576, 0.8201679737037143],
        [768, 576, 0.6810788952992894],
        [768, 577, 0.278875517953921],
        [769, 577, 1.0338696285566522],
        [770, 578, 1.0302563243634062],
        [771, 578, 0.14242419893016717],
        [771, 579, 0.8176706105975015],
        [772, 579, 0.6835838268889712],
        [772, 580, 0.2761328159639002],
        [773, 580, 1.0339984885922306],
        [774, 581, 1.0304972143534852],
        [775, 581, 0.14469534702456693],
        [775, 582, 0.8151581365963325],
        [776, 582, 0.6861038019600981],
        [776, 583, 0.2733826758448351],
        [777, 583, 1.0341199675739228],
        [778, 584, 1.0307337329063364],
        [779, 584, 0.14698888445850505],
        [779, 585, 0.8126306861670012],
        [780, 585, 0.6886386869453004],
        [780, 586, 0.2706254101402667],
        [781, 586, 1.0342339613562985],
        [782, 587, 1.0309657217274584],
        [783, 587, 0.14930485962229872],
        [783, 588, 0.810088391991206],
        [784, 588, 0.6911883500416512],
        [784, 589, 0.267861328280309],
        [785, 589, 1.0343403683692496],
        [786, 590, 1.0311930216672842],
        [787, 590, 0.1516433217043255],
        [787, 591, 0.80753138499415],
        [788, 591, 0.6937526611907388],
        [788, 592, 0.2650907365900638],
        [789, 592, 1.0344390896084676],
        [790, 593, 1.0314154727094134],
        [791, 593, 0.1540043206504027],
        [791, 594, 0.8049597943767033],
        [792, 594, 0.6963314920402311],
        [792, 595, 0.2623139383094437],
        [793, 595, 1.034530028625162],
        [794, 596, 1.0316329139598897],
        [795, 596, 0.1563879071152346],
        [795, 597, 0.8023737476471726],
        [796, 597, 0.6989247159176777],
        [796, 598, 0.25953123360660696],
        [797, 598, 1.0346130915153564],
        [798, 599, 1.0318451836365417],
        [799, 599, 0.15879413242528773],
        [799, 600, 0.799773370648628],
        [800, 600, 0.7015322078013413],
        [800, 601, 0.256742919587031],
        [801, 601, 1.0346881869094755],
        [802, 602, 1.0320521190584917],
        [803, 602, 0.16122304853347555],
        [803, 603, 0.7971587875884961],
        [804, 603, 0.7041538442893039],
        [804, 604, 0.2539492903120581],
        [805, 604, 1.0347552259598483],
        [806, 605, 1.032253556636297],
        [807, 605, 0.16367470797552194],
        [807, 606, 0.7945301210672343],
        [808, 606, 0.7067895035746306],
        [808, 607, 0.2511506368077842],
        [809, 607, 1.0348141223290412],
        [810, 608, 1.0324493318619021],
        [811, 608, 0.16614916382632547],
        [811, 609, 0.7918874921076472],
        [812, 609, 0.709439065413448],
        [812, 610, 0.24834724708249672],
        [813, 610, 1.0348647921767888],
        [814, 611, 1.032639279299876],
        [815, 611, 0.1686464696616927],
        [815, 612, 0.7892310201754584],
        [816, 612, 0.7121024111062217],
        [816, 613, 0.24553940613187852],
        [817, 613, 1.0349071541468273],
        [818, 614, 1.0328232325774014],
        [819, 614, 0.17116667951302045],
        [819, 615, 0.7865608232133336],
        [820, 615, 0.7147794234616441],
        [820, 616, 0.24272739595679857],
        [821, 616, 1.0349411293537],
        [822, 617, 1.0330010243763053],
        [823, 617, 0.17370984782335191],
        [823, 618, 0.7838770176637189],
        [824, 618, 0.7174699867799718],
        [824, 619, 0.23991149556876706],
        [825, 619, 1.0349666413686411],
        [826, 620, 1.033172486424039],
        [827, 620, 0.17627602940857415],
        [827, 621, 0.7811797184924586],
        [828, 621, 0.720173986819918],
        [828, 622, 0.23709198101021747],
        [829, 622, 1.0349836162040225],
        [830, 623, 1.0333374494861536],
        [831, 623, 0.1788652794118951],
        [831, 624, 0.7784690392157592],
        [832, 624, 0.7228913107823544],
        [832, 625, 0.234269125354749],
        [833, 625, 1.0349919822996723],
        [834, 626, 1.0334957433581187],
        [835, 626, 0.18147765326305537],
        [835, 627, 0.7757450919251534],
        [836, 627, 0.7256218472813651],
        [836, 628, 0.23144319872166874],
        [837, 628, 1.0349916705072433],
        [838, 629, 1.033647196858036],
        [839, 629, 0.1841132066386375],
        [839, 630, 0.773007987305413],
        [840, 630, 0.7283654863202004],
        [840, 631, 0.22861446829229304],
        [841, 631, 1.0349826140730403],
        [842, 632, 1.033791637819688],
        [843, 632, 0.1867719954109858],
        [843, 633, 0.7702578346682248],
        [844, 633, 0.7311221192693971],
        [844, 634, 0.2257831983137577],
        [845, 634, 1.0349647486235953],
        [846, 635, 1.0339288930859631],
        [847, 635, 0.18945407561392777],
        [847, 636, 0.7674947419659374],
        [848, 636, 0.7338916388459672],
        [848, 637, 0.22294965011006523],
        [849, 637, 1.0349380121480094],
        [850, 638, 1.0342420464149167],
        [851, 638, 0.1924281237940313],
        [851, 639, 0.5378425839134362],
        [852, 639, 0.5202524171708031],
        [852, 640, 0.4568109772775498],
        [852, 641, 0.05199677850209752],
        [853, 640, 0.24351254102567055],
        [853, 641, 0.5225687624093359],
        [853, 642, 0.2921493228893563],
        [854, 642, 0.25538328243481595],
        [854, 643, 0.5241438210153896],
        [854, 644, 0.23257172527298814],
        [855, 643, 0.011987787701546808],
        [855, 644, 0.3172219958151092],
        [855, 645, 0.4868674616302827],
        [855, 646, 0.176468024136203],
        [856, 645, 0.07357769424953754],
        [856, 646, 0.38294232266815553],
        [856, 647, 0.4259205416014665],
        [856, 648, 0.11753224171517974],
        [857, 647, 0.13246196705929972],
        [857, 648, 0.4398303708699065],
        [857, 649, 0.36708371923835004],
        [857, 650, 0.06067586883292038],
        [858, 649, 0.18926719214302565],
        [858, 650, 0.4946697651421086],
        [858, 651, 0.3040061179704405],
        [858, 652, 0.005602736230038195],
        [859, 651, 0.23906249586178907],
        [859, 652, 0.5231149368578739],
        [859, 653, 0.2495840468006932],
        [860, 653, 0.2897970473112013],
        [860, 654, 0.5026442283960142],
        [860, 655, 0.20274559579570214],
        [861, 654, 0.04664315619110009],
        [861, 655, 0.3473240465998149],
        [861, 656, 0.4526192727121032],
        [861, 657, 0.1523595035438806],
        [862, 656, 0.09766699822939251],
        [862, 657, 0.3969699779916487],
        [862, 658, 0.40188113292822186],
        [862, 659, 0.1034820659161816],
        [863, 658, 0.14649823031506354],
        [863, 659, 0.44395391725661004],
        [863, 660, 0.3530826952522148],
        [863, 661, 0.056517279244449437],
        [864, 660, 0.193417537810633],
        [864, 661, 0.48905272813711814],
        [864, 662, 0.30196784607077015],
        [864, 663, 0.011088189502860925],
        [865, 662, 0.235165441654809],
        [865, 663, 0.5161755064939912],
        [865, 664, 0.25593745749264785],
        [866, 664, 0.27598857145168865],
        [866, 665, 0.5055165820237347],
        [866, 666, 0.21733399798014585],
        [867, 665, 0.03142691535889764],
        [867, 666, 0.321995701601107],
        [867, 667, 0.4677769922252197],
        [867, 668, 0.17692400337387545],
        [868, 667, 0.07312870986769164],
        [868, 668, 0.3630952451007391],
        [868, 669, 0.4264378437134144],
        [868, 670, 0.13731285791147696],
        [869, 669, 0.11270032695167025],
        [869, 670, 0.4009509624326517],
        [869, 671, 0.38688927555227676],
        [869, 672, 0.09946833663506985],
        [870, 671, 0.15050630725355646],
        [870, 672, 0.43706477714430675],
        [870, 673, 0.34910378546507886],
        [870, 674, 0.06336347754327785],
        [871, 673, 0.1865736616624162],
        [871, 674, 0.4714631653468664],
        [871, 675, 0.3125696686315781],
        [871, 676, 0.028869775846049314],
        [872, 675, 0.22058655357283705],
        [872, 676, 0.502393455771382],
        [872, 677, 0.27458473006488804],
        [873, 677, 0.24983886475629993],
        [873, 678, 0.5137748593109537],
        [873, 679, 0.24315322539257223],
        [874, 678, 0.0036240101488931717],
        [874, 679, 0.2812413419420975],
        [874, 680, 0.49584386088869215],
        [874, 681, 0.2153614227018543],
        [875, 680, 0.034735500335029305],
        [875, 681, 0.3144060917430617],
        [875, 682, 0.46485314373790926],
        [875, 683, 0.18595981453922283],
        [876, 682, 0.0641063484572785],
        [876, 683, 0.34219859962945964],
        [876, 684, 0.43549740951782173],
        [876, 685, 0.15817234633893226],
        [877, 684, 0.091864261548934],
        [877, 685, 0.3683988258245694],
        [877, 686, 0.407752916631107],
        [877, 687, 0.13197572785525458],
        [878, 686, 0.11803256264694018],
        [878, 687, 0.3930296465168421],
        [878, 688, 0.3815964769154389],
        [878, 689, 0.10734720976073055],
        [879, 688, 0.1426340315995158],
        [879, 689, 0.4161134070872291],
        [879, 690, 0.35700543857338174],
        [879, 691, 0.08426456699687354],
        [880, 690, 0.16569092182506315],
        [880, 691, 0.43767193845249674],
        [880, 692, 0.33395766972405766],
        [880, 693, 0.06270608273067858],
        [881, 692, 0.1872249764612122],
        [881, 693, 0.457726572814142],
        [881, 694, 0.3124315425508366],
        [881, 695, 0.04265053289025597],
        [882, 694, 0.20725744392861123],
        [882, 695, 0.47629815883858434],
        [882, 696, 0.29240591801936916],
        [882, 697, 0.024077171256560802],
        [883, 696, 0.22580909293436022],
        [883, 697, 0.49340707629100294],
        [883, 698, 0.272739666255128],
        [883, 699, 0.006906252371233933],
        [884, 698, 0.24190643067177103],
        [884, 699, 0.5047275543873398],
        [884, 700, 0.2549459812508028],
        [885, 700, 0.2567100539467806],
        [885, 701, 0.5031577036963546],
        [885, 702, 0.24065881914660317],
        [886, 701, 0.008634717813202674],
        [886, 702, 0.27224949572145724],
        [886, 703, 0.49094674236787206],
        [886, 704, 0.22719544196570912],
        [887, 703, 0.02292373131969297],
        [887, 704, 0.28597629401801355],
        [887, 705, 0.47672398599653515],
        [887, 706, 0.2143533208320832],
        [888, 705, 0.035751602096786475],
        [888, 706, 0.29743237559552355],
        [888, 707, 0.46390276826706217],
        [888, 708, 0.20289630196958544],
        [889, 707, 0.04719579903029385],
        [889, 708, 0.3075210742305127],
        [889, 709, 0.45246460115847775],
        [889, 710, 0.19280622955805915],
        [890, 709, 0.057274491299496445],
        [890, 710, 0.3162602301176305],
        [890, 711, 0.4423913913890736],
        [890, 712, 0.18406533389761395],
        [891, 711, 0.0660054606502899],
        [891, 712, 0.3236673045470217],
        [891, 713, 0.43366542899845073],
        [891, 714, 0.17665622026124392],
        [892, 713, 0.07340611260620647],
        [892, 714, 0.3297593908476435],
        [892, 715, 0.4262693763198494],
        [892, 716, 0.17056185812791913],
        [893, 715, 0.07949348729590157],
        [893, 716, 0.33455322495703466],
        [893, 717, 0.42018625732795906],
        [893, 718, 0.16576557078065143],
        [894, 717, 0.0842842699121286],
        [894, 718, 0.3380651956328206],
        [894, 719, 0.41539944734620887],
        [894, 720, 0.16225102525634236],
        [895, 719, 0.0877948008176482],
        [895, 720, 0.3403113543186734],
        [895, 721, 0.41189266310148215],
        [895, 722, 0.1600022226324315],
        [896, 721, 0.09004108530992379],
        [896, 722, 0.3413074246800344],
        [896, 723, 0.4096499531105413],
        [896, 724, 0.15900348863810745],
        [897, 723, 0.0910388030604564],
        [897, 724, 0.341068811820455],
        [897, 725, 0.4086556883871424],
        [897, 726, 0.15923946457791555],
        [898, 725, 0.09080331723824445],
        [898, 726, 0.33961061119156805],
        [898, 727, 0.40889455345709996],
        [898, 728, 0.16069509855546693],
        [899, 727, 0.08934968333179105],
        [899, 728, 0.33694761720865024],
        [899, 729, 0.41035153766953336],
        [899, 730, 0.1633556369851302],
        [900, 729, 0.08669265767999552],
        [900, 730, 0.33309433158306806],
        [900, 731, 0.41301192679237225],
        [900, 732, 0.16720661638248935],
        [901, 731, 0.08284670572359325],
        [901, 732, 0.32806497138102175],
        [901, 733, 0.41686129488304347],
        [901, 734, 0.17223385542154263],
        [902, 733, 0.0778260099865808],
        [902, 734, 0.3218734768206457],
        [902, 735, 0.421885496422382],
        [902, 736, 0.17842344724960524],
        [903, 735, 0.07164447779930824],
        [903, 736, 0.31453351881588426],
        [903, 737, 0.42807065870301164],
        [903, 738, 0.185761752049803],
        [904, 737, 0.06431574877136567],
        [904, 738, 0.3060585062772846],
        [904, 739, 0.435403174462235],
        [904, 740, 0.19423538984244326],
        [905, 739, 0.05585320202451507],
        [905, 740, 0.29646159317816856],
        [905, 741, 0.4438696947508069],
        [905, 742, 0.20383123351642937],
        [906, 741, 0.04626996319383157],
        [906, 742, 0.2857556853951481],
        [906, 743, 0.4534571220289279],
        [906, 744, 0.21453640208174513],
        [907, 743, 0.03557891120608933],
        [907, 744, 0.27395344733160587],
        [907, 745, 0.4640838862781736],
        [907, 746, 0.2259711147745072],
        [908, 745, 0.02378916236694485],
        [908, 746, 0.26064383557298154],
        [908, 747, 0.4744097020055178],
        [908, 748, 0.23741469023048611],
        [908, 749, 0.0029874664482454345],
        [909, 747, 0.010888485342882084],
        [909, 748, 0.24524012825579347],
        [909, 749, 0.47705262348683797],
        [909, 750, 0.25146343127990345],
        [909, 751, 0.018030374036361534],
        [910, 750, 0.23051594568994063],
        [910, 751, 0.4659638155007443],
        [910, 752, 0.26789265476733026],
        [910, 753, 0.034103962104678205],
        [911, 752, 0.2157780537828917],
        [911, 753, 0.4490488012027463],
        [911, 754, 0.28394240197843773],
        [911, 755, 0.051207169174446954],
        [912, 754, 0.19869680451466967],
        [912, 755, 0.4309201309554197],
        [912, 756, 0.3010279740476113],
        [912, 757, 0.06933596927309439],
        [913, 756, 0.18059146729117878],
        [913, 757, 0.4117775174928008],
        [913, 758, 0.3191380672559441],
        [913, 759, 0.08847923890660256],
        [914, 758, 0.16147315955443303],
        [914, 759, 0.3916318997027402],
        [914, 760, 0.33826157637971177],
        [914, 761, 0.10862604895508292],
        [915, 760, 0.14135280401108383],
        [915, 761, 0.37049402581791996],
        [915, 762, 0.35838758963377015],
        [915, 763, 0.12976565972904766],
        [916, 762, 0.12024113359574008],
        [916, 763, 0.34837445826725],
        [916, 764, 0.3795053837685538],
        [916, 765, 0.15188751617588445],
        [917, 764, 0.0981486962833266],
        [917, 765, 0.32528357838026745],
        [917, 766, 0.40160441931520835],
        [917, 767, 0.17498124323033803],
        [918, 766, 0.07508585975635881],
        [918, 767, 0.30123159095005636],
        [918, 768, 0.42467433597326765],
        [918, 769, 0.19903664130457108],
        [919, 768, 0.05106281593203439],
        [919, 769, 0.2762285286588279],
        [919, 770, 0.4480441892579001],
        [919, 771, 0.22091817857346802],
        [920, 770, 0.02605116606412028],
        [920, 771, 0.24679268601046497],
        [920, 772, 0.4613333588465915],
        [920, 773, 0.24636316696152993],
        [920, 774, 0.026661594315488448],
        [921, 772, 0.00017143112777602207],
        [921, 773, 0.22016507993495968],
        [921, 774, 0.4450006731455823],
        [921, 775, 0.27654268563105877],
        [921, 776, 0.05450703342817279],
        [922, 775, 0.19537707282293476],
        [922, 776, 0.4169980825615683],
        [922, 777, 0.3043455873211709],
        [922, 778, 0.08322496813649063],
        [923, 777, 0.16671893224886847],
        [923, 778, 0.3873911007134449],
        [923, 779, 0.333032487802997],
        [923, 780, 0.11284587069811512],
        [924, 779, 0.1371380798307044],
        [924, 780, 0.3568813039463011],
        [924, 781, 0.36262258254682433],
        [924, 782, 0.14336176762117853],
        [925, 781, 0.10666365535341012],
        [925, 782, 0.32548606626333626],
        [925, 783, 0.39310680323983005],
        [925, 784, 0.17476372572452537],
        [926, 783, 0.07530458232966944],
        [926, 784, 0.2932141772790525],
        [926, 785, 0.4235343782302751],
        [926, 786, 0.20429957725699868],
        [927, 785, 0.04297407877416276],
        [927, 786, 0.2566282342451322],
        [927, 787, 0.44609730979381396],
        [927, 788, 0.23600300007995265],
        [927, 789, 0.023774697332874434],
        [928, 787, 0.00973561058609779],
        [928, 788, 0.22213324067090034],
        [928, 789, 0.4366882593279592],
        [928, 790, 0.27231575108916795],
        [928, 791, 0.058813271383982776],
        [929, 790, 0.1899112794795718],
        [929, 791, 0.4051174305988943],
        [929, 792, 0.3087329260703045],
        [929, 793, 0.09459113946159277],
        [930, 792, 0.15536737862587172],
        [930, 793, 0.36909687837539557],
        [930, 794, 0.3443998634306182],
        [930, 795, 0.13113054742980831],
        [931, 794, 0.11887833690004168],
        [931, 795, 0.3317399346424034],
        [931, 796, 0.3809015150071346],
        [931, 797, 0.1684974582828263],
        [932, 796, 0.08156315084174257],
        [932, 797, 0.29356399783457987],
        [932, 798, 0.4168389957384664],
        [932, 799, 0.2027189344423823],
        [933, 798, 0.043285265762028874],
        [933, 799, 0.2496929999720567],
        [933, 800, 0.44089395742648096],
        [933, 801, 0.24052352812737388],
        [933, 802, 0.03507425254057242],
        [934, 800, 0.0043335535351657515],
        [934, 801, 0.21027601904641954],
        [934, 802, 0.42143856683278325],
        [934, 803, 0.2844016743443022],
        [934, 804, 0.07585590645285804],
        [935, 803, 0.17353832434253885],
        [935, 804, 0.38262846297038483],
        [935, 805, 0.3257498632562316],
        [935, 806, 0.11730189433403454],
        [936, 805, 0.13268775789077444],
        [936, 806, 0.3407519309130924],
        [936, 807, 0.3670972990020704],
        [936, 808, 0.15947396875496164],
        [937, 807, 0.09057464650490143],
        [937, 808, 0.2978183751219168],
        [937, 809, 0.40749895190525254],
        [937, 810, 0.19795010289674397],
        [938, 809, 0.0474866463063797],
        [938, 810, 0.24850494279526708],
        [938, 811, 0.4346436181876547],
        [938, 812, 0.2403211224239381],
        [938, 813, 0.04014881320170647],
        [939, 811, 0.003878639500178961],
        [939, 812, 0.2047038150773143],
        [939, 813, 0.41157455841171137],
        [939, 814, 0.28957529821809164],
        [939, 815, 0.08560320920592149],
        [940, 814, 0.16385621221760913],
        [940, 815, 0.36828320787286745],
        [940, 816, 0.33550406688664397],
        [940, 817, 0.13164677712134118],
        [941, 816, 0.11836297424309958],
        [941, 817, 0.32185871977911545],
        [941, 818, 0.3799973298161782],
        [941, 819, 0.17581896778117206],
        [942, 818, 0.07143918326167292],
        [942, 819, 0.2705029465809176],
        [942, 820, 0.4180894904987747],
        [942, 821, 0.22040151023922497],
        [942, 822, 0.023261093492508676],
        [943, 820, 0.023754358875460287],
        [943, 821, 0.22082957274806367],
        [943, 822, 0.41735892037093947],
        [943, 823, 0.26975946681527463],
        [943, 824, 0.07244459405934162],
        [944, 823, 0.17462856886910824],
        [944, 824, 0.376380003235797],
        [944, 825, 0.32258384746152186],
        [944, 826, 0.12234695850241085],
        [945, 825, 0.12764964491952732],
        [945, 826, 0.32754202842781277],
        [945, 827, 0.3705351976091778],
        [945, 828, 0.17002290467196218],
        [946, 827, 0.07705703864783364],
        [946, 828, 0.27228373423426855],
        [946, 829, 0.4119493110954956],
        [946, 830, 0.21796235075295245],
        [946, 831, 0.024608216085607083],
        [947, 829, 0.025780053026113373],
        [947, 830, 0.2190518649272109],
        [947, 831, 0.41169318411556594],
        [947, 832, 0.27077590916361477],
        [947, 833, 0.07732052594065236],
        [948, 832, 0.1695115580680664],
        [948, 833, 0.36773423672329814],
        [948, 834, 0.3275311475162098],
        [948, 835, 0.13077893984001213],
        [949, 834, 0.11922966876699366],
        [949, 835, 0.31565346594837984],
        [949, 836, 0.37813100062036553],
        [949, 837, 0.17991281790206778],
        [950, 836, 0.06510103041600655],
        [950, 837, 0.25463712967072577],
        [950, 838, 0.4162975451493948],
        [950, 839, 0.23222690463246418],
        [950, 840, 0.043347365043106205],
        [951, 838, 0.010682336294089382],
        [951, 839, 0.20025854636251755],
        [951, 840, 0.3947874901107556],
        [951, 841, 0.2917173663646273],
        [951, 842, 0.09950708368621437],
        [952, 841, 0.14911244770443477],
        [952, 842, 0.3431424199239878],
        [952, 843, 0.3480530442639449],
        [952, 844, 0.15411315971947762],
        [953, 843, 0.0934299055238343],
        [953, 844, 0.2830893937829872],
        [953, 845, 0.3971235804951196],
        [953, 846, 0.20716078374370134],
        [953, 847, 0.020137203526012115],
        [954, 845, 0.036025540013401365],
        [954, 846, 0.22261124110739972],
        [954, 847, 0.40630997808531094],
        [954, 848, 0.2648205963423913],
        [954, 849, 0.07872881878459281],
        [955, 848, 0.16692727676480973],
        [955, 849, 0.35954874836594064],
        [955, 850, 0.328443108696204],
        [955, 851, 0.13751082396144756],
        [956, 850, 0.11152248261980105],
        [956, 851, 0.3006327942159715],
        [956, 852, 0.3829521945790107],
        [956, 853, 0.1916328343080391],
        [956, 854, 0.0076262937092498664],
        [957, 852, 0.0514953905500914],
        [957, 853, 0.2343500090068106],
        [957, 854, 0.41021535649217705],
        [957, 855, 0.25030428726128284],
        [957, 856, 0.06835964516566889],
        [958, 855, 0.17563114080501685],
        [958, 856, 0.3667504924135684],
        [958, 857, 0.31835263030310357],
        [958, 858, 0.1299663000321827],
        [959, 857, 0.11940718803292909],
        [959, 858, 0.3065438045294419],
        [959, 859, 0.37569491987401304],
        [959, 860, 0.18605528589059708],
        [959, 861, 0.004834820768368334],
        [960, 859, 0.05684866493974193],
        [960, 860, 0.2366688077210537],
        [960, 861, 0.4085057240274029],
        [960, 862, 0.24678375999468344],
        [960, 863, 0.06783571840441664],
        [961, 862, 0.17558642045742334],
        [961, 863, 0.36451985113857055],
        [961, 864, 0.3173137388508224],
        [961, 865, 0.13129392160626782],
        [962, 864, 0.11725721455632943],
        [962, 865, 0.3008194332920608],
        [962, 866, 0.37580301677160466],
        [962, 867, 0.19024874552861262],
        [962, 868, 0.011245575393110812],
        [963, 866, 0.05231298976932004],
        [963, 867, 0.23017401181136463],
        [963, 868, 0.40175554736854613],
        [963, 869, 0.2536595659979476],
        [963, 870, 0.07679940668774121],
        [964, 869, 0.16706057585212106],
        [964, 870, 0.35303258747063304],
        [964, 871, 0.3251768586309606],
        [964, 872, 0.14116418004635392],
        [965, 871, 0.10550294433561781],
        [965, 872, 0.28424844668945237],
        [965, 873, 0.38249269088982873],
        [965, 874, 0.2036626805762719],
        [965, 875, 0.02684871916582402],
        [966, 873, 0.03836058116912999],
        [966, 874, 0.21480488879977247],
        [966, 875, 0.389260042863657],
        [966, 876, 0.27095452974310497],
        [966, 877, 0.09504101254228686],
        [967, 876, 0.1502807743955375],
        [967, 877, 0.3328577086192332],
        [967, 878, 0.3421239629983485],
        [967, 879, 0.15918522100542254],
        [968, 878, 0.08474515454977341],
        [968, 879, 0.25820758590913884],
        [968, 880, 0.3938397310124852],
        [968, 881, 0.22523159171338067],
        [968, 882, 0.05190695217080459],
        [969, 880, 0.015820211753405387],
        [969, 881, 0.19007905592596833],
        [969, 882, 0.36921246833932636],
        [969, 883, 0.2980889913883655],
        [969, 884, 0.12132017371569158],
        [970, 883, 0.1247775639085626],
        [970, 884, 0.3015570552958629],
        [970, 885, 0.36552163552482225],
        [970, 886, 0.18684713857492927],
        [970, 887, 0.014284415706242481],
        [971, 885, 0.055013622481818666],
        [971, 886, 0.2263705108609403],
        [971, 887, 0.39186593267986564],
        [971, 888, 0.2561333080985603],
        [971, 889, 0.08592049273991473],
        [972, 888, 0.1575841200944441],
        [972, 889, 0.3370827060887002],
        [972, 890, 0.33284859953655166],
        [972, 891, 0.15390042438231766],
        [973, 890, 0.08972988049108406],
        [973, 891, 0.2590326783958039],
        [973, 892, 0.38812639016604245],
        [973, 893, 0.22348813860080616],
        [973, 894, 0.054161074977768404],
        [974, 892, 0.017081968749935856],
        [974, 893, 0.18740927170107446],
        [974, 894, 0.3625874079443392],
        [974, 895, 0.2990263270079478],
        [974, 896, 0.12613079428882987],
        [975, 895, 0.11819045745461297],
        [975, 896, 0.28905735771716573],
        [975, 897, 0.36789499357104777],
        [975, 898, 0.19628130377264577],
        [975, 899, 0.02735424128922767],
        [976, 897, 0.04494375361325131],
        [976, 898, 0.21330043570426716],
        [976, 899, 0.37902147922066165],
        [976, 900, 0.2697531768133337],
        [976, 901, 0.10241904377888808],
        [977, 900, 0.14130067843136315],
        [977, 901, 0.3150246804904708],
        [977, 902, 0.3480110183643501],
        [977, 903, 0.1725701388645175],
        [977, 904, 0.005966983373903607],
        [978, 902, 0.06884101502859519],
        [978, 903, 0.23351128359258333],
        [978, 904, 0.3898863909020141],
        [978, 905, 0.24593198700119934],
        [978, 906, 0.08224765045066],
        [979, 905, 0.1597942440306211],
        [979, 906, 0.3346851109670727],
        [979, 907, 0.3285973743088808],
        [979, 908, 0.15444027476874822],
        [980, 907, 0.08792661347585409],
        [980, 908, 0.2508895640647832],
        [980, 909, 0.38533070676895603],
        [980, 910, 0.22893712756876922],
        [980, 911, 0.06583953763953361],
        [981, 909, 0.01060737785460527],
        [981, 910, 0.17530908392596897],
        [981, 911, 0.34707093920704996],
        [981, 912, 0.3101853041457825],
        [981, 913, 0.1404924603408273],
        [982, 912, 0.1016482122325276],
        [982, 913, 0.2640331008343238],
        [982, 914, 0.3757885914855772],
        [982, 915, 0.21658719088481612],
        [982, 916, 0.05379076081392352],
        [983, 914, 0.023321537452804155],
        [983, 915, 0.1869789080592518],
        [983, 916, 0.35433193126746176],
        [983, 917, 0.2960976478285003],
        [983, 918, 0.13047091456929613],
        [984, 917, 0.11086010315035294],
        [984, 918, 0.272590889791831],
        [984, 919, 0.3683410258652817],
        [984, 920, 0.20801518542415245],
        [984, 921, 0.04616290894518408],
        [985, 919, 0.03202626907959427],
        [985, 920, 0.1942489952348069],
        [985, 921, 0.35801621736570555],
        [985, 922, 0.2871844809716754],
        [985, 923, 0.12448425960359358],
        [986, 922, 0.11614980664040801],
        [986, 923, 0.2769245860037902],
        [986, 924, 0.3634503371272694],
        [986, 925, 0.20337777894188264],
        [986, 926, 0.04278533591281287],
        [987, 924, 0.036633170664026604],
        [987, 925, 0.19735437260885233],
        [987, 926, 0.3585975660673821],
        [987, 927, 0.28298312203941667],
        [987, 928, 0.12237172260813765],
        [988, 927, 0.11761764880185657],
        [988, 928, 0.2769347836061358],
        [988, 929, 0.3613222869658947],
        [988, 930, 0.20269252495682932],
        [988, 931, 0.04352084243134597],
        [989, 929, 0.03715658569409518],
        [989, 930, 0.19646584076452728],
        [989, 931, 0.3563193376763676],
        [989, 932, 0.28325914825402143],
        [989, 933, 0.12401877287718965],
        [990, 932, 0.11535841088563661],
        [990, 933, 0.2726772185957825],
        [990, 934, 0.36193002492598775],
        [990, 935, 0.2058724789923987],
        [990, 936, 0.04828585408934835],
        [991, 934, 0.03368059076582972],
        [991, 935, 0.19166681871807822],
        [991, 936, 0.35120102320155516],
        [991, 937, 0.2879669101334489],
        [991, 938, 0.12934311950798513],
        [992, 937, 0.10947528483272252],
        [992, 938, 0.2643619456949593],
        [992, 939, 0.36503164238003943],
        [992, 940, 0.21273290367631378],
        [992, 941, 0.05704255868679827],
        [993, 939, 0.026351338857843194],
        [993, 940, 0.18296002570453515],
        [993, 941, 0.3430562989307297],
        [993, 942, 0.29724916938947604],
        [993, 943, 0.13830626997954892],
        [994, 942, 0.10006782116457263],
        [994, 943, 0.2523219642979947],
        [994, 944, 0.3701807952606593],
        [994, 945, 0.22297333198451888],
        [994, 946, 0.06976592160365215],
        [995, 944, 0.015392306252147629],
        [995, 945, 0.17030051412165803],
        [995, 946, 0.33152253946088156],
        [995, 947, 0.31147369956054877],
        [995, 948, 0.1509473916728322],
        [996, 947, 0.087196881644584],
        [996, 948, 0.2369586950063475],
        [996, 949, 0.376718339613223],
        [996, 950, 0.2345765114615184],
        [996, 951, 0.08521591343298078],
        [997, 949, 0.0011357385555340561],
        [997, 950, 0.15263475001807864],
        [997, 951, 0.311827742306229],
        [997, 952, 0.32860504822914505],
        [997, 953, 0.16942021655341175],
        [997, 954, 0.016626147439510436],
        [998, 952, 0.07024774813594223],
        [998, 953, 0.2212622403680772],
        [998, 954, 0.36621398307130515],
        [998, 955, 0.2523140266095425],
        [998, 956, 0.10329850546808812],
        [999, 955, 0.13345393361930616],
        [999, 956, 0.2868146645965228],
        [999, 957, 0.3438149621043634],
        [999, 958, 0.19052159754051476],
        [999, 959, 0.038598535306774456],
        [1e3, 957, 0.04874340776161587],
        [1e3, 958, 0.20027433884645776],
        [1e3, 959, 0.35045072214288214],
        [1e3, 960, 0.2752172040116266],
        [1e3, 961, 0.1246081801436533],
        [1001, 960, 0.11153410463061227],
        [1001, 961, 0.25968030157128735],
        [1001, 962, 0.3589611456155988],
        [1001, 963, 0.21376355164890676],
        [1001, 964, 0.06462574300561937],
        [1002, 962, 0.024112239164856285],
        [1002, 963, 0.1744379670887302],
        [1002, 964, 0.32884307142135794],
        [1002, 965, 0.3038963549633426],
        [1002, 966, 0.14989396525089382],
        [1002, 967, 0.002787631885767016],
        [1003, 965, 0.08652179776851913],
        [1003, 966, 0.23158274748299973],
        [1003, 967, 0.37014802862444746],
        [1003, 968, 0.23660182809114255],
        [1003, 969, 0.09233857620429504],
        [1004, 968, 0.14320871996140178],
        [1004, 969, 0.2949268298641504],
        [1004, 970, 0.33370967770704096],
        [1004, 971, 0.1821563205430922],
        [1004, 972, 0.03341416685633306],
        [1005, 970, 0.05691996613850173],
        [1005, 971, 0.2048164607341282],
        [1005, 972, 0.34996958396767003],
        [1005, 973, 0.26846185022737096],
        [1005, 974, 0.12203613352843197],
        [1006, 973, 0.11270360292617912],
        [1006, 974, 0.2573174820670815],
        [1006, 975, 0.35551075517876596],
        [1006, 976, 0.21342439841857963],
        [1006, 977, 0.06808655521031844],
        [1007, 975, 0.02300584415020569],
        [1007, 976, 0.1693741701851818],
        [1007, 977, 0.31909197071849676],
        [1007, 978, 0.3064750144925845],
        [1007, 979, 0.1569666027177789],
        [1007, 980, 0.01237576860780718],
        [1008, 978, 0.07918600624195261],
        [1008, 979, 0.22224585329482],
        [1008, 980, 0.36060022658704466],
        [1008, 981, 0.24542280629144228],
        [1008, 982, 0.10372340547250797],
        [1009, 981, 0.13025049048804305],
        [1009, 982, 0.2755544084078468],
        [1009, 983, 0.34173289952302016],
        [1009, 984, 0.19757209548510224],
        [1009, 985, 0.052414383405106256],
        [1010, 983, 0.04055057399599624],
        [1010, 984, 0.18602861646793578],
        [1010, 985, 0.3325126760154172],
        [1010, 986, 0.28836807114447566],
        [1010, 987, 0.1417402962688462],
        [1010, 988, 0.0007268068329768394],
        [1011, 986, 0.0921230324039655],
        [1011, 987, 0.23132424535108578],
        [1011, 988, 0.3651955312519228],
        [1011, 989, 0.23251096307120944],
        [1011, 990, 0.09383068210249161],
        [1012, 989, 0.1395300348660987],
        [1012, 990, 0.2846106560560243],
        [1012, 991, 0.33325384799782276],
        [1012, 992, 0.18901293891606955],
        [1012, 993, 0.045352651706964286],
        [1013, 991, 0.0492531143811913],
        [1013, 992, 0.19272260635298227],
        [1013, 993, 0.33561458168523745],
        [1013, 994, 0.27986377343343843],
        [1013, 995, 0.13637852619084528],
        [1014, 994, 0.09650852938196901],
        [1014, 995, 0.2338020594070448],
        [1014, 996, 0.36193613166585775],
        [1014, 997, 0.22898317334607854],
        [1014, 998, 0.09193468643195023],
        [1015, 996, 0.002457496874436509],
        [1015, 997, 0.14093777570167637],
        [1015, 998, 0.28368384860268375],
        [1015, 999, 0.33027760738271117],
        [1015, 1e3, 0.1884400273628213],
        [1015, 1001, 0.046968846655108074],
        [1016, 999, 0.04899295849310335],
        [1016, 1e3, 0.19034003312195327],
        [1016, 1001, 0.3313219755276299],
        [1016, 1002, 0.28105052006571385],
        [1016, 1003, 0.13948843868730657],
        [1016, 1004, 0.0023949943264103815],
        [1017, 1002, 0.09296476581718328],
        [1017, 1003, 0.22852898102309294],
        [1017, 1004, 0.35981389159869226],
        [1017, 1005, 0.23289594529521537],
        [1017, 1006, 0.09793041579114306],
        [1018, 1005, 0.13381394889325862],
        [1018, 1006, 0.27358691892030107],
        [1018, 1007, 0.33460745416509985],
        [1018, 1008, 0.1955825556102765],
        [1018, 1009, 0.05665143264068217],
        [1019, 1007, 0.040361378819567154],
        [1019, 1008, 0.17925977203170015],
        [1019, 1009, 0.31806447498945245],
        [1019, 1010, 0.2909077306146313],
        [1019, 1011, 0.1516962543781077],
        [1019, 1012, 0.01525050343287846],
        [1020, 1010, 0.08150854362929537],
        [1020, 1011, 0.21698349128246774],
        [1020, 1012, 0.3497669475500838],
        [1020, 1013, 0.24583808157633427],
        [1020, 1014, 0.11136370502634059],
        [1021, 1013, 0.1194990282921764],
        [1021, 1014, 0.25479878825131264],
        [1021, 1015, 0.34346022054644576],
        [1021, 1016, 0.20933239464254857],
        [1021, 1017, 0.07400664151417581],
        [1022, 1015, 0.023670383811016393],
        [1022, 1016, 0.1594303860158249],
        [1022, 1017, 0.29640289279632487],
        [1022, 1018, 0.3088876485347881],
        [1022, 1019, 0.17249814489158258],
        [1022, 1020, 0.03643709112995095],
        [1023, 1018, 0.062217701784737935],
        [1023, 1019, 0.19815982330648652],
        [1023, 1020, 0.3337745723213922],
        [1023, 1021, 0.3700921432339217],
        [1023, 1022, 0.3700921432339217]
      ]);
  },
  function(t, e, n) {
    "use strict";
    var r,
      i =
        (this && this.__extends) ||
        ((r = function(t, e) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        }),
        function(t, e) {
          function n() {
            this.constructor = t;
          }
          r(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        });
    Object.defineProperty(e, "__esModule", { value: !0 });
    var o = n(7),
      a = (function(t) {
        function e(e, n) {
          void 0 === e && (e = 1e-8), void 0 === n && (n = {});
          var r = t.call(this, n) || this;
          return (
            (r.epsilon = e), (r.layerConfig = n), (r.supportsMasking = !0), r
          );
        }
        return (
          i(e, t),
          (e.prototype.computeOutputShape = function(t) {
            return [t[0], t[1], t[2], t[3]];
          }),
          (e.prototype.call = function(t) {
            var e = this;
            return o.tidy(function() {
              var n = t;
              Array.isArray(n) && (n = n[0]);
              var r = o.mean(o.square(n), [3], !0);
              return o.mul(n, o.rsqrt(o.add(r, e.epsilon)));
            });
          }),
          (e.prototype.getClassName = function() {
            return "PixelNorm";
          }),
          e
        );
      })(o.layers.Layer);
    e.pixelNorm = function(t, e) {
      return void 0 === t && (t = 1e-8), void 0 === e && (e = {}), new a(t, e);
    };
    var s = (function(t) {
      function e(e, n, r) {
        void 0 === e && (e = 2),
          void 0 === n && (n = 16),
          void 0 === r && (r = {});
        var i = t.call(this, r) || this;
        return (
          (i.kernelH = e),
          (i.kernelW = n),
          (i.layerConfig = r),
          (i.supportsMasking = !0),
          i
        );
      }
      return (
        i(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return [
            t[0],
            2 * (this.kernelH - 1) + t[1],
            2 * (this.kernelW - 1) + t[2],
            t[3]
          ];
        }),
        (e.prototype.call = function(t) {
          var e = t;
          Array.isArray(e) && (e = e[0]);
          var n = this.kernelH - 1,
            r = this.kernelW - 1;
          return o.pad(e, [[0, 0], [n, n], [r, r], [0, 0]]);
        }),
        (e.prototype.getClassName = function() {
          return "InitialPad";
        }),
        e
      );
    })(o.layers.Layer);
    e.initialPad = function(t, e, n) {
      return (
        void 0 === t && (t = 2),
        void 0 === e && (e = 16),
        void 0 === n && (n = {}),
        new s(t, e, n)
      );
    };
    var u = (function(t) {
      function e(e) {
        void 0 === e && (e = 2);
        var n = t.call(this, {}) || this;
        return (n.scale = e), (n.supportsMasking = !0), n;
      }
      return (
        i(e, t),
        (e.prototype.computeOutputShape = function(t) {
          return [t[0], this.scale * t[1], this.scale * t[2], t[3]];
        }),
        (e.prototype.call = function(t) {
          var e = this;
          return o.tidy(function() {
            var n = t;
            Array.isArray(n) && (n = n[0]);
            var r = o.tile(n, [Math.pow(e.scale, 2), 1, 1, 1]);
            return o.batchToSpaceND(r, [e.scale, e.scale], [[0, 0], [0, 0]]);
          });
        }),
        (e.prototype.getClassName = function() {
          return "BoxUpscale";
        }),
        e
      );
    })(o.layers.Layer);
    e.boxUpscale = function(t) {
      return void 0 === t && (t = 2), new u(t);
    };
  },
  function(t, e, n) {
    "use strict";
    n.r(e);
    var r = n(105),
      i = n(19);
    function o(t) {
      return "number" == typeof t;
    }
    const a = (function() {
      const t = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;
      return e =>
        (function(t) {
          return "string" == typeof t;
        })(e) && t.test(e);
    })();
    const s = (function() {
      const t = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
        e = {
          cbb: -2,
          cb: -1,
          c: 0,
          "c#": 1,
          cx: 2,
          dbb: 0,
          db: 1,
          d: 2,
          "d#": 3,
          dx: 4,
          ebb: 2,
          eb: 3,
          e: 4,
          "e#": 5,
          ex: 6,
          fbb: 3,
          fb: 4,
          f: 5,
          "f#": 6,
          fx: 7,
          gbb: 5,
          gb: 6,
          g: 7,
          "g#": 8,
          gx: 9,
          abb: 7,
          ab: 8,
          a: 9,
          "a#": 10,
          ax: 11,
          bbb: 9,
          bb: 10,
          b: 11,
          "b#": 12,
          bx: 13
        };
      return n => {
        const r = t.exec(n),
          i = r[1],
          o = r[2];
        return e[i.toLowerCase()] + 12 * (parseInt(o) + 1);
      };
    })();
    function u(t, e) {
      if (t.length) {
        const n = (function(t, e) {
          let n = 0;
          const r = t.length;
          let i = r;
          if (r > 0 && t[r - 1].time <= e) return r - 1;
          for (; n < i; ) {
            let r = Math.floor(n + (i - n) / 2);
            const o = t[r],
              a = t[r + 1];
            if (o.time === e) {
              for (let n = r; n < t.length; n++) t[n].time === e && (r = n);
              return r;
            }
            if (o.time < e && a.time > e) return r;
            o.time > e ? (i = r) : o.time < e && (n = r + 1);
          }
          return -1;
        })(t, e.time);
        t.splice(n + 1, 0, e);
      } else t.push(e);
    }
    const c = {
      1: "modulationWheel",
      2: "breath",
      4: "footController",
      5: "portamentoTime",
      7: "volume",
      8: "balance",
      10: "pan",
      64: "sustain",
      65: "portamentoTime",
      66: "sostenuto",
      67: "softPedal",
      68: "legatoFootswitch",
      84: "portamentoContro"
    };
    class l {
      constructor(t, e, n) {
        (this.number = t), (this.time = e), (this.value = n);
      }
      get name() {
        if (c.hasOwnProperty(this.number)) return c[this.number];
      }
    }
    function h(t, e) {
      for (let n = 0; n < t.length; n++) {
        let r = t[n],
          i = e[n];
        if (r.length > i) return !0;
      }
      return !1;
    }
    function f(t, e, n) {
      let r = 0,
        i = 1 / 0;
      for (let n = 0; n < t.length; n++) {
        let o = t[n],
          a = e[n];
        o[a] && o[a].time < i && ((r = n), (i = o[a].time));
      }
      n[r](t[r][e[r]]), (e[r] += 1);
    }
    class p {
      static fromJSON(t) {
        return new p(t.midi, t.time, t.duration, t.velocity);
      }
      constructor(t, e, n = 0, r = 1) {
        if (o(t)) this.midi = t;
        else {
          if (!a(t))
            throw new Error(
              "the midi value must either be in Pitch Notation (e.g. C#4) or a midi value"
            );
          this.name = t;
        }
        (this.time = e), (this.duration = n), (this.velocity = r);
      }
      match(t) {
        return o(t)
          ? this.midi === t
          : a(t)
          ? this.name.toLowerCase() === t.toLowerCase()
          : void 0;
      }
      get name() {
        return (function(t) {
          const e = Math.floor(t / 12) - 1;
          return (
            ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"][
              t % 12
            ] + e
          );
        })(this.midi);
      }
      set name(t) {
        this.midi = s(t);
      }
      get noteOn() {
        return this.time;
      }
      set noteOn(t) {
        this.time = t;
      }
      get noteOff() {
        return this.time + this.duration;
      }
      set noteOff(t) {
        this.duration = t - this.time;
      }
      toJSON() {
        return {
          name: this.name,
          midi: this.midi,
          time: this.time,
          velocity: this.velocity,
          duration: this.duration
        };
      }
    }
    const d = [
        "acoustic grand piano",
        "bright acoustic piano",
        "electric grand piano",
        "honky-tonk piano",
        "electric piano 1",
        "electric piano 2",
        "harpsichord",
        "clavi",
        "celesta",
        "glockenspiel",
        "music box",
        "vibraphone",
        "marimba",
        "xylophone",
        "tubular bells",
        "dulcimer",
        "drawbar organ",
        "percussive organ",
        "rock organ",
        "church organ",
        "reed organ",
        "accordion",
        "harmonica",
        "tango accordion",
        "acoustic guitar (nylon)",
        "acoustic guitar (steel)",
        "electric guitar (jazz)",
        "electric guitar (clean)",
        "electric guitar (muted)",
        "overdriven guitar",
        "distortion guitar",
        "guitar harmonics",
        "acoustic bass",
        "electric bass (finger)",
        "electric bass (pick)",
        "fretless bass",
        "slap bass 1",
        "slap bass 2",
        "synth bass 1",
        "synth bass 2",
        "violin",
        "viola",
        "cello",
        "contrabass",
        "tremolo strings",
        "pizzicato strings",
        "orchestral harp",
        "timpani",
        "string ensemble 1",
        "string ensemble 2",
        "synthstrings 1",
        "synthstrings 2",
        "choir aahs",
        "voice oohs",
        "synth voice",
        "orchestra hit",
        "trumpet",
        "trombone",
        "tuba",
        "muted trumpet",
        "french horn",
        "brass section",
        "synthbrass 1",
        "synthbrass 2",
        "soprano sax",
        "alto sax",
        "tenor sax",
        "baritone sax",
        "oboe",
        "english horn",
        "bassoon",
        "clarinet",
        "piccolo",
        "flute",
        "recorder",
        "pan flute",
        "blown bottle",
        "shakuhachi",
        "whistle",
        "ocarina",
        "lead 1 (square)",
        "lead 2 (sawtooth)",
        "lead 3 (calliope)",
        "lead 4 (chiff)",
        "lead 5 (charang)",
        "lead 6 (voice)",
        "lead 7 (fifths)",
        "lead 8 (bass + lead)",
        "pad 1 (new age)",
        "pad 2 (warm)",
        "pad 3 (polysynth)",
        "pad 4 (choir)",
        "pad 5 (bowed)",
        "pad 6 (metallic)",
        "pad 7 (halo)",
        "pad 8 (sweep)",
        "fx 1 (rain)",
        "fx 2 (soundtrack)",
        "fx 3 (crystal)",
        "fx 4 (atmosphere)",
        "fx 5 (brightness)",
        "fx 6 (goblins)",
        "fx 7 (echoes)",
        "fx 8 (sci-fi)",
        "sitar",
        "banjo",
        "shamisen",
        "koto",
        "kalimba",
        "bag pipe",
        "fiddle",
        "shanai",
        "tinkle bell",
        "agogo",
        "steel drums",
        "woodblock",
        "taiko drum",
        "melodic tom",
        "synth drum",
        "reverse cymbal",
        "guitar fret noise",
        "breath noise",
        "seashore",
        "bird tweet",
        "telephone ring",
        "helicopter",
        "applause",
        "gunshot"
      ],
      m = [
        "piano",
        "chromatic percussion",
        "organ",
        "guitar",
        "bass",
        "strings",
        "ensemble",
        "brass",
        "reed",
        "pipe",
        "synth lead",
        "synth pad",
        "synth effects",
        "ethnic",
        "percussive",
        "sound effects"
      ],
      y = {
        0: "standard kit",
        8: "room kit",
        16: "power kit",
        24: "electronic kit",
        25: "tr-808 kit",
        32: "jazz kit",
        40: "brush kit",
        48: "orchestra kit",
        56: "sound fx kit"
      };
    class g {
      static fromJSON(t) {
        var e = new g(t.name, t.instrumentNumber, t.channelNumber);
        return (
          (e.id = t.id),
          t.notes &&
            t.notes.forEach(t => {
              var n = p.fromJSON(t);
              e.notes.push(n);
            }),
          t.controlChanges && (e.controlChanges = t.controlChanges),
          e
        );
      }
      constructor(t, e = -1, n = -1) {
        (this.name = t),
          (this.channelNumber = n),
          (this.notes = []),
          (this.controlChanges = {}),
          (this.instrumentNumber = e);
      }
      note(t, e, n = 0, r = 1) {
        const i = new p(t, e, n, r);
        return u(this.notes, i), this;
      }
      noteOn(t, e, n = 1) {
        const r = new p(t, e, 0, n);
        return u(this.notes, r), this;
      }
      noteOff(t, e) {
        for (let n = 0; n < this.notes.length; n++) {
          let r = this.notes[n];
          if (r.match(t) && 0 === r.duration) {
            r.noteOff = e;
            break;
          }
        }
        return this;
      }
      cc(t, e, n) {
        this.controlChanges.hasOwnProperty(t) || (this.controlChanges[t] = []);
        const r = new l(t, e, n);
        return u(this.controlChanges[t], r), this;
      }
      patch(t) {
        return (this.instrumentNumber = t), this;
      }
      channel(t) {
        return (this.channelNumber = t), this;
      }
      get noteOns() {
        const t = [];
        return (
          this.notes.forEach(e => {
            t.push({
              time: e.noteOn,
              midi: e.midi,
              name: e.name,
              velocity: e.velocity
            });
          }),
          t
        );
      }
      get noteOffs() {
        const t = [];
        return (
          this.notes.forEach(e => {
            t.push({ time: e.noteOff, midi: e.midi, name: e.name });
          }),
          t
        );
      }
      get length() {
        return this.notes.length;
      }
      get startTime() {
        if (this.notes.length) {
          return this.notes[0].noteOn;
        }
        return 0;
      }
      get duration() {
        if (this.notes.length) {
          return this.notes[this.notes.length - 1].noteOff;
        }
        return 0;
      }
      get instrument() {
        return this.isPercussion
          ? y[this.instrumentNumber]
          : d[this.instrumentNumber];
      }
      set instrument(t) {
        const e = d.indexOf(t);
        -1 !== e && (this.instrumentNumber = e);
      }
      get isPercussion() {
        return [9, 10].includes(this.channelNumber);
      }
      get instrumentFamily() {
        return this.isPercussion
          ? "drums"
          : m[Math.floor(this.instrumentNumber / 8)];
      }
      scale(t) {
        return (
          this.notes.forEach(e => {
            (e.time *= t), (e.duration *= t);
          }),
          this
        );
      }
      slice(t = 0, e = this.duration) {
        const n = Math.max(this.notes.findIndex(e => e.time >= t), 0),
          r = this.notes.findIndex(t => t.noteOff >= e) + 1,
          i = new g(this.name);
        return (
          (i.notes = this.notes.slice(n, r)),
          i.notes.forEach(e => (e.time = e.time - t)),
          i
        );
      }
      encode(t, e) {
        const n = e.PPQ / (60 / e.bpm);
        let r = 0;
        const i = Math.max(0, this.channelNumber);
        function o(t) {
          const e = Math.floor(n * t),
            i = Math.max(e - r, 0);
          return (r = e), i;
        }
        -1 !== this.instrumentNumber && t.instrument(i, this.instrumentNumber),
          (function(...t) {
            const e = t.filter((t, e) => e % 2 == 0),
              n = new Uint32Array(e.length),
              r = t.filter((t, e) => e % 2 == 1);
            for (; h(e, n); ) f(e, n, r);
          })(
            this.noteOns.sort((t, e) => t.time - e.time),
            e => {
              t.addNoteOn(i, e.name, o(e.time), Math.floor(127 * e.velocity));
            },
            this.noteOffs.sort((t, e) => t.time - e.time),
            e => {
              t.addNoteOff(i, e.name, o(e.time));
            }
          );
      }
      toJSON() {
        const t = {
          startTime: this.startTime,
          duration: this.duration,
          length: this.length,
          notes: [],
          controlChanges: {}
        };
        return (
          void 0 !== this.id && (t.id = this.id),
          (t.name = this.name),
          -1 !== this.instrumentNumber &&
            ((t.instrumentNumber = this.instrumentNumber),
            (t.instrument = this.instrument),
            (t.instrumentFamily = this.instrumentFamily)),
          -1 !== this.channelNumber &&
            ((t.channelNumber = this.channelNumber),
            (t.isPercussion = this.isPercussion)),
          this.notes.length && (t.notes = this.notes.map(t => t.toJSON())),
          Object.keys(this.controlChanges).length &&
            (t.controlChanges = this.controlChanges),
          t
        );
      }
    }
    class v {
      static fromJSON(t) {
        var e = new v();
        return (
          (e.header = t.header),
          t.tracks.forEach(t => {
            var n = g.fromJSON(t);
            e.tracks.push(n);
          }),
          e
        );
      }
      constructor() {
        (this.header = { bpm: 120, timeSignature: [4, 4], PPQ: 480 }),
          (this.tracks = []);
      }
      load(t, e = null, n = "GET") {
        return new Promise((r, i) => {
          var o = new XMLHttpRequest();
          o.open(n, t),
            (o.responseType = "arraybuffer"),
            o.addEventListener("load", () => {
              4 === o.readyState && 200 === o.status
                ? r(this.decode(o.response))
                : i(o.status);
            }),
            o.addEventListener("error", i),
            o.send(e);
        }).catch(function(t) {
          console.log(t);
        });
      }
      decode(t) {
        if (t instanceof ArrayBuffer) {
          var e = new Uint8Array(t);
          t = String.fromCharCode.apply(null, e);
        }
        const n = r(t);
        return (
          (this.header = (function(t) {
            for (
              var e = { PPQ: t.header.ticksPerBeat }, n = 0;
              n < t.tracks.length;
              n++
            )
              for (var r = t.tracks[n], i = 0; i < r.length; i++) {
                var o = r[i];
                "meta" === o.type &&
                  ("timeSignature" === o.subtype
                    ? (e.timeSignature = [o.numerator, o.denominator])
                    : "setTempo" === o.subtype &&
                      (e.bpm || (e.bpm = 6e7 / o.microsecondsPerBeat)));
              }
            return (e.bpm = e.bpm || 120), e;
          })(n)),
          (this.tracks = []),
          n.tracks.forEach((t, e) => {
            const n = new g();
            (n.id = e), this.tracks.push(n);
            let r = 0;
            t.forEach(t => {
              (r += (function(t, e) {
                return (60 / e.bpm) * (t / e.PPQ);
              })(t.deltaTime, this.header)),
                "meta" === t.type && "trackName" === t.subtype
                  ? (n.name = (function(t) {
                      return t.replace(/\u0000/g, "");
                    })(t.text))
                  : "noteOn" === t.subtype
                  ? (n.noteOn(t.noteNumber, r, t.velocity / 127),
                    -1 === n.channelNumber && (n.channelNumber = t.channel))
                  : "noteOff" === t.subtype
                  ? n.noteOff(t.noteNumber, r)
                  : "controller" === t.subtype && t.controllerType
                  ? n.cc(t.controllerType, r, t.value / 127)
                  : "meta" === t.type && "instrumentName" === t.subtype
                  ? (n.instrument = t.text)
                  : "channel" === t.type &&
                    "programChange" === t.subtype &&
                    (n.patch(t.programNumber), (n.channelNumber = t.channel));
            }),
              this.header.name ||
                n.length ||
                !n.name ||
                (this.header.name = n.name);
          }),
          this
        );
      }
      encode() {
        const t = new i.File({ ticks: this.header.PPQ }),
          e = this.tracks.filter(t => !t.length)[0];
        if (this.header.name && (!e || e.name !== this.header.name)) {
          t.addTrack().addEvent(
            new i.MetaEvent({
              time: 0,
              type: i.MetaEvent.TRACK_NAME,
              data: this.header.name
            })
          );
        }
        return (
          this.tracks.forEach(e => {
            const n = t.addTrack();
            n.setTempo(this.bpm),
              e.name &&
                n.addEvent(
                  new i.MetaEvent({
                    time: 0,
                    type: i.MetaEvent.TRACK_NAME,
                    data: e.name
                  })
                ),
              e.encode(n, this.header);
          }),
          t.toBytes()
        );
      }
      toArray() {
        const t = this.encode(),
          e = new Array(t.length);
        for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);
        return e;
      }
      toJSON() {
        const t = {
          header: this.header,
          startTime: this.startTime,
          duration: this.duration,
          tracks: (this.tracks || []).map(t => t.toJSON())
        };
        return t.header.name || (t.header.name = ""), t;
      }
      track(t) {
        const e = new g(t);
        return this.tracks.push(e), e;
      }
      get(t) {
        return o(t) ? this.tracks[t] : this.tracks.find(e => e.name === t);
      }
      slice(t = 0, e = this.duration) {
        const n = new v();
        return (
          (n.header = this.header),
          (n.tracks = this.tracks.map(n => n.slice(t, e))),
          n
        );
      }
      get startTime() {
        const t = this.tracks.map(t => t.startTime);
        return (t.length && Math.min.apply(Math, t)) || 0;
      }
      get bpm() {
        return this.header.bpm;
      }
      set bpm(t) {
        const e = this.header.bpm;
        this.header.bpm = t;
        const n = e / t;
        this.tracks.forEach(t => t.scale(n));
      }
      get timeSignature() {
        return this.header.timeSignature;
      }
      set timeSignature(t) {
        this.header.timeSignature = t;
      }
      get duration() {
        const t = this.tracks.map(t => t.duration);
        return (t.length && Math.max.apply(Math, t)) || 0;
      }
    }
    function b(t) {
      return new v().decode(t);
    }
    function w(t, e) {
      const n = new v().load(t);
      return e && n.then(e), n;
    }
    function _() {
      return new v();
    }
    function S(t) {
      return v.fromJSON(t);
    }
    n.d(e, "parse", function() {
      return b;
    }),
      n.d(e, "load", function() {
        return w;
      }),
      n.d(e, "create", function() {
        return _;
      }),
      n.d(e, "fromJSON", function() {
        return S;
      }),
      n.d(e, "instrumentByPatchID", function() {
        return d;
      }),
      n.d(e, "instrumentFamilyByID", function() {
        return m;
      }),
      n.d(e, "drumKitByPatchID", function() {
        return y;
      });
  },
  function(t, e, n) {
    "use strict";
    n.r(e);
    var r = {};
    n.r(r),
      n.d(r, "names", function() {
        return f;
      }),
      n.d(r, "tokenize", function() {
        return y;
      }),
      n.d(r, "props", function() {
        return b;
      }),
      n.d(r, "name", function() {
        return w;
      }),
      n.d(r, "pc", function() {
        return _;
      }),
      n.d(r, "midi", function() {
        return S;
      }),
      n.d(r, "midiToFreq", function() {
        return x;
      }),
      n.d(r, "freq", function() {
        return T;
      }),
      n.d(r, "freqToMidi", function() {
        return E;
      }),
      n.d(r, "chroma", function() {
        return N;
      }),
      n.d(r, "oct", function() {
        return O;
      }),
      n.d(r, "stepToLetter", function() {
        return C;
      }),
      n.d(r, "altToAcc", function() {
        return M;
      }),
      n.d(r, "from", function() {
        return P;
      }),
      n.d(r, "build", function() {
        return R;
      }),
      n.d(r, "fromMidi", function() {
        return D;
      }),
      n.d(r, "simplify", function() {
        return F;
      }),
      n.d(r, "enharmonic", function() {
        return z;
      });
    var i = {};
    n.r(i),
      n.d(i, "range", function() {
        return L;
      }),
      n.d(i, "rotate", function() {
        return j;
      }),
      n.d(i, "compact", function() {
        return B;
      }),
      n.d(i, "sort", function() {
        return U;
      }),
      n.d(i, "unique", function() {
        return V;
      }),
      n.d(i, "shuffle", function() {
        return W;
      }),
      n.d(i, "permutations", function() {
        return G;
      });
    var o = {};
    n.r(o),
      n.d(o, "names", function() {
        return $;
      }),
      n.d(o, "tokenize", function() {
        return Y;
      }),
      n.d(o, "qToAlt", function() {
        return tt;
      }),
      n.d(o, "altToQ", function() {
        return et;
      }),
      n.d(o, "props", function() {
        return ot;
      }),
      n.d(o, "num", function() {
        return at;
      }),
      n.d(o, "name", function() {
        return st;
      }),
      n.d(o, "semitones", function() {
        return ut;
      }),
      n.d(o, "chroma", function() {
        return ct;
      }),
      n.d(o, "ic", function() {
        return lt;
      }),
      n.d(o, "build", function() {
        return ht;
      }),
      n.d(o, "simplify", function() {
        return ft;
      }),
      n.d(o, "invert", function() {
        return pt;
      }),
      n.d(o, "fromSemitones", function() {
        return yt;
      });
    var a = {};
    n.r(a),
      n.d(a, "transpose", function() {
        return Tt;
      }),
      n.d(a, "trFifths", function() {
        return At;
      }),
      n.d(a, "fifths", function() {
        return kt;
      }),
      n.d(a, "transposeBy", function() {
        return Et;
      }),
      n.d(a, "addIntervals", function() {
        return Ot;
      }),
      n.d(a, "add", function() {
        return Ct;
      }),
      n.d(a, "subtract", function() {
        return It;
      }),
      n.d(a, "interval", function() {
        return Mt;
      }),
      n.d(a, "semitones", function() {
        return Pt;
      });
    var s = {};
    n.r(s),
      n.d(s, "chroma", function() {
        return jt;
      }),
      n.d(s, "chromas", function() {
        return qt;
      }),
      n.d(s, "modes", function() {
        return Ut;
      }),
      n.d(s, "isChroma", function() {
        return Wt;
      }),
      n.d(s, "intervals", function() {
        return Ht;
      }),
      n.d(s, "isEqual", function() {
        return Kt;
      }),
      n.d(s, "isSubsetOf", function() {
        return Qt;
      }),
      n.d(s, "isSupersetOf", function() {
        return Xt;
      }),
      n.d(s, "includes", function() {
        return $t;
      }),
      n.d(s, "filter", function() {
        return Yt;
      });
    var u = {};
    n.r(u),
      n.d(u, "dictionary", function() {
        return Jt;
      }),
      n.d(u, "combine", function() {
        return Zt;
      }),
      n.d(u, "scale", function() {
        return te;
      }),
      n.d(u, "chord", function() {
        return ee;
      }),
      n.d(u, "pcset", function() {
        return ne;
      });
    var c = {};
    n.r(c),
      n.d(c, "props", function() {
        return ie;
      }),
      n.d(c, "names", function() {
        return oe;
      }),
      n.d(c, "intervals", function() {
        return ae;
      }),
      n.d(c, "notes", function() {
        return se;
      }),
      n.d(c, "exists", function() {
        return ue;
      }),
      n.d(c, "tokenize", function() {
        return ce;
      }),
      n.d(c, "modeNames", function() {
        return le;
      }),
      n.d(c, "chords", function() {
        return he;
      }),
      n.d(c, "toScale", function() {
        return fe;
      }),
      n.d(c, "supersets", function() {
        return pe;
      }),
      n.d(c, "subsets", function() {
        return de;
      });
    var l = {};
    n.r(l),
      n.d(l, "names", function() {
        return me;
      }),
      n.d(l, "props", function() {
        return ge;
      }),
      n.d(l, "intervals", function() {
        return ve;
      }),
      n.d(l, "notes", function() {
        return be;
      }),
      n.d(l, "exists", function() {
        return we;
      }),
      n.d(l, "supersets", function() {
        return _e;
      }),
      n.d(l, "subsets", function() {
        return Se;
      }),
      n.d(l, "tokenize", function() {
        return Te;
      });
    var h = "C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B".split(" "),
      f = function(t) {
        return "string" != typeof t
          ? h.slice()
          : h.filter(function(e) {
              var n = e[1] || " ";
              return -1 !== t.indexOf(n);
            });
      },
      p = f(" #"),
      d = f(" b"),
      m = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/;
    function y(t) {
      "string" != typeof t && (t = "");
      var e = m.exec(t);
      return [e[1].toUpperCase(), e[2].replace(/x/g, "##"), e[3], e[4]];
    }
    var g = Object.freeze({
        pc: null,
        name: null,
        step: null,
        alt: null,
        oct: null,
        octStr: null,
        chroma: null,
        midi: null,
        freq: null
      }),
      v = [0, 2, 4, 5, 7, 9, 11],
      b = (function(t, e) {
        return (
          void 0 === e && (e = {}),
          function(n) {
            return e[n] || (e[n] = t(n));
          }
        );
      })(function(t) {
        var e = y(t);
        if ("" === e[0] || "" !== e[3]) return g;
        var n = e[0],
          r = e[1],
          i = e[2],
          o = {
            letter: n,
            acc: r,
            octStr: i,
            pc: n + r,
            name: n + r + i,
            step: (n.charCodeAt(0) + 3) % 7,
            alt: "b" === r[0] ? -r.length : r.length,
            oct: i.length ? +i : null,
            chroma: 0,
            midi: null,
            freq: null
          };
        return (
          (o.chroma = (v[o.step] + o.alt + 120) % 12),
          (o.midi =
            null !== o.oct ? v[o.step] + o.alt + 12 * (o.oct + 1) : null),
          (o.freq = x(o.midi)),
          Object.freeze(o)
        );
      }),
      w = function(t) {
        return b(t).name;
      },
      _ = function(t) {
        return b(t).pc;
      },
      S = function(t) {
        if ("number" != typeof t && "string" != typeof t) return null;
        var e,
          n = b(t).midi,
          r = n || 0 === n ? n : +t;
        return (e = r) >= 0 && e <= 127 ? r : null;
      },
      x = function(t, e) {
        return (
          void 0 === e && (e = 440),
          "number" == typeof t ? Math.pow(2, (t - 69) / 12) * e : null
        );
      },
      T = function(t) {
        return b(t).freq || x(t);
      },
      A = Math.log(2),
      k = Math.log(440),
      E = function(t) {
        var e = (12 * (Math.log(t) - k)) / A + 69;
        return Math.round(100 * e) / 100;
      },
      N = function(t) {
        return b(t).chroma;
      },
      O = function(t) {
        return b(t).oct;
      },
      C = function(t) {
        return "CDEFGAB"[t];
      },
      I = function(t, e) {
        return Array(e + 1).join(t);
      },
      M = function(t) {
        return (function(t, e) {
          return "number" != typeof t ? "" : e(t);
        })(t, function(t) {
          return t < 0 ? I("b", -t) : I("#", t);
        });
      },
      P = function(t, e) {
        void 0 === t && (t = {}), void 0 === e && (e = null);
        var n = e ? Object.assign({}, b(e), t) : t,
          r = n.step,
          i = n.alt,
          o = n.oct;
        if ("number" != typeof r) return null;
        var a = C(r);
        if (!a) return null;
        var s = a + M(i);
        return o || 0 === o ? s + o : s;
      },
      R = P;
    function D(t, e) {
      return (
        void 0 === e && (e = !1),
        (t = Math.round(t)),
        (!0 === e ? p : d)[t % 12] + (Math.floor(t / 12) - 1)
      );
    }
    var F = function(t, e) {
        void 0 === e && (e = !0);
        var n = b(t),
          r = n.alt,
          i = n.chroma,
          o = n.midi;
        if (null === i) return null;
        var a = !1 === e ? r < 0 : r > 0;
        return null === o ? _(D(i, a)) : D(o, a);
      },
      z = function(t) {
        return F(t, !1);
      };
    function L(t, e) {
      return null === t || null === e
        ? []
        : t < e
        ? (function(t, e) {
            for (var n = []; e--; n[e] = e + t);
            return n;
          })(t, e - t + 1)
        : (function(t, e) {
            for (var n = []; e--; n[e] = t - e);
            return n;
          })(t, t - e + 1);
    }
    function j(t, e) {
      var n = e.length,
        r = ((t % n) + n) % n;
      return e.slice(r, n).concat(e.slice(0, r));
    }
    var B = function(t) {
        return t.filter(function(t) {
          return 0 === t || t;
        });
      },
      q = function(t) {
        var e = b(t).midi;
        return null !== e ? e : b(t + "-100").midi;
      };
    function U(t) {
      return B(t.map(w)).sort(function(t, e) {
        return q(t) > q(e);
      });
    }
    function V(t) {
      return U(t).filter(function(t, e, n) {
        return 0 === e || t !== n[e - 1];
      });
    }
    var W = function(t, e) {
        var n, r;
        void 0 === e && (e = Math.random);
        for (var i = t.length; i; )
          (n = (e() * i--) | 0), (r = t[i]), (t[i] = t[n]), (t[n] = r);
        return t;
      },
      G = function(t) {
        return 0 === t.length
          ? [[]]
          : G(t.slice(1)).reduce(function(e, n) {
              return e.concat(
                t.map(function(e, r) {
                  var i = n.slice();
                  return i.splice(r, 0, t[0]), i;
                })
              );
            }, []);
      },
      H = new RegExp(
        "^([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})|(AA|A|P|M|m|d|dd)([-+]?\\d+)$"
      ),
      K = [0, 2, 4, 5, 7, 9, 11],
      Q = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1],
      X = "1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P".split(" "),
      $ = function(t) {
        return "string" != typeof t
          ? X.slice()
          : X.filter(function(e) {
              return -1 !== t.indexOf(e[1]);
            });
      },
      Y = function(t) {
        var e = H.exec("" + t);
        return null === e ? null : e[1] ? [e[1], e[2]] : [e[4], e[3]];
      },
      J = Object.freeze({
        name: null,
        num: null,
        q: null,
        step: null,
        alt: null,
        dir: null,
        type: null,
        simple: null,
        semitones: null,
        chroma: null,
        oct: null
      }),
      Z = function(t, e) {
        return Array(Math.abs(e) + 1).join(t);
      },
      tt = function(t, e) {
        return "M" === e && "M" === t
          ? 0
          : "P" === e && "P" === t
          ? 0
          : "m" === e && "M" === t
          ? -1
          : /^A+$/.test(e)
          ? e.length
          : /^d+$/.test(e)
          ? "P" === t
            ? -e.length
            : -e.length - 1
          : null;
      },
      et = function(t, e) {
        return 0 === e
          ? "M" === t
            ? "M"
            : "P"
          : -1 === e && "M" === t
          ? "m"
          : e > 0
          ? Z("A", e)
          : e < 0
          ? Z("d", "P" === t ? e : e + 1)
          : null;
      },
      nt = function(t) {
        return (Math.abs(t) - 1) % 7;
      },
      rt = function(t) {
        var e = Y(t);
        if (null === e) return J;
        var n = {
          num: 0,
          q: "d",
          name: "",
          type: "M",
          step: 0,
          dir: -1,
          simple: 1,
          alt: 0,
          oct: 0,
          semitones: 0,
          chroma: 0,
          ic: 0
        };
        return (
          (n.num = +e[0]),
          (n.q = e[1]),
          (n.step = nt(n.num)),
          (n.type = "PMMPPMM"[n.step]),
          "M" === n.type && "P" === n.q
            ? J
            : ((n.name = "" + n.num + n.q),
              (n.dir = n.num < 0 ? -1 : 1),
              (n.simple =
                8 === n.num || -8 === n.num ? n.num : n.dir * (n.step + 1)),
              (n.alt = tt(n.type, n.q)),
              (n.oct = Math.floor((Math.abs(n.num) - 1) / 7)),
              (n.semitones = n.dir * (K[n.step] + n.alt + 12 * n.oct)),
              (n.chroma = (((n.dir * (K[n.step] + n.alt)) % 12) + 12) % 12),
              Object.freeze(n))
        );
      },
      it = {};
    function ot(t) {
      return "string" != typeof t ? J : it[t] || (it[t] = rt(t));
    }
    var at = function(t) {
        return ot(t).num;
      },
      st = function(t) {
        return ot(t).name;
      },
      ut = function(t) {
        return ot(t).semitones;
      },
      ct = function(t) {
        return ot(t).chroma;
      },
      lt = function(t) {
        return (
          "string" == typeof t && (t = ot(t).chroma),
          "number" == typeof t ? Q[t % 12] : null
        );
      },
      ht = function(t) {
        var e = void 0 === t ? {} : t,
          n = e.num,
          r = e.step,
          i = e.alt,
          o = e.oct,
          a = void 0 === o ? 1 : o,
          s = e.dir;
        if ((void 0 !== r && (n = r + 1 + 7 * a), void 0 === n)) return null;
        if ("number" != typeof i) return null;
        var u = "number" != typeof s ? "" : s < 0 ? "-" : "",
          c = "PMMPPMM"[nt(n)];
        return u + n + et(c, i);
      },
      ft = function(t) {
        var e = ot(t);
        if (e === J) return null;
        var n = e;
        return n.simple + n.q;
      },
      pt = function(t) {
        var e = ot(t);
        if (e === J) return null;
        var n = e,
          r = (7 - n.step) % 7,
          i = "P" === n.type ? -n.alt : -(n.alt + 1);
        return ht({ step: r, alt: i, oct: n.oct, dir: n.dir });
      },
      dt = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7],
      mt = "P m M m M P d P m M m M".split(" "),
      yt = function(t) {
        var e = t < 0 ? -1 : 1,
          n = Math.abs(t),
          r = n % 12,
          i = Math.floor(n / 12);
        return e * (dt[r] + 7 * i) + mt[r];
      },
      gt = [0, 2, 4, -1, 1, 3, 5],
      vt = gt.map(function(t) {
        return Math.floor((7 * t) / 12);
      }),
      bt = [3, 0, 4, 1, 5, 2, 6];
    var wt = function(t, e, n) {
        var r =
            bt[
              (function(t) {
                var e = (t + 1) % 7;
                return e < 0 ? 7 + e : e;
              })(t)
            ],
          i = Math.floor((t + 1) / 7);
        return void 0 === e
          ? { step: r, alt: i, dir: n }
          : { step: r, alt: i, oct: e + 4 * i + vt[r], dir: n };
      },
      _t = function(t) {
        return (function(t, e) {
          return (
            void 0 === e && (e = {}),
            function(n) {
              return e[n] || (e[n] = t(n));
            }
          );
        })(function(e) {
          var n = t(e);
          return null === n.name
            ? null
            : (function(t) {
                var e = t.step,
                  n = t.alt,
                  r = t.oct,
                  i = t.dir;
                void 0 === i && (i = 1);
                var o = gt[e] + 7 * n;
                return null === r ? [i * o] : [i * o, i * (r - vt[e] - 4 * n)];
              })(n);
        });
      },
      St = _t(b),
      xt = _t(ot);
    function Tt(t, e) {
      if (1 === arguments.length)
        return function(e) {
          return Tt(t, e);
        };
      var n = St(t),
        r = xt(e);
      if (null === n || null === r) return null;
      var i = 1 === n.length ? [n[0] + r[0]] : [n[0] + r[0], n[1] + r[1]];
      return R(wt(i[0], i[1]));
    }
    function At(t, e) {
      if (1 === arguments.length)
        return function(e) {
          return At(t, e);
        };
      var n = St(t);
      return null === n ? null : R(wt(n[0] + e));
    }
    function kt(t, e) {
      if (1 === arguments.length)
        return function(e) {
          return kt(t, e);
        };
      var n = St(t),
        r = St(e);
      return null === r || null === n ? null : r[0] - n[0];
    }
    function Et(t, e) {
      return 1 === arguments.length
        ? function(e) {
            return Tt(e, t);
          }
        : Tt(e, t);
    }
    var Nt = function(t) {
      return 7 * (e = t)[0] + 12 * e[1] < 0
        ? wt(-t[0], -t[1], -1)
        : wt(t[0], t[1], 1);
      var e;
    };
    function Ot(t, e, n) {
      var r = xt(t),
        i = xt(e);
      if (null === r || null === i) return null;
      var o = [r[0] + n * i[0], r[1] + n * i[1]];
      return ht(Nt(o));
    }
    function Ct(t, e) {
      return 1 === arguments.length
        ? function(e) {
            return Ct(t, e);
          }
        : Ot(t, e, 1);
    }
    function It(t, e) {
      return 1 === arguments.length
        ? function(e) {
            return Ct(t, e);
          }
        : Ot(t, e, -1);
    }
    function Mt(t, e) {
      if (1 === arguments.length)
        return function(e) {
          return Mt(t, e);
        };
      var n = St(t),
        r = St(e);
      if (null === n || null === r || n.length !== r.length) return null;
      var i =
        1 === n.length
          ? [r[0] - n[0], -Math.floor((7 * (r[0] - n[0])) / 12)]
          : [r[0] - n[0], r[1] - n[1]];
      return ht(Nt(i));
    }
    function Pt(t, e) {
      if (1 === arguments.length)
        return function(e) {
          return Pt(t, e);
        };
      var n = b(t),
        r = b(e);
      return null !== n.midi && null !== r.midi
        ? r.midi - n.midi
        : null !== n.chroma && null !== r.chroma
        ? (r.chroma - n.chroma + 12) % 12
        : null;
    }
    var Rt = n(103),
      Dt = n(104),
      Ft = function(t) {
        return N(t) || ct(t) || 0;
      },
      zt = function(t) {
        return parseInt(jt(t), 2);
      },
      Lt = function(t) {
        return t.replace(/0/g, "").length;
      };
    function jt(t) {
      if (Wt(t)) return t;
      if (!Array.isArray(t)) return "";
      var e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      return (
        t.map(Ft).forEach(function(t) {
          e[t] = 1;
        }),
        e.join("")
      );
    }
    var Bt = null;
    function qt(t) {
      return (
        (Bt =
          Bt ||
          L(2048, 4095).map(function(t) {
            return t.toString(2);
          })),
        "number" == typeof t
          ? Bt.filter(function(e) {
              return Lt(e) === t;
            })
          : Bt.slice()
      );
    }
    function Ut(t, e) {
      e = !1 !== e;
      var n = jt(t).split("");
      return B(
        n.map(function(t, r) {
          var i = j(r, n);
          return e && "0" === i[0] ? null : i.join("");
        })
      );
    }
    var Vt = /^[01]{12}$/;
    function Wt(t) {
      return Vt.test(t);
    }
    var Gt = "1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M".split(" ");
    function Ht(t) {
      return Wt(t)
        ? B(
            t.split("").map(function(t, e) {
              return "1" === t ? Gt[e] : null;
            })
          )
        : [];
    }
    function Kt(t, e) {
      return 1 === arguments.length
        ? function(e) {
            return Kt(t, e);
          }
        : jt(t) === jt(e);
    }
    function Qt(t, e) {
      return arguments.length > 1
        ? Qt(t)(e)
        : ((t = zt(t)),
          function(e) {
            return (e = zt(e)) !== t && (e & t) === e;
          });
    }
    function Xt(t, e) {
      return arguments.length > 1
        ? Xt(t)(e)
        : ((t = zt(t)),
          function(e) {
            return (e = zt(e)) !== t && (e | t) === e;
          });
    }
    function $t(t, e) {
      return arguments.length > 1
        ? $t(t)(e)
        : ((t = jt(t)),
          function(e) {
            return "1" === t[Ft(e)];
          });
    }
    function Yt(t, e) {
      return 1 === arguments.length
        ? function(e) {
            return Yt(t, e);
          }
        : e.filter($t(t));
    }
    var Jt = function(t) {
        var e = Object.keys(t).sort(),
          n = [],
          r = [],
          i = function(t, e, i) {
            (n[t] = e), (r[i] = r[i] || []), r[i].push(t);
          };
        e.forEach(function(e) {
          var n = t[e][0].split(" "),
            r = t[e][1],
            o = jt(n);
          i(e, n, o),
            r &&
              r.forEach(function(t) {
                return i(t, n, o);
              });
        });
        var o = Object.keys(n).sort(),
          a = function(t) {
            return n[t];
          };
        return (
          (a.names = function(t) {
            return "string" == typeof t
              ? (r[t] || []).slice()
              : (!0 === t ? o : e).slice();
          }),
          a
        );
      },
      Zt = function(t, e) {
        var n = function(n) {
          return t(n) || e(n);
        };
        return (
          (n.names = function(n) {
            return t.names(n).concat(e.names(n));
          }),
          n
        );
      },
      te = Jt(Rt),
      ee = Jt(Dt),
      ne = Zt(te, ee),
      re = Object.freeze({
        name: null,
        intervals: [],
        names: [],
        chroma: null,
        setnum: null
      }),
      ie = (function(t, e) {
        return function(n) {
          return e[n] || (e[n] = t(n));
        };
      })(function(t) {
        var e = te(t);
        if (!e) return re;
        var n = { intervals: e, name: t };
        return (
          (n.chroma = jt(e)),
          (n.setnum = parseInt(n.chroma, 2)),
          (n.names = te.names(n.chroma)),
          Object.freeze(n)
        );
      }, {}),
      oe = te.names,
      ae = function(t) {
        var e = ce(t);
        return ie(e[1]).intervals;
      };
    function se(t, e) {
      var n = ce(t);
      return (e = e || n[1]), ae(e).map(Tt(n[0]));
    }
    function ue(t) {
      var e = ce(t);
      return void 0 !== te(e[1]);
    }
    function ce(t) {
      if ("string" != typeof t) return ["", ""];
      var e = t.indexOf(" "),
        n = w(t.substring(0, e)) || w(t) || "",
        r = "" !== n ? t.substring(n.length + 1) : t;
      return [n, r.length ? r : ""];
    }
    var le = function(t) {
        var e = ae(t),
          n = se(t);
        return Ut(e)
          .map(function(t, r) {
            var i = te.names(t)[0];
            if (i) return [n[r] || e[r], i];
          })
          .filter(function(t) {
            return t;
          });
      },
      he = function(t) {
        var e = Qt(ae(t));
        return ee.names().filter(function(t) {
          return e(ee(t));
        });
      },
      fe = function(t) {
        var e = B(t.map(_));
        if (!e.length) return e;
        var n = e[0],
          r = V(e);
        return j(r.indexOf(n), r);
      },
      pe = function(t) {
        if (!ae(t).length) return [];
        var e = Xt(ae(t));
        return te.names().filter(function(t) {
          return e(te(t));
        });
      },
      de = function(t) {
        var e = Qt(ae(t));
        return te.names().filter(function(t) {
          return e(te(t));
        });
      },
      me = ee.names,
      ye = Object.freeze({
        name: null,
        names: [],
        intervals: [],
        chroma: null,
        setnum: null
      }),
      ge = (function(t, e) {
        return (
          void 0 === e && (e = {}),
          function(n) {
            return e[n] || (e[n] = t(n));
          }
        );
      })(function(t) {
        var e = ee(t);
        if (!e) return ye;
        var n = { intervals: e, name: t };
        return (
          (n.chroma = jt(e)),
          (n.setnum = parseInt(n.chroma, 2)),
          (n.names = ee.names(n.chroma)),
          n
        );
      }),
      ve = function(t) {
        return ge(Te(t)[1]).intervals;
      };
    function be(t, e) {
      if (e) return ge(e).intervals.map(Tt(t));
      var n = Te(t),
        r = n[0],
        i = n[1];
      return ge(i).intervals.map(Tt(r));
    }
    var we = function(t) {
        return void 0 !== ee(Te(t)[1]);
      },
      _e = function(t) {
        if (!ve(t).length) return [];
        var e = Xt(ve(t));
        return ee.names().filter(function(t) {
          return e(ee(t));
        });
      },
      Se = function(t) {
        var e = Qt(ve(t));
        return ee.names().filter(function(t) {
          return e(ee(t));
        });
      },
      xe = /^(6|64|7|9|11|13)$/;
    function Te(t) {
      var e = y(t);
      return "" === e[0]
        ? ["", t]
        : "A" === e[0] && "ug" === e[3]
        ? ["", "aug"]
        : xe.test(e[2])
        ? [e[0] + e[1], e[2] + e[3]]
        : [e[0] + e[1] + e[2], e[3]];
    }
    n.d(e, "transpose", function() {
      return Ae;
    }),
      n.d(e, "interval", function() {
        return ke;
      }),
      n.d(e, "note", function() {
        return Ee;
      }),
      n.d(e, "midi", function() {
        return Ne;
      }),
      n.d(e, "freq", function() {
        return Oe;
      }),
      n.d(e, "chord", function() {
        return Ce;
      }),
      n.d(e, "scale", function() {
        return Ie;
      }),
      n.d(e, "Array", function() {
        return i;
      }),
      n.d(e, "Note", function() {
        return r;
      }),
      n.d(e, "Interval", function() {
        return o;
      }),
      n.d(e, "Distance", function() {
        return a;
      }),
      n.d(e, "Scale", function() {
        return c;
      }),
      n.d(e, "Chord", function() {
        return l;
      }),
      n.d(e, "PcSet", function() {
        return s;
      }),
      n.d(e, "Dictionary", function() {
        return u;
      });
    const Ae = Tt,
      ke = Mt,
      Ee = b,
      Ne = S,
      Oe = T,
      Ce = ee,
      Ie = te;
  }
]);
